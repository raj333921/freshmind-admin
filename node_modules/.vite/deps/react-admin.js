import {
  AUTH_CHECK,
  AUTH_ERROR,
  AUTH_GET_PERMISSIONS,
  AUTH_LOGIN,
  AUTH_LOGOUT,
  AddNotificationContext,
  AdminRouter,
  AuthContext_default,
  Authenticated,
  BasenameContextProvider,
  CREATE,
  ChoicesContext,
  ChoicesContextProvider,
  ComponentPropType_default,
  CoreAdmin,
  CoreAdminContext,
  CoreAdminRoutes,
  CoreAdminUI,
  CreateBase,
  CreateContext,
  CreateContextProvider,
  CreateController,
  CustomRoutes,
  DEFAULT_LOCALE,
  DELETE,
  DELETE_MANY,
  DataProviderContext_default,
  EditBase,
  EditContext,
  EditContextProvider,
  EditController,
  ExporterContext_default,
  FieldTitle_default,
  Form,
  FormDataConsumer_default,
  FormGroupContext,
  FormGroupContextProvider,
  FormGroupsContext,
  FormGroupsProvider,
  FormProvider,
  GET_LIST,
  GET_MANY,
  GET_MANY_REFERENCE,
  GET_ONE,
  HIDE_FILTER,
  HttpError_default,
  I18N_CHANGE_LOCALE,
  I18N_TRANSLATE,
  I18nContext,
  I18nContextProvider,
  InferenceTypes,
  InferredElement_default,
  InfiniteListBase,
  InfinitePaginationContext,
  LabelPrefixContext,
  LabelPrefixContextProvider,
  Link,
  ListBase,
  ListContext,
  ListContextProvider,
  ListController,
  ListFilterContext,
  ListPaginationContext,
  ListSortContext,
  NotificationContext,
  NotificationContextProvider,
  OptionalRecordContextProvider,
  Outlet,
  PreferenceKeyContext,
  PreferenceKeyContextProvider,
  PreferencesEditorContext,
  PreferencesEditorContextProvider,
  PreviousLocationStorageKey,
  Ready_default,
  RecordContext,
  RecordContextProvider,
  RecordRepresentation,
  Resource,
  ResourceContext,
  ResourceContextProvider,
  ResourceDefinitionContext,
  ResourceDefinitionContextProvider,
  Route,
  Routes,
  SET_FILTER,
  SET_PAGE,
  SET_PER_PAGE,
  SET_SORT,
  SHOW_FILTER,
  SORT_ASC,
  SORT_DESC,
  SaveContext,
  SaveContextProvider,
  ShowBase,
  ShowContext,
  ShowContextProvider,
  ShowController,
  StoreContext,
  StoreContextProvider,
  StoreSetter,
  TestTranslationProvider,
  TranslatableContext,
  TranslatableContextProvider,
  UPDATE,
  UPDATE_MANY,
  ValidationError_default,
  WithListContext,
  WithPermissions_default,
  WithRecord,
  _assertThisInitialized,
  _extends,
  _inheritsLoose,
  addRefreshAuthToAuthProvider,
  addRefreshAuthToDataProvider,
  asyncDebounce,
  choices,
  combine2Validators,
  combineDataProviders,
  composeSyncValidators,
  composeValidators,
  convertLegacyAuthProvider_default,
  convertLegacyDataProvider_default,
  defaultDataProvider,
  defaultExporter_default,
  downloadCSV_default,
  email,
  escapePath_default,
  fetchActionsWithArrayOfIdentifiedRecordsResponse,
  fetchActionsWithArrayOfRecordsResponse,
  fetchActionsWithRecordResponse,
  fetchActionsWithTotalResponse,
  fetchRelatedRecords_default,
  fetch_exports,
  getElementsFromRecords_default,
  getFieldLabelTranslationArgs_default,
  getFormGroupState,
  getListControllerProps,
  getMutationMode,
  getNumberOrDefault,
  getQuery,
  getRecordFromLocation,
  getSelectedReferencesStatus,
  getSimpleValidationResolver,
  getStatusForArrayInput,
  getStatusForInput,
  getStorage,
  getSuggestionsFactory,
  getValuesFromRecords_default,
  hasCustomParams,
  inferTypeFromValues,
  init_extends,
  injectedProps,
  isRequired,
  linkToRecord,
  localStorageStore,
  matchPath,
  maxLength,
  maxValue,
  memoryStore,
  mergeRefs,
  mergeTranslations,
  minLength,
  minValue,
  number,
  parseQueryFromLocation,
  queryReducer,
  reactAdminFetchActions,
  regex,
  removeDoubleSlashes,
  removeEmpty_default,
  removeKey_default,
  require_SetCache,
  require_Stack,
  require_Symbol,
  require_arrayIncludes,
  require_arrayIncludesWith,
  require_arrayMap,
  require_assignValue,
  require_baseFlatten,
  require_baseMatches,
  require_baseRest,
  require_baseUnary,
  require_cacheHas,
  require_cloneArrayBuffer,
  require_cloneBuffer,
  require_cloneTypedArray,
  require_copyArray,
  require_copyObject,
  require_debounce,
  require_defaults,
  require_get,
  require_getAllKeys,
  require_getAllKeysIn,
  require_getSymbols,
  require_getSymbolsIn,
  require_getTag,
  require_inflection,
  require_initCloneObject,
  require_isArray,
  require_isArrayLikeObject,
  require_isBuffer,
  require_isEqual,
  require_isObject,
  require_isObjectLike,
  require_keys,
  require_keysIn,
  require_nodeUtil,
  require_pickBy,
  require_query_string,
  require_set,
  require_union,
  require_unset,
  required,
  resolveBrowserLocale,
  resolveRedirectTo,
  sanitizeFetchType,
  sanitizeListRestProps,
  setSubmissionErrors,
  shallowEqual,
  substituteTokens,
  testDataProvider,
  undoableEventEmitter_default,
  useAddNotificationContext,
  useApplyInputDefaultValues,
  useAugmentedForm,
  useAuthProvider_default,
  useAuthState_default,
  useAuthenticated,
  useBasename,
  useCheckAuth,
  useCheckForApplicationUpdate,
  useCheckMinimumRequiredProps,
  useChoices,
  useChoicesContext,
  useCreate,
  useCreateContext,
  useCreateController,
  useCreatePath,
  useDataProvider,
  useDeepCompareEffect,
  useDelete,
  useDeleteMany,
  useDeleteWithConfirmController_default,
  useDeleteWithUndoController_default,
  useEditContext,
  useEditController,
  useEvent,
  useExpandAll,
  useExpanded,
  useFieldArray,
  useFilterState_default,
  useForm,
  useFormContext,
  useFormGroup,
  useFormGroupContext,
  useFormGroups,
  useFormState,
  useGetIdentity,
  useGetList,
  useGetMany,
  useGetManyAggregate,
  useGetManyReference,
  useGetOne,
  useGetPermissions_default,
  useGetRecordId,
  useGetRecordRepresentation,
  useGetResourceLabel,
  useGetValidationErrorMessage,
  useHandleAuthCallback,
  useI18nProvider,
  useInfiniteGetList,
  useInfiniteListController,
  useInfinitePaginationContext,
  useInput,
  useIsDataLoaded,
  useIsMounted,
  useLabelPrefix,
  useList,
  useListContext,
  useListController,
  useListFilterContext,
  useListPaginationContext,
  useListParams,
  useListSortContext,
  useLoading,
  useLocale,
  useLocaleState,
  useLocales,
  useLocation,
  useLogin_default,
  useLogoutIfAccessDenied_default,
  useLogout_default,
  useMatch,
  useMutationMiddlewares,
  useNavigate,
  useNotificationContext,
  useNotify,
  useNotifyIsFormInvalid,
  usePaginationState_default,
  useParams,
  usePermissionsOptimized_default,
  usePermissions_default,
  usePickFilterContext,
  usePickPaginationContext,
  usePickSaveContext,
  usePickSortContext,
  usePreference,
  usePreferenceInput,
  usePreferenceKey,
  usePreferencesEditor,
  usePrevious,
  useRecordContext,
  useRecordSelection,
  useRedirect,
  useReference,
  useReferenceArrayFieldController,
  useReferenceArrayInputController,
  useReferenceInputController,
  useReferenceManyFieldController,
  useReferenceOneFieldController,
  useRefresh,
  useRegisterMutationMiddleware,
  useRemoveFromStore,
  useRemoveItemsFromStore,
  useResetStore,
  useResolvedPath,
  useResourceContext,
  useResourceDefinition,
  useResourceDefinitionContext,
  useResourceDefinitions,
  useSafeSetState,
  useSaveContext,
  useScrollToTop,
  useSetInspectorTitle,
  useSetLocale,
  useShowContext,
  useShowController,
  useSortState_default,
  useStore,
  useStoreContext,
  useSuggestions,
  useTimeout,
  useTranslatable,
  useTranslatableContext,
  useTranslate,
  useTranslateLabel,
  useUnique,
  useUnselect,
  useUnselectAll,
  useUpdate,
  useUpdateMany,
  useWarnWhenUnsavedChanges,
  useWhyDidYouUpdate,
  validQueryParams,
  warning_default,
  withLifecycleCallbacks
} from "./chunk-PY4GJFRW.js";
import {
  require_react_dom
} from "./chunk-KXIZOLV7.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM,
  require_react
} from "./chunk-5VZC3UST.js";

// node_modules/@mui/material/colors/common.js
var common, common_default;
var init_common = __esm({
  "node_modules/@mui/material/colors/common.js"() {
    common = {
      black: "#000",
      white: "#fff"
    };
    common_default = common;
  }
});

// node_modules/@mui/material/colors/red.js
var red, red_default;
var init_red = __esm({
  "node_modules/@mui/material/colors/red.js"() {
    red = {
      50: "#ffebee",
      100: "#ffcdd2",
      200: "#ef9a9a",
      300: "#e57373",
      400: "#ef5350",
      500: "#f44336",
      600: "#e53935",
      700: "#d32f2f",
      800: "#c62828",
      900: "#b71c1c",
      A100: "#ff8a80",
      A200: "#ff5252",
      A400: "#ff1744",
      A700: "#d50000"
    };
    red_default = red;
  }
});

// node_modules/@mui/material/colors/purple.js
var purple, purple_default;
var init_purple = __esm({
  "node_modules/@mui/material/colors/purple.js"() {
    purple = {
      50: "#f3e5f5",
      100: "#e1bee7",
      200: "#ce93d8",
      300: "#ba68c8",
      400: "#ab47bc",
      500: "#9c27b0",
      600: "#8e24aa",
      700: "#7b1fa2",
      800: "#6a1b9a",
      900: "#4a148c",
      A100: "#ea80fc",
      A200: "#e040fb",
      A400: "#d500f9",
      A700: "#aa00ff"
    };
    purple_default = purple;
  }
});

// node_modules/@mui/material/colors/blue.js
var blue, blue_default;
var init_blue = __esm({
  "node_modules/@mui/material/colors/blue.js"() {
    blue = {
      50: "#e3f2fd",
      100: "#bbdefb",
      200: "#90caf9",
      300: "#64b5f6",
      400: "#42a5f5",
      500: "#2196f3",
      600: "#1e88e5",
      700: "#1976d2",
      800: "#1565c0",
      900: "#0d47a1",
      A100: "#82b1ff",
      A200: "#448aff",
      A400: "#2979ff",
      A700: "#2962ff"
    };
    blue_default = blue;
  }
});

// node_modules/@mui/material/colors/lightBlue.js
var lightBlue, lightBlue_default;
var init_lightBlue = __esm({
  "node_modules/@mui/material/colors/lightBlue.js"() {
    lightBlue = {
      50: "#e1f5fe",
      100: "#b3e5fc",
      200: "#81d4fa",
      300: "#4fc3f7",
      400: "#29b6f6",
      500: "#03a9f4",
      600: "#039be5",
      700: "#0288d1",
      800: "#0277bd",
      900: "#01579b",
      A100: "#80d8ff",
      A200: "#40c4ff",
      A400: "#00b0ff",
      A700: "#0091ea"
    };
    lightBlue_default = lightBlue;
  }
});

// node_modules/@mui/material/colors/green.js
var green, green_default;
var init_green = __esm({
  "node_modules/@mui/material/colors/green.js"() {
    green = {
      50: "#e8f5e9",
      100: "#c8e6c9",
      200: "#a5d6a7",
      300: "#81c784",
      400: "#66bb6a",
      500: "#4caf50",
      600: "#43a047",
      700: "#388e3c",
      800: "#2e7d32",
      900: "#1b5e20",
      A100: "#b9f6ca",
      A200: "#69f0ae",
      A400: "#00e676",
      A700: "#00c853"
    };
    green_default = green;
  }
});

// node_modules/@mui/material/colors/orange.js
var orange, orange_default;
var init_orange = __esm({
  "node_modules/@mui/material/colors/orange.js"() {
    orange = {
      50: "#fff3e0",
      100: "#ffe0b2",
      200: "#ffcc80",
      300: "#ffb74d",
      400: "#ffa726",
      500: "#ff9800",
      600: "#fb8c00",
      700: "#f57c00",
      800: "#ef6c00",
      900: "#e65100",
      A100: "#ffd180",
      A200: "#ffab40",
      A400: "#ff9100",
      A700: "#ff6d00"
    };
    orange_default = orange;
  }
});

// node_modules/@mui/material/colors/grey.js
var grey, grey_default;
var init_grey = __esm({
  "node_modules/@mui/material/colors/grey.js"() {
    grey = {
      50: "#fafafa",
      100: "#f5f5f5",
      200: "#eeeeee",
      300: "#e0e0e0",
      400: "#bdbdbd",
      500: "#9e9e9e",
      600: "#757575",
      700: "#616161",
      800: "#424242",
      900: "#212121",
      A100: "#f5f5f5",
      A200: "#eeeeee",
      A400: "#bdbdbd",
      A700: "#616161"
    };
    grey_default = grey;
  }
});

// node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js
function chainPropTypes(propType1, propType2) {
  if (false) {
    return () => null;
  }
  return function validate(...args) {
    return propType1(...args) || propType2(...args);
  };
}
var init_chainPropTypes = __esm({
  "node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js"() {
  }
});

// node_modules/@mui/utils/esm/chainPropTypes/index.js
var init_chainPropTypes2 = __esm({
  "node_modules/@mui/utils/esm/chainPropTypes/index.js"() {
    init_chainPropTypes();
  }
});

// node_modules/@mui/utils/esm/deepmerge.js
function isPlainObject(item) {
  return item !== null && typeof item === "object" && item.constructor === Object;
}
function deepClone(source) {
  if (!isPlainObject(source)) {
    return source;
  }
  const output = {};
  Object.keys(source).forEach((key) => {
    output[key] = deepClone(source[key]);
  });
  return output;
}
function deepmerge(target, source, options = {
  clone: true
}) {
  const output = options.clone ? _extends({}, target) : target;
  if (isPlainObject(target) && isPlainObject(source)) {
    Object.keys(source).forEach((key) => {
      if (key === "__proto__") {
        return;
      }
      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {
        output[key] = deepmerge(target[key], source[key], options);
      } else if (options.clone) {
        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];
      } else {
        output[key] = source[key];
      }
    });
  }
  return output;
}
var init_deepmerge = __esm({
  "node_modules/@mui/utils/esm/deepmerge.js"() {
    init_extends();
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol2 = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol2 ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol2 ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol2 ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol2 ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol2 ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol2 ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol2 ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol2 ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol2 ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol2 ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol2 ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol2 ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol2 ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol2 ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol2 ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol2 ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol2 ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol2 ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef2 = REACT_FORWARD_REF_TYPE;
        var Fragment54 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo2 = REACT_MEMO_TYPE;
        var Portal3 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement8(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment12(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef2;
        exports.Fragment = Fragment54;
        exports.Lazy = Lazy;
        exports.Memo = Memo2;
        exports.Portal = Portal3;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement8;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment12;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty3 = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order22 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order22.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from2;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from2 = Object(arguments[s]);
        for (var key in from2) {
          if (hasOwnProperty3.call(from2, key)) {
            to[key] = from2[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from2);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from2, symbols[i])) {
              to[symbols[i]] = from2[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values3, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values3, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign2 = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement46, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired2, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired2) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement46(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode2(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign2({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode2(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode2);
            }
            if (propValue === null || isValidElement46(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode2(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode2(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/@mui/utils/esm/elementAcceptingRef.js
function isClassComponent(elementType) {
  const {
    prototype = {}
  } = elementType;
  return Boolean(prototype.isReactComponent);
}
function acceptingRef(props, propName, componentName, location, propFullName) {
  const element = props[propName];
  const safePropName = propFullName || propName;
  if (element == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window === "undefined") {
    return null;
  }
  let warningHint;
  const elementType = element.type;
  if (typeof elementType === "function" && !isClassComponent(elementType)) {
    warningHint = "Did you accidentally use a plain function component for an element instead?";
  }
  if (warningHint !== void 0) {
    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an element that can hold a ref. ${warningHint} For more information see https://mui.com/r/caveat-with-refs-guide`);
  }
  return null;
}
var import_prop_types, elementAcceptingRef, elementAcceptingRef_default;
var init_elementAcceptingRef = __esm({
  "node_modules/@mui/utils/esm/elementAcceptingRef.js"() {
    import_prop_types = __toESM(require_prop_types());
    init_chainPropTypes2();
    elementAcceptingRef = chainPropTypes(import_prop_types.default.element, acceptingRef);
    elementAcceptingRef.isRequired = chainPropTypes(import_prop_types.default.element.isRequired, acceptingRef);
    elementAcceptingRef_default = elementAcceptingRef;
  }
});

// node_modules/@mui/utils/esm/elementTypeAcceptingRef.js
function isClassComponent2(elementType) {
  const {
    prototype = {}
  } = elementType;
  return Boolean(prototype.isReactComponent);
}
function elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {
  const propValue = props[propName];
  const safePropName = propFullName || propName;
  if (propValue == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window === "undefined") {
    return null;
  }
  let warningHint;
  if (typeof propValue === "function" && !isClassComponent2(propValue)) {
    warningHint = "Did you accidentally provide a plain function component instead?";
  }
  if (warningHint !== void 0) {
    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an element type that can hold a ref. ${warningHint} For more information see https://mui.com/r/caveat-with-refs-guide`);
  }
  return null;
}
var import_prop_types2, elementTypeAcceptingRef_default;
var init_elementTypeAcceptingRef = __esm({
  "node_modules/@mui/utils/esm/elementTypeAcceptingRef.js"() {
    import_prop_types2 = __toESM(require_prop_types());
    init_chainPropTypes2();
    elementTypeAcceptingRef_default = chainPropTypes(import_prop_types2.default.elementType, elementTypeAcceptingRef);
  }
});

// node_modules/@mui/utils/esm/exactProp/exactProp.js
function exactProp(propTypes) {
  if (false) {
    return propTypes;
  }
  return _extends({}, propTypes, {
    [specialProperty]: (props) => {
      const unsupportedProps = Object.keys(props).filter((prop) => !propTypes.hasOwnProperty(prop));
      if (unsupportedProps.length > 0) {
        return new Error(`The following props are not supported: ${unsupportedProps.map((prop) => `\`${prop}\``).join(", ")}. Please remove them.`);
      }
      return null;
    }
  });
}
var specialProperty;
var init_exactProp = __esm({
  "node_modules/@mui/utils/esm/exactProp/exactProp.js"() {
    init_extends();
    specialProperty = "exact-prop: ​";
  }
});

// node_modules/@mui/utils/esm/exactProp/index.js
var init_exactProp2 = __esm({
  "node_modules/@mui/utils/esm/exactProp/index.js"() {
    init_exactProp();
  }
});

// node_modules/@mui/utils/esm/formatMuiErrorMessage.js
var init_formatMuiErrorMessage = __esm({
  "node_modules/@mui/utils/esm/formatMuiErrorMessage.js"() {
  }
});

// node_modules/@mui/utils/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development2 = __commonJS({
  "node_modules/@mui/utils/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_SERVER_CONTEXT_TYPE:
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef2 = REACT_FORWARD_REF_TYPE;
        var Fragment54 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo2 = REACT_MEMO_TYPE;
        var Portal3 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement8(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment12(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        function isSuspenseList(object) {
          return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef2;
        exports.Fragment = Fragment54;
        exports.Lazy = Lazy;
        exports.Memo = Memo2;
        exports.Portal = Portal3;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.SuspenseList = SuspenseList;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement8;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment12;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isSuspenseList = isSuspenseList;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/@mui/utils/node_modules/react-is/index.js
var require_react_is2 = __commonJS({
  "node_modules/@mui/utils/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development2();
    }
  }
});

// node_modules/@mui/utils/esm/getDisplayName.js
function getFunctionName(fn2) {
  const match2 = `${fn2}`.match(fnNameMatchRegex);
  const name = match2 && match2[1];
  return name || "";
}
function getFunctionComponentName(Component2, fallback = "") {
  return Component2.displayName || Component2.name || getFunctionName(Component2) || fallback;
}
function getWrappedName(outerType, innerType, wrapperName) {
  const functionName = getFunctionComponentName(innerType);
  return outerType.displayName || (functionName !== "" ? `${wrapperName}(${functionName})` : wrapperName);
}
function getDisplayName(Component2) {
  if (Component2 == null) {
    return void 0;
  }
  if (typeof Component2 === "string") {
    return Component2;
  }
  if (typeof Component2 === "function") {
    return getFunctionComponentName(Component2, "Component");
  }
  if (typeof Component2 === "object") {
    switch (Component2.$$typeof) {
      case import_react_is.ForwardRef:
        return getWrappedName(Component2, Component2.render, "ForwardRef");
      case import_react_is.Memo:
        return getWrappedName(Component2, Component2.type, "memo");
      default:
        return void 0;
    }
  }
  return void 0;
}
var import_react_is, fnNameMatchRegex;
var init_getDisplayName = __esm({
  "node_modules/@mui/utils/esm/getDisplayName.js"() {
    import_react_is = __toESM(require_react_is2());
    fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
  }
});

// node_modules/@mui/utils/esm/HTMLElementType/HTMLElementType.js
function HTMLElementType(props, propName, componentName, location, propFullName) {
  if (false) {
    return null;
  }
  const propValue = props[propName];
  const safePropName = propFullName || propName;
  if (propValue == null) {
    return null;
  }
  if (propValue && propValue.nodeType !== 1) {
    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an HTMLElement.`);
  }
  return null;
}
var init_HTMLElementType = __esm({
  "node_modules/@mui/utils/esm/HTMLElementType/HTMLElementType.js"() {
  }
});

// node_modules/@mui/utils/esm/HTMLElementType/index.js
var init_HTMLElementType2 = __esm({
  "node_modules/@mui/utils/esm/HTMLElementType/index.js"() {
    init_HTMLElementType();
  }
});

// node_modules/@mui/utils/esm/ponyfillGlobal/ponyfillGlobal.js
var ponyfillGlobal_default;
var init_ponyfillGlobal = __esm({
  "node_modules/@mui/utils/esm/ponyfillGlobal/ponyfillGlobal.js"() {
    ponyfillGlobal_default = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
  }
});

// node_modules/@mui/utils/esm/ponyfillGlobal/index.js
var init_ponyfillGlobal2 = __esm({
  "node_modules/@mui/utils/esm/ponyfillGlobal/index.js"() {
    init_ponyfillGlobal();
  }
});

// node_modules/@mui/utils/esm/refType.js
var import_prop_types3, refType, refType_default;
var init_refType = __esm({
  "node_modules/@mui/utils/esm/refType.js"() {
    import_prop_types3 = __toESM(require_prop_types());
    refType = import_prop_types3.default.oneOfType([import_prop_types3.default.func, import_prop_types3.default.object]);
    refType_default = refType;
  }
});

// node_modules/@mui/utils/esm/capitalize/capitalize.js
function capitalize(string) {
  if (typeof string !== "string") {
    throw new Error(true ? `MUI: \`capitalize(string)\` expects a string argument.` : formatMuiErrorMessage(7));
  }
  return string.charAt(0).toUpperCase() + string.slice(1);
}
var init_capitalize = __esm({
  "node_modules/@mui/utils/esm/capitalize/capitalize.js"() {
    init_formatMuiErrorMessage();
  }
});

// node_modules/@mui/utils/esm/capitalize/index.js
var init_capitalize2 = __esm({
  "node_modules/@mui/utils/esm/capitalize/index.js"() {
    init_capitalize();
  }
});

// node_modules/@mui/utils/esm/createChainedFunction.js
function createChainedFunction(...funcs) {
  return funcs.reduce((acc, func) => {
    if (func == null) {
      return acc;
    }
    return function chainedFunction(...args) {
      acc.apply(this, args);
      func.apply(this, args);
    };
  }, () => {
  });
}
var init_createChainedFunction = __esm({
  "node_modules/@mui/utils/esm/createChainedFunction.js"() {
  }
});

// node_modules/@mui/utils/esm/debounce/debounce.js
function debounce(func, wait = 166) {
  let timeout2;
  function debounced(...args) {
    const later = () => {
      func.apply(this, args);
    };
    clearTimeout(timeout2);
    timeout2 = setTimeout(later, wait);
  }
  debounced.clear = () => {
    clearTimeout(timeout2);
  };
  return debounced;
}
var init_debounce = __esm({
  "node_modules/@mui/utils/esm/debounce/debounce.js"() {
  }
});

// node_modules/@mui/utils/esm/debounce/index.js
var init_debounce2 = __esm({
  "node_modules/@mui/utils/esm/debounce/index.js"() {
    init_debounce();
    init_debounce();
  }
});

// node_modules/@mui/utils/esm/deprecatedPropType.js
function deprecatedPropType(validator2, reason) {
  if (false) {
    return () => null;
  }
  return (props, propName, componentName, location, propFullName) => {
    const componentNameSafe = componentName || "<<anonymous>>";
    const propFullNameSafe = propFullName || propName;
    if (typeof props[propName] !== "undefined") {
      return new Error(`The ${location} \`${propFullNameSafe}\` of \`${componentNameSafe}\` is deprecated. ${reason}`);
    }
    return null;
  };
}
var init_deprecatedPropType = __esm({
  "node_modules/@mui/utils/esm/deprecatedPropType.js"() {
  }
});

// node_modules/@mui/utils/esm/isMuiElement.js
function isMuiElement(element, muiNames) {
  return React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
}
var React;
var init_isMuiElement = __esm({
  "node_modules/@mui/utils/esm/isMuiElement.js"() {
    React = __toESM(require_react());
  }
});

// node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js
function ownerDocument(node2) {
  return node2 && node2.ownerDocument || document;
}
var init_ownerDocument = __esm({
  "node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js"() {
  }
});

// node_modules/@mui/utils/esm/ownerDocument/index.js
var init_ownerDocument2 = __esm({
  "node_modules/@mui/utils/esm/ownerDocument/index.js"() {
    init_ownerDocument();
  }
});

// node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js
function ownerWindow(node2) {
  const doc = ownerDocument(node2);
  return doc.defaultView || window;
}
var init_ownerWindow = __esm({
  "node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js"() {
    init_ownerDocument2();
  }
});

// node_modules/@mui/utils/esm/ownerWindow/index.js
var init_ownerWindow2 = __esm({
  "node_modules/@mui/utils/esm/ownerWindow/index.js"() {
    init_ownerWindow();
  }
});

// node_modules/@mui/utils/esm/requirePropFactory.js
function requirePropFactory(componentNameInError, Component2) {
  if (false) {
    return () => null;
  }
  const prevPropTypes = Component2 ? _extends({}, Component2.propTypes) : null;
  const requireProp = (requiredProp) => (props, propName, componentName, location, propFullName, ...args) => {
    const propFullNameSafe = propFullName || propName;
    const defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];
    if (defaultTypeChecker) {
      const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);
      if (typeCheckerResult) {
        return typeCheckerResult;
      }
    }
    if (typeof props[propName] !== "undefined" && !props[requiredProp]) {
      return new Error(`The prop \`${propFullNameSafe}\` of \`${componentNameInError}\` can only be used together with the \`${requiredProp}\` prop.`);
    }
    return null;
  };
  return requireProp;
}
var init_requirePropFactory = __esm({
  "node_modules/@mui/utils/esm/requirePropFactory.js"() {
    init_extends();
  }
});

// node_modules/@mui/utils/esm/setRef.js
function setRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}
var init_setRef = __esm({
  "node_modules/@mui/utils/esm/setRef.js"() {
  }
});

// node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js
var React2, useEnhancedEffect, useEnhancedEffect_default;
var init_useEnhancedEffect = __esm({
  "node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js"() {
    "use client";
    React2 = __toESM(require_react());
    useEnhancedEffect = typeof window !== "undefined" ? React2.useLayoutEffect : React2.useEffect;
    useEnhancedEffect_default = useEnhancedEffect;
  }
});

// node_modules/@mui/utils/esm/useEnhancedEffect/index.js
var init_useEnhancedEffect2 = __esm({
  "node_modules/@mui/utils/esm/useEnhancedEffect/index.js"() {
    "use client";
    init_useEnhancedEffect();
  }
});

// node_modules/@mui/utils/esm/useId/useId.js
function useGlobalId(idOverride) {
  const [defaultId, setDefaultId] = React3.useState(idOverride);
  const id = idOverride || defaultId;
  React3.useEffect(() => {
    if (defaultId == null) {
      globalId += 1;
      setDefaultId(`mui-${globalId}`);
    }
  }, [defaultId]);
  return id;
}
function useId(idOverride) {
  if (maybeReactUseId !== void 0) {
    const reactId = maybeReactUseId();
    return idOverride != null ? idOverride : reactId;
  }
  return useGlobalId(idOverride);
}
var React3, globalId, maybeReactUseId;
var init_useId = __esm({
  "node_modules/@mui/utils/esm/useId/useId.js"() {
    "use client";
    React3 = __toESM(require_react());
    globalId = 0;
    maybeReactUseId = React3["useId".toString()];
  }
});

// node_modules/@mui/utils/esm/useId/index.js
var init_useId2 = __esm({
  "node_modules/@mui/utils/esm/useId/index.js"() {
    "use client";
    init_useId();
  }
});

// node_modules/@mui/utils/esm/unsupportedProp.js
function unsupportedProp(props, propName, componentName, location, propFullName) {
  if (false) {
    return null;
  }
  const propFullNameSafe = propFullName || propName;
  if (typeof props[propName] !== "undefined") {
    return new Error(`The prop \`${propFullNameSafe}\` is not supported. Please remove it.`);
  }
  return null;
}
var init_unsupportedProp = __esm({
  "node_modules/@mui/utils/esm/unsupportedProp.js"() {
  }
});

// node_modules/@mui/utils/esm/useControlled/useControlled.js
function useControlled({
  controlled,
  default: defaultProp,
  name,
  state = "value"
}) {
  const {
    current: isControlled
  } = React4.useRef(controlled !== void 0);
  const [valueState, setValue] = React4.useState(defaultProp);
  const value = isControlled ? controlled : valueState;
  if (true) {
    React4.useEffect(() => {
      if (isControlled !== (controlled !== void 0)) {
        console.error([`MUI: A component is changing the ${isControlled ? "" : "un"}controlled ${state} state of ${name} to be ${isControlled ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${name} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join("\n"));
      }
    }, [state, name, controlled]);
    const {
      current: defaultValue
    } = React4.useRef(defaultProp);
    React4.useEffect(() => {
      if (!isControlled && defaultValue !== defaultProp) {
        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. To suppress this warning opt to use a controlled ${name}.`].join("\n"));
      }
    }, [JSON.stringify(defaultProp)]);
  }
  const setValueIfUncontrolled = React4.useCallback((newValue) => {
    if (!isControlled) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}
var React4;
var init_useControlled = __esm({
  "node_modules/@mui/utils/esm/useControlled/useControlled.js"() {
    "use client";
    React4 = __toESM(require_react());
  }
});

// node_modules/@mui/utils/esm/useControlled/index.js
var init_useControlled2 = __esm({
  "node_modules/@mui/utils/esm/useControlled/index.js"() {
    "use client";
    init_useControlled();
  }
});

// node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js
function useEventCallback(fn2) {
  const ref = React5.useRef(fn2);
  useEnhancedEffect_default(() => {
    ref.current = fn2;
  });
  return React5.useCallback((...args) => (
    // @ts-expect-error hide `this`
    // tslint:disable-next-line:ban-comma-operator
    (0, ref.current)(...args)
  ), []);
}
var React5, useEventCallback_default;
var init_useEventCallback = __esm({
  "node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js"() {
    "use client";
    React5 = __toESM(require_react());
    init_useEnhancedEffect2();
    useEventCallback_default = useEventCallback;
  }
});

// node_modules/@mui/utils/esm/useEventCallback/index.js
var init_useEventCallback2 = __esm({
  "node_modules/@mui/utils/esm/useEventCallback/index.js"() {
    "use client";
    init_useEventCallback();
  }
});

// node_modules/@mui/utils/esm/useForkRef/useForkRef.js
function useForkRef(...refs) {
  return React6.useMemo(() => {
    if (refs.every((ref) => ref == null)) {
      return null;
    }
    return (instance) => {
      refs.forEach((ref) => {
        setRef(ref, instance);
      });
    };
  }, refs);
}
var React6;
var init_useForkRef = __esm({
  "node_modules/@mui/utils/esm/useForkRef/useForkRef.js"() {
    "use client";
    React6 = __toESM(require_react());
    init_setRef();
  }
});

// node_modules/@mui/utils/esm/useForkRef/index.js
var init_useForkRef2 = __esm({
  "node_modules/@mui/utils/esm/useForkRef/index.js"() {
    "use client";
    init_useForkRef();
  }
});

// node_modules/@mui/utils/esm/useIsFocusVisible.js
function focusTriggersKeyboardModality(node2) {
  const {
    type,
    tagName
  } = node2;
  if (tagName === "INPUT" && inputTypesWhitelist[type] && !node2.readOnly) {
    return true;
  }
  if (tagName === "TEXTAREA" && !node2.readOnly) {
    return true;
  }
  if (node2.isContentEditable) {
    return true;
  }
  return false;
}
function handleKeyDown(event) {
  if (event.metaKey || event.altKey || event.ctrlKey) {
    return;
  }
  hadKeyboardEvent = true;
}
function handlePointerDown() {
  hadKeyboardEvent = false;
}
function handleVisibilityChange() {
  if (this.visibilityState === "hidden") {
    if (hadFocusVisibleRecently) {
      hadKeyboardEvent = true;
    }
  }
}
function prepare(doc) {
  doc.addEventListener("keydown", handleKeyDown, true);
  doc.addEventListener("mousedown", handlePointerDown, true);
  doc.addEventListener("pointerdown", handlePointerDown, true);
  doc.addEventListener("touchstart", handlePointerDown, true);
  doc.addEventListener("visibilitychange", handleVisibilityChange, true);
}
function isFocusVisible(event) {
  const {
    target
  } = event;
  try {
    return target.matches(":focus-visible");
  } catch (error) {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(target);
}
function useIsFocusVisible() {
  const ref = React7.useCallback((node2) => {
    if (node2 != null) {
      prepare(node2.ownerDocument);
    }
  }, []);
  const isFocusVisibleRef = React7.useRef(false);
  function handleBlurVisible() {
    if (isFocusVisibleRef.current) {
      hadFocusVisibleRecently = true;
      window.clearTimeout(hadFocusVisibleRecentlyTimeout);
      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
        hadFocusVisibleRecently = false;
      }, 100);
      isFocusVisibleRef.current = false;
      return true;
    }
    return false;
  }
  function handleFocusVisible(event) {
    if (isFocusVisible(event)) {
      isFocusVisibleRef.current = true;
      return true;
    }
    return false;
  }
  return {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref
  };
}
var React7, hadKeyboardEvent, hadFocusVisibleRecently, hadFocusVisibleRecentlyTimeout, inputTypesWhitelist;
var init_useIsFocusVisible = __esm({
  "node_modules/@mui/utils/esm/useIsFocusVisible.js"() {
    "use client";
    React7 = __toESM(require_react());
    hadKeyboardEvent = true;
    hadFocusVisibleRecently = false;
    inputTypesWhitelist = {
      text: true,
      search: true,
      url: true,
      tel: true,
      email: true,
      password: true,
      number: true,
      date: true,
      month: true,
      week: true,
      time: true,
      datetime: true,
      "datetime-local": true
    };
  }
});

// node_modules/@mui/utils/esm/getScrollbarSize.js
function getScrollbarSize(doc) {
  const documentWidth = doc.documentElement.clientWidth;
  return Math.abs(window.innerWidth - documentWidth);
}
var init_getScrollbarSize = __esm({
  "node_modules/@mui/utils/esm/getScrollbarSize.js"() {
  }
});

// node_modules/@mui/utils/esm/scrollLeft.js
function detectScrollType() {
  if (cachedType) {
    return cachedType;
  }
  const dummy = document.createElement("div");
  const container = document.createElement("div");
  container.style.width = "10px";
  container.style.height = "1px";
  dummy.appendChild(container);
  dummy.dir = "rtl";
  dummy.style.fontSize = "14px";
  dummy.style.width = "4px";
  dummy.style.height = "1px";
  dummy.style.position = "absolute";
  dummy.style.top = "-1000px";
  dummy.style.overflow = "scroll";
  document.body.appendChild(dummy);
  cachedType = "reverse";
  if (dummy.scrollLeft > 0) {
    cachedType = "default";
  } else {
    dummy.scrollLeft = 1;
    if (dummy.scrollLeft === 0) {
      cachedType = "negative";
    }
  }
  document.body.removeChild(dummy);
  return cachedType;
}
function getNormalizedScrollLeft(element, direction) {
  const scrollLeft = element.scrollLeft;
  if (direction !== "rtl") {
    return scrollLeft;
  }
  const type = detectScrollType();
  switch (type) {
    case "negative":
      return element.scrollWidth - element.clientWidth + scrollLeft;
    case "reverse":
      return element.scrollWidth - element.clientWidth - scrollLeft;
    default:
      return scrollLeft;
  }
}
var cachedType;
var init_scrollLeft = __esm({
  "node_modules/@mui/utils/esm/scrollLeft.js"() {
  }
});

// node_modules/@mui/utils/esm/usePreviousProps.js
var React8, usePreviousProps, usePreviousProps_default;
var init_usePreviousProps = __esm({
  "node_modules/@mui/utils/esm/usePreviousProps.js"() {
    "use client";
    React8 = __toESM(require_react());
    usePreviousProps = (value) => {
      const ref = React8.useRef({});
      React8.useEffect(() => {
        ref.current = value;
      });
      return ref.current;
    };
    usePreviousProps_default = usePreviousProps;
  }
});

// node_modules/@mui/utils/esm/visuallyHidden.js
var visuallyHidden, visuallyHidden_default;
var init_visuallyHidden = __esm({
  "node_modules/@mui/utils/esm/visuallyHidden.js"() {
    visuallyHidden = {
      border: 0,
      clip: "rect(0 0 0 0)",
      height: "1px",
      margin: -1,
      overflow: "hidden",
      padding: 0,
      position: "absolute",
      whiteSpace: "nowrap",
      width: "1px"
    };
    visuallyHidden_default = visuallyHidden;
  }
});

// node_modules/@mui/utils/esm/integerPropType.js
function getTypeByValue(value) {
  const valueType = typeof value;
  switch (valueType) {
    case "number":
      if (Number.isNaN(value)) {
        return "NaN";
      }
      if (!Number.isFinite(value)) {
        return "Infinity";
      }
      if (value !== Math.floor(value)) {
        return "float";
      }
      return "number";
    case "object":
      if (value === null) {
        return "null";
      }
      return value.constructor.name;
    default:
      return valueType;
  }
}
function ponyfillIsInteger(x) {
  return typeof x === "number" && isFinite(x) && Math.floor(x) === x;
}
function requiredInteger(props, propName, componentName, location) {
  const propValue = props[propName];
  if (propValue == null || !isInteger(propValue)) {
    const propType = getTypeByValue(propValue);
    return new RangeError(`Invalid ${location} \`${propName}\` of type \`${propType}\` supplied to \`${componentName}\`, expected \`integer\`.`);
  }
  return null;
}
function validator(props, propName, ...other) {
  const propValue = props[propName];
  if (propValue === void 0) {
    return null;
  }
  return requiredInteger(props, propName, ...other);
}
function validatorNoop() {
  return null;
}
var isInteger, integerPropType_default;
var init_integerPropType = __esm({
  "node_modules/@mui/utils/esm/integerPropType.js"() {
    isInteger = Number.isInteger || ponyfillIsInteger;
    validator.isRequired = requiredInteger;
    validatorNoop.isRequired = validatorNoop;
    integerPropType_default = false ? validatorNoop : validator;
  }
});

// node_modules/@mui/utils/esm/resolveProps.js
function resolveProps(defaultProps3, props) {
  const output = _extends({}, props);
  Object.keys(defaultProps3).forEach((propName) => {
    if (propName.toString().match(/^(components|slots)$/)) {
      output[propName] = _extends({}, defaultProps3[propName], output[propName]);
    } else if (propName.toString().match(/^(componentsProps|slotProps)$/)) {
      const defaultSlotProps = defaultProps3[propName] || {};
      const slotProps = props[propName];
      output[propName] = {};
      if (!slotProps || !Object.keys(slotProps)) {
        output[propName] = defaultSlotProps;
      } else if (!defaultSlotProps || !Object.keys(defaultSlotProps)) {
        output[propName] = slotProps;
      } else {
        output[propName] = _extends({}, slotProps);
        Object.keys(defaultSlotProps).forEach((slotPropName) => {
          output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);
        });
      }
    } else if (output[propName] === void 0) {
      output[propName] = defaultProps3[propName];
    }
  });
  return output;
}
var init_resolveProps = __esm({
  "node_modules/@mui/utils/esm/resolveProps.js"() {
    init_extends();
  }
});

// node_modules/@mui/utils/esm/composeClasses/composeClasses.js
function composeClasses(slots, getUtilityClass, classes2 = void 0) {
  const output = {};
  Object.keys(slots).forEach(
    // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
    // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
    (slot) => {
      output[slot] = slots[slot].reduce((acc, key) => {
        if (key) {
          const utilityClass = getUtilityClass(key);
          if (utilityClass !== "") {
            acc.push(utilityClass);
          }
          if (classes2 && classes2[key]) {
            acc.push(classes2[key]);
          }
        }
        return acc;
      }, []).join(" ");
    }
  );
  return output;
}
var init_composeClasses = __esm({
  "node_modules/@mui/utils/esm/composeClasses/composeClasses.js"() {
  }
});

// node_modules/@mui/utils/esm/composeClasses/index.js
var init_composeClasses2 = __esm({
  "node_modules/@mui/utils/esm/composeClasses/index.js"() {
    init_composeClasses();
  }
});

// node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js
var defaultGenerator, createClassNameGenerator, ClassNameGenerator, ClassNameGenerator_default;
var init_ClassNameGenerator = __esm({
  "node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js"() {
    defaultGenerator = (componentName) => componentName;
    createClassNameGenerator = () => {
      let generate = defaultGenerator;
      return {
        configure(generator) {
          generate = generator;
        },
        generate(componentName) {
          return generate(componentName);
        },
        reset() {
          generate = defaultGenerator;
        }
      };
    };
    ClassNameGenerator = createClassNameGenerator();
    ClassNameGenerator_default = ClassNameGenerator;
  }
});

// node_modules/@mui/utils/esm/ClassNameGenerator/index.js
var init_ClassNameGenerator2 = __esm({
  "node_modules/@mui/utils/esm/ClassNameGenerator/index.js"() {
    init_ClassNameGenerator();
  }
});

// node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js
function generateUtilityClass(componentName, slot, globalStatePrefix = "Mui") {
  const globalStateClass = globalStateClassesMapping[slot];
  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator_default.generate(componentName)}-${slot}`;
}
var globalStateClassesMapping;
var init_generateUtilityClass = __esm({
  "node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js"() {
    init_ClassNameGenerator2();
    globalStateClassesMapping = {
      active: "active",
      checked: "checked",
      completed: "completed",
      disabled: "disabled",
      error: "error",
      expanded: "expanded",
      focused: "focused",
      focusVisible: "focusVisible",
      open: "open",
      readOnly: "readOnly",
      required: "required",
      selected: "selected"
    };
  }
});

// node_modules/@mui/utils/esm/generateUtilityClass/index.js
var init_generateUtilityClass2 = __esm({
  "node_modules/@mui/utils/esm/generateUtilityClass/index.js"() {
    init_generateUtilityClass();
    init_generateUtilityClass();
  }
});

// node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js
function generateUtilityClasses(componentName, slots, globalStatePrefix = "Mui") {
  const result = {};
  slots.forEach((slot) => {
    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);
  });
  return result;
}
var init_generateUtilityClasses = __esm({
  "node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js"() {
    init_generateUtilityClass2();
  }
});

// node_modules/@mui/utils/esm/generateUtilityClasses/index.js
var init_generateUtilityClasses2 = __esm({
  "node_modules/@mui/utils/esm/generateUtilityClasses/index.js"() {
    init_generateUtilityClasses();
  }
});

// node_modules/@mui/utils/esm/index.js
var init_esm = __esm({
  "node_modules/@mui/utils/esm/index.js"() {
    "use client";
    init_chainPropTypes2();
    init_deepmerge();
    init_deepmerge();
    init_elementAcceptingRef();
    init_elementTypeAcceptingRef();
    init_exactProp2();
    init_formatMuiErrorMessage();
    init_getDisplayName();
    init_HTMLElementType2();
    init_ponyfillGlobal2();
    init_refType();
    init_capitalize2();
    init_createChainedFunction();
    init_debounce2();
    init_deprecatedPropType();
    init_isMuiElement();
    init_ownerDocument2();
    init_ownerWindow2();
    init_requirePropFactory();
    init_setRef();
    init_useEnhancedEffect2();
    init_useId2();
    init_unsupportedProp();
    init_useControlled2();
    init_useEventCallback2();
    init_useForkRef2();
    init_useIsFocusVisible();
    init_getScrollbarSize();
    init_scrollLeft();
    init_usePreviousProps();
    init_visuallyHidden();
    init_integerPropType();
    init_resolveProps();
    init_composeClasses2();
    init_generateUtilityClass2();
    init_generateUtilityClass2();
    init_generateUtilityClasses2();
    init_ClassNameGenerator2();
  }
});

// node_modules/@mui/material/styles/identifier.js
var identifier_default;
var init_identifier = __esm({
  "node_modules/@mui/material/styles/identifier.js"() {
    identifier_default = "$$material";
  }
});

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var init_objectWithoutPropertiesLoose = __esm({
  "node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"() {
  }
});

// node_modules/@emotion/memoize/dist/emotion-memoize.esm.js
function memoize(fn2) {
  var cache2 = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache2[arg] === void 0)
      cache2[arg] = fn2(arg);
    return cache2[arg];
  };
}
var init_emotion_memoize_esm = __esm({
  "node_modules/@emotion/memoize/dist/emotion-memoize.esm.js"() {
  }
});

// node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js
var reactPropsRegex, isPropValid;
var init_emotion_is_prop_valid_esm = __esm({
  "node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js"() {
    init_emotion_memoize_esm();
    reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
    isPropValid = memoize(
      function(prop) {
        return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
      }
      /* Z+1 */
    );
  }
});

// node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js
function sheetForTag(tag) {
  if (tag.sheet) {
    return tag.sheet;
  }
  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      return document.styleSheets[i];
    }
  }
}
function createStyleElement(options) {
  var tag = document.createElement("style");
  tag.setAttribute("data-emotion", options.key);
  if (options.nonce !== void 0) {
    tag.setAttribute("nonce", options.nonce);
  }
  tag.appendChild(document.createTextNode(""));
  tag.setAttribute("data-s", "");
  return tag;
}
var StyleSheet;
var init_emotion_sheet_browser_esm = __esm({
  "node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js"() {
    StyleSheet = function() {
      function StyleSheet2(options) {
        var _this = this;
        this._insertTag = function(tag) {
          var before;
          if (_this.tags.length === 0) {
            if (_this.insertionPoint) {
              before = _this.insertionPoint.nextSibling;
            } else if (_this.prepend) {
              before = _this.container.firstChild;
            } else {
              before = _this.before;
            }
          } else {
            before = _this.tags[_this.tags.length - 1].nextSibling;
          }
          _this.container.insertBefore(tag, before);
          _this.tags.push(tag);
        };
        this.isSpeedy = options.speedy === void 0 ? false : options.speedy;
        this.tags = [];
        this.ctr = 0;
        this.nonce = options.nonce;
        this.key = options.key;
        this.container = options.container;
        this.prepend = options.prepend;
        this.insertionPoint = options.insertionPoint;
        this.before = null;
      }
      var _proto = StyleSheet2.prototype;
      _proto.hydrate = function hydrate(nodes) {
        nodes.forEach(this._insertTag);
      };
      _proto.insert = function insert(rule) {
        if (this.ctr % (this.isSpeedy ? 65e3 : 1) === 0) {
          this._insertTag(createStyleElement(this));
        }
        var tag = this.tags[this.tags.length - 1];
        if (true) {
          var isImportRule3 = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;
          if (isImportRule3 && this._alreadyInsertedOrderInsensitiveRule) {
            console.error("You're attempting to insert the following rule:\n" + rule + "\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.");
          }
          this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule3;
        }
        if (this.isSpeedy) {
          var sheet = sheetForTag(tag);
          try {
            sheet.insertRule(rule, sheet.cssRules.length);
          } catch (e) {
            if (!/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {
              console.error('There was a problem inserting the following rule: "' + rule + '"', e);
            }
          }
        } else {
          tag.appendChild(document.createTextNode(rule));
        }
        this.ctr++;
      };
      _proto.flush = function flush() {
        this.tags.forEach(function(tag) {
          return tag.parentNode && tag.parentNode.removeChild(tag);
        });
        this.tags = [];
        this.ctr = 0;
        if (true) {
          this._alreadyInsertedOrderInsensitiveRule = false;
        }
      };
      return StyleSheet2;
    }();
  }
});

// node_modules/stylis/src/Enum.js
var MS, MOZ, WEBKIT, COMMENT, RULESET, DECLARATION, IMPORT, KEYFRAMES, LAYER;
var init_Enum = __esm({
  "node_modules/stylis/src/Enum.js"() {
    MS = "-ms-";
    MOZ = "-moz-";
    WEBKIT = "-webkit-";
    COMMENT = "comm";
    RULESET = "rule";
    DECLARATION = "decl";
    IMPORT = "@import";
    KEYFRAMES = "@keyframes";
    LAYER = "@layer";
  }
});

// node_modules/stylis/src/Utility.js
function hash(value, length2) {
  return charat(value, 0) ^ 45 ? (((length2 << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3) : 0;
}
function trim(value) {
  return value.trim();
}
function match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}
function replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}
function indexof(value, search) {
  return value.indexOf(search);
}
function charat(value, index2) {
  return value.charCodeAt(index2) | 0;
}
function substr(value, begin, end2) {
  return value.slice(begin, end2);
}
function strlen(value) {
  return value.length;
}
function sizeof(value) {
  return value.length;
}
function append(value, array) {
  return array.push(value), value;
}
function combine(array, callback) {
  return array.map(callback).join("");
}
var abs, from, assign;
var init_Utility = __esm({
  "node_modules/stylis/src/Utility.js"() {
    abs = Math.abs;
    from = String.fromCharCode;
    assign = Object.assign;
  }
});

// node_modules/stylis/src/Tokenizer.js
function node(value, root, parent, type, props, children2, length2) {
  return { value, root, parent, type, props, children: children2, line, column, length: length2, return: "" };
}
function copy(root, props) {
  return assign(node("", null, null, "", null, null, 0), root, { length: -root.length }, props);
}
function char() {
  return character;
}
function prev() {
  character = position > 0 ? charat(characters, --position) : 0;
  if (column--, character === 10)
    column = 1, line--;
  return character;
}
function next() {
  character = position < length ? charat(characters, position++) : 0;
  if (column++, character === 10)
    column = 1, line++;
  return character;
}
function peek() {
  return charat(characters, position);
}
function caret() {
  return position;
}
function slice(begin, end2) {
  return substr(characters, begin, end2);
}
function token(type) {
  switch (type) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(value) {
  return line = column = 1, length = strlen(characters = value), position = 0, [];
}
function dealloc(value) {
  return characters = "", value;
}
function delimit(type) {
  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}
function whitespace(type) {
  while (character = peek())
    if (character < 33)
      next();
    else
      break;
  return token(type) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(index2, count) {
  while (--count && next())
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)
      break;
  return slice(index2, caret() + (count < 6 && peek() == 32 && next() == 32));
}
function delimiter(type) {
  while (next())
    switch (character) {
      case type:
        return position;
      case 34:
      case 39:
        if (type !== 34 && type !== 39)
          delimiter(character);
        break;
      case 40:
        if (type === 41)
          delimiter(type);
        break;
      case 92:
        next();
        break;
    }
  return position;
}
function commenter(type, index2) {
  while (next())
    if (type + character === 47 + 10)
      break;
    else if (type + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(index2, position - 1) + "*" + from(type === 47 ? type : next());
}
function identifier(index2) {
  while (!token(peek()))
    next();
  return slice(index2, position);
}
var line, column, length, position, character, characters;
var init_Tokenizer = __esm({
  "node_modules/stylis/src/Tokenizer.js"() {
    init_Utility();
    line = 1;
    column = 1;
    length = 0;
    position = 0;
    character = 0;
    characters = "";
  }
});

// node_modules/stylis/src/Parser.js
function compile(value) {
  return dealloc(parse("", null, null, null, [""], value = alloc(value), 0, [0], value));
}
function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index2 = 0;
  var offset3 = 0;
  var length2 = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character2 = 0;
  var type = "";
  var props = rules;
  var children2 = rulesets;
  var reference2 = rule;
  var characters2 = type;
  while (scanning)
    switch (previous = character2, character2 = next()) {
      case 40:
        if (previous != 108 && charat(characters2, length2 - 1) == 58) {
          if (indexof(characters2 += replace(delimit(character2), "&", "&\f"), "&\f") != -1)
            ampersand = -1;
          break;
        }
      case 34:
      case 39:
      case 91:
        characters2 += delimit(character2);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        characters2 += whitespace(previous);
        break;
      case 92:
        characters2 += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), root, parent), declarations);
            break;
          default:
            characters2 += "/";
        }
        break;
      case 123 * variable:
        points[index2++] = strlen(characters2) * ampersand;
      case 125 * variable:
      case 59:
      case 0:
        switch (character2) {
          case 0:
          case 125:
            scanning = 0;
          case 59 + offset3:
            if (ampersand == -1)
              characters2 = replace(characters2, /\f/g, "");
            if (property > 0 && strlen(characters2) - length2)
              append(property > 32 ? declaration(characters2 + ";", rule, parent, length2 - 1) : declaration(replace(characters2, " ", "") + ";", rule, parent, length2 - 2), declarations);
            break;
          case 59:
            characters2 += ";";
          default:
            append(reference2 = ruleset(characters2, root, parent, index2, offset3, rules, points, type, props = [], children2 = [], length2), rulesets);
            if (character2 === 123)
              if (offset3 === 0)
                parse(characters2, root, reference2, reference2, props, rulesets, length2, points, children2);
              else
                switch (atrule === 99 && charat(characters2, 3) === 110 ? 100 : atrule) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    parse(value, reference2, reference2, rule && append(ruleset(value, reference2, reference2, 0, 0, rules, points, type, rules, props = [], length2), children2), rules, children2, length2, points, rule ? props : children2);
                    break;
                  default:
                    parse(characters2, reference2, reference2, reference2, [""], children2, 0, points, children2);
                }
        }
        index2 = offset3 = property = 0, variable = ampersand = 1, type = characters2 = "", length2 = pseudo;
        break;
      case 58:
        length2 = 1 + strlen(characters2), property = previous;
      default:
        if (variable < 1) {
          if (character2 == 123)
            --variable;
          else if (character2 == 125 && variable++ == 0 && prev() == 125)
            continue;
        }
        switch (characters2 += from(character2), character2 * variable) {
          case 38:
            ampersand = offset3 > 0 ? 1 : (characters2 += "\f", -1);
            break;
          case 44:
            points[index2++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;
            break;
          case 64:
            if (peek() === 45)
              characters2 += delimit(next());
            atrule = peek(), offset3 = length2 = strlen(type = characters2 += identifier(caret())), character2++;
            break;
          case 45:
            if (previous === 45 && strlen(characters2) == 2)
              variable = 0;
        }
    }
  return rulesets;
}
function ruleset(value, root, parent, index2, offset3, rules, points, type, props, children2, length2) {
  var post = offset3 - 1;
  var rule = offset3 === 0 ? rules : [""];
  var size2 = sizeof(rule);
  for (var i = 0, j = 0, k = 0; i < index2; ++i)
    for (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size2; ++x)
      if (z = trim(j > 0 ? rule[x] + " " + y : replace(y, /&\f/g, rule[x])))
        props[k++] = z;
  return node(value, root, parent, offset3 === 0 ? RULESET : type, props, children2, length2);
}
function comment(value, root, parent) {
  return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0);
}
function declaration(value, root, parent, length2) {
  return node(value, root, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2);
}
var init_Parser = __esm({
  "node_modules/stylis/src/Parser.js"() {
    init_Enum();
    init_Utility();
    init_Tokenizer();
  }
});

// node_modules/stylis/src/Prefixer.js
var init_Prefixer = __esm({
  "node_modules/stylis/src/Prefixer.js"() {
    init_Enum();
    init_Utility();
  }
});

// node_modules/stylis/src/Serializer.js
function serialize(children2, callback) {
  var output = "";
  var length2 = sizeof(children2);
  for (var i = 0; i < length2; i++)
    output += callback(children2[i], i, children2, callback) || "";
  return output;
}
function stringify(element, index2, children2, callback) {
  switch (element.type) {
    case LAYER:
      if (element.children.length)
        break;
    case IMPORT:
    case DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return element.return = element.value + "{" + serialize(element.children, callback) + "}";
    case RULESET:
      element.value = element.props.join(",");
  }
  return strlen(children2 = serialize(element.children, callback)) ? element.return = element.value + "{" + children2 + "}" : "";
}
var init_Serializer = __esm({
  "node_modules/stylis/src/Serializer.js"() {
    init_Enum();
    init_Utility();
  }
});

// node_modules/stylis/src/Middleware.js
function middleware(collection) {
  var length2 = sizeof(collection);
  return function(element, index2, children2, callback) {
    var output = "";
    for (var i = 0; i < length2; i++)
      output += collection[i](element, index2, children2, callback) || "";
    return output;
  };
}
var init_Middleware = __esm({
  "node_modules/stylis/src/Middleware.js"() {
    init_Enum();
    init_Utility();
    init_Tokenizer();
    init_Serializer();
    init_Prefixer();
  }
});

// node_modules/stylis/index.js
var init_stylis = __esm({
  "node_modules/stylis/index.js"() {
    init_Enum();
    init_Utility();
    init_Parser();
    init_Prefixer();
    init_Tokenizer();
    init_Serializer();
    init_Middleware();
  }
});

// node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js
var weakMemoize;
var init_emotion_weak_memoize_esm = __esm({
  "node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js"() {
    weakMemoize = function weakMemoize2(func) {
      var cache2 = /* @__PURE__ */ new WeakMap();
      return function(arg) {
        if (cache2.has(arg)) {
          return cache2.get(arg);
        }
        var ret = func(arg);
        cache2.set(arg, ret);
        return ret;
      };
    };
  }
});

// node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js
function prefix2(value, length2) {
  switch (hash(value, length2)) {
    case 5103:
      return WEBKIT + "print-" + value + value;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + value + value;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + value + MOZ + value + MS + value + value;
    case 6828:
    case 4268:
      return WEBKIT + value + MS + value + value;
    case 6165:
      return WEBKIT + value + MS + "flex-" + value + value;
    case 5187:
      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + value;
    case 5443:
      return WEBKIT + value + MS + "flex-item-" + replace(value, /flex-|-self/, "") + value;
    case 4675:
      return WEBKIT + value + MS + "flex-line-pack" + replace(value, /align-content|flex-|-self/, "") + value;
    case 5548:
      return WEBKIT + value + MS + replace(value, "shrink", "negative") + value;
    case 5292:
      return WEBKIT + value + MS + replace(value, "basis", "preferred-size") + value;
    case 6060:
      return WEBKIT + "box-" + replace(value, "-grow", "") + WEBKIT + value + MS + replace(value, "grow", "positive") + value;
    case 4554:
      return WEBKIT + replace(value, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + value;
    case 6187:
      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), value, "") + value;
    case 5495:
    case 3959:
      return replace(value, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + value + value;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(value, /(.+)-inline(.+)/, WEBKIT + "$1$2") + value;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(value) - 1 - length2 > 6)
        switch (charat(value, length2 + 1)) {
          case 109:
            if (charat(value, length2 + 4) !== 45)
              break;
          case 102:
            return replace(value, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(value, length2 + 3) == 108 ? "$3" : "$2-$3")) + value;
          case 115:
            return ~indexof(value, "stretch") ? prefix2(replace(value, "stretch", "fill-available"), length2) + value : value;
        }
      break;
    case 4949:
      if (charat(value, length2 + 1) !== 115)
        break;
    case 6444:
      switch (charat(value, strlen(value) - 3 - (~indexof(value, "!important") && 10))) {
        case 107:
          return replace(value, ":", ":" + WEBKIT) + value;
        case 101:
          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(value, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + value;
      }
      break;
    case 5936:
      switch (charat(value, length2 + 11)) {
        case 114:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb") + value;
        case 108:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb-rl") + value;
        case 45:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "lr") + value;
      }
      return WEBKIT + value + MS + value + value;
  }
  return value;
}
var identifierWithPointTracking, toRules, getRules, fixedElements, compat, removeLabel, ignoreFlag, isIgnoringComment, createUnsafeSelectorsAlarm, isImportRule, isPrependedWithRegularRules, nullifyElement, incorrectImportAlarm, prefixer, defaultStylisPlugins, createCache;
var init_emotion_cache_browser_esm = __esm({
  "node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js"() {
    init_emotion_sheet_browser_esm();
    init_stylis();
    init_emotion_weak_memoize_esm();
    init_emotion_memoize_esm();
    identifierWithPointTracking = function identifierWithPointTracking2(begin, points, index2) {
      var previous = 0;
      var character2 = 0;
      while (true) {
        previous = character2;
        character2 = peek();
        if (previous === 38 && character2 === 12) {
          points[index2] = 1;
        }
        if (token(character2)) {
          break;
        }
        next();
      }
      return slice(begin, position);
    };
    toRules = function toRules2(parsed, points) {
      var index2 = -1;
      var character2 = 44;
      do {
        switch (token(character2)) {
          case 0:
            if (character2 === 38 && peek() === 12) {
              points[index2] = 1;
            }
            parsed[index2] += identifierWithPointTracking(position - 1, points, index2);
            break;
          case 2:
            parsed[index2] += delimit(character2);
            break;
          case 4:
            if (character2 === 44) {
              parsed[++index2] = peek() === 58 ? "&\f" : "";
              points[index2] = parsed[index2].length;
              break;
            }
          default:
            parsed[index2] += from(character2);
        }
      } while (character2 = next());
      return parsed;
    };
    getRules = function getRules2(value, points) {
      return dealloc(toRules(alloc(value), points));
    };
    fixedElements = /* @__PURE__ */ new WeakMap();
    compat = function compat2(element) {
      if (element.type !== "rule" || !element.parent || // positive .length indicates that this rule contains pseudo
      // negative .length indicates that this rule has been already prefixed
      element.length < 1) {
        return;
      }
      var value = element.value, parent = element.parent;
      var isImplicitRule = element.column === parent.column && element.line === parent.line;
      while (parent.type !== "rule") {
        parent = parent.parent;
        if (!parent)
          return;
      }
      if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) {
        return;
      }
      if (isImplicitRule) {
        return;
      }
      fixedElements.set(element, true);
      var points = [];
      var rules = getRules(value, points);
      var parentRules = parent.props;
      for (var i = 0, k = 0; i < rules.length; i++) {
        for (var j = 0; j < parentRules.length; j++, k++) {
          element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
        }
      }
    };
    removeLabel = function removeLabel2(element) {
      if (element.type === "decl") {
        var value = element.value;
        if (
          // charcode for l
          value.charCodeAt(0) === 108 && // charcode for b
          value.charCodeAt(2) === 98
        ) {
          element["return"] = "";
          element.value = "";
        }
      }
    };
    ignoreFlag = "emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason";
    isIgnoringComment = function isIgnoringComment2(element) {
      return element.type === "comm" && element.children.indexOf(ignoreFlag) > -1;
    };
    createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm2(cache2) {
      return function(element, index2, children2) {
        if (element.type !== "rule" || cache2.compat)
          return;
        var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);
        if (unsafePseudoClasses) {
          var isNested = !!element.parent;
          var commentContainer = isNested ? element.parent.children : (
            // global rule at the root level
            children2
          );
          for (var i = commentContainer.length - 1; i >= 0; i--) {
            var node2 = commentContainer[i];
            if (node2.line < element.line) {
              break;
            }
            if (node2.column < element.column) {
              if (isIgnoringComment(node2)) {
                return;
              }
              break;
            }
          }
          unsafePseudoClasses.forEach(function(unsafePseudoClass) {
            console.error('The pseudo class "' + unsafePseudoClass + '" is potentially unsafe when doing server-side rendering. Try changing it to "' + unsafePseudoClass.split("-child")[0] + '-of-type".');
          });
        }
      };
    };
    isImportRule = function isImportRule2(element) {
      return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
    };
    isPrependedWithRegularRules = function isPrependedWithRegularRules2(index2, children2) {
      for (var i = index2 - 1; i >= 0; i--) {
        if (!isImportRule(children2[i])) {
          return true;
        }
      }
      return false;
    };
    nullifyElement = function nullifyElement2(element) {
      element.type = "";
      element.value = "";
      element["return"] = "";
      element.children = "";
      element.props = "";
    };
    incorrectImportAlarm = function incorrectImportAlarm2(element, index2, children2) {
      if (!isImportRule(element)) {
        return;
      }
      if (element.parent) {
        console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
        nullifyElement(element);
      } else if (isPrependedWithRegularRules(index2, children2)) {
        console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
        nullifyElement(element);
      }
    };
    prefixer = function prefixer2(element, index2, children2, callback) {
      if (element.length > -1) {
        if (!element["return"])
          switch (element.type) {
            case DECLARATION:
              element["return"] = prefix2(element.value, element.length);
              break;
            case KEYFRAMES:
              return serialize([copy(element, {
                value: replace(element.value, "@", "@" + WEBKIT)
              })], callback);
            case RULESET:
              if (element.length)
                return combine(element.props, function(value) {
                  switch (match(value, /(::plac\w+|:read-\w+)/)) {
                    case ":read-only":
                    case ":read-write":
                      return serialize([copy(element, {
                        props: [replace(value, /:(read-\w+)/, ":" + MOZ + "$1")]
                      })], callback);
                    case "::placeholder":
                      return serialize([copy(element, {
                        props: [replace(value, /:(plac\w+)/, ":" + WEBKIT + "input-$1")]
                      }), copy(element, {
                        props: [replace(value, /:(plac\w+)/, ":" + MOZ + "$1")]
                      }), copy(element, {
                        props: [replace(value, /:(plac\w+)/, MS + "input-$1")]
                      })], callback);
                  }
                  return "";
                });
          }
      }
    };
    defaultStylisPlugins = [prefixer];
    createCache = function createCache2(options) {
      var key = options.key;
      if (!key) {
        throw new Error("You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\nIf multiple caches share the same key they might \"fight\" for each other's style elements.");
      }
      if (key === "css") {
        var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])");
        Array.prototype.forEach.call(ssrStyles, function(node2) {
          var dataEmotionAttribute = node2.getAttribute("data-emotion");
          if (dataEmotionAttribute.indexOf(" ") === -1) {
            return;
          }
          document.head.appendChild(node2);
          node2.setAttribute("data-s", "");
        });
      }
      var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
      if (true) {
        if (/[^a-z-]/.test(key)) {
          throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + key + '" was passed');
        }
      }
      var inserted = {};
      var container;
      var nodesToHydrate = [];
      {
        container = options.container || document.head;
        Array.prototype.forEach.call(
          // this means we will ignore elements which don't have a space in them which
          // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
          document.querySelectorAll('style[data-emotion^="' + key + ' "]'),
          function(node2) {
            var attrib = node2.getAttribute("data-emotion").split(" ");
            for (var i = 1; i < attrib.length; i++) {
              inserted[attrib[i]] = true;
            }
            nodesToHydrate.push(node2);
          }
        );
      }
      var _insert;
      var omnipresentPlugins = [compat, removeLabel];
      if (true) {
        omnipresentPlugins.push(createUnsafeSelectorsAlarm({
          get compat() {
            return cache2.compat;
          }
        }), incorrectImportAlarm);
      }
      {
        var currentSheet;
        var finalizingPlugins = [stringify, true ? function(element) {
          if (!element.root) {
            if (element["return"]) {
              currentSheet.insert(element["return"]);
            } else if (element.value && element.type !== COMMENT) {
              currentSheet.insert(element.value + "{}");
            }
          }
        } : rulesheet(function(rule) {
          currentSheet.insert(rule);
        })];
        var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
        var stylis = function stylis2(styles7) {
          return serialize(compile(styles7), serializer);
        };
        _insert = function insert(selector, serialized, sheet, shouldCache) {
          currentSheet = sheet;
          if (serialized.map !== void 0) {
            currentSheet = {
              insert: function insert2(rule) {
                sheet.insert(rule + serialized.map);
              }
            };
          }
          stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
          if (shouldCache) {
            cache2.inserted[serialized.name] = true;
          }
        };
      }
      var cache2 = {
        key,
        sheet: new StyleSheet({
          key,
          container,
          nonce: options.nonce,
          speedy: options.speedy,
          prepend: options.prepend,
          insertionPoint: options.insertionPoint
        }),
        nonce: options.nonce,
        inserted,
        registered: {},
        insert: _insert
      };
      cache2.sheet.hydrate(nodesToHydrate);
      return cache2;
    };
  }
});

// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
    "use strict";
    var reactIs = require_react_is();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var MEMO_STATICS = {
      "$$typeof": true,
      compare: true,
      defaultProps: true,
      displayName: true,
      propTypes: true,
      type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
      if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
      }
      return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
    }
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor2 = Object.getOwnPropertyDescriptor;
    var getPrototypeOf2 = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics2(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
          var inheritedComponent = getPrototypeOf2(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype) {
            hoistNonReactStatics2(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i = 0; i < keys.length; ++i) {
          var key = keys[i];
          if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
            var descriptor = getOwnPropertyDescriptor2(sourceComponent, key);
            try {
              defineProperty(targetComponent, key, descriptor);
            } catch (e) {
            }
          }
        }
      }
      return targetComponent;
    }
    module.exports = hoistNonReactStatics2;
  }
});

// node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js
var import_hoist_non_react_statics;
var init_emotion_react_isolated_hnrs_browser_esm = __esm({
  "node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js"() {
    import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());
  }
});

// node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
function getRegisteredStyles(registered, registeredStyles, classNames) {
  var rawClassName = "";
  classNames.split(" ").forEach(function(className) {
    if (registered[className] !== void 0) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var isBrowser, registerStyles, insertStyles;
var init_emotion_utils_browser_esm = __esm({
  "node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js"() {
    isBrowser = true;
    registerStyles = function registerStyles2(cache2, serialized, isStringTag2) {
      var className = cache2.key + "-" + serialized.name;
      if (
        // we only need to add the styles to the registered cache if the
        // class name could be used further down
        // the tree but if it's a string tag, we know it won't
        // so we don't have to add it to registered cache.
        // this improves memory usage since we can avoid storing the whole style string
        (isStringTag2 === false || // we need to always store it if we're in compat mode and
        // in node since emotion-server relies on whether a style is in
        // the registered cache to know whether a style is global or not
        // also, note that this check will be dead code eliminated in the browser
        isBrowser === false) && cache2.registered[className] === void 0
      ) {
        cache2.registered[className] = serialized.styles;
      }
    };
    insertStyles = function insertStyles2(cache2, serialized, isStringTag2) {
      registerStyles(cache2, serialized, isStringTag2);
      var className = cache2.key + "-" + serialized.name;
      if (cache2.inserted[serialized.name] === void 0) {
        var current = serialized;
        do {
          cache2.insert(serialized === current ? "." + className : "", current, cache2.sheet, true);
          current = current.next;
        } while (current !== void 0);
      }
    };
  }
});

// node_modules/@emotion/hash/dist/emotion-hash.esm.js
function murmur2(str) {
  var h = 0;
  var k, i = 0, len = str.length;
  for (; len >= 4; ++i, len -= 4) {
    k = str.charCodeAt(i) & 255 | (str.charCodeAt(++i) & 255) << 8 | (str.charCodeAt(++i) & 255) << 16 | (str.charCodeAt(++i) & 255) << 24;
    k = /* Math.imul(k, m): */
    (k & 65535) * 1540483477 + ((k >>> 16) * 59797 << 16);
    k ^= /* k >>> r: */
    k >>> 24;
    h = /* Math.imul(k, m): */
    (k & 65535) * 1540483477 + ((k >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  }
  switch (len) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 255) << 16;
    case 2:
      h ^= (str.charCodeAt(i + 1) & 255) << 8;
    case 1:
      h ^= str.charCodeAt(i) & 255;
      h = /* Math.imul(h, m): */
      (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  }
  h ^= h >>> 13;
  h = /* Math.imul(h, m): */
  (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  return ((h ^ h >>> 15) >>> 0).toString(36);
}
var init_emotion_hash_esm = __esm({
  "node_modules/@emotion/hash/dist/emotion-hash.esm.js"() {
  }
});

// node_modules/@emotion/unitless/dist/emotion-unitless.esm.js
var unitlessKeys;
var init_emotion_unitless_esm = __esm({
  "node_modules/@emotion/unitless/dist/emotion-unitless.esm.js"() {
    unitlessKeys = {
      animationIterationCount: 1,
      aspectRatio: 1,
      borderImageOutset: 1,
      borderImageSlice: 1,
      borderImageWidth: 1,
      boxFlex: 1,
      boxFlexGroup: 1,
      boxOrdinalGroup: 1,
      columnCount: 1,
      columns: 1,
      flex: 1,
      flexGrow: 1,
      flexPositive: 1,
      flexShrink: 1,
      flexNegative: 1,
      flexOrder: 1,
      gridRow: 1,
      gridRowEnd: 1,
      gridRowSpan: 1,
      gridRowStart: 1,
      gridColumn: 1,
      gridColumnEnd: 1,
      gridColumnSpan: 1,
      gridColumnStart: 1,
      msGridRow: 1,
      msGridRowSpan: 1,
      msGridColumn: 1,
      msGridColumnSpan: 1,
      fontWeight: 1,
      lineHeight: 1,
      opacity: 1,
      order: 1,
      orphans: 1,
      tabSize: 1,
      widows: 1,
      zIndex: 1,
      zoom: 1,
      WebkitLineClamp: 1,
      // SVG-related properties
      fillOpacity: 1,
      floodOpacity: 1,
      stopOpacity: 1,
      strokeDasharray: 1,
      strokeDashoffset: 1,
      strokeMiterlimit: 1,
      strokeOpacity: 1,
      strokeWidth: 1
    };
  }
});

// node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js
function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return "";
  }
  if (interpolation.__emotion_styles !== void 0) {
    if (interpolation.toString() === "NO_COMPONENT_SELECTOR") {
      throw new Error(noComponentSelectorMessage);
    }
    return interpolation;
  }
  switch (typeof interpolation) {
    case "boolean": {
      return "";
    }
    case "object": {
      if (interpolation.anim === 1) {
        cursor = {
          name: interpolation.name,
          styles: interpolation.styles,
          next: cursor
        };
        return interpolation.name;
      }
      if (interpolation.styles !== void 0) {
        var next2 = interpolation.next;
        if (next2 !== void 0) {
          while (next2 !== void 0) {
            cursor = {
              name: next2.name,
              styles: next2.styles,
              next: cursor
            };
            next2 = next2.next;
          }
        }
        var styles7 = interpolation.styles + ";";
        if (interpolation.map !== void 0) {
          styles7 += interpolation.map;
        }
        return styles7;
      }
      return createStringFromObject(mergedProps, registered, interpolation);
    }
    case "function": {
      if (mergedProps !== void 0) {
        var previousCursor = cursor;
        var result = interpolation(mergedProps);
        cursor = previousCursor;
        return handleInterpolation(mergedProps, registered, result);
      } else if (true) {
        console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");
      }
      break;
    }
    case "string":
      if (true) {
        var matched = [];
        var replaced = interpolation.replace(animationRegex, function(match2, p1, p2) {
          var fakeVarName = "animation" + matched.length;
          matched.push("const " + fakeVarName + " = keyframes`" + p2.replace(/^@keyframes animation-\w+/, "") + "`");
          return "${" + fakeVarName + "}";
        });
        if (matched.length) {
          console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n" + [].concat(matched, ["`" + replaced + "`"]).join("\n") + "\n\nYou should wrap it with `css` like this:\n\n" + ("css`" + replaced + "`"));
        }
      }
      break;
  }
  if (registered == null) {
    return interpolation;
  }
  var cached = registered[interpolation];
  return cached !== void 0 ? cached : interpolation;
}
function createStringFromObject(mergedProps, registered, obj) {
  var string = "";
  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];
      if (typeof value !== "object") {
        if (registered != null && registered[value] !== void 0) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === "NO_COMPONENT_SELECTOR" && true) {
          throw new Error(noComponentSelectorMessage);
        }
        if (Array.isArray(value) && typeof value[0] === "string" && (registered == null || registered[value[0]] === void 0)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);
          switch (_key) {
            case "animation":
            case "animationName": {
              string += processStyleName(_key) + ":" + interpolated + ";";
              break;
            }
            default: {
              if (_key === "undefined") {
                console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
              }
              string += _key + "{" + interpolated + "}";
            }
          }
        }
      }
    }
  }
  return string;
}
var ILLEGAL_ESCAPE_SEQUENCE_ERROR, UNDEFINED_AS_OBJECT_KEY_ERROR, hyphenateRegex, animationRegex, isCustomProperty, isProcessableValue, processStyleName, processStyleValue, contentValuePattern, contentValues, oldProcessStyleValue, msPattern, hyphenPattern, hyphenatedCache, noComponentSelectorMessage, labelPattern, sourceMapPattern, cursor, serializeStyles;
var init_emotion_serialize_browser_esm = __esm({
  "node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js"() {
    init_emotion_hash_esm();
    init_emotion_unitless_esm();
    init_emotion_memoize_esm();
    ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`;
    UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
    hyphenateRegex = /[A-Z]|^ms/g;
    animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
    isCustomProperty = function isCustomProperty2(property) {
      return property.charCodeAt(1) === 45;
    };
    isProcessableValue = function isProcessableValue2(value) {
      return value != null && typeof value !== "boolean";
    };
    processStyleName = memoize(function(styleName) {
      return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, "-$&").toLowerCase();
    });
    processStyleValue = function processStyleValue2(key, value) {
      switch (key) {
        case "animation":
        case "animationName": {
          if (typeof value === "string") {
            return value.replace(animationRegex, function(match2, p1, p2) {
              cursor = {
                name: p1,
                styles: p2,
                next: cursor
              };
              return p1;
            });
          }
        }
      }
      if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === "number" && value !== 0) {
        return value + "px";
      }
      return value;
    };
    if (true) {
      contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/;
      contentValues = ["normal", "none", "initial", "inherit", "unset"];
      oldProcessStyleValue = processStyleValue;
      msPattern = /^-ms-/;
      hyphenPattern = /-(.)/g;
      hyphenatedCache = {};
      processStyleValue = function processStyleValue3(key, value) {
        if (key === "content") {
          if (typeof value !== "string" || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
            throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
          }
        }
        var processed = oldProcessStyleValue(key, value);
        if (processed !== "" && !isCustomProperty(key) && key.indexOf("-") !== -1 && hyphenatedCache[key] === void 0) {
          hyphenatedCache[key] = true;
          console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, "ms-").replace(hyphenPattern, function(str, _char) {
            return _char.toUpperCase();
          }) + "?");
        }
        return processed;
      };
    }
    noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
    labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
    if (true) {
      sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g;
    }
    serializeStyles = function serializeStyles2(args, registered, mergedProps) {
      if (args.length === 1 && typeof args[0] === "object" && args[0] !== null && args[0].styles !== void 0) {
        return args[0];
      }
      var stringMode = true;
      var styles7 = "";
      cursor = void 0;
      var strings = args[0];
      if (strings == null || strings.raw === void 0) {
        stringMode = false;
        styles7 += handleInterpolation(mergedProps, registered, strings);
      } else {
        if (strings[0] === void 0) {
          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
        }
        styles7 += strings[0];
      }
      for (var i = 1; i < args.length; i++) {
        styles7 += handleInterpolation(mergedProps, registered, args[i]);
        if (stringMode) {
          if (strings[i] === void 0) {
            console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
          }
          styles7 += strings[i];
        }
      }
      var sourceMap;
      if (true) {
        styles7 = styles7.replace(sourceMapPattern, function(match3) {
          sourceMap = match3;
          return "";
        });
      }
      labelPattern.lastIndex = 0;
      var identifierName = "";
      var match2;
      while ((match2 = labelPattern.exec(styles7)) !== null) {
        identifierName += "-" + // $FlowFixMe we know it's not null
        match2[1];
      }
      var name = murmur2(styles7) + identifierName;
      if (true) {
        return {
          name,
          styles: styles7,
          map: sourceMap,
          next: cursor,
          toString: function toString() {
            return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
          }
        };
      }
      return {
        name,
        styles: styles7,
        next: cursor
      };
    };
  }
});

// node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js
var React9, syncFallback, useInsertionEffect2, useInsertionEffectAlwaysWithSyncFallback, useInsertionEffectWithLayoutFallback;
var init_emotion_use_insertion_effect_with_fallbacks_browser_esm = __esm({
  "node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js"() {
    React9 = __toESM(require_react());
    syncFallback = function syncFallback2(create2) {
      return create2();
    };
    useInsertionEffect2 = React9["useInsertionEffect"] ? React9["useInsertionEffect"] : false;
    useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect2 || syncFallback;
    useInsertionEffectWithLayoutFallback = useInsertionEffect2 || React9.useLayoutEffect;
  }
});

// node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js
var React10, import_react, isBrowser2, hasOwnProperty, EmotionCacheContext, CacheProvider, withEmotionCache, ThemeContext, getTheme, createCacheWithTheme, typePropName, labelPropName, Insertion, Emotion;
var init_emotion_element_c39617d8_browser_esm = __esm({
  "node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js"() {
    React10 = __toESM(require_react());
    import_react = __toESM(require_react());
    init_emotion_cache_browser_esm();
    init_extends();
    init_emotion_weak_memoize_esm();
    init_emotion_react_isolated_hnrs_browser_esm();
    init_emotion_utils_browser_esm();
    init_emotion_serialize_browser_esm();
    init_emotion_use_insertion_effect_with_fallbacks_browser_esm();
    isBrowser2 = true;
    hasOwnProperty = {}.hasOwnProperty;
    EmotionCacheContext = React10.createContext(
      // we're doing this to avoid preconstruct's dead code elimination in this one case
      // because this module is primarily intended for the browser and node
      // but it's also required in react native and similar environments sometimes
      // and we could have a special build just for that
      // but this is much easier and the native packages
      // might use a different theme context in the future anyway
      typeof HTMLElement !== "undefined" ? createCache({
        key: "css"
      }) : null
    );
    if (true) {
      EmotionCacheContext.displayName = "EmotionCacheContext";
    }
    CacheProvider = EmotionCacheContext.Provider;
    withEmotionCache = function withEmotionCache2(func) {
      return (0, import_react.forwardRef)(function(props, ref) {
        var cache2 = (0, import_react.useContext)(EmotionCacheContext);
        return func(props, cache2, ref);
      });
    };
    if (!isBrowser2) {
      withEmotionCache = function withEmotionCache3(func) {
        return function(props) {
          var cache2 = (0, import_react.useContext)(EmotionCacheContext);
          if (cache2 === null) {
            cache2 = createCache({
              key: "css"
            });
            return React10.createElement(EmotionCacheContext.Provider, {
              value: cache2
            }, func(props, cache2));
          } else {
            return func(props, cache2);
          }
        };
      };
    }
    ThemeContext = React10.createContext({});
    if (true) {
      ThemeContext.displayName = "EmotionThemeContext";
    }
    getTheme = function getTheme2(outerTheme, theme) {
      if (typeof theme === "function") {
        var mergedTheme = theme(outerTheme);
        if (mergedTheme == null || typeof mergedTheme !== "object" || Array.isArray(mergedTheme)) {
          throw new Error("[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!");
        }
        return mergedTheme;
      }
      if (theme == null || typeof theme !== "object" || Array.isArray(theme)) {
        throw new Error("[ThemeProvider] Please make your theme prop a plain object");
      }
      return _extends({}, outerTheme, theme);
    };
    createCacheWithTheme = weakMemoize(function(outerTheme) {
      return weakMemoize(function(theme) {
        return getTheme(outerTheme, theme);
      });
    });
    typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__";
    labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__";
    Insertion = function Insertion2(_ref2) {
      var cache2 = _ref2.cache, serialized = _ref2.serialized, isStringTag2 = _ref2.isStringTag;
      registerStyles(cache2, serialized, isStringTag2);
      useInsertionEffectAlwaysWithSyncFallback(function() {
        return insertStyles(cache2, serialized, isStringTag2);
      });
      return null;
    };
    Emotion = withEmotionCache(function(props, cache2, ref) {
      var cssProp = props.css;
      if (typeof cssProp === "string" && cache2.registered[cssProp] !== void 0) {
        cssProp = cache2.registered[cssProp];
      }
      var WrappedComponent = props[typePropName];
      var registeredStyles = [cssProp];
      var className = "";
      if (typeof props.className === "string") {
        className = getRegisteredStyles(cache2.registered, registeredStyles, props.className);
      } else if (props.className != null) {
        className = props.className + " ";
      }
      var serialized = serializeStyles(registeredStyles, void 0, React10.useContext(ThemeContext));
      if (serialized.name.indexOf("-") === -1) {
        var labelFromStack = props[labelPropName];
        if (labelFromStack) {
          serialized = serializeStyles([serialized, "label:" + labelFromStack + ";"]);
        }
      }
      className += cache2.key + "-" + serialized.name;
      var newProps = {};
      for (var key in props) {
        if (hasOwnProperty.call(props, key) && key !== "css" && key !== typePropName && key !== labelPropName) {
          newProps[key] = props[key];
        }
      }
      newProps.ref = ref;
      newProps.className = className;
      return React10.createElement(React10.Fragment, null, React10.createElement(Insertion, {
        cache: cache2,
        serialized,
        isStringTag: typeof WrappedComponent === "string"
      }), React10.createElement(WrappedComponent, newProps));
    });
    if (true) {
      Emotion.displayName = "EmotionCssPropInternal";
    }
  }
});

// node_modules/@emotion/react/dist/emotion-react.browser.esm.js
function css() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return serializeStyles(args);
}
function merge(registered, css2, className) {
  var registeredStyles = [];
  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);
  if (registeredStyles.length < 2) {
    return className;
  }
  return rawClassName + css2(registeredStyles);
}
var React11, import_hoist_non_react_statics2, pkg, warnedAboutCssPropForGlobal, Global, keyframes, classnames, Insertion3, ClassNames, isBrowser3, isTestEnv, globalContext, globalKey;
var init_emotion_react_browser_esm = __esm({
  "node_modules/@emotion/react/dist/emotion-react.browser.esm.js"() {
    init_emotion_element_c39617d8_browser_esm();
    init_emotion_element_c39617d8_browser_esm();
    React11 = __toESM(require_react());
    init_emotion_utils_browser_esm();
    init_emotion_use_insertion_effect_with_fallbacks_browser_esm();
    init_emotion_serialize_browser_esm();
    init_emotion_cache_browser_esm();
    init_extends();
    init_emotion_weak_memoize_esm();
    init_emotion_react_isolated_hnrs_browser_esm();
    import_hoist_non_react_statics2 = __toESM(require_hoist_non_react_statics_cjs());
    pkg = {
      name: "@emotion/react",
      version: "11.11.1",
      main: "dist/emotion-react.cjs.js",
      module: "dist/emotion-react.esm.js",
      browser: {
        "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
      },
      exports: {
        ".": {
          module: {
            worker: "./dist/emotion-react.worker.esm.js",
            browser: "./dist/emotion-react.browser.esm.js",
            "default": "./dist/emotion-react.esm.js"
          },
          "import": "./dist/emotion-react.cjs.mjs",
          "default": "./dist/emotion-react.cjs.js"
        },
        "./jsx-runtime": {
          module: {
            worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
            browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
            "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
          },
          "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs",
          "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
        },
        "./_isolated-hnrs": {
          module: {
            worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
            browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
            "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
          },
          "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs",
          "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
        },
        "./jsx-dev-runtime": {
          module: {
            worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
            browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
            "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
          },
          "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs",
          "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
        },
        "./package.json": "./package.json",
        "./types/css-prop": "./types/css-prop.d.ts",
        "./macro": {
          types: {
            "import": "./macro.d.mts",
            "default": "./macro.d.ts"
          },
          "default": "./macro.js"
        }
      },
      types: "types/index.d.ts",
      files: [
        "src",
        "dist",
        "jsx-runtime",
        "jsx-dev-runtime",
        "_isolated-hnrs",
        "types/*.d.ts",
        "macro.*"
      ],
      sideEffects: false,
      author: "Emotion Contributors",
      license: "MIT",
      scripts: {
        "test:typescript": "dtslint types"
      },
      dependencies: {
        "@babel/runtime": "^7.18.3",
        "@emotion/babel-plugin": "^11.11.0",
        "@emotion/cache": "^11.11.0",
        "@emotion/serialize": "^1.1.2",
        "@emotion/use-insertion-effect-with-fallbacks": "^1.0.1",
        "@emotion/utils": "^1.2.1",
        "@emotion/weak-memoize": "^0.3.1",
        "hoist-non-react-statics": "^3.3.1"
      },
      peerDependencies: {
        react: ">=16.8.0"
      },
      peerDependenciesMeta: {
        "@types/react": {
          optional: true
        }
      },
      devDependencies: {
        "@definitelytyped/dtslint": "0.0.112",
        "@emotion/css": "11.11.0",
        "@emotion/css-prettifier": "1.1.3",
        "@emotion/server": "11.11.0",
        "@emotion/styled": "11.11.0",
        "html-tag-names": "^1.1.2",
        react: "16.14.0",
        "svg-tag-names": "^1.1.1",
        typescript: "^4.5.5"
      },
      repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
      publishConfig: {
        access: "public"
      },
      "umd:main": "dist/emotion-react.umd.min.js",
      preconstruct: {
        entrypoints: [
          "./index.js",
          "./jsx-runtime.js",
          "./jsx-dev-runtime.js",
          "./_isolated-hnrs.js"
        ],
        umdName: "emotionReact",
        exports: {
          envConditions: [
            "browser",
            "worker"
          ],
          extra: {
            "./types/css-prop": "./types/css-prop.d.ts",
            "./macro": {
              types: {
                "import": "./macro.d.mts",
                "default": "./macro.d.ts"
              },
              "default": "./macro.js"
            }
          }
        }
      }
    };
    warnedAboutCssPropForGlobal = false;
    Global = withEmotionCache(function(props, cache2) {
      if (!warnedAboutCssPropForGlobal && // check for className as well since the user is
      // probably using the custom createElement which
      // means it will be turned into a className prop
      // $FlowFixMe I don't really want to add it to the type since it shouldn't be used
      (props.className || props.css)) {
        console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?");
        warnedAboutCssPropForGlobal = true;
      }
      var styles7 = props.styles;
      var serialized = serializeStyles([styles7], void 0, React11.useContext(ThemeContext));
      if (!isBrowser2) {
        var _ref2;
        var serializedNames = serialized.name;
        var serializedStyles = serialized.styles;
        var next2 = serialized.next;
        while (next2 !== void 0) {
          serializedNames += " " + next2.name;
          serializedStyles += next2.styles;
          next2 = next2.next;
        }
        var shouldCache = cache2.compat === true;
        var rules = cache2.insert("", {
          name: serializedNames,
          styles: serializedStyles
        }, cache2.sheet, shouldCache);
        if (shouldCache) {
          return null;
        }
        return React11.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache2.key + "-global " + serializedNames, _ref2.dangerouslySetInnerHTML = {
          __html: rules
        }, _ref2.nonce = cache2.sheet.nonce, _ref2));
      }
      var sheetRef = React11.useRef();
      useInsertionEffectWithLayoutFallback(function() {
        var key = cache2.key + "-global";
        var sheet = new cache2.sheet.constructor({
          key,
          nonce: cache2.sheet.nonce,
          container: cache2.sheet.container,
          speedy: cache2.sheet.isSpeedy
        });
        var rehydrating = false;
        var node2 = document.querySelector('style[data-emotion="' + key + " " + serialized.name + '"]');
        if (cache2.sheet.tags.length) {
          sheet.before = cache2.sheet.tags[0];
        }
        if (node2 !== null) {
          rehydrating = true;
          node2.setAttribute("data-emotion", key);
          sheet.hydrate([node2]);
        }
        sheetRef.current = [sheet, rehydrating];
        return function() {
          sheet.flush();
        };
      }, [cache2]);
      useInsertionEffectWithLayoutFallback(function() {
        var sheetRefCurrent = sheetRef.current;
        var sheet = sheetRefCurrent[0], rehydrating = sheetRefCurrent[1];
        if (rehydrating) {
          sheetRefCurrent[1] = false;
          return;
        }
        if (serialized.next !== void 0) {
          insertStyles(cache2, serialized.next, true);
        }
        if (sheet.tags.length) {
          var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
          sheet.before = element;
          sheet.flush();
        }
        cache2.insert("", serialized, sheet, false);
      }, [cache2, serialized.name]);
      return null;
    });
    if (true) {
      Global.displayName = "EmotionGlobal";
    }
    keyframes = function keyframes2() {
      var insertable = css.apply(void 0, arguments);
      var name = "animation-" + insertable.name;
      return {
        name,
        styles: "@keyframes " + name + "{" + insertable.styles + "}",
        anim: 1,
        toString: function toString() {
          return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
        }
      };
    };
    classnames = function classnames2(args) {
      var len = args.length;
      var i = 0;
      var cls = "";
      for (; i < len; i++) {
        var arg = args[i];
        if (arg == null)
          continue;
        var toAdd = void 0;
        switch (typeof arg) {
          case "boolean":
            break;
          case "object": {
            if (Array.isArray(arg)) {
              toAdd = classnames2(arg);
            } else {
              if (arg.styles !== void 0 && arg.name !== void 0) {
                console.error("You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.");
              }
              toAdd = "";
              for (var k in arg) {
                if (arg[k] && k) {
                  toAdd && (toAdd += " ");
                  toAdd += k;
                }
              }
            }
            break;
          }
          default: {
            toAdd = arg;
          }
        }
        if (toAdd) {
          cls && (cls += " ");
          cls += toAdd;
        }
      }
      return cls;
    };
    Insertion3 = function Insertion4(_ref2) {
      var cache2 = _ref2.cache, serializedArr = _ref2.serializedArr;
      useInsertionEffectAlwaysWithSyncFallback(function() {
        for (var i = 0; i < serializedArr.length; i++) {
          insertStyles(cache2, serializedArr[i], false);
        }
      });
      return null;
    };
    ClassNames = withEmotionCache(function(props, cache2) {
      var hasRendered = false;
      var serializedArr = [];
      var css2 = function css3() {
        if (hasRendered && true) {
          throw new Error("css can only be used during render");
        }
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        var serialized = serializeStyles(args, cache2.registered);
        serializedArr.push(serialized);
        registerStyles(cache2, serialized, false);
        return cache2.key + "-" + serialized.name;
      };
      var cx = function cx2() {
        if (hasRendered && true) {
          throw new Error("cx can only be used during render");
        }
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        return merge(cache2.registered, css2, classnames(args));
      };
      var content = {
        css: css2,
        cx,
        theme: React11.useContext(ThemeContext)
      };
      var ele = props.children(content);
      hasRendered = true;
      return React11.createElement(React11.Fragment, null, React11.createElement(Insertion3, {
        cache: cache2,
        serializedArr
      }), ele);
    });
    if (true) {
      ClassNames.displayName = "EmotionClassNames";
    }
    if (true) {
      isBrowser3 = true;
      isTestEnv = typeof jest !== "undefined" || typeof vi !== "undefined";
      if (isBrowser3 && !isTestEnv) {
        globalContext = // $FlowIgnore
        typeof globalThis !== "undefined" ? globalThis : isBrowser3 ? window : global;
        globalKey = "__EMOTION_REACT_" + pkg.version.split(".")[0] + "__";
        if (globalContext[globalKey]) {
          console.warn("You are loading @emotion/react when it is already loaded. Running multiple instances may cause problems. This can happen if multiple versions are used, or if multiple builds of the same version are used.");
        }
        globalContext[globalKey] = true;
      }
    }
  }
});

// node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js
var React12, testOmitPropsOnStringTag, testOmitPropsOnComponent, getDefaultShouldForwardProp, composeShouldForwardProps, ILLEGAL_ESCAPE_SEQUENCE_ERROR2, Insertion5, createStyled;
var init_emotion_styled_base_browser_esm = __esm({
  "node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js"() {
    init_extends();
    React12 = __toESM(require_react());
    init_emotion_is_prop_valid_esm();
    init_emotion_react_browser_esm();
    init_emotion_utils_browser_esm();
    init_emotion_serialize_browser_esm();
    init_emotion_use_insertion_effect_with_fallbacks_browser_esm();
    testOmitPropsOnStringTag = isPropValid;
    testOmitPropsOnComponent = function testOmitPropsOnComponent2(key) {
      return key !== "theme";
    };
    getDefaultShouldForwardProp = function getDefaultShouldForwardProp2(tag) {
      return typeof tag === "string" && // 96 is one less than the char code
      // for "a" so this is checking that
      // it's a lowercase character
      tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
    };
    composeShouldForwardProps = function composeShouldForwardProps2(tag, options, isReal) {
      var shouldForwardProp2;
      if (options) {
        var optionsShouldForwardProp = options.shouldForwardProp;
        shouldForwardProp2 = tag.__emotion_forwardProp && optionsShouldForwardProp ? function(propName) {
          return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
        } : optionsShouldForwardProp;
      }
      if (typeof shouldForwardProp2 !== "function" && isReal) {
        shouldForwardProp2 = tag.__emotion_forwardProp;
      }
      return shouldForwardProp2;
    };
    ILLEGAL_ESCAPE_SEQUENCE_ERROR2 = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`;
    Insertion5 = function Insertion6(_ref2) {
      var cache2 = _ref2.cache, serialized = _ref2.serialized, isStringTag2 = _ref2.isStringTag;
      registerStyles(cache2, serialized, isStringTag2);
      useInsertionEffectAlwaysWithSyncFallback(function() {
        return insertStyles(cache2, serialized, isStringTag2);
      });
      return null;
    };
    createStyled = function createStyled2(tag, options) {
      if (true) {
        if (tag === void 0) {
          throw new Error("You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.");
        }
      }
      var isReal = tag.__emotion_real === tag;
      var baseTag = isReal && tag.__emotion_base || tag;
      var identifierName;
      var targetClassName;
      if (options !== void 0) {
        identifierName = options.label;
        targetClassName = options.target;
      }
      var shouldForwardProp2 = composeShouldForwardProps(tag, options, isReal);
      var defaultShouldForwardProp = shouldForwardProp2 || getDefaultShouldForwardProp(baseTag);
      var shouldUseAs = !defaultShouldForwardProp("as");
      return function() {
        var args = arguments;
        var styles7 = isReal && tag.__emotion_styles !== void 0 ? tag.__emotion_styles.slice(0) : [];
        if (identifierName !== void 0) {
          styles7.push("label:" + identifierName + ";");
        }
        if (args[0] == null || args[0].raw === void 0) {
          styles7.push.apply(styles7, args);
        } else {
          if (args[0][0] === void 0) {
            console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR2);
          }
          styles7.push(args[0][0]);
          var len = args.length;
          var i = 1;
          for (; i < len; i++) {
            if (args[0][i] === void 0) {
              console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR2);
            }
            styles7.push(args[i], args[0][i]);
          }
        }
        var Styled = withEmotionCache(function(props, cache2, ref) {
          var FinalTag = shouldUseAs && props.as || baseTag;
          var className = "";
          var classInterpolations = [];
          var mergedProps = props;
          if (props.theme == null) {
            mergedProps = {};
            for (var key in props) {
              mergedProps[key] = props[key];
            }
            mergedProps.theme = React12.useContext(ThemeContext);
          }
          if (typeof props.className === "string") {
            className = getRegisteredStyles(cache2.registered, classInterpolations, props.className);
          } else if (props.className != null) {
            className = props.className + " ";
          }
          var serialized = serializeStyles(styles7.concat(classInterpolations), cache2.registered, mergedProps);
          className += cache2.key + "-" + serialized.name;
          if (targetClassName !== void 0) {
            className += " " + targetClassName;
          }
          var finalShouldForwardProp = shouldUseAs && shouldForwardProp2 === void 0 ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;
          var newProps = {};
          for (var _key in props) {
            if (shouldUseAs && _key === "as")
              continue;
            if (
              // $FlowFixMe
              finalShouldForwardProp(_key)
            ) {
              newProps[_key] = props[_key];
            }
          }
          newProps.className = className;
          newProps.ref = ref;
          return React12.createElement(React12.Fragment, null, React12.createElement(Insertion5, {
            cache: cache2,
            serialized,
            isStringTag: typeof FinalTag === "string"
          }), React12.createElement(FinalTag, newProps));
        });
        Styled.displayName = identifierName !== void 0 ? identifierName : "Styled(" + (typeof baseTag === "string" ? baseTag : baseTag.displayName || baseTag.name || "Component") + ")";
        Styled.defaultProps = tag.defaultProps;
        Styled.__emotion_real = Styled;
        Styled.__emotion_base = baseTag;
        Styled.__emotion_styles = styles7;
        Styled.__emotion_forwardProp = shouldForwardProp2;
        Object.defineProperty(Styled, "toString", {
          value: function value() {
            if (targetClassName === void 0 && true) {
              return "NO_COMPONENT_SELECTOR";
            }
            return "." + targetClassName;
          }
        });
        Styled.withComponent = function(nextTag, nextOptions) {
          return createStyled2(nextTag, _extends({}, options, nextOptions, {
            shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
          })).apply(void 0, styles7);
        };
        return Styled;
      };
    };
  }
});

// node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js
var import_react3, tags, newStyled;
var init_emotion_styled_browser_esm = __esm({
  "node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js"() {
    init_emotion_styled_base_browser_esm();
    init_extends();
    import_react3 = __toESM(require_react());
    init_emotion_is_prop_valid_esm();
    init_emotion_react_browser_esm();
    init_emotion_utils_browser_esm();
    init_emotion_serialize_browser_esm();
    init_emotion_use_insertion_effect_with_fallbacks_browser_esm();
    tags = [
      "a",
      "abbr",
      "address",
      "area",
      "article",
      "aside",
      "audio",
      "b",
      "base",
      "bdi",
      "bdo",
      "big",
      "blockquote",
      "body",
      "br",
      "button",
      "canvas",
      "caption",
      "cite",
      "code",
      "col",
      "colgroup",
      "data",
      "datalist",
      "dd",
      "del",
      "details",
      "dfn",
      "dialog",
      "div",
      "dl",
      "dt",
      "em",
      "embed",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "head",
      "header",
      "hgroup",
      "hr",
      "html",
      "i",
      "iframe",
      "img",
      "input",
      "ins",
      "kbd",
      "keygen",
      "label",
      "legend",
      "li",
      "link",
      "main",
      "map",
      "mark",
      "marquee",
      "menu",
      "menuitem",
      "meta",
      "meter",
      "nav",
      "noscript",
      "object",
      "ol",
      "optgroup",
      "option",
      "output",
      "p",
      "param",
      "picture",
      "pre",
      "progress",
      "q",
      "rp",
      "rt",
      "ruby",
      "s",
      "samp",
      "script",
      "section",
      "select",
      "small",
      "source",
      "span",
      "strong",
      "style",
      "sub",
      "summary",
      "sup",
      "table",
      "tbody",
      "td",
      "textarea",
      "tfoot",
      "th",
      "thead",
      "time",
      "title",
      "tr",
      "track",
      "u",
      "ul",
      "var",
      "video",
      "wbr",
      // SVG
      "circle",
      "clipPath",
      "defs",
      "ellipse",
      "foreignObject",
      "g",
      "image",
      "line",
      "linearGradient",
      "mask",
      "path",
      "pattern",
      "polygon",
      "polyline",
      "radialGradient",
      "rect",
      "stop",
      "svg",
      "text",
      "tspan"
    ];
    newStyled = createStyled.bind();
    tags.forEach(function(tagName) {
      newStyled[tagName] = newStyled(tagName);
    });
  }
});

// node_modules/react/cjs/react-jsx-runtime.development.js
var require_react_jsx_runtime_development = __commonJS({
  "node_modules/react/cjs/react-jsx-runtime.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React497 = require_react();
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactSharedInternals = React497.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function getWrappedName2(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName2(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var assign2 = Object.assign;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign2({}, props, {
                  value: prevLog
                }),
                info: assign2({}, props, {
                  value: prevInfo
                }),
                warn: assign2({}, props, {
                  value: prevWarn
                }),
                error: assign2({}, props, {
                  value: prevError
                }),
                group: assign2({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign2({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign2({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix3;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix3 === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match2 = x.stack.trim().match(/\n( *(at )?)/);
                prefix3 = match2 && match2[1] || "";
              }
            }
            return "\n" + prefix3 + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct2) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct2) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        if (fn2.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn2.displayName);
                        }
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component2) {
          var prototype = Component2.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var hasOwnProperty3 = Object.prototype.hasOwnProperty;
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values3, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty3);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values3, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown;
        var specialPropRefWarningShown;
        var didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty3.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty3.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function warnIfStringRefCannotBeAutoConverted(config, self2) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && self2 && ReactCurrentOwner.current.stateNode !== self2) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        function defineKeyPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingKey = function() {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
        }
        function defineRefPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingRef = function() {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
        }
        var ReactElement = function(type, key, ref, self2, source, owner, props) {
          var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type,
            key,
            ref,
            props,
            // Record the component responsible for creating this element.
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function jsxDEV(type, config, maybeKey, source, self2) {
          {
            var propName;
            var props = {};
            var key = null;
            var ref = null;
            if (maybeKey !== void 0) {
              {
                checkKeyStringCoercion(maybeKey);
              }
              key = "" + maybeKey;
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            if (hasValidRef(config)) {
              ref = config.ref;
              warnIfStringRefCannotBeAutoConverted(config, self2);
            }
            for (propName in config) {
              if (hasOwnProperty3.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
            if (type && type.defaultProps) {
              var defaultProps3 = type.defaultProps;
              for (propName in defaultProps3) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps3[propName];
                }
              }
            }
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
            return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function isValidElement46(object) {
          {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
        }
        function getDeclarationErrorAddendum() {
          {
            if (ReactCurrentOwner$1.current) {
              var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
        }
        function getSourceInfoErrorAddendum(source) {
          {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          {
            var info = getDeclarationErrorAddendum();
            if (!info) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info;
          }
        }
        function validateExplicitKey(element, parentType) {
          {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
              childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
            }
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node2, parentType) {
          {
            if (typeof node2 !== "object") {
              return;
            }
            if (isArray(node2)) {
              for (var i = 0; i < node2.length; i++) {
                var child = node2[i];
                if (isValidElement46(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement46(node2)) {
              if (node2._store) {
                node2._store.validated = true;
              }
            } else if (node2) {
              var iteratorFn = getIteratorFn(node2);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node2.entries) {
                  var iterator = iteratorFn.call(node2);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement46(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
            // Inner props are checked in the reconciler.
            type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i = 0; i < keys.length; i++) {
              var key = keys[i];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function jsxWithValidation(type, props, key, isStaticChildren, source, self2) {
          {
            var validType = isValidElementType(type);
            if (!validType) {
              var info = "";
              if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendum(source);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type === null) {
                typeString = "null";
              } else if (isArray(type)) {
                typeString = "array";
              } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type;
              }
              error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
            var element = jsxDEV(type, props, key, source, self2);
            if (element == null) {
              return element;
            }
            if (validType) {
              var children2 = props.children;
              if (children2 !== void 0) {
                if (isStaticChildren) {
                  if (isArray(children2)) {
                    for (var i = 0; i < children2.length; i++) {
                      validateChildKeys(children2[i], type);
                    }
                    if (Object.freeze) {
                      Object.freeze(children2);
                    }
                  } else {
                    error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                  }
                } else {
                  validateChildKeys(children2, type);
                }
              }
            }
            if (type === REACT_FRAGMENT_TYPE) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
        }
        function jsxWithValidationStatic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, true);
          }
        }
        function jsxWithValidationDynamic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, false);
          }
        }
        var jsx = jsxWithValidationDynamic;
        var jsxs = jsxWithValidationStatic;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.jsx = jsx;
        exports.jsxs = jsxs;
      })();
    }
  }
});

// node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "node_modules/react/jsx-runtime.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_jsx_runtime_development();
    }
  }
});

// node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js
function StyledEngineProvider(props) {
  const {
    injectFirst,
    children: children2
  } = props;
  return injectFirst && cache ? (0, import_jsx_runtime.jsx)(CacheProvider, {
    value: cache,
    children: children2
  }) : children2;
}
var React13, import_prop_types4, import_jsx_runtime, cache;
var init_StyledEngineProvider = __esm({
  "node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js"() {
    "use client";
    React13 = __toESM(require_react());
    import_prop_types4 = __toESM(require_prop_types());
    init_emotion_react_browser_esm();
    init_emotion_cache_browser_esm();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    if (typeof document === "object") {
      cache = createCache({
        key: "css",
        prepend: true
      });
    }
    true ? StyledEngineProvider.propTypes = {
      /**
       * Your component tree.
       */
      children: import_prop_types4.default.node,
      /**
       * By default, the styles are injected last in the <head> element of the page.
       * As a result, they gain more specificity than any other style sheet.
       * If you want to override MUI's styles, set this prop.
       */
      injectFirst: import_prop_types4.default.bool
    } : void 0;
  }
});

// node_modules/@mui/styled-engine/StyledEngineProvider/index.js
var init_StyledEngineProvider2 = __esm({
  "node_modules/@mui/styled-engine/StyledEngineProvider/index.js"() {
    "use client";
    init_StyledEngineProvider();
  }
});

// node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js
function isEmpty(obj) {
  return obj === void 0 || obj === null || Object.keys(obj).length === 0;
}
function GlobalStyles(props) {
  const {
    styles: styles7,
    defaultTheme: defaultTheme8 = {}
  } = props;
  const globalStyles = typeof styles7 === "function" ? (themeInput) => styles7(isEmpty(themeInput) ? defaultTheme8 : themeInput) : styles7;
  return (0, import_jsx_runtime2.jsx)(Global, {
    styles: globalStyles
  });
}
var React14, import_prop_types5, import_jsx_runtime2;
var init_GlobalStyles = __esm({
  "node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js"() {
    "use client";
    React14 = __toESM(require_react());
    import_prop_types5 = __toESM(require_prop_types());
    init_emotion_react_browser_esm();
    import_jsx_runtime2 = __toESM(require_jsx_runtime());
    true ? GlobalStyles.propTypes = {
      defaultTheme: import_prop_types5.default.object,
      styles: import_prop_types5.default.oneOfType([import_prop_types5.default.array, import_prop_types5.default.string, import_prop_types5.default.object, import_prop_types5.default.func])
    } : void 0;
  }
});

// node_modules/@mui/styled-engine/GlobalStyles/index.js
var init_GlobalStyles2 = __esm({
  "node_modules/@mui/styled-engine/GlobalStyles/index.js"() {
    "use client";
    init_GlobalStyles();
  }
});

// node_modules/@mui/styled-engine/index.js
function styled(tag, options) {
  const stylesFactory = newStyled(tag, options);
  if (true) {
    return (...styles7) => {
      const component = typeof tag === "string" ? `"${tag}"` : "component";
      if (styles7.length === 0) {
        console.error([`MUI: Seems like you called \`styled(${component})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join("\n"));
      } else if (styles7.some((style4) => style4 === void 0)) {
        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);
      }
      return stylesFactory(...styles7);
    };
  }
  return stylesFactory;
}
var internal_processStyles;
var init_styled_engine = __esm({
  "node_modules/@mui/styled-engine/index.js"() {
    "use client";
    init_emotion_styled_browser_esm();
    init_emotion_react_browser_esm();
    init_StyledEngineProvider2();
    init_GlobalStyles2();
    internal_processStyles = (tag, processor) => {
      if (Array.isArray(tag.__emotion_styles)) {
        tag.__emotion_styles = processor(tag.__emotion_styles);
      }
    };
  }
});

// node_modules/@mui/system/esm/createTheme/createBreakpoints.js
function createBreakpoints(breakpoints) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: values3 = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit = "px",
    step = 5
  } = breakpoints, other = _objectWithoutPropertiesLoose(breakpoints, _excluded);
  const sortedValues = sortBreakpointsValues(values3);
  const keys = Object.keys(sortedValues);
  function up(key) {
    const value = typeof values3[key] === "number" ? values3[key] : key;
    return `@media (min-width:${value}${unit})`;
  }
  function down(key) {
    const value = typeof values3[key] === "number" ? values3[key] : key;
    return `@media (max-width:${value - step / 100}${unit})`;
  }
  function between(start2, end2) {
    const endIndex = keys.indexOf(end2);
    return `@media (min-width:${typeof values3[start2] === "number" ? values3[start2] : start2}${unit}) and (max-width:${(endIndex !== -1 && typeof values3[keys[endIndex]] === "number" ? values3[keys[endIndex]] : end2) - step / 100}${unit})`;
  }
  function only(key) {
    if (keys.indexOf(key) + 1 < keys.length) {
      return between(key, keys[keys.indexOf(key) + 1]);
    }
    return up(key);
  }
  function not(key) {
    const keyIndex = keys.indexOf(key);
    if (keyIndex === 0) {
      return up(keys[1]);
    }
    if (keyIndex === keys.length - 1) {
      return down(keys[keyIndex]);
    }
    return between(key, keys[keys.indexOf(key) + 1]).replace("@media", "@media not all and");
  }
  return _extends({
    keys,
    values: sortedValues,
    up,
    down,
    between,
    only,
    not,
    unit
  }, other);
}
var _excluded, sortBreakpointsValues;
var init_createBreakpoints = __esm({
  "node_modules/@mui/system/esm/createTheme/createBreakpoints.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    _excluded = ["values", "unit", "step"];
    sortBreakpointsValues = (values3) => {
      const breakpointsAsArray = Object.keys(values3).map((key) => ({
        key,
        val: values3[key]
      })) || [];
      breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);
      return breakpointsAsArray.reduce((acc, obj) => {
        return _extends({}, acc, {
          [obj.key]: obj.val
        });
      }, {});
    };
  }
});

// node_modules/@mui/system/esm/createTheme/shape.js
var shape, shape_default;
var init_shape = __esm({
  "node_modules/@mui/system/esm/createTheme/shape.js"() {
    shape = {
      borderRadius: 4
    };
    shape_default = shape;
  }
});

// node_modules/@mui/system/esm/responsivePropType.js
var import_prop_types6, responsivePropType, responsivePropType_default;
var init_responsivePropType = __esm({
  "node_modules/@mui/system/esm/responsivePropType.js"() {
    import_prop_types6 = __toESM(require_prop_types());
    responsivePropType = true ? import_prop_types6.default.oneOfType([import_prop_types6.default.number, import_prop_types6.default.string, import_prop_types6.default.object, import_prop_types6.default.array]) : {};
    responsivePropType_default = responsivePropType;
  }
});

// node_modules/@mui/system/esm/merge.js
function merge2(acc, item) {
  if (!item) {
    return acc;
  }
  return deepmerge(acc, item, {
    clone: false
    // No need to clone deep, it's way faster.
  });
}
var merge_default;
var init_merge = __esm({
  "node_modules/@mui/system/esm/merge.js"() {
    init_esm();
    merge_default = merge2;
  }
});

// node_modules/@mui/system/esm/breakpoints.js
function handleBreakpoints(props, propValue, styleFromPropValue) {
  const theme = props.theme || {};
  if (Array.isArray(propValue)) {
    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    return propValue.reduce((acc, item, index2) => {
      acc[themeBreakpoints.up(themeBreakpoints.keys[index2])] = styleFromPropValue(propValue[index2]);
      return acc;
    }, {});
  }
  if (typeof propValue === "object") {
    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    return Object.keys(propValue).reduce((acc, breakpoint) => {
      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {
        const mediaKey = themeBreakpoints.up(breakpoint);
        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
      } else {
        const cssKey = breakpoint;
        acc[cssKey] = propValue[cssKey];
      }
      return acc;
    }, {});
  }
  const output = styleFromPropValue(propValue);
  return output;
}
function createEmptyBreakpointObject(breakpointsInput = {}) {
  var _breakpointsInput$key;
  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {
    const breakpointStyleKey = breakpointsInput.up(key);
    acc[breakpointStyleKey] = {};
    return acc;
  }, {});
  return breakpointsInOrder || {};
}
function removeUnusedBreakpoints(breakpointKeys2, style4) {
  return breakpointKeys2.reduce((acc, key) => {
    const breakpointOutput = acc[key];
    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;
    if (isBreakpointUnused) {
      delete acc[key];
    }
    return acc;
  }, style4);
}
function mergeBreakpointsInOrder(breakpointsInput, ...styles7) {
  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);
  const mergedOutput = [emptyBreakpoints, ...styles7].reduce((prev2, next2) => deepmerge(prev2, next2), {});
  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);
}
function computeBreakpointsBase(breakpointValues, themeBreakpoints) {
  if (typeof breakpointValues !== "object") {
    return {};
  }
  const base = {};
  const breakpointsKeys = Object.keys(themeBreakpoints);
  if (Array.isArray(breakpointValues)) {
    breakpointsKeys.forEach((breakpoint, i) => {
      if (i < breakpointValues.length) {
        base[breakpoint] = true;
      }
    });
  } else {
    breakpointsKeys.forEach((breakpoint) => {
      if (breakpointValues[breakpoint] != null) {
        base[breakpoint] = true;
      }
    });
  }
  return base;
}
function resolveBreakpointValues({
  values: breakpointValues,
  breakpoints: themeBreakpoints,
  base: customBase
}) {
  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);
  const keys = Object.keys(base);
  if (keys.length === 0) {
    return breakpointValues;
  }
  let previous;
  return keys.reduce((acc, breakpoint, i) => {
    if (Array.isArray(breakpointValues)) {
      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];
      previous = i;
    } else if (typeof breakpointValues === "object") {
      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];
      previous = breakpoint;
    } else {
      acc[breakpoint] = breakpointValues;
    }
    return acc;
  }, {});
}
var import_prop_types7, values, defaultBreakpoints;
var init_breakpoints = __esm({
  "node_modules/@mui/system/esm/breakpoints.js"() {
    init_extends();
    import_prop_types7 = __toESM(require_prop_types());
    init_esm();
    init_merge();
    values = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    };
    defaultBreakpoints = {
      // Sorted ASC by size. That's important.
      // It can't be configured as it's used statically for propTypes.
      keys: ["xs", "sm", "md", "lg", "xl"],
      up: (key) => `@media (min-width:${values[key]}px)`
    };
  }
});

// node_modules/@mui/system/esm/style.js
function getPath(obj, path, checkVars = true) {
  if (!path || typeof path !== "string") {
    return null;
  }
  if (obj && obj.vars && checkVars) {
    const val = `vars.${path}`.split(".").reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);
    if (val != null) {
      return val;
    }
  }
  return path.split(".").reduce((acc, item) => {
    if (acc && acc[item] != null) {
      return acc[item];
    }
    return null;
  }, obj);
}
function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {
  let value;
  if (typeof themeMapping === "function") {
    value = themeMapping(propValueFinal);
  } else if (Array.isArray(themeMapping)) {
    value = themeMapping[propValueFinal] || userValue;
  } else {
    value = getPath(themeMapping, propValueFinal) || userValue;
  }
  if (transform) {
    value = transform(value, userValue, themeMapping);
  }
  return value;
}
function style(options) {
  const {
    prop,
    cssProperty = options.prop,
    themeKey,
    transform
  } = options;
  const fn2 = (props) => {
    if (props[prop] == null) {
      return null;
    }
    const propValue = props[prop];
    const theme = props.theme;
    const themeMapping = getPath(theme, themeKey) || {};
    const styleFromPropValue = (propValueFinal) => {
      let value = getStyleValue(themeMapping, transform, propValueFinal);
      if (propValueFinal === value && typeof propValueFinal === "string") {
        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === "default" ? "" : capitalize(propValueFinal)}`, propValueFinal);
      }
      if (cssProperty === false) {
        return value;
      }
      return {
        [cssProperty]: value
      };
    };
    return handleBreakpoints(props, propValue, styleFromPropValue);
  };
  fn2.propTypes = true ? {
    [prop]: responsivePropType_default
  } : {};
  fn2.filterProps = [prop];
  return fn2;
}
var style_default;
var init_style = __esm({
  "node_modules/@mui/system/esm/style.js"() {
    init_esm();
    init_responsivePropType();
    init_breakpoints();
    style_default = style;
  }
});

// node_modules/@mui/system/esm/memoize.js
function memoize2(fn2) {
  const cache2 = {};
  return (arg) => {
    if (cache2[arg] === void 0) {
      cache2[arg] = fn2(arg);
    }
    return cache2[arg];
  };
}
var init_memoize = __esm({
  "node_modules/@mui/system/esm/memoize.js"() {
  }
});

// node_modules/@mui/system/esm/spacing.js
function createUnaryUnit(theme, themeKey, defaultValue, propName) {
  var _getPath;
  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;
  if (typeof themeSpacing === "number") {
    return (abs2) => {
      if (typeof abs2 === "string") {
        return abs2;
      }
      if (true) {
        if (typeof abs2 !== "number") {
          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs2}.`);
        }
      }
      return themeSpacing * abs2;
    };
  }
  if (Array.isArray(themeSpacing)) {
    return (abs2) => {
      if (typeof abs2 === "string") {
        return abs2;
      }
      if (true) {
        if (!Number.isInteger(abs2)) {
          console.error([`MUI: The \`theme.${themeKey}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${themeKey}\` as a number.`].join("\n"));
        } else if (abs2 > themeSpacing.length - 1) {
          console.error([`MUI: The value provided (${abs2}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs2} > ${themeSpacing.length - 1}, you need to add the missing values.`].join("\n"));
        }
      }
      return themeSpacing[abs2];
    };
  }
  if (typeof themeSpacing === "function") {
    return themeSpacing;
  }
  if (true) {
    console.error([`MUI: The \`theme.${themeKey}\` value (${themeSpacing}) is invalid.`, "It should be a number, an array or a function."].join("\n"));
  }
  return () => void 0;
}
function createUnarySpacing(theme) {
  return createUnaryUnit(theme, "spacing", 8, "spacing");
}
function getValue(transformer, propValue) {
  if (typeof propValue === "string" || propValue == null) {
    return propValue;
  }
  const abs2 = Math.abs(propValue);
  const transformed = transformer(abs2);
  if (propValue >= 0) {
    return transformed;
  }
  if (typeof transformed === "number") {
    return -transformed;
  }
  return `-${transformed}`;
}
function getStyleFromPropValue(cssProperties, transformer) {
  return (propValue) => cssProperties.reduce((acc, cssProperty) => {
    acc[cssProperty] = getValue(transformer, propValue);
    return acc;
  }, {});
}
function resolveCssProperty(props, keys, prop, transformer) {
  if (keys.indexOf(prop) === -1) {
    return null;
  }
  const cssProperties = getCssProperties(prop);
  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
  const propValue = props[prop];
  return handleBreakpoints(props, propValue, styleFromPropValue);
}
function style2(props, keys) {
  const transformer = createUnarySpacing(props.theme);
  return Object.keys(props).map((prop) => resolveCssProperty(props, keys, prop, transformer)).reduce(merge_default, {});
}
function margin(props) {
  return style2(props, marginKeys);
}
function padding(props) {
  return style2(props, paddingKeys);
}
function spacing(props) {
  return style2(props, spacingKeys);
}
var properties, directions, aliases, getCssProperties, marginKeys, paddingKeys, spacingKeys, spacing_default;
var init_spacing = __esm({
  "node_modules/@mui/system/esm/spacing.js"() {
    init_responsivePropType();
    init_breakpoints();
    init_style();
    init_merge();
    init_memoize();
    properties = {
      m: "margin",
      p: "padding"
    };
    directions = {
      t: "Top",
      r: "Right",
      b: "Bottom",
      l: "Left",
      x: ["Left", "Right"],
      y: ["Top", "Bottom"]
    };
    aliases = {
      marginX: "mx",
      marginY: "my",
      paddingX: "px",
      paddingY: "py"
    };
    getCssProperties = memoize2((prop) => {
      if (prop.length > 2) {
        if (aliases[prop]) {
          prop = aliases[prop];
        } else {
          return [prop];
        }
      }
      const [a, b] = prop.split("");
      const property = properties[a];
      const direction = directions[b] || "";
      return Array.isArray(direction) ? direction.map((dir) => property + dir) : [property + direction];
    });
    marginKeys = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"];
    paddingKeys = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"];
    spacingKeys = [...marginKeys, ...paddingKeys];
    margin.propTypes = true ? marginKeys.reduce((obj, key) => {
      obj[key] = responsivePropType_default;
      return obj;
    }, {}) : {};
    margin.filterProps = marginKeys;
    padding.propTypes = true ? paddingKeys.reduce((obj, key) => {
      obj[key] = responsivePropType_default;
      return obj;
    }, {}) : {};
    padding.filterProps = paddingKeys;
    spacing.propTypes = true ? spacingKeys.reduce((obj, key) => {
      obj[key] = responsivePropType_default;
      return obj;
    }, {}) : {};
    spacing.filterProps = spacingKeys;
    spacing_default = spacing;
  }
});

// node_modules/@mui/system/esm/createTheme/createSpacing.js
function createSpacing(spacingInput = 8) {
  if (spacingInput.mui) {
    return spacingInput;
  }
  const transform = createUnarySpacing({
    spacing: spacingInput
  });
  const spacing2 = (...argsInput) => {
    if (true) {
      if (!(argsInput.length <= 4)) {
        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);
      }
    }
    const args = argsInput.length === 0 ? [1] : argsInput;
    return args.map((argument) => {
      const output = transform(argument);
      return typeof output === "number" ? `${output}px` : output;
    }).join(" ");
  };
  spacing2.mui = true;
  return spacing2;
}
var init_createSpacing = __esm({
  "node_modules/@mui/system/esm/createTheme/createSpacing.js"() {
    init_spacing();
  }
});

// node_modules/@mui/system/esm/compose.js
function compose(...styles7) {
  const handlers = styles7.reduce((acc, style4) => {
    style4.filterProps.forEach((prop) => {
      acc[prop] = style4;
    });
    return acc;
  }, {});
  const fn2 = (props) => {
    return Object.keys(props).reduce((acc, prop) => {
      if (handlers[prop]) {
        return merge_default(acc, handlers[prop](props));
      }
      return acc;
    }, {});
  };
  fn2.propTypes = true ? styles7.reduce((acc, style4) => Object.assign(acc, style4.propTypes), {}) : {};
  fn2.filterProps = styles7.reduce((acc, style4) => acc.concat(style4.filterProps), []);
  return fn2;
}
var compose_default;
var init_compose = __esm({
  "node_modules/@mui/system/esm/compose.js"() {
    init_merge();
    compose_default = compose;
  }
});

// node_modules/@mui/system/esm/borders.js
function borderTransform(value) {
  if (typeof value !== "number") {
    return value;
  }
  return `${value}px solid`;
}
var border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius, borders, borders_default;
var init_borders = __esm({
  "node_modules/@mui/system/esm/borders.js"() {
    init_responsivePropType();
    init_style();
    init_compose();
    init_spacing();
    init_breakpoints();
    border = style_default({
      prop: "border",
      themeKey: "borders",
      transform: borderTransform
    });
    borderTop = style_default({
      prop: "borderTop",
      themeKey: "borders",
      transform: borderTransform
    });
    borderRight = style_default({
      prop: "borderRight",
      themeKey: "borders",
      transform: borderTransform
    });
    borderBottom = style_default({
      prop: "borderBottom",
      themeKey: "borders",
      transform: borderTransform
    });
    borderLeft = style_default({
      prop: "borderLeft",
      themeKey: "borders",
      transform: borderTransform
    });
    borderColor = style_default({
      prop: "borderColor",
      themeKey: "palette"
    });
    borderTopColor = style_default({
      prop: "borderTopColor",
      themeKey: "palette"
    });
    borderRightColor = style_default({
      prop: "borderRightColor",
      themeKey: "palette"
    });
    borderBottomColor = style_default({
      prop: "borderBottomColor",
      themeKey: "palette"
    });
    borderLeftColor = style_default({
      prop: "borderLeftColor",
      themeKey: "palette"
    });
    borderRadius = (props) => {
      if (props.borderRadius !== void 0 && props.borderRadius !== null) {
        const transformer = createUnaryUnit(props.theme, "shape.borderRadius", 4, "borderRadius");
        const styleFromPropValue = (propValue) => ({
          borderRadius: getValue(transformer, propValue)
        });
        return handleBreakpoints(props, props.borderRadius, styleFromPropValue);
      }
      return null;
    };
    borderRadius.propTypes = true ? {
      borderRadius: responsivePropType_default
    } : {};
    borderRadius.filterProps = ["borderRadius"];
    borders = compose_default(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);
    borders_default = borders;
  }
});

// node_modules/@mui/system/esm/cssGrid.js
var gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea, grid, cssGrid_default;
var init_cssGrid = __esm({
  "node_modules/@mui/system/esm/cssGrid.js"() {
    init_style();
    init_compose();
    init_spacing();
    init_breakpoints();
    init_responsivePropType();
    gap = (props) => {
      if (props.gap !== void 0 && props.gap !== null) {
        const transformer = createUnaryUnit(props.theme, "spacing", 8, "gap");
        const styleFromPropValue = (propValue) => ({
          gap: getValue(transformer, propValue)
        });
        return handleBreakpoints(props, props.gap, styleFromPropValue);
      }
      return null;
    };
    gap.propTypes = true ? {
      gap: responsivePropType_default
    } : {};
    gap.filterProps = ["gap"];
    columnGap = (props) => {
      if (props.columnGap !== void 0 && props.columnGap !== null) {
        const transformer = createUnaryUnit(props.theme, "spacing", 8, "columnGap");
        const styleFromPropValue = (propValue) => ({
          columnGap: getValue(transformer, propValue)
        });
        return handleBreakpoints(props, props.columnGap, styleFromPropValue);
      }
      return null;
    };
    columnGap.propTypes = true ? {
      columnGap: responsivePropType_default
    } : {};
    columnGap.filterProps = ["columnGap"];
    rowGap = (props) => {
      if (props.rowGap !== void 0 && props.rowGap !== null) {
        const transformer = createUnaryUnit(props.theme, "spacing", 8, "rowGap");
        const styleFromPropValue = (propValue) => ({
          rowGap: getValue(transformer, propValue)
        });
        return handleBreakpoints(props, props.rowGap, styleFromPropValue);
      }
      return null;
    };
    rowGap.propTypes = true ? {
      rowGap: responsivePropType_default
    } : {};
    rowGap.filterProps = ["rowGap"];
    gridColumn = style_default({
      prop: "gridColumn"
    });
    gridRow = style_default({
      prop: "gridRow"
    });
    gridAutoFlow = style_default({
      prop: "gridAutoFlow"
    });
    gridAutoColumns = style_default({
      prop: "gridAutoColumns"
    });
    gridAutoRows = style_default({
      prop: "gridAutoRows"
    });
    gridTemplateColumns = style_default({
      prop: "gridTemplateColumns"
    });
    gridTemplateRows = style_default({
      prop: "gridTemplateRows"
    });
    gridTemplateAreas = style_default({
      prop: "gridTemplateAreas"
    });
    gridArea = style_default({
      prop: "gridArea"
    });
    grid = compose_default(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);
    cssGrid_default = grid;
  }
});

// node_modules/@mui/system/esm/palette.js
function paletteTransform(value, userValue) {
  if (userValue === "grey") {
    return userValue;
  }
  return value;
}
var color, bgcolor, backgroundColor, palette, palette_default;
var init_palette = __esm({
  "node_modules/@mui/system/esm/palette.js"() {
    init_style();
    init_compose();
    color = style_default({
      prop: "color",
      themeKey: "palette",
      transform: paletteTransform
    });
    bgcolor = style_default({
      prop: "bgcolor",
      cssProperty: "backgroundColor",
      themeKey: "palette",
      transform: paletteTransform
    });
    backgroundColor = style_default({
      prop: "backgroundColor",
      themeKey: "palette",
      transform: paletteTransform
    });
    palette = compose_default(color, bgcolor, backgroundColor);
    palette_default = palette;
  }
});

// node_modules/@mui/system/esm/sizing.js
function sizingTransform(value) {
  return value <= 1 && value !== 0 ? `${value * 100}%` : value;
}
var width, maxWidth, minWidth, height, maxHeight, minHeight, sizeWidth, sizeHeight, boxSizing, sizing, sizing_default;
var init_sizing = __esm({
  "node_modules/@mui/system/esm/sizing.js"() {
    init_style();
    init_compose();
    init_breakpoints();
    width = style_default({
      prop: "width",
      transform: sizingTransform
    });
    maxWidth = (props) => {
      if (props.maxWidth !== void 0 && props.maxWidth !== null) {
        const styleFromPropValue = (propValue) => {
          var _props$theme;
          const breakpoint = ((_props$theme = props.theme) == null || (_props$theme = _props$theme.breakpoints) == null || (_props$theme = _props$theme.values) == null ? void 0 : _props$theme[propValue]) || values[propValue];
          return {
            maxWidth: breakpoint || sizingTransform(propValue)
          };
        };
        return handleBreakpoints(props, props.maxWidth, styleFromPropValue);
      }
      return null;
    };
    maxWidth.filterProps = ["maxWidth"];
    minWidth = style_default({
      prop: "minWidth",
      transform: sizingTransform
    });
    height = style_default({
      prop: "height",
      transform: sizingTransform
    });
    maxHeight = style_default({
      prop: "maxHeight",
      transform: sizingTransform
    });
    minHeight = style_default({
      prop: "minHeight",
      transform: sizingTransform
    });
    sizeWidth = style_default({
      prop: "size",
      cssProperty: "width",
      transform: sizingTransform
    });
    sizeHeight = style_default({
      prop: "size",
      cssProperty: "height",
      transform: sizingTransform
    });
    boxSizing = style_default({
      prop: "boxSizing"
    });
    sizing = compose_default(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);
    sizing_default = sizing;
  }
});

// node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js
var defaultSxConfig, defaultSxConfig_default;
var init_defaultSxConfig = __esm({
  "node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js"() {
    init_spacing();
    init_borders();
    init_cssGrid();
    init_palette();
    init_sizing();
    defaultSxConfig = {
      // borders
      border: {
        themeKey: "borders",
        transform: borderTransform
      },
      borderTop: {
        themeKey: "borders",
        transform: borderTransform
      },
      borderRight: {
        themeKey: "borders",
        transform: borderTransform
      },
      borderBottom: {
        themeKey: "borders",
        transform: borderTransform
      },
      borderLeft: {
        themeKey: "borders",
        transform: borderTransform
      },
      borderColor: {
        themeKey: "palette"
      },
      borderTopColor: {
        themeKey: "palette"
      },
      borderRightColor: {
        themeKey: "palette"
      },
      borderBottomColor: {
        themeKey: "palette"
      },
      borderLeftColor: {
        themeKey: "palette"
      },
      borderRadius: {
        themeKey: "shape.borderRadius",
        style: borderRadius
      },
      // palette
      color: {
        themeKey: "palette",
        transform: paletteTransform
      },
      bgcolor: {
        themeKey: "palette",
        cssProperty: "backgroundColor",
        transform: paletteTransform
      },
      backgroundColor: {
        themeKey: "palette",
        transform: paletteTransform
      },
      // spacing
      p: {
        style: padding
      },
      pt: {
        style: padding
      },
      pr: {
        style: padding
      },
      pb: {
        style: padding
      },
      pl: {
        style: padding
      },
      px: {
        style: padding
      },
      py: {
        style: padding
      },
      padding: {
        style: padding
      },
      paddingTop: {
        style: padding
      },
      paddingRight: {
        style: padding
      },
      paddingBottom: {
        style: padding
      },
      paddingLeft: {
        style: padding
      },
      paddingX: {
        style: padding
      },
      paddingY: {
        style: padding
      },
      paddingInline: {
        style: padding
      },
      paddingInlineStart: {
        style: padding
      },
      paddingInlineEnd: {
        style: padding
      },
      paddingBlock: {
        style: padding
      },
      paddingBlockStart: {
        style: padding
      },
      paddingBlockEnd: {
        style: padding
      },
      m: {
        style: margin
      },
      mt: {
        style: margin
      },
      mr: {
        style: margin
      },
      mb: {
        style: margin
      },
      ml: {
        style: margin
      },
      mx: {
        style: margin
      },
      my: {
        style: margin
      },
      margin: {
        style: margin
      },
      marginTop: {
        style: margin
      },
      marginRight: {
        style: margin
      },
      marginBottom: {
        style: margin
      },
      marginLeft: {
        style: margin
      },
      marginX: {
        style: margin
      },
      marginY: {
        style: margin
      },
      marginInline: {
        style: margin
      },
      marginInlineStart: {
        style: margin
      },
      marginInlineEnd: {
        style: margin
      },
      marginBlock: {
        style: margin
      },
      marginBlockStart: {
        style: margin
      },
      marginBlockEnd: {
        style: margin
      },
      // display
      displayPrint: {
        cssProperty: false,
        transform: (value) => ({
          "@media print": {
            display: value
          }
        })
      },
      display: {},
      overflow: {},
      textOverflow: {},
      visibility: {},
      whiteSpace: {},
      // flexbox
      flexBasis: {},
      flexDirection: {},
      flexWrap: {},
      justifyContent: {},
      alignItems: {},
      alignContent: {},
      order: {},
      flex: {},
      flexGrow: {},
      flexShrink: {},
      alignSelf: {},
      justifyItems: {},
      justifySelf: {},
      // grid
      gap: {
        style: gap
      },
      rowGap: {
        style: rowGap
      },
      columnGap: {
        style: columnGap
      },
      gridColumn: {},
      gridRow: {},
      gridAutoFlow: {},
      gridAutoColumns: {},
      gridAutoRows: {},
      gridTemplateColumns: {},
      gridTemplateRows: {},
      gridTemplateAreas: {},
      gridArea: {},
      // positions
      position: {},
      zIndex: {
        themeKey: "zIndex"
      },
      top: {},
      right: {},
      bottom: {},
      left: {},
      // shadows
      boxShadow: {
        themeKey: "shadows"
      },
      // sizing
      width: {
        transform: sizingTransform
      },
      maxWidth: {
        style: maxWidth
      },
      minWidth: {
        transform: sizingTransform
      },
      height: {
        transform: sizingTransform
      },
      maxHeight: {
        transform: sizingTransform
      },
      minHeight: {
        transform: sizingTransform
      },
      boxSizing: {},
      // typography
      fontFamily: {
        themeKey: "typography"
      },
      fontSize: {
        themeKey: "typography"
      },
      fontStyle: {
        themeKey: "typography"
      },
      fontWeight: {
        themeKey: "typography"
      },
      letterSpacing: {},
      textTransform: {},
      lineHeight: {},
      textAlign: {},
      typography: {
        cssProperty: false,
        themeKey: "typography"
      }
    };
    defaultSxConfig_default = defaultSxConfig;
  }
});

// node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js
function objectsHaveSameKeys(...objects) {
  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);
  const union2 = new Set(allKeys);
  return objects.every((object) => union2.size === Object.keys(object).length);
}
function callIfFn(maybeFn, arg) {
  return typeof maybeFn === "function" ? maybeFn(arg) : maybeFn;
}
function unstable_createStyleFunctionSx() {
  function getThemeValue(prop, val, theme, config) {
    const props = {
      [prop]: val,
      theme
    };
    const options = config[prop];
    if (!options) {
      return {
        [prop]: val
      };
    }
    const {
      cssProperty = prop,
      themeKey,
      transform,
      style: style4
    } = options;
    if (val == null) {
      return null;
    }
    if (themeKey === "typography" && val === "inherit") {
      return {
        [prop]: val
      };
    }
    const themeMapping = getPath(theme, themeKey) || {};
    if (style4) {
      return style4(props);
    }
    const styleFromPropValue = (propValueFinal) => {
      let value = getStyleValue(themeMapping, transform, propValueFinal);
      if (propValueFinal === value && typeof propValueFinal === "string") {
        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === "default" ? "" : capitalize(propValueFinal)}`, propValueFinal);
      }
      if (cssProperty === false) {
        return value;
      }
      return {
        [cssProperty]: value
      };
    };
    return handleBreakpoints(props, val, styleFromPropValue);
  }
  function styleFunctionSx2(props) {
    var _theme$unstable_sxCon;
    const {
      sx,
      theme = {}
    } = props || {};
    if (!sx) {
      return null;
    }
    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig_default;
    function traverse(sxInput) {
      let sxObject = sxInput;
      if (typeof sxInput === "function") {
        sxObject = sxInput(theme);
      } else if (typeof sxInput !== "object") {
        return sxInput;
      }
      if (!sxObject) {
        return null;
      }
      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);
      const breakpointsKeys = Object.keys(emptyBreakpoints);
      let css2 = emptyBreakpoints;
      Object.keys(sxObject).forEach((styleKey) => {
        const value = callIfFn(sxObject[styleKey], theme);
        if (value !== null && value !== void 0) {
          if (typeof value === "object") {
            if (config[styleKey]) {
              css2 = merge_default(css2, getThemeValue(styleKey, value, theme, config));
            } else {
              const breakpointsValues = handleBreakpoints({
                theme
              }, value, (x) => ({
                [styleKey]: x
              }));
              if (objectsHaveSameKeys(breakpointsValues, value)) {
                css2[styleKey] = styleFunctionSx2({
                  sx: value,
                  theme
                });
              } else {
                css2 = merge_default(css2, breakpointsValues);
              }
            }
          } else {
            css2 = merge_default(css2, getThemeValue(styleKey, value, theme, config));
          }
        }
      });
      return removeUnusedBreakpoints(breakpointsKeys, css2);
    }
    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
  }
  return styleFunctionSx2;
}
var styleFunctionSx, styleFunctionSx_default;
var init_styleFunctionSx = __esm({
  "node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js"() {
    init_esm();
    init_merge();
    init_style();
    init_breakpoints();
    init_defaultSxConfig();
    styleFunctionSx = unstable_createStyleFunctionSx();
    styleFunctionSx.filterProps = ["sx"];
    styleFunctionSx_default = styleFunctionSx;
  }
});

// node_modules/@mui/system/esm/createTheme/createTheme.js
function createTheme(options = {}, ...args) {
  const {
    breakpoints: breakpointsInput = {},
    palette: paletteInput = {},
    spacing: spacingInput,
    shape: shapeInput = {}
  } = options, other = _objectWithoutPropertiesLoose(options, _excluded2);
  const breakpoints = createBreakpoints(breakpointsInput);
  const spacing2 = createSpacing(spacingInput);
  let muiTheme = deepmerge({
    breakpoints,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: _extends({
      mode: "light"
    }, paletteInput),
    spacing: spacing2,
    shape: _extends({}, shape_default, shapeInput)
  }, other);
  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);
  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig_default, other == null ? void 0 : other.unstable_sxConfig);
  muiTheme.unstable_sx = function sx(props) {
    return styleFunctionSx_default({
      sx: props,
      theme: this
    });
  };
  return muiTheme;
}
var _excluded2, createTheme_default;
var init_createTheme = __esm({
  "node_modules/@mui/system/esm/createTheme/createTheme.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_esm();
    init_createBreakpoints();
    init_shape();
    init_createSpacing();
    init_styleFunctionSx();
    init_defaultSxConfig();
    _excluded2 = ["breakpoints", "palette", "spacing", "shape"];
    createTheme_default = createTheme;
  }
});

// node_modules/@mui/system/esm/createTheme/index.js
var init_createTheme2 = __esm({
  "node_modules/@mui/system/esm/createTheme/index.js"() {
    init_createTheme();
  }
});

// node_modules/@mui/system/esm/useThemeWithoutDefault.js
function isObjectEmpty(obj) {
  return Object.keys(obj).length === 0;
}
function useTheme2(defaultTheme8 = null) {
  const contextTheme = React15.useContext(ThemeContext);
  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme8 : contextTheme;
}
var React15, useThemeWithoutDefault_default;
var init_useThemeWithoutDefault = __esm({
  "node_modules/@mui/system/esm/useThemeWithoutDefault.js"() {
    "use client";
    React15 = __toESM(require_react());
    init_styled_engine();
    useThemeWithoutDefault_default = useTheme2;
  }
});

// node_modules/@mui/system/esm/useTheme.js
function useTheme3(defaultTheme8 = systemDefaultTheme) {
  return useThemeWithoutDefault_default(defaultTheme8);
}
var systemDefaultTheme, useTheme_default;
var init_useTheme = __esm({
  "node_modules/@mui/system/esm/useTheme.js"() {
    "use client";
    init_createTheme2();
    init_useThemeWithoutDefault();
    systemDefaultTheme = createTheme_default();
    useTheme_default = useTheme3;
  }
});

// node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js
function GlobalStyles2({
  styles: styles7,
  themeId,
  defaultTheme: defaultTheme8 = {}
}) {
  const upperTheme = useTheme_default(defaultTheme8);
  const globalStyles = typeof styles7 === "function" ? styles7(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles7;
  return (0, import_jsx_runtime3.jsx)(GlobalStyles, {
    styles: globalStyles
  });
}
var React16, import_prop_types8, import_jsx_runtime3, GlobalStyles_default;
var init_GlobalStyles3 = __esm({
  "node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js"() {
    "use client";
    React16 = __toESM(require_react());
    import_prop_types8 = __toESM(require_prop_types());
    init_styled_engine();
    init_useTheme();
    import_jsx_runtime3 = __toESM(require_jsx_runtime());
    true ? GlobalStyles2.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit TypeScript types and run "yarn proptypes"  |
      // ----------------------------------------------------------------------
      /**
       * @ignore
       */
      defaultTheme: import_prop_types8.default.object,
      /**
       * @ignore
       */
      styles: import_prop_types8.default.oneOfType([import_prop_types8.default.array, import_prop_types8.default.func, import_prop_types8.default.number, import_prop_types8.default.object, import_prop_types8.default.string, import_prop_types8.default.bool]),
      /**
       * @ignore
       */
      themeId: import_prop_types8.default.string
    } : void 0;
    GlobalStyles_default = GlobalStyles2;
  }
});

// node_modules/@mui/system/esm/GlobalStyles/index.js
var init_GlobalStyles4 = __esm({
  "node_modules/@mui/system/esm/GlobalStyles/index.js"() {
    "use client";
    init_GlobalStyles3();
    init_GlobalStyles3();
  }
});

// node_modules/@mui/system/esm/display.js
var displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace, display_default;
var init_display = __esm({
  "node_modules/@mui/system/esm/display.js"() {
    init_style();
    init_compose();
    displayPrint = style_default({
      prop: "displayPrint",
      cssProperty: false,
      transform: (value) => ({
        "@media print": {
          display: value
        }
      })
    });
    displayRaw = style_default({
      prop: "display"
    });
    overflow = style_default({
      prop: "overflow"
    });
    textOverflow = style_default({
      prop: "textOverflow"
    });
    visibility = style_default({
      prop: "visibility"
    });
    whiteSpace = style_default({
      prop: "whiteSpace"
    });
    display_default = compose_default(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);
  }
});

// node_modules/@mui/system/esm/flexbox.js
var flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf, flexbox, flexbox_default;
var init_flexbox = __esm({
  "node_modules/@mui/system/esm/flexbox.js"() {
    init_style();
    init_compose();
    flexBasis = style_default({
      prop: "flexBasis"
    });
    flexDirection = style_default({
      prop: "flexDirection"
    });
    flexWrap = style_default({
      prop: "flexWrap"
    });
    justifyContent = style_default({
      prop: "justifyContent"
    });
    alignItems = style_default({
      prop: "alignItems"
    });
    alignContent = style_default({
      prop: "alignContent"
    });
    order = style_default({
      prop: "order"
    });
    flex = style_default({
      prop: "flex"
    });
    flexGrow = style_default({
      prop: "flexGrow"
    });
    flexShrink = style_default({
      prop: "flexShrink"
    });
    alignSelf = style_default({
      prop: "alignSelf"
    });
    justifyItems = style_default({
      prop: "justifyItems"
    });
    justifySelf = style_default({
      prop: "justifySelf"
    });
    flexbox = compose_default(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);
    flexbox_default = flexbox;
  }
});

// node_modules/@mui/system/esm/positions.js
var position2, zIndex, top, right, bottom, left, positions_default;
var init_positions = __esm({
  "node_modules/@mui/system/esm/positions.js"() {
    init_style();
    init_compose();
    position2 = style_default({
      prop: "position"
    });
    zIndex = style_default({
      prop: "zIndex",
      themeKey: "zIndex"
    });
    top = style_default({
      prop: "top"
    });
    right = style_default({
      prop: "right"
    });
    bottom = style_default({
      prop: "bottom"
    });
    left = style_default({
      prop: "left"
    });
    positions_default = compose_default(position2, zIndex, top, right, bottom, left);
  }
});

// node_modules/@mui/system/esm/shadows.js
var boxShadow, shadows_default;
var init_shadows = __esm({
  "node_modules/@mui/system/esm/shadows.js"() {
    init_style();
    boxShadow = style_default({
      prop: "boxShadow",
      themeKey: "shadows"
    });
    shadows_default = boxShadow;
  }
});

// node_modules/@mui/system/esm/typography.js
var fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, textTransform, lineHeight, textAlign, typographyVariant, typography, typography_default;
var init_typography = __esm({
  "node_modules/@mui/system/esm/typography.js"() {
    init_style();
    init_compose();
    fontFamily = style_default({
      prop: "fontFamily",
      themeKey: "typography"
    });
    fontSize = style_default({
      prop: "fontSize",
      themeKey: "typography"
    });
    fontStyle = style_default({
      prop: "fontStyle",
      themeKey: "typography"
    });
    fontWeight = style_default({
      prop: "fontWeight",
      themeKey: "typography"
    });
    letterSpacing = style_default({
      prop: "letterSpacing"
    });
    textTransform = style_default({
      prop: "textTransform"
    });
    lineHeight = style_default({
      prop: "lineHeight"
    });
    textAlign = style_default({
      prop: "textAlign"
    });
    typographyVariant = style_default({
      prop: "typography",
      cssProperty: false,
      themeKey: "typography"
    });
    typography = compose_default(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign, textTransform);
    typography_default = typography;
  }
});

// node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js
function extendSxProp(props) {
  const {
    sx: inSx
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded3);
  const {
    systemProps,
    otherProps
  } = splitProps(other);
  let finalSx;
  if (Array.isArray(inSx)) {
    finalSx = [systemProps, ...inSx];
  } else if (typeof inSx === "function") {
    finalSx = (...args) => {
      const result = inSx(...args);
      if (!isPlainObject(result)) {
        return systemProps;
      }
      return _extends({}, systemProps, result);
    };
  } else {
    finalSx = _extends({}, systemProps, inSx);
  }
  return _extends({}, otherProps, {
    sx: finalSx
  });
}
var _excluded3, splitProps;
var init_extendSxProp = __esm({
  "node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_esm();
    init_defaultSxConfig();
    _excluded3 = ["sx"];
    splitProps = (props) => {
      var _props$theme$unstable, _props$theme;
      const result = {
        systemProps: {},
        otherProps: {}
      };
      const config = (_props$theme$unstable = props == null || (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig_default;
      Object.keys(props).forEach((prop) => {
        if (config[prop]) {
          result.systemProps[prop] = props[prop];
        } else {
          result.otherProps[prop] = props[prop];
        }
      });
      return result;
    };
  }
});

// node_modules/@mui/system/esm/styleFunctionSx/index.js
var init_styleFunctionSx2 = __esm({
  "node_modules/@mui/system/esm/styleFunctionSx/index.js"() {
    init_styleFunctionSx();
    init_styleFunctionSx();
    init_extendSxProp();
    init_defaultSxConfig();
  }
});

// node_modules/@mui/system/esm/getThemeValue.js
var filterPropsMapping, styleFunctionMapping, propToStyleFunction;
var init_getThemeValue = __esm({
  "node_modules/@mui/system/esm/getThemeValue.js"() {
    init_borders();
    init_display();
    init_flexbox();
    init_cssGrid();
    init_positions();
    init_palette();
    init_shadows();
    init_sizing();
    init_spacing();
    init_typography();
    filterPropsMapping = {
      borders: borders_default.filterProps,
      display: display_default.filterProps,
      flexbox: flexbox_default.filterProps,
      grid: cssGrid_default.filterProps,
      positions: positions_default.filterProps,
      palette: palette_default.filterProps,
      shadows: shadows_default.filterProps,
      sizing: sizing_default.filterProps,
      spacing: spacing_default.filterProps,
      typography: typography_default.filterProps
    };
    styleFunctionMapping = {
      borders: borders_default,
      display: display_default,
      flexbox: flexbox_default,
      grid: cssGrid_default,
      positions: positions_default,
      palette: palette_default,
      shadows: shadows_default,
      sizing: sizing_default,
      spacing: spacing_default,
      typography: typography_default
    };
    propToStyleFunction = Object.keys(filterPropsMapping).reduce((acc, styleFnName) => {
      filterPropsMapping[styleFnName].forEach((propName) => {
        acc[propName] = styleFunctionMapping[styleFnName];
      });
      return acc;
    }, {});
  }
});

// node_modules/@mui/system/node_modules/clsx/dist/clsx.mjs
function r(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e)
    n += e;
  else if ("object" == typeof e)
    if (Array.isArray(e))
      for (t = 0; t < e.length; t++)
        e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
    else
      for (t in e)
        e[t] && (n && (n += " "), n += t);
  return n;
}
function clsx() {
  for (var e, t, f = 0, n = ""; f < arguments.length; )
    (e = arguments[f++]) && (t = r(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_default;
var init_clsx = __esm({
  "node_modules/@mui/system/node_modules/clsx/dist/clsx.mjs"() {
    clsx_default = clsx;
  }
});

// node_modules/@mui/system/esm/createBox.js
function createBox(options = {}) {
  const {
    themeId,
    defaultTheme: defaultTheme8,
    defaultClassName = "MuiBox-root",
    generateClassName
  } = options;
  const BoxRoot = styled("div", {
    shouldForwardProp: (prop) => prop !== "theme" && prop !== "sx" && prop !== "as"
  })(styleFunctionSx_default);
  const Box3 = React17.forwardRef(function Box4(inProps, ref) {
    const theme = useTheme_default(defaultTheme8);
    const _extendSxProp = extendSxProp(inProps), {
      className,
      component = "div"
    } = _extendSxProp, other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded4);
    return (0, import_jsx_runtime4.jsx)(BoxRoot, _extends({
      as: component,
      ref,
      className: clsx_default(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),
      theme: themeId ? theme[themeId] || theme : theme
    }, other));
  });
  return Box3;
}
var React17, import_jsx_runtime4, _excluded4;
var init_createBox = __esm({
  "node_modules/@mui/system/esm/createBox.js"() {
    "use client";
    init_extends();
    init_objectWithoutPropertiesLoose();
    React17 = __toESM(require_react());
    init_clsx();
    init_styled_engine();
    init_styleFunctionSx2();
    init_useTheme();
    import_jsx_runtime4 = __toESM(require_jsx_runtime());
    _excluded4 = ["className", "component"];
  }
});

// node_modules/@mui/system/esm/Box/Box.js
var import_prop_types9, Box;
var init_Box = __esm({
  "node_modules/@mui/system/esm/Box/Box.js"() {
    "use client";
    import_prop_types9 = __toESM(require_prop_types());
    init_createBox();
    Box = createBox();
    true ? Box.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit the d.ts file and run "yarn proptypes"     |
      // ----------------------------------------------------------------------
      /**
       * @ignore
       */
      children: import_prop_types9.default.node,
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types9.default.elementType,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types9.default.oneOfType([import_prop_types9.default.arrayOf(import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object, import_prop_types9.default.bool])), import_prop_types9.default.func, import_prop_types9.default.object])
    } : void 0;
  }
});

// node_modules/@mui/system/esm/Box/index.js
var init_Box2 = __esm({
  "node_modules/@mui/system/esm/Box/index.js"() {
    "use client";
    init_Box();
  }
});

// node_modules/@mui/system/esm/propsToClassKey.js
function isEmpty2(string) {
  return string.length === 0;
}
function propsToClassKey(props) {
  const {
    variant
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded5);
  let classKey = variant || "";
  Object.keys(other).sort().forEach((key) => {
    if (key === "color") {
      classKey += isEmpty2(classKey) ? props[key] : capitalize(props[key]);
    } else {
      classKey += `${isEmpty2(classKey) ? key : capitalize(key)}${capitalize(props[key].toString())}`;
    }
  });
  return classKey;
}
var _excluded5;
var init_propsToClassKey = __esm({
  "node_modules/@mui/system/esm/propsToClassKey.js"() {
    init_objectWithoutPropertiesLoose();
    init_esm();
    _excluded5 = ["variant"];
  }
});

// node_modules/@mui/system/esm/createStyled.js
function isEmpty3(obj) {
  return Object.keys(obj).length === 0;
}
function isStringTag(tag) {
  return typeof tag === "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96;
}
function shouldForwardProp(prop) {
  return prop !== "ownerState" && prop !== "theme" && prop !== "sx" && prop !== "as";
}
function resolveTheme({
  defaultTheme: defaultTheme8,
  theme,
  themeId
}) {
  return isEmpty3(theme) ? defaultTheme8 : theme[themeId] || theme;
}
function defaultOverridesResolver(slot) {
  if (!slot) {
    return null;
  }
  return (props, styles7) => styles7[slot];
}
function createStyled3(input = {}) {
  const {
    themeId,
    defaultTheme: defaultTheme8 = systemDefaultTheme2,
    rootShouldForwardProp: rootShouldForwardProp2 = shouldForwardProp,
    slotShouldForwardProp: slotShouldForwardProp2 = shouldForwardProp
  } = input;
  const systemSx = (props) => {
    return styleFunctionSx_default(_extends({}, props, {
      theme: resolveTheme(_extends({}, props, {
        defaultTheme: defaultTheme8,
        themeId
      }))
    }));
  };
  systemSx.__mui_systemSx = true;
  return (tag, inputOptions = {}) => {
    internal_processStyles(tag, (styles7) => styles7.filter((style4) => !(style4 != null && style4.__mui_systemSx)));
    const {
      name: componentName,
      slot: componentSlot,
      skipVariantsResolver: inputSkipVariantsResolver,
      skipSx: inputSkipSx,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: overridesResolver8 = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))
    } = inputOptions, options = _objectWithoutPropertiesLoose(inputOptions, _excluded6);
    const skipVariantsResolver = inputSkipVariantsResolver !== void 0 ? inputSkipVariantsResolver : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      componentSlot && componentSlot !== "Root" && componentSlot !== "root" || false
    );
    const skipSx = inputSkipSx || false;
    let label;
    if (true) {
      if (componentName) {
        label = `${componentName}-${lowercaseFirstLetter(componentSlot || "Root")}`;
      }
    }
    let shouldForwardPropOption = shouldForwardProp;
    if (componentSlot === "Root" || componentSlot === "root") {
      shouldForwardPropOption = rootShouldForwardProp2;
    } else if (componentSlot) {
      shouldForwardPropOption = slotShouldForwardProp2;
    } else if (isStringTag(tag)) {
      shouldForwardPropOption = void 0;
    }
    const defaultStyledResolver = styled(tag, _extends({
      shouldForwardProp: shouldForwardPropOption,
      label
    }, options));
    const muiStyledResolver = (styleArg, ...expressions) => {
      const expressionsWithDefaultTheme = expressions ? expressions.map((stylesArg) => {
        return typeof stylesArg === "function" && stylesArg.__emotion_real !== stylesArg ? (props) => {
          return stylesArg(_extends({}, props, {
            theme: resolveTheme(_extends({}, props, {
              defaultTheme: defaultTheme8,
              themeId
            }))
          }));
        } : stylesArg;
      }) : [];
      let transformedStyleArg = styleArg;
      if (componentName && overridesResolver8) {
        expressionsWithDefaultTheme.push((props) => {
          const theme = resolveTheme(_extends({}, props, {
            defaultTheme: defaultTheme8,
            themeId
          }));
          const styleOverrides = getStyleOverrides(componentName, theme);
          if (styleOverrides) {
            const resolvedStyleOverrides = {};
            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {
              resolvedStyleOverrides[slotKey] = typeof slotStyle === "function" ? slotStyle(_extends({}, props, {
                theme
              })) : slotStyle;
            });
            return overridesResolver8(props, resolvedStyleOverrides);
          }
          return null;
        });
      }
      if (componentName && !skipVariantsResolver) {
        expressionsWithDefaultTheme.push((props) => {
          const theme = resolveTheme(_extends({}, props, {
            defaultTheme: defaultTheme8,
            themeId
          }));
          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);
        });
      }
      if (!skipSx) {
        expressionsWithDefaultTheme.push(systemSx);
      }
      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;
      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {
        const placeholders = new Array(numOfCustomFnsApplied).fill("");
        transformedStyleArg = [...styleArg, ...placeholders];
        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];
      } else if (typeof styleArg === "function" && // On the server Emotion doesn't use React.forwardRef for creating components, so the created
      // component stays as a function. This condition makes sure that we do not interpolate functions
      // which are basically components used as a selectors.
      styleArg.__emotion_real !== styleArg) {
        transformedStyleArg = (props) => styleArg(_extends({}, props, {
          theme: resolveTheme(_extends({}, props, {
            defaultTheme: defaultTheme8,
            themeId
          }))
        }));
      }
      const Component2 = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);
      if (true) {
        let displayName;
        if (componentName) {
          displayName = `${componentName}${capitalize(componentSlot || "")}`;
        }
        if (displayName === void 0) {
          displayName = `Styled(${getDisplayName(tag)})`;
        }
        Component2.displayName = displayName;
      }
      if (tag.muiName) {
        Component2.muiName = tag.muiName;
      }
      return Component2;
    };
    if (defaultStyledResolver.withConfig) {
      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;
    }
    return muiStyledResolver;
  };
}
var _excluded6, getStyleOverrides, getVariantStyles, variantsResolver, systemDefaultTheme2, lowercaseFirstLetter;
var init_createStyled = __esm({
  "node_modules/@mui/system/esm/createStyled.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    init_styled_engine();
    init_esm();
    init_createTheme2();
    init_propsToClassKey();
    init_styleFunctionSx2();
    _excluded6 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
    getStyleOverrides = (name, theme) => {
      if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {
        return theme.components[name].styleOverrides;
      }
      return null;
    };
    getVariantStyles = (name, theme) => {
      let variants = [];
      if (theme && theme.components && theme.components[name] && theme.components[name].variants) {
        variants = theme.components[name].variants;
      }
      const variantsStyles = {};
      variants.forEach((definition) => {
        const key = propsToClassKey(definition.props);
        variantsStyles[key] = definition.style;
      });
      return variantsStyles;
    };
    variantsResolver = (props, styles7, theme, name) => {
      var _theme$components;
      const {
        ownerState = {}
      } = props;
      const variantsStyles = [];
      const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[name]) == null ? void 0 : _theme$components.variants;
      if (themeVariants) {
        themeVariants.forEach((themeVariant) => {
          let isMatch = true;
          Object.keys(themeVariant.props).forEach((key) => {
            if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {
              isMatch = false;
            }
          });
          if (isMatch) {
            variantsStyles.push(styles7[propsToClassKey(themeVariant.props)]);
          }
        });
      }
      return variantsStyles;
    };
    systemDefaultTheme2 = createTheme_default();
    lowercaseFirstLetter = (string) => {
      if (!string) {
        return string;
      }
      return string.charAt(0).toLowerCase() + string.slice(1);
    };
  }
});

// node_modules/@mui/system/esm/styled.js
var styled2, styled_default;
var init_styled = __esm({
  "node_modules/@mui/system/esm/styled.js"() {
    init_createStyled();
    styled2 = createStyled3();
    styled_default = styled2;
  }
});

// node_modules/@mui/system/esm/useThemeProps/getThemeProps.js
function getThemeProps(params) {
  const {
    theme,
    name,
    props
  } = params;
  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
    return props;
  }
  return resolveProps(theme.components[name].defaultProps, props);
}
var init_getThemeProps = __esm({
  "node_modules/@mui/system/esm/useThemeProps/getThemeProps.js"() {
    init_esm();
  }
});

// node_modules/@mui/system/esm/useThemeProps/useThemeProps.js
function useThemeProps({
  props,
  name,
  defaultTheme: defaultTheme8,
  themeId
}) {
  let theme = useTheme_default(defaultTheme8);
  if (themeId) {
    theme = theme[themeId] || theme;
  }
  const mergedProps = getThemeProps({
    theme,
    name,
    props
  });
  return mergedProps;
}
var init_useThemeProps = __esm({
  "node_modules/@mui/system/esm/useThemeProps/useThemeProps.js"() {
    "use client";
    init_getThemeProps();
    init_useTheme();
  }
});

// node_modules/@mui/system/esm/useThemeProps/index.js
var init_useThemeProps2 = __esm({
  "node_modules/@mui/system/esm/useThemeProps/index.js"() {
    "use client";
    init_useThemeProps();
    init_getThemeProps();
  }
});

// node_modules/@mui/system/esm/colorManipulator.js
function clamp(value, min3 = 0, max3 = 1) {
  if (true) {
    if (value < min3 || value > max3) {
      console.error(`MUI: The value provided ${value} is out of range [${min3}, ${max3}].`);
    }
  }
  return Math.min(Math.max(min3, value), max3);
}
function hexToRgb(color2) {
  color2 = color2.slice(1);
  const re = new RegExp(`.{1,${color2.length >= 6 ? 2 : 1}}`, "g");
  let colors = color2.match(re);
  if (colors && colors[0].length === 1) {
    colors = colors.map((n) => n + n);
  }
  return colors ? `rgb${colors.length === 4 ? "a" : ""}(${colors.map((n, index2) => {
    return index2 < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1e3) / 1e3;
  }).join(", ")})` : "";
}
function decomposeColor(color2) {
  if (color2.type) {
    return color2;
  }
  if (color2.charAt(0) === "#") {
    return decomposeColor(hexToRgb(color2));
  }
  const marker = color2.indexOf("(");
  const type = color2.substring(0, marker);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(type) === -1) {
    throw new Error(true ? `MUI: Unsupported \`${color2}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : formatMuiErrorMessage(9, color2));
  }
  let values3 = color2.substring(marker + 1, color2.length - 1);
  let colorSpace;
  if (type === "color") {
    values3 = values3.split(" ");
    colorSpace = values3.shift();
    if (values3.length === 4 && values3[3].charAt(0) === "/") {
      values3[3] = values3[3].slice(1);
    }
    if (["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(colorSpace) === -1) {
      throw new Error(true ? `MUI: unsupported \`${colorSpace}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : formatMuiErrorMessage(10, colorSpace));
    }
  } else {
    values3 = values3.split(",");
  }
  values3 = values3.map((value) => parseFloat(value));
  return {
    type,
    values: values3,
    colorSpace
  };
}
function recomposeColor(color2) {
  const {
    type,
    colorSpace
  } = color2;
  let {
    values: values3
  } = color2;
  if (type.indexOf("rgb") !== -1) {
    values3 = values3.map((n, i) => i < 3 ? parseInt(n, 10) : n);
  } else if (type.indexOf("hsl") !== -1) {
    values3[1] = `${values3[1]}%`;
    values3[2] = `${values3[2]}%`;
  }
  if (type.indexOf("color") !== -1) {
    values3 = `${colorSpace} ${values3.join(" ")}`;
  } else {
    values3 = `${values3.join(", ")}`;
  }
  return `${type}(${values3})`;
}
function hslToRgb(color2) {
  color2 = decomposeColor(color2);
  const {
    values: values3
  } = color2;
  const h = values3[0];
  const s = values3[1] / 100;
  const l = values3[2] / 100;
  const a = s * Math.min(l, 1 - l);
  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
  let type = "rgb";
  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];
  if (color2.type === "hsla") {
    type += "a";
    rgb.push(values3[3]);
  }
  return recomposeColor({
    type,
    values: rgb
  });
}
function getLuminance(color2) {
  color2 = decomposeColor(color2);
  let rgb = color2.type === "hsl" || color2.type === "hsla" ? decomposeColor(hslToRgb(color2)).values : color2.values;
  rgb = rgb.map((val) => {
    if (color2.type !== "color") {
      val /= 255;
    }
    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
  });
  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
}
function getContrastRatio(foreground, background) {
  const lumA = getLuminance(foreground);
  const lumB = getLuminance(background);
  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}
function alpha(color2, value) {
  color2 = decomposeColor(color2);
  value = clamp(value);
  if (color2.type === "rgb" || color2.type === "hsl") {
    color2.type += "a";
  }
  if (color2.type === "color") {
    color2.values[3] = `/${value}`;
  } else {
    color2.values[3] = value;
  }
  return recomposeColor(color2);
}
function private_safeAlpha(color2, value, warning) {
  try {
    return alpha(color2, value);
  } catch (error) {
    if (warning && true) {
      console.warn(warning);
    }
    return color2;
  }
}
function darken(color2, coefficient) {
  color2 = decomposeColor(color2);
  coefficient = clamp(coefficient);
  if (color2.type.indexOf("hsl") !== -1) {
    color2.values[2] *= 1 - coefficient;
  } else if (color2.type.indexOf("rgb") !== -1 || color2.type.indexOf("color") !== -1) {
    for (let i = 0; i < 3; i += 1) {
      color2.values[i] *= 1 - coefficient;
    }
  }
  return recomposeColor(color2);
}
function private_safeDarken(color2, coefficient, warning) {
  try {
    return darken(color2, coefficient);
  } catch (error) {
    if (warning && true) {
      console.warn(warning);
    }
    return color2;
  }
}
function lighten(color2, coefficient) {
  color2 = decomposeColor(color2);
  coefficient = clamp(coefficient);
  if (color2.type.indexOf("hsl") !== -1) {
    color2.values[2] += (100 - color2.values[2]) * coefficient;
  } else if (color2.type.indexOf("rgb") !== -1) {
    for (let i = 0; i < 3; i += 1) {
      color2.values[i] += (255 - color2.values[i]) * coefficient;
    }
  } else if (color2.type.indexOf("color") !== -1) {
    for (let i = 0; i < 3; i += 1) {
      color2.values[i] += (1 - color2.values[i]) * coefficient;
    }
  }
  return recomposeColor(color2);
}
function private_safeLighten(color2, coefficient, warning) {
  try {
    return lighten(color2, coefficient);
  } catch (error) {
    if (warning && true) {
      console.warn(warning);
    }
    return color2;
  }
}
function emphasize(color2, coefficient = 0.15) {
  return getLuminance(color2) > 0.5 ? darken(color2, coefficient) : lighten(color2, coefficient);
}
function private_safeEmphasize(color2, coefficient, warning) {
  try {
    return private_safeEmphasize(color2, coefficient);
  } catch (error) {
    if (warning && true) {
      console.warn(warning);
    }
    return color2;
  }
}
var colorChannel, private_safeColorChannel;
var init_colorManipulator = __esm({
  "node_modules/@mui/system/esm/colorManipulator.js"() {
    init_esm();
    colorChannel = (color2) => {
      const decomposedColor = decomposeColor(color2);
      return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf("hsl") !== -1 && idx !== 0 ? `${val}%` : val).join(" ");
    };
    private_safeColorChannel = (color2, warning) => {
      try {
        return colorChannel(color2);
      } catch (error) {
        if (warning && true) {
          console.warn(warning);
        }
        return color2;
      }
    };
  }
});

// node_modules/@mui/private-theming/useTheme/ThemeContext.js
var React18, ThemeContext2, ThemeContext_default;
var init_ThemeContext = __esm({
  "node_modules/@mui/private-theming/useTheme/ThemeContext.js"() {
    React18 = __toESM(require_react());
    ThemeContext2 = React18.createContext(null);
    if (true) {
      ThemeContext2.displayName = "ThemeContext";
    }
    ThemeContext_default = ThemeContext2;
  }
});

// node_modules/@mui/private-theming/useTheme/useTheme.js
function useTheme4() {
  const theme = React19.useContext(ThemeContext_default);
  if (true) {
    React19.useDebugValue(theme);
  }
  return theme;
}
var React19;
var init_useTheme2 = __esm({
  "node_modules/@mui/private-theming/useTheme/useTheme.js"() {
    React19 = __toESM(require_react());
    init_ThemeContext();
  }
});

// node_modules/@mui/private-theming/useTheme/index.js
var init_useTheme3 = __esm({
  "node_modules/@mui/private-theming/useTheme/index.js"() {
    init_useTheme2();
  }
});

// node_modules/@mui/private-theming/ThemeProvider/nested.js
var hasSymbol, nested_default;
var init_nested = __esm({
  "node_modules/@mui/private-theming/ThemeProvider/nested.js"() {
    hasSymbol = typeof Symbol === "function" && Symbol.for;
    nested_default = hasSymbol ? Symbol.for("mui.nested") : "__THEME_NESTED__";
  }
});

// node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js
function mergeOuterLocalTheme(outerTheme, localTheme) {
  if (typeof localTheme === "function") {
    const mergedTheme = localTheme(outerTheme);
    if (true) {
      if (!mergedTheme) {
        console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join("\n"));
      }
    }
    return mergedTheme;
  }
  return _extends({}, outerTheme, localTheme);
}
function ThemeProvider2(props) {
  const {
    children: children2,
    theme: localTheme
  } = props;
  const outerTheme = useTheme4();
  if (true) {
    if (outerTheme === null && typeof localTheme === "function") {
      console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join("\n"));
    }
  }
  const theme = React20.useMemo(() => {
    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);
    if (output != null) {
      output[nested_default] = outerTheme !== null;
    }
    return output;
  }, [localTheme, outerTheme]);
  return (0, import_jsx_runtime5.jsx)(ThemeContext_default.Provider, {
    value: theme,
    children: children2
  });
}
var React20, import_prop_types10, import_jsx_runtime5, ThemeProvider_default;
var init_ThemeProvider = __esm({
  "node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js"() {
    init_extends();
    React20 = __toESM(require_react());
    import_prop_types10 = __toESM(require_prop_types());
    init_esm();
    init_ThemeContext();
    init_useTheme3();
    init_nested();
    import_jsx_runtime5 = __toESM(require_jsx_runtime());
    true ? ThemeProvider2.propTypes = {
      /**
       * Your component tree.
       */
      children: import_prop_types10.default.node,
      /**
       * A theme object. You can provide a function to extend the outer theme.
       */
      theme: import_prop_types10.default.oneOfType([import_prop_types10.default.object, import_prop_types10.default.func]).isRequired
    } : void 0;
    if (true) {
      true ? ThemeProvider2.propTypes = exactProp(ThemeProvider2.propTypes) : void 0;
    }
    ThemeProvider_default = ThemeProvider2;
  }
});

// node_modules/@mui/private-theming/ThemeProvider/index.js
var init_ThemeProvider2 = __esm({
  "node_modules/@mui/private-theming/ThemeProvider/index.js"() {
    init_ThemeProvider();
    init_nested();
  }
});

// node_modules/@mui/private-theming/index.js
var init_private_theming = __esm({
  "node_modules/@mui/private-theming/index.js"() {
    init_ThemeProvider2();
    init_ThemeProvider2();
    init_useTheme3();
  }
});

// node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js
function useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {
  return React21.useMemo(() => {
    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;
    if (typeof localTheme === "function") {
      const mergedTheme = localTheme(resolvedTheme);
      const result = themeId ? _extends({}, upperTheme, {
        [themeId]: mergedTheme
      }) : mergedTheme;
      if (isPrivate) {
        return () => result;
      }
      return result;
    }
    return themeId ? _extends({}, upperTheme, {
      [themeId]: localTheme
    }) : _extends({}, upperTheme, localTheme);
  }, [themeId, upperTheme, localTheme, isPrivate]);
}
function ThemeProvider3(props) {
  const {
    children: children2,
    theme: localTheme,
    themeId
  } = props;
  const upperTheme = useThemeWithoutDefault_default(EMPTY_THEME);
  const upperPrivateTheme = useTheme4() || EMPTY_THEME;
  if (true) {
    if (upperTheme === null && typeof localTheme === "function" || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === "function") {
      console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join("\n"));
    }
  }
  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);
  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);
  return (0, import_jsx_runtime6.jsx)(ThemeProvider_default, {
    theme: privateTheme,
    children: (0, import_jsx_runtime6.jsx)(ThemeContext.Provider, {
      value: engineTheme,
      children: children2
    })
  });
}
var React21, import_prop_types11, import_jsx_runtime6, EMPTY_THEME, ThemeProvider_default2;
var init_ThemeProvider3 = __esm({
  "node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js"() {
    "use client";
    init_extends();
    React21 = __toESM(require_react());
    import_prop_types11 = __toESM(require_prop_types());
    init_private_theming();
    init_esm();
    init_styled_engine();
    init_useThemeWithoutDefault();
    import_jsx_runtime6 = __toESM(require_jsx_runtime());
    EMPTY_THEME = {};
    true ? ThemeProvider3.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit the d.ts file and run "yarn proptypes"     |
      // ----------------------------------------------------------------------
      /**
       * Your component tree.
       */
      children: import_prop_types11.default.node,
      /**
       * A theme object. You can provide a function to extend the outer theme.
       */
      theme: import_prop_types11.default.oneOfType([import_prop_types11.default.func, import_prop_types11.default.object]).isRequired,
      /**
       * The design system's unique id for getting the corresponded theme when there are multiple design systems.
       */
      themeId: import_prop_types11.default.string
    } : void 0;
    if (true) {
      true ? ThemeProvider3.propTypes = exactProp(ThemeProvider3.propTypes) : void 0;
    }
    ThemeProvider_default2 = ThemeProvider3;
  }
});

// node_modules/@mui/system/esm/ThemeProvider/index.js
var init_ThemeProvider4 = __esm({
  "node_modules/@mui/system/esm/ThemeProvider/index.js"() {
    "use client";
    init_ThemeProvider3();
  }
});

// node_modules/@mui/system/esm/cssVars/getInitColorSchemeScript.js
function getInitColorSchemeScript(options) {
  const {
    defaultMode = "light",
    defaultLightColorScheme = "light",
    defaultDarkColorScheme = "dark",
    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,
    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,
    attribute = DEFAULT_ATTRIBUTE,
    colorSchemeNode = "document.documentElement"
  } = options || {};
  return (0, import_jsx_runtime7.jsx)("script", {
    // eslint-disable-next-line react/no-danger
    dangerouslySetInnerHTML: {
      __html: `(function() { try {
        var mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';
        var cssColorScheme = mode;
        var colorScheme = '';
        if (mode === 'system') {
          // handle system mode
          var mql = window.matchMedia('(prefers-color-scheme: dark)');
          if (mql.matches) {
            cssColorScheme = 'dark';
            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';
          } else {
            cssColorScheme = 'light';
            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';
          }
        }
        if (mode === 'light') {
          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';
        }
        if (mode === 'dark') {
          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';
        }
        if (colorScheme) {
          ${colorSchemeNode}.setAttribute('${attribute}', colorScheme);
        }
      } catch (e) {} })();`
    }
  }, "mui-color-scheme-init");
}
var React22, import_jsx_runtime7, DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_ATTRIBUTE;
var init_getInitColorSchemeScript = __esm({
  "node_modules/@mui/system/esm/cssVars/getInitColorSchemeScript.js"() {
    React22 = __toESM(require_react());
    import_jsx_runtime7 = __toESM(require_jsx_runtime());
    DEFAULT_MODE_STORAGE_KEY = "mode";
    DEFAULT_COLOR_SCHEME_STORAGE_KEY = "color-scheme";
    DEFAULT_ATTRIBUTE = "data-color-scheme";
  }
});

// node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js
function getSystemMode(mode) {
  if (typeof window !== "undefined" && mode === "system") {
    const mql = window.matchMedia("(prefers-color-scheme: dark)");
    if (mql.matches) {
      return "dark";
    }
    return "light";
  }
  return void 0;
}
function processState(state, callback) {
  if (state.mode === "light" || state.mode === "system" && state.systemMode === "light") {
    return callback("light");
  }
  if (state.mode === "dark" || state.mode === "system" && state.systemMode === "dark") {
    return callback("dark");
  }
  return void 0;
}
function getColorScheme(state) {
  return processState(state, (mode) => {
    if (mode === "light") {
      return state.lightColorScheme;
    }
    if (mode === "dark") {
      return state.darkColorScheme;
    }
    return void 0;
  });
}
function initializeValue(key, defaultValue) {
  if (typeof window === "undefined") {
    return void 0;
  }
  let value;
  try {
    value = localStorage.getItem(key) || void 0;
    if (!value) {
      localStorage.setItem(key, defaultValue);
    }
  } catch (e) {
  }
  return value || defaultValue;
}
function useCurrentColorScheme(options) {
  const {
    defaultMode = "light",
    defaultLightColorScheme,
    defaultDarkColorScheme,
    supportedColorSchemes = [],
    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,
    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,
    storageWindow = typeof window === "undefined" ? void 0 : window
  } = options;
  const joinedColorSchemes = supportedColorSchemes.join(",");
  const [state, setState] = React23.useState(() => {
    const initialMode = initializeValue(modeStorageKey, defaultMode);
    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);
    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);
    return {
      mode: initialMode,
      systemMode: getSystemMode(initialMode),
      lightColorScheme,
      darkColorScheme
    };
  });
  const colorScheme = getColorScheme(state);
  const setMode = React23.useCallback((mode) => {
    setState((currentState) => {
      if (mode === currentState.mode) {
        return currentState;
      }
      const newMode = !mode ? defaultMode : mode;
      try {
        localStorage.setItem(modeStorageKey, newMode);
      } catch (e) {
      }
      return _extends({}, currentState, {
        mode: newMode,
        systemMode: getSystemMode(newMode)
      });
    });
  }, [modeStorageKey, defaultMode]);
  const setColorScheme = React23.useCallback((value) => {
    if (!value) {
      setState((currentState) => {
        try {
          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);
          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);
        } catch (e) {
        }
        return _extends({}, currentState, {
          lightColorScheme: defaultLightColorScheme,
          darkColorScheme: defaultDarkColorScheme
        });
      });
    } else if (typeof value === "string") {
      if (value && !joinedColorSchemes.includes(value)) {
        console.error(`\`${value}\` does not exist in \`theme.colorSchemes\`.`);
      } else {
        setState((currentState) => {
          const newState = _extends({}, currentState);
          processState(currentState, (mode) => {
            try {
              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);
            } catch (e) {
            }
            if (mode === "light") {
              newState.lightColorScheme = value;
            }
            if (mode === "dark") {
              newState.darkColorScheme = value;
            }
          });
          return newState;
        });
      }
    } else {
      setState((currentState) => {
        const newState = _extends({}, currentState);
        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;
        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;
        if (newLightColorScheme) {
          if (!joinedColorSchemes.includes(newLightColorScheme)) {
            console.error(`\`${newLightColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
          } else {
            newState.lightColorScheme = newLightColorScheme;
            try {
              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);
            } catch (error) {
            }
          }
        }
        if (newDarkColorScheme) {
          if (!joinedColorSchemes.includes(newDarkColorScheme)) {
            console.error(`\`${newDarkColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
          } else {
            newState.darkColorScheme = newDarkColorScheme;
            try {
              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);
            } catch (error) {
            }
          }
        }
        return newState;
      });
    }
  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);
  const handleMediaQuery = React23.useCallback((e) => {
    if (state.mode === "system") {
      setState((currentState) => _extends({}, currentState, {
        systemMode: e != null && e.matches ? "dark" : "light"
      }));
    }
  }, [state.mode]);
  const mediaListener = React23.useRef(handleMediaQuery);
  mediaListener.current = handleMediaQuery;
  React23.useEffect(() => {
    const handler = (...args) => mediaListener.current(...args);
    const media = window.matchMedia("(prefers-color-scheme: dark)");
    media.addListener(handler);
    handler(media);
    return () => media.removeListener(handler);
  }, []);
  React23.useEffect(() => {
    const handleStorage = (event) => {
      const value = event.newValue;
      if (typeof event.key === "string" && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {
        if (event.key.endsWith("light")) {
          setColorScheme({
            light: value
          });
        }
        if (event.key.endsWith("dark")) {
          setColorScheme({
            dark: value
          });
        }
      }
      if (event.key === modeStorageKey && (!value || ["light", "dark", "system"].includes(value))) {
        setMode(value || defaultMode);
      }
    };
    if (storageWindow) {
      storageWindow.addEventListener("storage", handleStorage);
      return () => storageWindow.removeEventListener("storage", handleStorage);
    }
    return void 0;
  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);
  return _extends({}, state, {
    colorScheme,
    setMode,
    setColorScheme
  });
}
var React23;
var init_useCurrentColorScheme = __esm({
  "node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js"() {
    "use client";
    init_extends();
    React23 = __toESM(require_react());
    init_getInitColorSchemeScript();
  }
});

// node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js
function createCssVarsProvider(options) {
  const {
    themeId,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: defaultTheme8 = {},
    attribute: defaultAttribute = DEFAULT_ATTRIBUTE,
    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,
    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,
    defaultMode: designSystemMode = "light",
    defaultColorScheme: designSystemColorScheme,
    disableTransitionOnChange: designSystemTransitionOnChange = false,
    resolveTheme: resolveTheme2,
    excludeVariablesFromRoot: excludeVariablesFromRoot2
  } = options;
  if (!defaultTheme8.colorSchemes || typeof designSystemColorScheme === "string" && !defaultTheme8.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === "object" && !defaultTheme8.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === "object" && !defaultTheme8.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {
    console.error(`MUI: \`${designSystemColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
  }
  const ColorSchemeContext = React24.createContext(void 0);
  const useColorScheme2 = () => {
    const value = React24.useContext(ColorSchemeContext);
    if (!value) {
      throw new Error(true ? `MUI: \`useColorScheme\` must be called under <CssVarsProvider />` : formatMuiErrorMessage(19));
    }
    return value;
  };
  function CssVarsProvider2({
    children: children2,
    theme: themeProp = defaultTheme8,
    modeStorageKey = defaultModeStorageKey,
    colorSchemeStorageKey = defaultColorSchemeStorageKey,
    attribute = defaultAttribute,
    defaultMode = designSystemMode,
    defaultColorScheme = designSystemColorScheme,
    disableTransitionOnChange = designSystemTransitionOnChange,
    storageWindow = typeof window === "undefined" ? void 0 : window,
    documentNode = typeof document === "undefined" ? void 0 : document,
    colorSchemeNode = typeof document === "undefined" ? void 0 : document.documentElement,
    colorSchemeSelector = ":root",
    disableNestedContext = false,
    disableStyleSheetGeneration = false
  }) {
    const hasMounted = React24.useRef(false);
    const upperTheme = useTheme4();
    const ctx = React24.useContext(ColorSchemeContext);
    const nested = !!ctx && !disableNestedContext;
    const scopedTheme = themeProp[themeId];
    const _ref2 = scopedTheme || themeProp, {
      colorSchemes = {},
      components = {},
      generateCssVars = () => ({
        vars: {},
        css: {}
      }),
      cssVarPrefix
    } = _ref2, restThemeProp = _objectWithoutPropertiesLoose(_ref2, _excluded7);
    const allColorSchemes = Object.keys(colorSchemes);
    const defaultLightColorScheme2 = typeof defaultColorScheme === "string" ? defaultColorScheme : defaultColorScheme.light;
    const defaultDarkColorScheme2 = typeof defaultColorScheme === "string" ? defaultColorScheme : defaultColorScheme.dark;
    const {
      mode: stateMode,
      setMode,
      systemMode,
      lightColorScheme,
      darkColorScheme,
      colorScheme: stateColorScheme,
      setColorScheme
    } = useCurrentColorScheme({
      supportedColorSchemes: allColorSchemes,
      defaultLightColorScheme: defaultLightColorScheme2,
      defaultDarkColorScheme: defaultDarkColorScheme2,
      modeStorageKey,
      colorSchemeStorageKey,
      defaultMode,
      storageWindow
    });
    let mode = stateMode;
    let colorScheme = stateColorScheme;
    if (nested) {
      mode = ctx.mode;
      colorScheme = ctx.colorScheme;
    }
    const calculatedMode = (() => {
      if (mode) {
        return mode;
      }
      if (defaultMode === "system") {
        return designSystemMode;
      }
      return defaultMode;
    })();
    const calculatedColorScheme = (() => {
      if (!colorScheme) {
        if (calculatedMode === "dark") {
          return defaultDarkColorScheme2;
        }
        return defaultLightColorScheme2;
      }
      return colorScheme;
    })();
    const {
      css: rootCss,
      vars: rootVars
    } = generateCssVars();
    const theme = _extends({}, restThemeProp, {
      components,
      colorSchemes,
      cssVarPrefix,
      vars: rootVars,
      getColorSchemeSelector: (targetColorScheme) => `[${attribute}="${targetColorScheme}"] &`
    });
    const defaultColorSchemeStyleSheet = {};
    const otherColorSchemesStyleSheet = {};
    Object.entries(colorSchemes).forEach(([key, scheme]) => {
      const {
        css: css2,
        vars
      } = generateCssVars(key);
      theme.vars = deepmerge(theme.vars, vars);
      if (key === calculatedColorScheme) {
        Object.keys(scheme).forEach((schemeKey) => {
          if (scheme[schemeKey] && typeof scheme[schemeKey] === "object") {
            theme[schemeKey] = _extends({}, theme[schemeKey], scheme[schemeKey]);
          } else {
            theme[schemeKey] = scheme[schemeKey];
          }
        });
        if (theme.palette) {
          theme.palette.colorScheme = key;
        }
      }
      const resolvedDefaultColorScheme = (() => {
        if (typeof defaultColorScheme === "string") {
          return defaultColorScheme;
        }
        if (defaultMode === "dark") {
          return defaultColorScheme.dark;
        }
        return defaultColorScheme.light;
      })();
      if (key === resolvedDefaultColorScheme) {
        if (excludeVariablesFromRoot2) {
          const excludedVariables = {};
          excludeVariablesFromRoot2(cssVarPrefix).forEach((cssVar) => {
            excludedVariables[cssVar] = css2[cssVar];
            delete css2[cssVar];
          });
          defaultColorSchemeStyleSheet[`[${attribute}="${key}"]`] = excludedVariables;
        }
        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}="${key}"]`] = css2;
      } else {
        otherColorSchemesStyleSheet[`${colorSchemeSelector === ":root" ? "" : colorSchemeSelector}[${attribute}="${key}"]`] = css2;
      }
    });
    theme.vars = deepmerge(theme.vars, rootVars);
    React24.useEffect(() => {
      if (colorScheme && colorSchemeNode) {
        colorSchemeNode.setAttribute(attribute, colorScheme);
      }
    }, [colorScheme, attribute, colorSchemeNode]);
    React24.useEffect(() => {
      let timer;
      if (disableTransitionOnChange && hasMounted.current && documentNode) {
        const css2 = documentNode.createElement("style");
        css2.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));
        documentNode.head.appendChild(css2);
        (() => window.getComputedStyle(documentNode.body))();
        timer = setTimeout(() => {
          documentNode.head.removeChild(css2);
        }, 1);
      }
      return () => {
        clearTimeout(timer);
      };
    }, [colorScheme, disableTransitionOnChange, documentNode]);
    React24.useEffect(() => {
      hasMounted.current = true;
      return () => {
        hasMounted.current = false;
      };
    }, []);
    const contextValue = React24.useMemo(() => ({
      mode,
      systemMode,
      setMode,
      lightColorScheme,
      darkColorScheme,
      colorScheme,
      setColorScheme,
      allColorSchemes
    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);
    let shouldGenerateStyleSheet = true;
    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {
      shouldGenerateStyleSheet = false;
    }
    const element = (0, import_jsx_runtime9.jsxs)(React24.Fragment, {
      children: [shouldGenerateStyleSheet && (0, import_jsx_runtime9.jsxs)(React24.Fragment, {
        children: [(0, import_jsx_runtime8.jsx)(GlobalStyles, {
          styles: {
            [colorSchemeSelector]: rootCss
          }
        }), (0, import_jsx_runtime8.jsx)(GlobalStyles, {
          styles: defaultColorSchemeStyleSheet
        }), (0, import_jsx_runtime8.jsx)(GlobalStyles, {
          styles: otherColorSchemesStyleSheet
        })]
      }), (0, import_jsx_runtime8.jsx)(ThemeProvider_default2, {
        themeId: scopedTheme ? themeId : void 0,
        theme: resolveTheme2 ? resolveTheme2(theme) : theme,
        children: children2
      })]
    });
    if (nested) {
      return element;
    }
    return (0, import_jsx_runtime8.jsx)(ColorSchemeContext.Provider, {
      value: contextValue,
      children: element
    });
  }
  true ? CssVarsProvider2.propTypes = {
    /**
     * The body attribute name to attach colorScheme.
     */
    attribute: import_prop_types12.default.string,
    /**
     * The component tree.
     */
    children: import_prop_types12.default.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: import_prop_types12.default.any,
    /**
     * The CSS selector for attaching the generated custom properties
     */
    colorSchemeSelector: import_prop_types12.default.string,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: import_prop_types12.default.string,
    /**
     * The initial color scheme used.
     */
    defaultColorScheme: import_prop_types12.default.oneOfType([import_prop_types12.default.string, import_prop_types12.default.object]),
    /**
     * The initial mode used.
     */
    defaultMode: import_prop_types12.default.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: import_prop_types12.default.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: import_prop_types12.default.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes
     */
    disableTransitionOnChange: import_prop_types12.default.bool,
    /**
     * The document to attach the attribute to
     */
    documentNode: import_prop_types12.default.any,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: import_prop_types12.default.string,
    /**
     * The window that attaches the 'storage' event listener
     * @default window
     */
    storageWindow: import_prop_types12.default.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: import_prop_types12.default.object
  } : void 0;
  const defaultLightColorScheme = typeof designSystemColorScheme === "string" ? designSystemColorScheme : designSystemColorScheme.light;
  const defaultDarkColorScheme = typeof designSystemColorScheme === "string" ? designSystemColorScheme : designSystemColorScheme.dark;
  const getInitColorSchemeScript3 = (params) => getInitColorSchemeScript(_extends({
    attribute: defaultAttribute,
    colorSchemeStorageKey: defaultColorSchemeStorageKey,
    defaultMode: designSystemMode,
    defaultLightColorScheme,
    defaultDarkColorScheme,
    modeStorageKey: defaultModeStorageKey
  }, params));
  return {
    CssVarsProvider: CssVarsProvider2,
    useColorScheme: useColorScheme2,
    getInitColorSchemeScript: getInitColorSchemeScript3
  };
}
var React24, import_prop_types12, import_jsx_runtime8, import_jsx_runtime9, _excluded7, DISABLE_CSS_TRANSITION;
var init_createCssVarsProvider = __esm({
  "node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_esm();
    React24 = __toESM(require_react());
    import_prop_types12 = __toESM(require_prop_types());
    init_esm();
    init_styled_engine();
    init_private_theming();
    init_ThemeProvider4();
    init_getInitColorSchemeScript();
    init_useCurrentColorScheme();
    import_jsx_runtime8 = __toESM(require_jsx_runtime());
    import_jsx_runtime9 = __toESM(require_jsx_runtime());
    _excluded7 = ["colorSchemes", "components", "generateCssVars", "cssVarPrefix"];
    DISABLE_CSS_TRANSITION = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
  }
});

// node_modules/@mui/system/esm/cssVars/createGetCssVar.js
function createGetCssVar(prefix3 = "") {
  function appendVar(...vars) {
    if (!vars.length) {
      return "";
    }
    const value = vars[0];
    if (typeof value === "string" && !value.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/)) {
      return `, var(--${prefix3 ? `${prefix3}-` : ""}${value}${appendVar(...vars.slice(1))})`;
    }
    return `, ${value}`;
  }
  const getCssVar = (field, ...fallbacks) => {
    return `var(--${prefix3 ? `${prefix3}-` : ""}${field}${appendVar(...fallbacks)})`;
  };
  return getCssVar;
}
var init_createGetCssVar = __esm({
  "node_modules/@mui/system/esm/cssVars/createGetCssVar.js"() {
  }
});

// node_modules/@mui/system/esm/cssVars/cssVarsParser.js
function cssVarsParser(theme, options) {
  const {
    prefix: prefix3,
    shouldSkipGeneratingVar: shouldSkipGeneratingVar2
  } = options || {};
  const css2 = {};
  const vars = {};
  const varsWithDefaults = {};
  walkObjectDeep(
    theme,
    (keys, value, arrayKeys) => {
      if (typeof value === "string" || typeof value === "number") {
        if (!shouldSkipGeneratingVar2 || !shouldSkipGeneratingVar2(keys, value)) {
          const cssVar = `--${prefix3 ? `${prefix3}-` : ""}${keys.join("-")}`;
          Object.assign(css2, {
            [cssVar]: getCssValue(keys, value)
          });
          assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);
          assignNestedKeys(varsWithDefaults, keys, `var(${cssVar}, ${value})`, arrayKeys);
        }
      }
    },
    (keys) => keys[0] === "vars"
    // skip 'vars/*' paths
  );
  return {
    css: css2,
    vars,
    varsWithDefaults
  };
}
var assignNestedKeys, walkObjectDeep, getCssValue;
var init_cssVarsParser = __esm({
  "node_modules/@mui/system/esm/cssVars/cssVarsParser.js"() {
    assignNestedKeys = (obj, keys, value, arrayKeys = []) => {
      let temp = obj;
      keys.forEach((k, index2) => {
        if (index2 === keys.length - 1) {
          if (Array.isArray(temp)) {
            temp[Number(k)] = value;
          } else if (temp && typeof temp === "object") {
            temp[k] = value;
          }
        } else if (temp && typeof temp === "object") {
          if (!temp[k]) {
            temp[k] = arrayKeys.includes(k) ? [] : {};
          }
          temp = temp[k];
        }
      });
    };
    walkObjectDeep = (obj, callback, shouldSkipPaths) => {
      function recurse(object, parentKeys = [], arrayKeys = []) {
        Object.entries(object).forEach(([key, value]) => {
          if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {
            if (value !== void 0 && value !== null) {
              if (typeof value === "object" && Object.keys(value).length > 0) {
                recurse(value, [...parentKeys, key], Array.isArray(value) ? [...arrayKeys, key] : arrayKeys);
              } else {
                callback([...parentKeys, key], value, arrayKeys);
              }
            }
          }
        });
      }
      recurse(obj);
    };
    getCssValue = (keys, value) => {
      if (typeof value === "number") {
        if (["lineHeight", "fontWeight", "opacity", "zIndex"].some((prop) => keys.includes(prop))) {
          return value;
        }
        const lastKey = keys[keys.length - 1];
        if (lastKey.toLowerCase().indexOf("opacity") >= 0) {
          return value;
        }
        return `${value}px`;
      }
      return value;
    };
  }
});

// node_modules/@mui/system/esm/cssVars/prepareCssVars.js
function prepareCssVars(theme, parserConfig) {
  const {
    colorSchemes = {}
  } = theme, otherTheme = _objectWithoutPropertiesLoose(theme, _excluded8);
  const {
    vars: rootVars,
    css: rootCss,
    varsWithDefaults: rootVarsWithDefaults
  } = cssVarsParser(otherTheme, parserConfig);
  let themeVars = rootVarsWithDefaults;
  const colorSchemesMap = {};
  const {
    light: light2
  } = colorSchemes, otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, _excluded22);
  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {
    const {
      vars,
      css: css2,
      varsWithDefaults
    } = cssVarsParser(scheme, parserConfig);
    themeVars = deepmerge(themeVars, varsWithDefaults);
    colorSchemesMap[key] = {
      css: css2,
      vars
    };
  });
  if (light2) {
    const {
      css: css2,
      vars,
      varsWithDefaults
    } = cssVarsParser(light2, parserConfig);
    themeVars = deepmerge(themeVars, varsWithDefaults);
    colorSchemesMap.light = {
      css: css2,
      vars
    };
  }
  const generateCssVars = (colorScheme) => {
    if (!colorScheme) {
      return {
        css: _extends({}, rootCss),
        vars: rootVars
      };
    }
    return {
      css: _extends({}, colorSchemesMap[colorScheme].css),
      vars: colorSchemesMap[colorScheme].vars
    };
  };
  return {
    vars: themeVars,
    generateCssVars
  };
}
var _excluded8, _excluded22, prepareCssVars_default;
var init_prepareCssVars = __esm({
  "node_modules/@mui/system/esm/cssVars/prepareCssVars.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_esm();
    init_cssVarsParser();
    _excluded8 = ["colorSchemes", "components"];
    _excluded22 = ["light"];
    prepareCssVars_default = prepareCssVars;
  }
});

// node_modules/@mui/system/esm/cssVars/createCssVarsTheme.js
var init_createCssVarsTheme = __esm({
  "node_modules/@mui/system/esm/cssVars/createCssVarsTheme.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_prepareCssVars();
  }
});

// node_modules/@mui/system/esm/Container/createContainer.js
function createContainer(options = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent = defaultCreateStyledComponent,
    useThemeProps: useThemeProps3 = useThemePropsDefault,
    componentName = "MuiContainer"
  } = options;
  const ContainerRoot = createStyledComponent(({
    theme,
    ownerState
  }) => _extends({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    display: "block"
  }, !ownerState.disableGutters && {
    paddingLeft: theme.spacing(2),
    paddingRight: theme.spacing(2),
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [theme.breakpoints.up("sm")]: {
      paddingLeft: theme.spacing(3),
      paddingRight: theme.spacing(3)
    }
  }), ({
    theme,
    ownerState
  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {
    const breakpoint = breakpointValueKey;
    const value = theme.breakpoints.values[breakpoint];
    if (value !== 0) {
      acc[theme.breakpoints.up(breakpoint)] = {
        maxWidth: `${value}${theme.breakpoints.unit}`
      };
    }
    return acc;
  }, {}), ({
    theme,
    ownerState
  }) => _extends({}, ownerState.maxWidth === "xs" && {
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [theme.breakpoints.up("xs")]: {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: Math.max(theme.breakpoints.values.xs, 444)
    }
  }, ownerState.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
  ownerState.maxWidth !== "xs" && {
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [theme.breakpoints.up(ownerState.maxWidth)]: {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`
    }
  }));
  const Container3 = React25.forwardRef(function Container4(inProps, ref) {
    const props = useThemeProps3(inProps);
    const {
      className,
      component = "div",
      disableGutters = false,
      fixed = false,
      maxWidth: maxWidth2 = "lg"
    } = props, other = _objectWithoutPropertiesLoose(props, _excluded9);
    const ownerState = _extends({}, props, {
      component,
      disableGutters,
      fixed,
      maxWidth: maxWidth2
    });
    const classes2 = useUtilityClasses(ownerState, componentName);
    return (
      // @ts-ignore theme is injected by the styled util
      (0, import_jsx_runtime10.jsx)(ContainerRoot, _extends({
        as: component,
        ownerState,
        className: clsx_default(classes2.root, className),
        ref
      }, other))
    );
  });
  true ? Container3.propTypes = {
    children: import_prop_types13.default.node,
    classes: import_prop_types13.default.object,
    className: import_prop_types13.default.string,
    component: import_prop_types13.default.elementType,
    disableGutters: import_prop_types13.default.bool,
    fixed: import_prop_types13.default.bool,
    maxWidth: import_prop_types13.default.oneOfType([import_prop_types13.default.oneOf(["xs", "sm", "md", "lg", "xl", false]), import_prop_types13.default.string]),
    sx: import_prop_types13.default.oneOfType([import_prop_types13.default.arrayOf(import_prop_types13.default.oneOfType([import_prop_types13.default.func, import_prop_types13.default.object, import_prop_types13.default.bool])), import_prop_types13.default.func, import_prop_types13.default.object])
  } : void 0;
  return Container3;
}
var React25, import_prop_types13, import_jsx_runtime10, _excluded9, defaultTheme, defaultCreateStyledComponent, useThemePropsDefault, useUtilityClasses;
var init_createContainer = __esm({
  "node_modules/@mui/system/esm/Container/createContainer.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React25 = __toESM(require_react());
    import_prop_types13 = __toESM(require_prop_types());
    init_clsx();
    init_esm();
    init_useThemeProps2();
    init_styled();
    init_createTheme2();
    import_jsx_runtime10 = __toESM(require_jsx_runtime());
    _excluded9 = ["className", "component", "disableGutters", "fixed", "maxWidth", "classes"];
    defaultTheme = createTheme_default();
    defaultCreateStyledComponent = styled_default("div", {
      name: "MuiContainer",
      slot: "Root",
      overridesResolver: (props, styles7) => {
        const {
          ownerState
        } = props;
        return [styles7.root, styles7[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles7.fixed, ownerState.disableGutters && styles7.disableGutters];
      }
    });
    useThemePropsDefault = (inProps) => useThemeProps({
      props: inProps,
      name: "MuiContainer",
      defaultTheme
    });
    useUtilityClasses = (ownerState, componentName) => {
      const getContainerUtilityClass = (slot) => {
        return generateUtilityClass(componentName, slot);
      };
      const {
        classes: classes2,
        fixed,
        disableGutters,
        maxWidth: maxWidth2
      } = ownerState;
      const slots = {
        root: ["root", maxWidth2 && `maxWidth${capitalize(String(maxWidth2))}`, fixed && "fixed", disableGutters && "disableGutters"]
      };
      return composeClasses(slots, getContainerUtilityClass, classes2);
    };
  }
});

// node_modules/@mui/system/esm/Container/Container.js
var import_prop_types14, Container;
var init_Container = __esm({
  "node_modules/@mui/system/esm/Container/Container.js"() {
    "use client";
    import_prop_types14 = __toESM(require_prop_types());
    init_createContainer();
    Container = createContainer();
    true ? Container.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit TypeScript types and run "yarn proptypes"  |
      // ----------------------------------------------------------------------
      /**
       * @ignore
       */
      children: import_prop_types14.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types14.default.object,
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types14.default.elementType,
      /**
       * If `true`, the left and right padding is removed.
       * @default false
       */
      disableGutters: import_prop_types14.default.bool,
      /**
       * Set the max-width to match the min-width of the current breakpoint.
       * This is useful if you'd prefer to design for a fixed set of sizes
       * instead of trying to accommodate a fully fluid viewport.
       * It's fluid by default.
       * @default false
       */
      fixed: import_prop_types14.default.bool,
      /**
       * Determine the max-width of the container.
       * The container width grows with the size of the screen.
       * Set to `false` to disable `maxWidth`.
       * @default 'lg'
       */
      maxWidth: import_prop_types14.default.oneOfType([import_prop_types14.default.oneOf(["xs", "sm", "md", "lg", "xl", false]), import_prop_types14.default.string]),
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types14.default.oneOfType([import_prop_types14.default.arrayOf(import_prop_types14.default.oneOfType([import_prop_types14.default.func, import_prop_types14.default.object, import_prop_types14.default.bool])), import_prop_types14.default.func, import_prop_types14.default.object])
    } : void 0;
  }
});

// node_modules/@mui/system/esm/Container/containerClasses.js
var containerClasses;
var init_containerClasses = __esm({
  "node_modules/@mui/system/esm/Container/containerClasses.js"() {
    init_esm();
    containerClasses = generateUtilityClasses("MuiContainer", ["root", "disableGutters", "fixed", "maxWidthXs", "maxWidthSm", "maxWidthMd", "maxWidthLg", "maxWidthXl"]);
  }
});

// node_modules/@mui/system/esm/Container/index.js
var init_Container2 = __esm({
  "node_modules/@mui/system/esm/Container/index.js"() {
    "use client";
    init_Container();
    init_containerClasses();
    init_containerClasses();
  }
});

// node_modules/@mui/system/esm/Unstable_Grid/traverseBreakpoints.js
var filterBreakpointKeys, traverseBreakpoints;
var init_traverseBreakpoints = __esm({
  "node_modules/@mui/system/esm/Unstable_Grid/traverseBreakpoints.js"() {
    filterBreakpointKeys = (breakpointsKeys, responsiveKeys) => breakpointsKeys.filter((key) => responsiveKeys.includes(key));
    traverseBreakpoints = (breakpoints, responsive, iterator) => {
      const smallestBreakpoint = breakpoints.keys[0];
      if (Array.isArray(responsive)) {
        responsive.forEach((breakpointValue, index2) => {
          iterator((responsiveStyles, style4) => {
            if (index2 <= breakpoints.keys.length - 1) {
              if (index2 === 0) {
                Object.assign(responsiveStyles, style4);
              } else {
                responsiveStyles[breakpoints.up(breakpoints.keys[index2])] = style4;
              }
            }
          }, breakpointValue);
        });
      } else if (responsive && typeof responsive === "object") {
        const keys = Object.keys(responsive).length > breakpoints.keys.length ? breakpoints.keys : filterBreakpointKeys(breakpoints.keys, Object.keys(responsive));
        keys.forEach((key) => {
          if (breakpoints.keys.indexOf(key) !== -1) {
            const breakpointValue = responsive[key];
            if (breakpointValue !== void 0) {
              iterator((responsiveStyles, style4) => {
                if (smallestBreakpoint === key) {
                  Object.assign(responsiveStyles, style4);
                } else {
                  responsiveStyles[breakpoints.up(key)] = style4;
                }
              }, breakpointValue);
            }
          }
        });
      } else if (typeof responsive === "number" || typeof responsive === "string") {
        iterator((responsiveStyles, style4) => {
          Object.assign(responsiveStyles, style4);
        }, responsive);
      }
    };
  }
});

// node_modules/@mui/system/esm/Unstable_Grid/gridGenerator.js
function appendLevel(level) {
  if (!level) {
    return "";
  }
  return `Level${level}`;
}
function isNestedContainer(ownerState) {
  return ownerState.unstable_level > 0 && ownerState.container;
}
function createGetSelfSpacing(ownerState) {
  return function getSelfSpacing(axis) {
    return `var(--Grid-${axis}Spacing${appendLevel(ownerState.unstable_level)})`;
  };
}
function createGetParentSpacing(ownerState) {
  return function getParentSpacing(axis) {
    if (ownerState.unstable_level === 0) {
      return `var(--Grid-${axis}Spacing)`;
    }
    return `var(--Grid-${axis}Spacing${appendLevel(ownerState.unstable_level - 1)})`;
  };
}
function getParentColumns(ownerState) {
  if (ownerState.unstable_level === 0) {
    return `var(--Grid-columns)`;
  }
  return `var(--Grid-columns${appendLevel(ownerState.unstable_level - 1)})`;
}
var generateGridSizeStyles, generateGridOffsetStyles, generateGridColumnsStyles, generateGridRowSpacingStyles, generateGridColumnSpacingStyles, generateGridDirectionStyles, generateGridStyles, generateSizeClassNames, generateSpacingClassNames, generateDirectionClasses;
var init_gridGenerator = __esm({
  "node_modules/@mui/system/esm/Unstable_Grid/gridGenerator.js"() {
    init_extends();
    init_traverseBreakpoints();
    generateGridSizeStyles = ({
      theme,
      ownerState
    }) => {
      const getSelfSpacing = createGetSelfSpacing(ownerState);
      const styles7 = {};
      traverseBreakpoints(theme.breakpoints, ownerState.gridSize, (appendStyle, value) => {
        let style4 = {};
        if (value === true) {
          style4 = {
            flexBasis: 0,
            flexGrow: 1,
            maxWidth: "100%"
          };
        }
        if (value === "auto") {
          style4 = {
            flexBasis: "auto",
            flexGrow: 0,
            flexShrink: 0,
            maxWidth: "none",
            width: "auto"
          };
        }
        if (typeof value === "number") {
          style4 = {
            flexGrow: 0,
            flexBasis: "auto",
            width: `calc(100% * ${value} / ${getParentColumns(ownerState)}${isNestedContainer(ownerState) ? ` + ${getSelfSpacing("column")}` : ""})`
          };
        }
        appendStyle(styles7, style4);
      });
      return styles7;
    };
    generateGridOffsetStyles = ({
      theme,
      ownerState
    }) => {
      const styles7 = {};
      traverseBreakpoints(theme.breakpoints, ownerState.gridOffset, (appendStyle, value) => {
        let style4 = {};
        if (value === "auto") {
          style4 = {
            marginLeft: "auto"
          };
        }
        if (typeof value === "number") {
          style4 = {
            marginLeft: value === 0 ? "0px" : `calc(100% * ${value} / ${getParentColumns(ownerState)})`
          };
        }
        appendStyle(styles7, style4);
      });
      return styles7;
    };
    generateGridColumnsStyles = ({
      theme,
      ownerState
    }) => {
      if (!ownerState.container) {
        return {};
      }
      const styles7 = isNestedContainer(ownerState) ? {
        [`--Grid-columns${appendLevel(ownerState.unstable_level)}`]: getParentColumns(ownerState)
      } : {
        "--Grid-columns": 12
      };
      traverseBreakpoints(theme.breakpoints, ownerState.columns, (appendStyle, value) => {
        appendStyle(styles7, {
          [`--Grid-columns${appendLevel(ownerState.unstable_level)}`]: value
        });
      });
      return styles7;
    };
    generateGridRowSpacingStyles = ({
      theme,
      ownerState
    }) => {
      if (!ownerState.container) {
        return {};
      }
      const getParentSpacing = createGetParentSpacing(ownerState);
      const styles7 = isNestedContainer(ownerState) ? {
        // Set the default spacing as its parent spacing.
        // It will be overridden if spacing props are provided
        [`--Grid-rowSpacing${appendLevel(ownerState.unstable_level)}`]: getParentSpacing("row")
      } : {};
      traverseBreakpoints(theme.breakpoints, ownerState.rowSpacing, (appendStyle, value) => {
        var _theme$spacing;
        appendStyle(styles7, {
          [`--Grid-rowSpacing${appendLevel(ownerState.unstable_level)}`]: typeof value === "string" ? value : (_theme$spacing = theme.spacing) == null ? void 0 : _theme$spacing.call(theme, value)
        });
      });
      return styles7;
    };
    generateGridColumnSpacingStyles = ({
      theme,
      ownerState
    }) => {
      if (!ownerState.container) {
        return {};
      }
      const getParentSpacing = createGetParentSpacing(ownerState);
      const styles7 = isNestedContainer(ownerState) ? {
        // Set the default spacing as its parent spacing.
        // It will be overridden if spacing props are provided
        [`--Grid-columnSpacing${appendLevel(ownerState.unstable_level)}`]: getParentSpacing("column")
      } : {};
      traverseBreakpoints(theme.breakpoints, ownerState.columnSpacing, (appendStyle, value) => {
        var _theme$spacing2;
        appendStyle(styles7, {
          [`--Grid-columnSpacing${appendLevel(ownerState.unstable_level)}`]: typeof value === "string" ? value : (_theme$spacing2 = theme.spacing) == null ? void 0 : _theme$spacing2.call(theme, value)
        });
      });
      return styles7;
    };
    generateGridDirectionStyles = ({
      theme,
      ownerState
    }) => {
      if (!ownerState.container) {
        return {};
      }
      const styles7 = {};
      traverseBreakpoints(theme.breakpoints, ownerState.direction, (appendStyle, value) => {
        appendStyle(styles7, {
          flexDirection: value
        });
      });
      return styles7;
    };
    generateGridStyles = ({
      ownerState
    }) => {
      const getSelfSpacing = createGetSelfSpacing(ownerState);
      const getParentSpacing = createGetParentSpacing(ownerState);
      return _extends({
        minWidth: 0,
        boxSizing: "border-box"
      }, ownerState.container && _extends({
        display: "flex",
        flexWrap: "wrap"
      }, ownerState.wrap && ownerState.wrap !== "wrap" && {
        flexWrap: ownerState.wrap
      }, {
        margin: `calc(${getSelfSpacing("row")} / -2) calc(${getSelfSpacing("column")} / -2)`
      }, ownerState.disableEqualOverflow && {
        margin: `calc(${getSelfSpacing("row")} * -1) 0px 0px calc(${getSelfSpacing("column")} * -1)`
      }), (!ownerState.container || isNestedContainer(ownerState)) && _extends({
        padding: `calc(${getParentSpacing("row")} / 2) calc(${getParentSpacing("column")} / 2)`
      }, (ownerState.disableEqualOverflow || ownerState.parentDisableEqualOverflow) && {
        padding: `${getParentSpacing("row")} 0px 0px ${getParentSpacing("column")}`
      }));
    };
    generateSizeClassNames = (gridSize) => {
      const classNames = [];
      Object.entries(gridSize).forEach(([key, value]) => {
        if (value !== false && value !== void 0) {
          classNames.push(`grid-${key}-${String(value)}`);
        }
      });
      return classNames;
    };
    generateSpacingClassNames = (spacing2, smallestBreakpoint = "xs") => {
      function isValidSpacing(val) {
        if (val === void 0) {
          return false;
        }
        return typeof val === "string" && !Number.isNaN(Number(val)) || typeof val === "number" && val > 0;
      }
      if (isValidSpacing(spacing2)) {
        return [`spacing-${smallestBreakpoint}-${String(spacing2)}`];
      }
      if (typeof spacing2 === "object" && !Array.isArray(spacing2)) {
        const classNames = [];
        Object.entries(spacing2).forEach(([key, value]) => {
          if (isValidSpacing(value)) {
            classNames.push(`spacing-${key}-${String(value)}`);
          }
        });
        return classNames;
      }
      return [];
    };
    generateDirectionClasses = (direction) => {
      if (direction === void 0) {
        return [];
      }
      if (typeof direction === "object") {
        return Object.entries(direction).map(([key, value]) => `direction-${key}-${value}`);
      }
      return [`direction-xs-${String(direction)}`];
    };
  }
});

// node_modules/@mui/system/esm/Unstable_Grid/createGrid.js
function useThemePropsDefault2(props) {
  return useThemeProps({
    props,
    name: "MuiGrid",
    defaultTheme: defaultTheme2
  });
}
function createGrid(options = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent = defaultCreateStyledComponent2,
    useThemeProps: useThemeProps3 = useThemePropsDefault2,
    componentName = "MuiGrid"
  } = options;
  const OverflowContext = React26.createContext(void 0);
  const useUtilityClasses138 = (ownerState, theme) => {
    const {
      container,
      direction,
      spacing: spacing2,
      wrap,
      gridSize
    } = ownerState;
    const slots = {
      root: ["root", container && "container", wrap !== "wrap" && `wrap-xs-${String(wrap)}`, ...generateDirectionClasses(direction), ...generateSizeClassNames(gridSize), ...container ? generateSpacingClassNames(spacing2, theme.breakpoints.keys[0]) : []]
    };
    return composeClasses(slots, (slot) => generateUtilityClass(componentName, slot), {});
  };
  const GridRoot2 = createStyledComponent(generateGridColumnsStyles, generateGridColumnSpacingStyles, generateGridRowSpacingStyles, generateGridSizeStyles, generateGridDirectionStyles, generateGridStyles, generateGridOffsetStyles);
  const Grid4 = React26.forwardRef(function Grid5(inProps, ref) {
    var _inProps$columns, _inProps$spacing, _ref2, _inProps$rowSpacing, _ref22, _inProps$columnSpacin, _ref3, _disableEqualOverflow;
    const theme = useTheme_default();
    const themeProps = useThemeProps3(inProps);
    const props = extendSxProp(themeProps);
    const overflow2 = React26.useContext(OverflowContext);
    const {
      className,
      children: children2,
      columns: columnsProp = 12,
      container = false,
      component = "div",
      direction = "row",
      wrap = "wrap",
      spacing: spacingProp = 0,
      rowSpacing: rowSpacingProp = spacingProp,
      columnSpacing: columnSpacingProp = spacingProp,
      disableEqualOverflow: themeDisableEqualOverflow,
      unstable_level: level = 0
    } = props, rest = _objectWithoutPropertiesLoose(props, _excluded10);
    let disableEqualOverflow = themeDisableEqualOverflow;
    if (level && themeDisableEqualOverflow !== void 0) {
      disableEqualOverflow = inProps.disableEqualOverflow;
    }
    const gridSize = {};
    const gridOffset = {};
    const other = {};
    Object.entries(rest).forEach(([key, val]) => {
      if (theme.breakpoints.values[key] !== void 0) {
        gridSize[key] = val;
      } else if (theme.breakpoints.values[key.replace("Offset", "")] !== void 0) {
        gridOffset[key.replace("Offset", "")] = val;
      } else {
        other[key] = val;
      }
    });
    const columns = (_inProps$columns = inProps.columns) != null ? _inProps$columns : level ? void 0 : columnsProp;
    const spacing2 = (_inProps$spacing = inProps.spacing) != null ? _inProps$spacing : level ? void 0 : spacingProp;
    const rowSpacing = (_ref2 = (_inProps$rowSpacing = inProps.rowSpacing) != null ? _inProps$rowSpacing : inProps.spacing) != null ? _ref2 : level ? void 0 : rowSpacingProp;
    const columnSpacing = (_ref22 = (_inProps$columnSpacin = inProps.columnSpacing) != null ? _inProps$columnSpacin : inProps.spacing) != null ? _ref22 : level ? void 0 : columnSpacingProp;
    const ownerState = _extends({}, props, {
      level,
      columns,
      container,
      direction,
      wrap,
      spacing: spacing2,
      rowSpacing,
      columnSpacing,
      gridSize,
      gridOffset,
      disableEqualOverflow: (_ref3 = (_disableEqualOverflow = disableEqualOverflow) != null ? _disableEqualOverflow : overflow2) != null ? _ref3 : false,
      // use context value if exists.
      parentDisableEqualOverflow: overflow2
      // for nested grid
    });
    const classes2 = useUtilityClasses138(ownerState, theme);
    let result = (0, import_jsx_runtime11.jsx)(GridRoot2, _extends({
      ref,
      as: component,
      ownerState,
      className: clsx_default(classes2.root, className)
    }, other, {
      children: React26.Children.map(children2, (child) => {
        if (React26.isValidElement(child) && isMuiElement(child, ["Grid"])) {
          var _child$props$unstable;
          return React26.cloneElement(child, {
            unstable_level: (_child$props$unstable = child.props.unstable_level) != null ? _child$props$unstable : level + 1
          });
        }
        return child;
      })
    }));
    if (disableEqualOverflow !== void 0 && disableEqualOverflow !== (overflow2 != null ? overflow2 : false)) {
      result = (0, import_jsx_runtime11.jsx)(OverflowContext.Provider, {
        value: disableEqualOverflow,
        children: result
      });
    }
    return result;
  });
  true ? Grid4.propTypes = {
    children: import_prop_types15.default.node,
    className: import_prop_types15.default.string,
    columns: import_prop_types15.default.oneOfType([import_prop_types15.default.arrayOf(import_prop_types15.default.number), import_prop_types15.default.number, import_prop_types15.default.object]),
    columnSpacing: import_prop_types15.default.oneOfType([import_prop_types15.default.arrayOf(import_prop_types15.default.oneOfType([import_prop_types15.default.number, import_prop_types15.default.string])), import_prop_types15.default.number, import_prop_types15.default.object, import_prop_types15.default.string]),
    component: import_prop_types15.default.elementType,
    container: import_prop_types15.default.bool,
    direction: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types15.default.arrayOf(import_prop_types15.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types15.default.object]),
    disableEqualOverflow: import_prop_types15.default.bool,
    lg: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number, import_prop_types15.default.bool]),
    lgOffset: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number]),
    md: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number, import_prop_types15.default.bool]),
    mdOffset: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number]),
    rowSpacing: import_prop_types15.default.oneOfType([import_prop_types15.default.arrayOf(import_prop_types15.default.oneOfType([import_prop_types15.default.number, import_prop_types15.default.string])), import_prop_types15.default.number, import_prop_types15.default.object, import_prop_types15.default.string]),
    sm: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number, import_prop_types15.default.bool]),
    smOffset: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number]),
    spacing: import_prop_types15.default.oneOfType([import_prop_types15.default.arrayOf(import_prop_types15.default.oneOfType([import_prop_types15.default.number, import_prop_types15.default.string])), import_prop_types15.default.number, import_prop_types15.default.object, import_prop_types15.default.string]),
    sx: import_prop_types15.default.oneOfType([import_prop_types15.default.arrayOf(import_prop_types15.default.oneOfType([import_prop_types15.default.func, import_prop_types15.default.object, import_prop_types15.default.bool])), import_prop_types15.default.func, import_prop_types15.default.object]),
    wrap: import_prop_types15.default.oneOf(["nowrap", "wrap-reverse", "wrap"]),
    xl: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number, import_prop_types15.default.bool]),
    xlOffset: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number]),
    xs: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number, import_prop_types15.default.bool]),
    xsOffset: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["auto"]), import_prop_types15.default.number])
  } : void 0;
  Grid4.muiName = "Grid";
  return Grid4;
}
var React26, import_prop_types15, import_jsx_runtime11, _excluded10, defaultTheme2, defaultCreateStyledComponent2;
var init_createGrid = __esm({
  "node_modules/@mui/system/esm/Unstable_Grid/createGrid.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    React26 = __toESM(require_react());
    import_prop_types15 = __toESM(require_prop_types());
    init_clsx();
    init_esm();
    init_styled();
    init_useThemeProps2();
    init_useTheme();
    init_styleFunctionSx2();
    init_createTheme2();
    init_gridGenerator();
    import_jsx_runtime11 = __toESM(require_jsx_runtime());
    _excluded10 = ["className", "children", "columns", "container", "component", "direction", "wrap", "spacing", "rowSpacing", "columnSpacing", "disableEqualOverflow", "unstable_level"];
    defaultTheme2 = createTheme_default();
    defaultCreateStyledComponent2 = styled_default("div", {
      name: "MuiGrid",
      slot: "Root",
      overridesResolver: (props, styles7) => styles7.root
    });
  }
});

// node_modules/@mui/system/esm/Unstable_Grid/Grid.js
var import_prop_types16, Grid;
var init_Grid = __esm({
  "node_modules/@mui/system/esm/Unstable_Grid/Grid.js"() {
    "use client";
    import_prop_types16 = __toESM(require_prop_types());
    init_createGrid();
    Grid = createGrid();
    true ? Grid.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit TypeScript types and run "yarn proptypes"  |
      // ----------------------------------------------------------------------
      /**
       * The content of the component.
       */
      children: import_prop_types16.default.node,
      /**
       * The number of columns.
       * @default 12
       */
      columns: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.number), import_prop_types16.default.number, import_prop_types16.default.object]),
      /**
       * Defines the horizontal space between the type `item` components.
       * It overrides the value of the `spacing` prop.
       */
      columnSpacing: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.number, import_prop_types16.default.string])), import_prop_types16.default.number, import_prop_types16.default.object, import_prop_types16.default.string]),
      /**
       * If `true`, the component will have the flex *container* behavior.
       * You should be wrapping *items* with a *container*.
       * @default false
       */
      container: import_prop_types16.default.bool,
      /**
       * Defines the `flex-direction` style property.
       * It is applied for all screen sizes.
       * @default 'row'
       */
      direction: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types16.default.arrayOf(import_prop_types16.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types16.default.object]),
      /**
       * If `true`, the negative margin and padding are apply only to the top and left sides of the grid.
       */
      disableEqualOverflow: import_prop_types16.default.bool,
      /**
       * If a number, it sets the number of columns the grid item uses.
       * It can't be greater than the total number of columns of the container (12 by default).
       * If 'auto', the grid item's width matches its content.
       * If false, the prop is ignored.
       * If true, the grid item's width grows to use the space available in the grid container.
       * The value is applied for the `lg` breakpoint and wider screens if not overridden.
       * @default false
       */
      lg: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number, import_prop_types16.default.bool]),
      /**
       * If a number, it sets the margin-left equals to the number of columns the grid item uses.
       * If 'auto', the grid item push itself to the right-end of the container.
       * The value is applied for the `lg` breakpoint and wider screens if not overridden.
       */
      lgOffset: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number]),
      /**
       * If a number, it sets the number of columns the grid item uses.
       * It can't be greater than the total number of columns of the container (12 by default).
       * If 'auto', the grid item's width matches its content.
       * If false, the prop is ignored.
       * If true, the grid item's width grows to use the space available in the grid container.
       * The value is applied for the `md` breakpoint and wider screens if not overridden.
       * @default false
       */
      md: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number, import_prop_types16.default.bool]),
      /**
       * If a number, it sets the margin-left equals to the number of columns the grid item uses.
       * If 'auto', the grid item push itself to the right-end of the container.
       * The value is applied for the `md` breakpoint and wider screens if not overridden.
       */
      mdOffset: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number]),
      /**
       * Defines the vertical space between the type `item` components.
       * It overrides the value of the `spacing` prop.
       */
      rowSpacing: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.number, import_prop_types16.default.string])), import_prop_types16.default.number, import_prop_types16.default.object, import_prop_types16.default.string]),
      /**
       * If a number, it sets the number of columns the grid item uses.
       * It can't be greater than the total number of columns of the container (12 by default).
       * If 'auto', the grid item's width matches its content.
       * If false, the prop is ignored.
       * If true, the grid item's width grows to use the space available in the grid container.
       * The value is applied for the `sm` breakpoint and wider screens if not overridden.
       * @default false
       */
      sm: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number, import_prop_types16.default.bool]),
      /**
       * If a number, it sets the margin-left equals to the number of columns the grid item uses.
       * If 'auto', the grid item push itself to the right-end of the container.
       * The value is applied for the `sm` breakpoint and wider screens if not overridden.
       */
      smOffset: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number]),
      /**
       * Defines the space between the type `item` components.
       * It can only be used on a type `container` component.
       * @default 0
       */
      spacing: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.number, import_prop_types16.default.string])), import_prop_types16.default.number, import_prop_types16.default.object, import_prop_types16.default.string]),
      /**
       * @ignore
       */
      sx: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object, import_prop_types16.default.bool])), import_prop_types16.default.func, import_prop_types16.default.object]),
      /**
       * @internal
       * The level of the grid starts from `0`
       * and increases when the grid nests inside another grid regardless of container or item.
       *
       * ```js
       * <Grid> // level 0
       *   <Grid> // level 1
       *     <Grid> // level 2
       *   <Grid> // level 1
       * ```
       *
       * Only consecutive grid is considered nesting.
       * A grid container will start at `0` if there are non-Grid element above it.
       *
       * ```js
       * <Grid> // level 0
       *   <div>
       *     <Grid> // level 0
       *       <Grid> // level 1
       * ```
       */
      unstable_level: import_prop_types16.default.number,
      /**
       * Defines the `flex-wrap` style property.
       * It's applied for all screen sizes.
       * @default 'wrap'
       */
      wrap: import_prop_types16.default.oneOf(["nowrap", "wrap-reverse", "wrap"]),
      /**
       * If a number, it sets the number of columns the grid item uses.
       * It can't be greater than the total number of columns of the container (12 by default).
       * If 'auto', the grid item's width matches its content.
       * If false, the prop is ignored.
       * If true, the grid item's width grows to use the space available in the grid container.
       * The value is applied for the `xl` breakpoint and wider screens if not overridden.
       * @default false
       */
      xl: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number, import_prop_types16.default.bool]),
      /**
       * If a number, it sets the margin-left equals to the number of columns the grid item uses.
       * If 'auto', the grid item push itself to the right-end of the container.
       * The value is applied for the `xl` breakpoint and wider screens if not overridden.
       */
      xlOffset: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number]),
      /**
       * If a number, it sets the number of columns the grid item uses.
       * It can't be greater than the total number of columns of the container (12 by default).
       * If 'auto', the grid item's width matches its content.
       * If false, the prop is ignored.
       * If true, the grid item's width grows to use the space available in the grid container.
       * The value is applied for all the screen sizes with the lowest priority.
       * @default false
       */
      xs: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number, import_prop_types16.default.bool]),
      /**
       * If a number, it sets the margin-left equals to the number of columns the grid item uses.
       * If 'auto', the grid item push itself to the right-end of the container.
       * The value is applied for the `xs` breakpoint and wider screens if not overridden.
       */
      xsOffset: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["auto"]), import_prop_types16.default.number])
    } : void 0;
  }
});

// node_modules/@mui/system/esm/Unstable_Grid/GridProps.js
var init_GridProps = __esm({
  "node_modules/@mui/system/esm/Unstable_Grid/GridProps.js"() {
  }
});

// node_modules/@mui/system/esm/Unstable_Grid/gridClasses.js
var SPACINGS, DIRECTIONS, WRAPS, GRID_SIZES, gridClasses;
var init_gridClasses = __esm({
  "node_modules/@mui/system/esm/Unstable_Grid/gridClasses.js"() {
    init_esm();
    SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    DIRECTIONS = ["column-reverse", "column", "row-reverse", "row"];
    WRAPS = ["nowrap", "wrap-reverse", "wrap"];
    GRID_SIZES = ["auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
    gridClasses = generateUtilityClasses("MuiGrid", [
      "root",
      "container",
      "item",
      // spacings
      ...SPACINGS.map((spacing2) => `spacing-xs-${spacing2}`),
      // direction values
      ...DIRECTIONS.map((direction) => `direction-xs-${direction}`),
      // wrap values
      ...WRAPS.map((wrap) => `wrap-xs-${wrap}`),
      // grid sizes for all breakpoints
      ...GRID_SIZES.map((size2) => `grid-xs-${size2}`),
      ...GRID_SIZES.map((size2) => `grid-sm-${size2}`),
      ...GRID_SIZES.map((size2) => `grid-md-${size2}`),
      ...GRID_SIZES.map((size2) => `grid-lg-${size2}`),
      ...GRID_SIZES.map((size2) => `grid-xl-${size2}`)
    ]);
  }
});

// node_modules/@mui/system/esm/Unstable_Grid/index.js
var init_Unstable_Grid = __esm({
  "node_modules/@mui/system/esm/Unstable_Grid/index.js"() {
    "use client";
    init_Grid();
    init_createGrid();
    init_GridProps();
    init_gridClasses();
    init_gridClasses();
    init_traverseBreakpoints();
  }
});

// node_modules/@mui/system/esm/Stack/createStack.js
function useThemePropsDefault3(props) {
  return useThemeProps({
    props,
    name: "MuiStack",
    defaultTheme: defaultTheme3
  });
}
function joinChildren(children2, separator) {
  const childrenArray = React27.Children.toArray(children2).filter(Boolean);
  return childrenArray.reduce((output, child, index2) => {
    output.push(child);
    if (index2 < childrenArray.length - 1) {
      output.push(React27.cloneElement(separator, {
        key: `separator-${index2}`
      }));
    }
    return output;
  }, []);
}
function createStack(options = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent = defaultCreateStyledComponent3,
    useThemeProps: useThemeProps3 = useThemePropsDefault3,
    componentName = "MuiStack"
  } = options;
  const useUtilityClasses138 = () => {
    const slots = {
      root: ["root"]
    };
    return composeClasses(slots, (slot) => generateUtilityClass(componentName, slot), {});
  };
  const StackRoot = createStyledComponent(style3);
  const Stack3 = React27.forwardRef(function Grid4(inProps, ref) {
    const themeProps = useThemeProps3(inProps);
    const props = extendSxProp(themeProps);
    const {
      component = "div",
      direction = "column",
      spacing: spacing2 = 0,
      divider,
      children: children2,
      className,
      useFlexGap = false
    } = props, other = _objectWithoutPropertiesLoose(props, _excluded11);
    const ownerState = {
      direction,
      spacing: spacing2,
      useFlexGap
    };
    const classes2 = useUtilityClasses138();
    return (0, import_jsx_runtime12.jsx)(StackRoot, _extends({
      as: component,
      ownerState,
      ref,
      className: clsx_default(classes2.root, className)
    }, other, {
      children: divider ? joinChildren(children2, divider) : children2
    }));
  });
  true ? Stack3.propTypes = {
    children: import_prop_types17.default.node,
    direction: import_prop_types17.default.oneOfType([import_prop_types17.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types17.default.arrayOf(import_prop_types17.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types17.default.object]),
    divider: import_prop_types17.default.node,
    spacing: import_prop_types17.default.oneOfType([import_prop_types17.default.arrayOf(import_prop_types17.default.oneOfType([import_prop_types17.default.number, import_prop_types17.default.string])), import_prop_types17.default.number, import_prop_types17.default.object, import_prop_types17.default.string]),
    sx: import_prop_types17.default.oneOfType([import_prop_types17.default.arrayOf(import_prop_types17.default.oneOfType([import_prop_types17.default.func, import_prop_types17.default.object, import_prop_types17.default.bool])), import_prop_types17.default.func, import_prop_types17.default.object])
  } : void 0;
  return Stack3;
}
var React27, import_prop_types17, import_jsx_runtime12, _excluded11, defaultTheme3, defaultCreateStyledComponent3, getSideFromDirection, style3;
var init_createStack = __esm({
  "node_modules/@mui/system/esm/Stack/createStack.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React27 = __toESM(require_react());
    import_prop_types17 = __toESM(require_prop_types());
    init_clsx();
    init_esm();
    init_styled();
    init_useThemeProps2();
    init_styleFunctionSx2();
    init_createTheme2();
    init_breakpoints();
    init_spacing();
    import_jsx_runtime12 = __toESM(require_jsx_runtime());
    _excluded11 = ["component", "direction", "spacing", "divider", "children", "className", "useFlexGap"];
    defaultTheme3 = createTheme_default();
    defaultCreateStyledComponent3 = styled_default("div", {
      name: "MuiStack",
      slot: "Root",
      overridesResolver: (props, styles7) => styles7.root
    });
    getSideFromDirection = (direction) => {
      return {
        row: "Left",
        "row-reverse": "Right",
        column: "Top",
        "column-reverse": "Bottom"
      }[direction];
    };
    style3 = ({
      ownerState,
      theme
    }) => {
      let styles7 = _extends({
        display: "flex",
        flexDirection: "column"
      }, handleBreakpoints({
        theme
      }, resolveBreakpointValues({
        values: ownerState.direction,
        breakpoints: theme.breakpoints.values
      }), (propValue) => ({
        flexDirection: propValue
      })));
      if (ownerState.spacing) {
        const transformer = createUnarySpacing(theme);
        const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {
          if (typeof ownerState.spacing === "object" && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === "object" && ownerState.direction[breakpoint] != null) {
            acc[breakpoint] = true;
          }
          return acc;
        }, {});
        const directionValues = resolveBreakpointValues({
          values: ownerState.direction,
          base
        });
        const spacingValues = resolveBreakpointValues({
          values: ownerState.spacing,
          base
        });
        if (typeof directionValues === "object") {
          Object.keys(directionValues).forEach((breakpoint, index2, breakpoints) => {
            const directionValue = directionValues[breakpoint];
            if (!directionValue) {
              const previousDirectionValue = index2 > 0 ? directionValues[breakpoints[index2 - 1]] : "column";
              directionValues[breakpoint] = previousDirectionValue;
            }
          });
        }
        const styleFromPropValue = (propValue, breakpoint) => {
          if (ownerState.useFlexGap) {
            return {
              gap: getValue(transformer, propValue)
            };
          }
          return {
            // The useFlexGap={false} implement relies on each child to give up control of the margin.
            // We need to reset the margin to avoid double spacing.
            "& > :not(style):not(style)": {
              margin: 0
            },
            "& > :not(style) ~ :not(style)": {
              [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)
            }
          };
        };
        styles7 = deepmerge(styles7, handleBreakpoints({
          theme
        }, spacingValues, styleFromPropValue));
      }
      styles7 = mergeBreakpointsInOrder(theme.breakpoints, styles7);
      return styles7;
    };
  }
});

// node_modules/@mui/system/esm/Stack/Stack.js
var import_prop_types18, Stack;
var init_Stack = __esm({
  "node_modules/@mui/system/esm/Stack/Stack.js"() {
    "use client";
    import_prop_types18 = __toESM(require_prop_types());
    init_createStack();
    Stack = createStack();
    true ? Stack.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit TypeScript types and run "yarn proptypes"  |
      // ----------------------------------------------------------------------
      /**
       * The content of the component.
       */
      children: import_prop_types18.default.node,
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types18.default.elementType,
      /**
       * Defines the `flex-direction` style property.
       * It is applied for all screen sizes.
       * @default 'column'
       */
      direction: import_prop_types18.default.oneOfType([import_prop_types18.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types18.default.arrayOf(import_prop_types18.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types18.default.object]),
      /**
       * Add an element between each child.
       */
      divider: import_prop_types18.default.node,
      /**
       * Defines the space between immediate children.
       * @default 0
       */
      spacing: import_prop_types18.default.oneOfType([import_prop_types18.default.arrayOf(import_prop_types18.default.oneOfType([import_prop_types18.default.number, import_prop_types18.default.string])), import_prop_types18.default.number, import_prop_types18.default.object, import_prop_types18.default.string]),
      /**
       * The system prop, which allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types18.default.oneOfType([import_prop_types18.default.arrayOf(import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object, import_prop_types18.default.bool])), import_prop_types18.default.func, import_prop_types18.default.object]),
      /**
       * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
       *
       * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
       * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
       *
       * To enable this flag globally, follow the theme's default props configuration.
       * @default false
       */
      useFlexGap: import_prop_types18.default.bool
    } : void 0;
  }
});

// node_modules/@mui/system/esm/Stack/StackProps.js
var init_StackProps = __esm({
  "node_modules/@mui/system/esm/Stack/StackProps.js"() {
  }
});

// node_modules/@mui/system/esm/Stack/stackClasses.js
var stackClasses;
var init_stackClasses = __esm({
  "node_modules/@mui/system/esm/Stack/stackClasses.js"() {
    init_esm();
    stackClasses = generateUtilityClasses("MuiStack", ["root"]);
  }
});

// node_modules/@mui/system/esm/Stack/index.js
var init_Stack2 = __esm({
  "node_modules/@mui/system/esm/Stack/index.js"() {
    "use client";
    init_Stack();
    init_createStack();
    init_StackProps();
    init_stackClasses();
    init_stackClasses();
  }
});

// node_modules/@mui/system/esm/index.js
var init_esm2 = __esm({
  "node_modules/@mui/system/esm/index.js"() {
    "use client";
    init_esm();
    init_styled_engine();
    init_GlobalStyles4();
    init_borders();
    init_borders();
    init_breakpoints();
    init_breakpoints();
    init_compose();
    init_display();
    init_flexbox();
    init_flexbox();
    init_cssGrid();
    init_cssGrid();
    init_palette();
    init_palette();
    init_positions();
    init_positions();
    init_shadows();
    init_sizing();
    init_sizing();
    init_spacing();
    init_spacing();
    init_style();
    init_typography();
    init_typography();
    init_styleFunctionSx2();
    init_getThemeValue();
    init_Box2();
    init_createBox();
    init_createStyled();
    init_createStyled();
    init_styled();
    init_createTheme2();
    init_createBreakpoints();
    init_createSpacing();
    init_shape();
    init_useThemeProps2();
    init_useTheme();
    init_useThemeWithoutDefault();
    init_colorManipulator();
    init_ThemeProvider4();
    init_createCssVarsProvider();
    init_createGetCssVar();
    init_cssVarsParser();
    init_prepareCssVars();
    init_createCssVarsTheme();
    init_responsivePropType();
    init_createContainer();
    init_Container2();
    init_Container2();
    init_Grid();
    init_Unstable_Grid();
    init_Stack();
    init_Stack2();
  }
});

// node_modules/@mui/material/generateUtilityClass/index.js
var init_generateUtilityClass3 = __esm({
  "node_modules/@mui/material/generateUtilityClass/index.js"() {
    init_esm();
  }
});

// node_modules/@mui/material/styles/createMixins.js
function createMixins(breakpoints, mixins) {
  return _extends({
    toolbar: {
      minHeight: 56,
      [breakpoints.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [breakpoints.up("sm")]: {
        minHeight: 64
      }
    }
  }, mixins);
}
var init_createMixins = __esm({
  "node_modules/@mui/material/styles/createMixins.js"() {
    init_extends();
  }
});

// node_modules/@mui/material/styles/createPalette.js
function addLightOrDark(intent, direction, shade, tonalOffset) {
  const tonalOffsetLight = tonalOffset.light || tonalOffset;
  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
  if (!intent[direction]) {
    if (intent.hasOwnProperty(shade)) {
      intent[direction] = intent[shade];
    } else if (direction === "light") {
      intent.light = lighten(intent.main, tonalOffsetLight);
    } else if (direction === "dark") {
      intent.dark = darken(intent.main, tonalOffsetDark);
    }
  }
}
function getDefaultPrimary(mode = "light") {
  if (mode === "dark") {
    return {
      main: blue_default[200],
      light: blue_default[50],
      dark: blue_default[400]
    };
  }
  return {
    main: blue_default[700],
    light: blue_default[400],
    dark: blue_default[800]
  };
}
function getDefaultSecondary(mode = "light") {
  if (mode === "dark") {
    return {
      main: purple_default[200],
      light: purple_default[50],
      dark: purple_default[400]
    };
  }
  return {
    main: purple_default[500],
    light: purple_default[300],
    dark: purple_default[700]
  };
}
function getDefaultError(mode = "light") {
  if (mode === "dark") {
    return {
      main: red_default[500],
      light: red_default[300],
      dark: red_default[700]
    };
  }
  return {
    main: red_default[700],
    light: red_default[400],
    dark: red_default[800]
  };
}
function getDefaultInfo(mode = "light") {
  if (mode === "dark") {
    return {
      main: lightBlue_default[400],
      light: lightBlue_default[300],
      dark: lightBlue_default[700]
    };
  }
  return {
    main: lightBlue_default[700],
    light: lightBlue_default[500],
    dark: lightBlue_default[900]
  };
}
function getDefaultSuccess(mode = "light") {
  if (mode === "dark") {
    return {
      main: green_default[400],
      light: green_default[300],
      dark: green_default[700]
    };
  }
  return {
    main: green_default[800],
    light: green_default[500],
    dark: green_default[900]
  };
}
function getDefaultWarning(mode = "light") {
  if (mode === "dark") {
    return {
      main: orange_default[400],
      light: orange_default[300],
      dark: orange_default[700]
    };
  }
  return {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: orange_default[500],
    dark: orange_default[900]
  };
}
function createPalette(palette2) {
  const {
    mode = "light",
    contrastThreshold = 3,
    tonalOffset = 0.2
  } = palette2, other = _objectWithoutPropertiesLoose(palette2, _excluded12);
  const primary = palette2.primary || getDefaultPrimary(mode);
  const secondary = palette2.secondary || getDefaultSecondary(mode);
  const error = palette2.error || getDefaultError(mode);
  const info = palette2.info || getDefaultInfo(mode);
  const success = palette2.success || getDefaultSuccess(mode);
  const warning = palette2.warning || getDefaultWarning(mode);
  function getContrastText(background) {
    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
    if (true) {
      const contrast = getContrastRatio(background, contrastText);
      if (contrast < 3) {
        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join("\n"));
      }
    }
    return contrastText;
  }
  const augmentColor = ({
    color: color2,
    name,
    mainShade = 500,
    lightShade = 300,
    darkShade = 700
  }) => {
    color2 = _extends({}, color2);
    if (!color2.main && color2[mainShade]) {
      color2.main = color2[mainShade];
    }
    if (!color2.hasOwnProperty("main")) {
      throw new Error(true ? `MUI: The color${name ? ` (${name})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${mainShade}\` property.` : formatMuiErrorMessage(11, name ? ` (${name})` : "", mainShade));
    }
    if (typeof color2.main !== "string") {
      throw new Error(true ? `MUI: The color${name ? ` (${name})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(color2.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : formatMuiErrorMessage(12, name ? ` (${name})` : "", JSON.stringify(color2.main)));
    }
    addLightOrDark(color2, "light", lightShade, tonalOffset);
    addLightOrDark(color2, "dark", darkShade, tonalOffset);
    if (!color2.contrastText) {
      color2.contrastText = getContrastText(color2.main);
    }
    return color2;
  };
  const modes2 = {
    dark,
    light
  };
  if (true) {
    if (!modes2[mode]) {
      console.error(`MUI: The palette mode \`${mode}\` is not supported.`);
    }
  }
  const paletteOutput = deepmerge(_extends({
    // A collection of common colors.
    common: _extends({}, common_default),
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode,
    // The colors used to represent primary interface elements for a user.
    primary: augmentColor({
      color: primary,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: augmentColor({
      color: secondary,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: augmentColor({
      color: error,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: augmentColor({
      color: warning,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: augmentColor({
      color: info,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: augmentColor({
      color: success,
      name: "success"
    }),
    // The grey colors.
    grey: grey_default,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText,
    // Generate a rich color object.
    augmentColor,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset
  }, modes2[mode]), other);
  return paletteOutput;
}
var _excluded12, light, dark;
var init_createPalette = __esm({
  "node_modules/@mui/material/styles/createPalette.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_esm();
    init_esm();
    init_esm2();
    init_common();
    init_grey();
    init_purple();
    init_red();
    init_orange();
    init_blue();
    init_lightBlue();
    init_green();
    _excluded12 = ["mode", "contrastThreshold", "tonalOffset"];
    light = {
      // The colors used to style the text.
      text: {
        // The most important text.
        primary: "rgba(0, 0, 0, 0.87)",
        // Secondary text.
        secondary: "rgba(0, 0, 0, 0.6)",
        // Disabled text have even lower visual prominence.
        disabled: "rgba(0, 0, 0, 0.38)"
      },
      // The color used to divide different elements.
      divider: "rgba(0, 0, 0, 0.12)",
      // The background colors used to style the surfaces.
      // Consistency between these values is important.
      background: {
        paper: common_default.white,
        default: common_default.white
      },
      // The colors used to style the action elements.
      action: {
        // The color of an active action like an icon button.
        active: "rgba(0, 0, 0, 0.54)",
        // The color of an hovered action.
        hover: "rgba(0, 0, 0, 0.04)",
        hoverOpacity: 0.04,
        // The color of a selected action.
        selected: "rgba(0, 0, 0, 0.08)",
        selectedOpacity: 0.08,
        // The color of a disabled action.
        disabled: "rgba(0, 0, 0, 0.26)",
        // The background color of a disabled action.
        disabledBackground: "rgba(0, 0, 0, 0.12)",
        disabledOpacity: 0.38,
        focus: "rgba(0, 0, 0, 0.12)",
        focusOpacity: 0.12,
        activatedOpacity: 0.12
      }
    };
    dark = {
      text: {
        primary: common_default.white,
        secondary: "rgba(255, 255, 255, 0.7)",
        disabled: "rgba(255, 255, 255, 0.5)",
        icon: "rgba(255, 255, 255, 0.5)"
      },
      divider: "rgba(255, 255, 255, 0.12)",
      background: {
        paper: "#121212",
        default: "#121212"
      },
      action: {
        active: common_default.white,
        hover: "rgba(255, 255, 255, 0.08)",
        hoverOpacity: 0.08,
        selected: "rgba(255, 255, 255, 0.16)",
        selectedOpacity: 0.16,
        disabled: "rgba(255, 255, 255, 0.3)",
        disabledBackground: "rgba(255, 255, 255, 0.12)",
        disabledOpacity: 0.38,
        focus: "rgba(255, 255, 255, 0.12)",
        focusOpacity: 0.12,
        activatedOpacity: 0.24
      }
    };
  }
});

// node_modules/@mui/material/styles/createTypography.js
function round(value) {
  return Math.round(value * 1e5) / 1e5;
}
function createTypography(palette2, typography2) {
  const _ref2 = typeof typography2 === "function" ? typography2(palette2) : typography2, {
    fontFamily: fontFamily2 = defaultFontFamily,
    // The default font size of the Material Specification.
    fontSize: fontSize2 = 14,
    // px
    fontWeightLight = 300,
    fontWeightRegular = 400,
    fontWeightMedium = 500,
    fontWeightBold = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize = 16,
    // Apply the CSS properties to all the variants.
    allVariants,
    pxToRem: pxToRem2
  } = _ref2, other = _objectWithoutPropertiesLoose(_ref2, _excluded13);
  if (true) {
    if (typeof fontSize2 !== "number") {
      console.error("MUI: `fontSize` is required to be a number.");
    }
    if (typeof htmlFontSize !== "number") {
      console.error("MUI: `htmlFontSize` is required to be a number.");
    }
  }
  const coef = fontSize2 / 14;
  const pxToRem = pxToRem2 || ((size2) => `${size2 / htmlFontSize * coef}rem`);
  const buildVariant = (fontWeight2, size2, lineHeight2, letterSpacing2, casing) => _extends({
    fontFamily: fontFamily2,
    fontWeight: fontWeight2,
    fontSize: pxToRem(size2),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: lineHeight2
  }, fontFamily2 === defaultFontFamily ? {
    letterSpacing: `${round(letterSpacing2 / size2)}em`
  } : {}, casing, allVariants);
  const variants = {
    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return deepmerge(_extends({
    htmlFontSize,
    pxToRem,
    fontFamily: fontFamily2,
    fontSize: fontSize2,
    fontWeightLight,
    fontWeightRegular,
    fontWeightMedium,
    fontWeightBold
  }, variants), other, {
    clone: false
    // No need to clone deep
  });
}
var _excluded13, caseAllCaps, defaultFontFamily;
var init_createTypography = __esm({
  "node_modules/@mui/material/styles/createTypography.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_esm();
    _excluded13 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
    caseAllCaps = {
      textTransform: "uppercase"
    };
    defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
  }
});

// node_modules/@mui/material/styles/shadows.js
function createShadow(...px) {
  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(",");
}
var shadowKeyUmbraOpacity, shadowKeyPenumbraOpacity, shadowAmbientShadowOpacity, shadows, shadows_default2;
var init_shadows2 = __esm({
  "node_modules/@mui/material/styles/shadows.js"() {
    shadowKeyUmbraOpacity = 0.2;
    shadowKeyPenumbraOpacity = 0.14;
    shadowAmbientShadowOpacity = 0.12;
    shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
    shadows_default2 = shadows;
  }
});

// node_modules/@mui/material/styles/createTransitions.js
function formatMs(milliseconds) {
  return `${Math.round(milliseconds)}ms`;
}
function getAutoHeightDuration(height2) {
  if (!height2) {
    return 0;
  }
  const constant = height2 / 36;
  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
}
function createTransitions(inputTransitions) {
  const mergedEasing = _extends({}, easing, inputTransitions.easing);
  const mergedDuration = _extends({}, duration, inputTransitions.duration);
  const create2 = (props = ["all"], options = {}) => {
    const {
      duration: durationOption = mergedDuration.standard,
      easing: easingOption = mergedEasing.easeInOut,
      delay = 0
    } = options, other = _objectWithoutPropertiesLoose(options, _excluded14);
    if (true) {
      const isString = (value) => typeof value === "string";
      const isNumber2 = (value) => !isNaN(parseFloat(value));
      if (!isString(props) && !Array.isArray(props)) {
        console.error('MUI: Argument "props" must be a string or Array.');
      }
      if (!isNumber2(durationOption) && !isString(durationOption)) {
        console.error(`MUI: Argument "duration" must be a number or a string but found ${durationOption}.`);
      }
      if (!isString(easingOption)) {
        console.error('MUI: Argument "easing" must be a string.');
      }
      if (!isNumber2(delay) && !isString(delay)) {
        console.error('MUI: Argument "delay" must be a number or a string.');
      }
      if (typeof options !== "object") {
        console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join("\n"));
      }
      if (Object.keys(other).length !== 0) {
        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(",")}].`);
      }
    }
    return (Array.isArray(props) ? props : [props]).map((animatedProp) => `${animatedProp} ${typeof durationOption === "string" ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === "string" ? delay : formatMs(delay)}`).join(",");
  };
  return _extends({
    getAutoHeightDuration,
    create: create2
  }, inputTransitions, {
    easing: mergedEasing,
    duration: mergedDuration
  });
}
var _excluded14, easing, duration;
var init_createTransitions = __esm({
  "node_modules/@mui/material/styles/createTransitions.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    _excluded14 = ["duration", "easing", "delay"];
    easing = {
      // This is the most common easing curve.
      easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
      // Objects enter the screen at full velocity from off-screen and
      // slowly decelerate to a resting point.
      easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
      // Objects leave the screen at full velocity. They do not decelerate when off-screen.
      easeIn: "cubic-bezier(0.4, 0, 1, 1)",
      // The sharp curve is used by objects that may return to the screen at any time.
      sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
    };
    duration = {
      shortest: 150,
      shorter: 200,
      short: 250,
      // most basic recommended timing
      standard: 300,
      // this is to be used in complex animations
      complex: 375,
      // recommended when something is entering screen
      enteringScreen: 225,
      // recommended when something is leaving screen
      leavingScreen: 195
    };
  }
});

// node_modules/@mui/material/styles/zIndex.js
var zIndex2, zIndex_default;
var init_zIndex = __esm({
  "node_modules/@mui/material/styles/zIndex.js"() {
    zIndex2 = {
      mobileStepper: 1e3,
      fab: 1050,
      speedDial: 1050,
      appBar: 1100,
      drawer: 1200,
      modal: 1300,
      snackbar: 1400,
      tooltip: 1500
    };
    zIndex_default = zIndex2;
  }
});

// node_modules/@mui/material/styles/createTheme.js
function createTheme2(options = {}, ...args) {
  const {
    mixins: mixinsInput = {},
    palette: paletteInput = {},
    transitions: transitionsInput = {},
    typography: typographyInput = {}
  } = options, other = _objectWithoutPropertiesLoose(options, _excluded15);
  if (options.vars) {
    throw new Error(true ? `MUI: \`vars\` is a private field used for CSS variables support.
Please use another name.` : formatMuiErrorMessage(18));
  }
  const palette2 = createPalette(paletteInput);
  const systemTheme = createTheme_default(options);
  let muiTheme = deepmerge(systemTheme, {
    mixins: createMixins(systemTheme.breakpoints, mixinsInput),
    palette: palette2,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: shadows_default2.slice(),
    typography: createTypography(palette2, typographyInput),
    transitions: createTransitions(transitionsInput),
    zIndex: _extends({}, zIndex_default)
  });
  muiTheme = deepmerge(muiTheme, other);
  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);
  if (true) {
    const stateClasses = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"];
    const traverse = (node2, component) => {
      let key;
      for (key in node2) {
        const child = node2[key];
        if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {
          if (true) {
            const stateClass = generateUtilityClass("", key);
            console.error([`MUI: The \`${component}\` component increases the CSS specificity of the \`${key}\` internal state.`, "You can not override it like this: ", JSON.stringify(node2, null, 2), "", `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({
              root: {
                [`&.${stateClass}`]: child
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join("\n"));
          }
          node2[key] = {};
        }
      }
    };
    Object.keys(muiTheme.components).forEach((component) => {
      const styleOverrides = muiTheme.components[component].styleOverrides;
      if (styleOverrides && component.indexOf("Mui") === 0) {
        traverse(styleOverrides, component);
      }
    });
  }
  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig_default, other == null ? void 0 : other.unstable_sxConfig);
  muiTheme.unstable_sx = function sx(props) {
    return styleFunctionSx_default({
      sx: props,
      theme: this
    });
  };
  return muiTheme;
}
var _excluded15, createTheme_default2;
var init_createTheme3 = __esm({
  "node_modules/@mui/material/styles/createTheme.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_esm();
    init_esm();
    init_esm2();
    init_generateUtilityClass3();
    init_createMixins();
    init_createPalette();
    init_createTypography();
    init_shadows2();
    init_createTransitions();
    init_zIndex();
    _excluded15 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
    createTheme_default2 = createTheme2;
  }
});

// node_modules/@mui/material/styles/defaultTheme.js
var defaultTheme4, defaultTheme_default;
var init_defaultTheme = __esm({
  "node_modules/@mui/material/styles/defaultTheme.js"() {
    "use client";
    init_createTheme3();
    defaultTheme4 = createTheme_default2();
    defaultTheme_default = defaultTheme4;
  }
});

// node_modules/@mui/material/styles/useThemeProps.js
function useThemeProps2({
  props,
  name
}) {
  return useThemeProps({
    props,
    name,
    defaultTheme: defaultTheme_default,
    themeId: identifier_default
  });
}
var init_useThemeProps3 = __esm({
  "node_modules/@mui/material/styles/useThemeProps.js"() {
    "use client";
    init_esm2();
    init_defaultTheme();
    init_identifier();
  }
});

// node_modules/@mui/material/styles/styled.js
var rootShouldForwardProp, slotShouldForwardProp, styled3, styled_default2;
var init_styled2 = __esm({
  "node_modules/@mui/material/styles/styled.js"() {
    "use client";
    init_esm2();
    init_defaultTheme();
    init_identifier();
    rootShouldForwardProp = (prop) => shouldForwardProp(prop) && prop !== "classes";
    slotShouldForwardProp = shouldForwardProp;
    styled3 = createStyled3({
      themeId: identifier_default,
      defaultTheme: defaultTheme_default,
      rootShouldForwardProp
    });
    styled_default2 = styled3;
  }
});

// node_modules/@mui/base/ClassNameGenerator/index.js
var init_ClassNameGenerator3 = __esm({
  "node_modules/@mui/base/ClassNameGenerator/index.js"() {
    init_esm();
  }
});

// node_modules/@mui/material/utils/capitalize.js
var capitalize_default;
var init_capitalize3 = __esm({
  "node_modules/@mui/material/utils/capitalize.js"() {
    init_esm();
    capitalize_default = capitalize;
  }
});

// node_modules/@mui/material/utils/createChainedFunction.js
var createChainedFunction_default;
var init_createChainedFunction2 = __esm({
  "node_modules/@mui/material/utils/createChainedFunction.js"() {
    init_esm();
    createChainedFunction_default = createChainedFunction;
  }
});

// node_modules/@mui/material/node_modules/clsx/dist/clsx.mjs
function r2(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e)
    n += e;
  else if ("object" == typeof e)
    if (Array.isArray(e))
      for (t = 0; t < e.length; t++)
        e[t] && (f = r2(e[t])) && (n && (n += " "), n += f);
    else
      for (t in e)
        e[t] && (n && (n += " "), n += t);
  return n;
}
function clsx2() {
  for (var e, t, f = 0, n = ""; f < arguments.length; )
    (e = arguments[f++]) && (t = r2(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_default2;
var init_clsx2 = __esm({
  "node_modules/@mui/material/node_modules/clsx/dist/clsx.mjs"() {
    clsx_default2 = clsx2;
  }
});

// node_modules/@mui/base/composeClasses/index.js
var init_composeClasses3 = __esm({
  "node_modules/@mui/base/composeClasses/index.js"() {
    init_esm();
  }
});

// node_modules/@mui/material/SvgIcon/svgIconClasses.js
function getSvgIconUtilityClass(slot) {
  return generateUtilityClass("MuiSvgIcon", slot);
}
var svgIconClasses;
var init_svgIconClasses = __esm({
  "node_modules/@mui/material/SvgIcon/svgIconClasses.js"() {
    init_esm();
    init_generateUtilityClass3();
    svgIconClasses = generateUtilityClasses("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
  }
});

// node_modules/@mui/material/SvgIcon/SvgIcon.js
var React30, import_prop_types20, import_jsx_runtime14, import_jsx_runtime15, _excluded18, useUtilityClasses2, SvgIconRoot, SvgIcon, SvgIcon_default;
var init_SvgIcon = __esm({
  "node_modules/@mui/material/SvgIcon/SvgIcon.js"() {
    "use client";
    init_extends();
    init_objectWithoutPropertiesLoose();
    React30 = __toESM(require_react());
    import_prop_types20 = __toESM(require_prop_types());
    init_clsx2();
    init_composeClasses3();
    init_capitalize3();
    init_useThemeProps3();
    init_styled2();
    init_svgIconClasses();
    import_jsx_runtime14 = __toESM(require_jsx_runtime());
    import_jsx_runtime15 = __toESM(require_jsx_runtime());
    _excluded18 = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"];
    useUtilityClasses2 = (ownerState) => {
      const {
        color: color2,
        fontSize: fontSize2,
        classes: classes2
      } = ownerState;
      const slots = {
        root: ["root", color2 !== "inherit" && `color${capitalize_default(color2)}`, `fontSize${capitalize_default(fontSize2)}`]
      };
      return composeClasses(slots, getSvgIconUtilityClass, classes2);
    };
    SvgIconRoot = styled_default2("svg", {
      name: "MuiSvgIcon",
      slot: "Root",
      overridesResolver: (props, styles7) => {
        const {
          ownerState
        } = props;
        return [styles7.root, ownerState.color !== "inherit" && styles7[`color${capitalize_default(ownerState.color)}`], styles7[`fontSize${capitalize_default(ownerState.fontSize)}`]];
      }
    })(({
      theme,
      ownerState
    }) => {
      var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette2, _palette3;
      return {
        userSelect: "none",
        width: "1em",
        height: "1em",
        display: "inline-block",
        // the <svg> will define the property that has `currentColor`
        // e.g. heroicons uses fill="none" and stroke="currentColor"
        fill: ownerState.hasSvgAsChild ? void 0 : "currentColor",
        flexShrink: 0,
        transition: (_theme$transitions = theme.transitions) == null || (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, "fill", {
          duration: (_theme$transitions2 = theme.transitions) == null || (_theme$transitions2 = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2.shorter
        }),
        fontSize: {
          inherit: "inherit",
          small: ((_theme$typography = theme.typography) == null || (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || "1.25rem",
          medium: ((_theme$typography2 = theme.typography) == null || (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || "1.5rem",
          large: ((_theme$typography3 = theme.typography) == null || (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || "2.1875rem"
        }[ownerState.fontSize],
        // TODO v5 deprecate, v6 remove for sx
        color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null || (_palette = _palette[ownerState.color]) == null ? void 0 : _palette.main) != null ? _palette$ownerState$c : {
          action: (_palette2 = (theme.vars || theme).palette) == null || (_palette2 = _palette2.action) == null ? void 0 : _palette2.active,
          disabled: (_palette3 = (theme.vars || theme).palette) == null || (_palette3 = _palette3.action) == null ? void 0 : _palette3.disabled,
          inherit: void 0
        }[ownerState.color]
      };
    });
    SvgIcon = React30.forwardRef(function SvgIcon2(inProps, ref) {
      const props = useThemeProps2({
        props: inProps,
        name: "MuiSvgIcon"
      });
      const {
        children: children2,
        className,
        color: color2 = "inherit",
        component = "svg",
        fontSize: fontSize2 = "medium",
        htmlColor,
        inheritViewBox = false,
        titleAccess,
        viewBox = "0 0 24 24"
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded18);
      const hasSvgAsChild = React30.isValidElement(children2) && children2.type === "svg";
      const ownerState = _extends({}, props, {
        color: color2,
        component,
        fontSize: fontSize2,
        instanceFontSize: inProps.fontSize,
        inheritViewBox,
        viewBox,
        hasSvgAsChild
      });
      const more = {};
      if (!inheritViewBox) {
        more.viewBox = viewBox;
      }
      const classes2 = useUtilityClasses2(ownerState);
      return (0, import_jsx_runtime15.jsxs)(SvgIconRoot, _extends({
        as: component,
        className: clsx_default2(classes2.root, className),
        focusable: "false",
        color: htmlColor,
        "aria-hidden": titleAccess ? void 0 : true,
        role: titleAccess ? "img" : void 0,
        ref
      }, more, other, hasSvgAsChild && children2.props, {
        ownerState,
        children: [hasSvgAsChild ? children2.props.children : children2, titleAccess ? (0, import_jsx_runtime14.jsx)("title", {
          children: titleAccess
        }) : null]
      }));
    });
    true ? SvgIcon.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit the d.ts file and run "yarn proptypes"     |
      // ----------------------------------------------------------------------
      /**
       * Node passed into the SVG element.
       */
      children: import_prop_types20.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types20.default.object,
      /**
       * @ignore
       */
      className: import_prop_types20.default.string,
      /**
       * The color of the component.
       * It supports both default and custom theme colors, which can be added as shown in the
       * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
       * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
       * @default 'inherit'
       */
      color: import_prop_types20.default.oneOfType([import_prop_types20.default.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types20.default.string]),
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types20.default.elementType,
      /**
       * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
       * @default 'medium'
       */
      fontSize: import_prop_types20.default.oneOfType([import_prop_types20.default.oneOf(["inherit", "large", "medium", "small"]), import_prop_types20.default.string]),
      /**
       * Applies a color attribute to the SVG element.
       */
      htmlColor: import_prop_types20.default.string,
      /**
       * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
       * prop will be ignored.
       * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
       * `component`'s viewBox to the root node.
       * @default false
       */
      inheritViewBox: import_prop_types20.default.bool,
      /**
       * The shape-rendering attribute. The behavior of the different options is described on the
       * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
       * If you are having issues with blurry icons you should investigate this prop.
       */
      shapeRendering: import_prop_types20.default.string,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types20.default.oneOfType([import_prop_types20.default.arrayOf(import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object, import_prop_types20.default.bool])), import_prop_types20.default.func, import_prop_types20.default.object]),
      /**
       * Provides a human-readable title for the element that contains it.
       * https://www.w3.org/TR/SVG-access/#Equivalent
       */
      titleAccess: import_prop_types20.default.string,
      /**
       * Allows you to redefine what the coordinates without units mean inside an SVG element.
       * For example, if the SVG element is 500 (width) by 200 (height),
       * and you pass viewBox="0 0 50 20",
       * this means that the coordinates inside the SVG will go from the top left corner (0,0)
       * to bottom right (50,20) and each unit will be worth 10px.
       * @default '0 0 24 24'
       */
      viewBox: import_prop_types20.default.string
    } : void 0;
    SvgIcon.muiName = "SvgIcon";
    SvgIcon_default = SvgIcon;
  }
});

// node_modules/@mui/material/SvgIcon/index.js
var init_SvgIcon2 = __esm({
  "node_modules/@mui/material/SvgIcon/index.js"() {
    "use client";
    init_SvgIcon();
    init_svgIconClasses();
    init_svgIconClasses();
  }
});

// node_modules/@mui/material/utils/createSvgIcon.js
function createSvgIcon(path, displayName) {
  function Component2(props, ref) {
    return (0, import_jsx_runtime16.jsx)(SvgIcon_default, _extends({
      "data-testid": `${displayName}Icon`,
      ref
    }, props, {
      children: path
    }));
  }
  if (true) {
    Component2.displayName = `${displayName}Icon`;
  }
  Component2.muiName = SvgIcon_default.muiName;
  return React31.memo(React31.forwardRef(Component2));
}
var React31, import_jsx_runtime16;
var init_createSvgIcon = __esm({
  "node_modules/@mui/material/utils/createSvgIcon.js"() {
    "use client";
    init_extends();
    React31 = __toESM(require_react());
    init_SvgIcon2();
    import_jsx_runtime16 = __toESM(require_jsx_runtime());
  }
});

// node_modules/@mui/material/utils/debounce.js
var debounce_default;
var init_debounce3 = __esm({
  "node_modules/@mui/material/utils/debounce.js"() {
    init_esm();
    debounce_default = debounce;
  }
});

// node_modules/@mui/material/utils/deprecatedPropType.js
var deprecatedPropType_default;
var init_deprecatedPropType2 = __esm({
  "node_modules/@mui/material/utils/deprecatedPropType.js"() {
    init_esm();
    deprecatedPropType_default = deprecatedPropType;
  }
});

// node_modules/@mui/material/utils/isMuiElement.js
var isMuiElement_default;
var init_isMuiElement2 = __esm({
  "node_modules/@mui/material/utils/isMuiElement.js"() {
    init_esm();
    isMuiElement_default = isMuiElement;
  }
});

// node_modules/@mui/material/utils/ownerDocument.js
var ownerDocument_default;
var init_ownerDocument3 = __esm({
  "node_modules/@mui/material/utils/ownerDocument.js"() {
    init_esm();
    ownerDocument_default = ownerDocument;
  }
});

// node_modules/@mui/material/utils/ownerWindow.js
var ownerWindow_default;
var init_ownerWindow3 = __esm({
  "node_modules/@mui/material/utils/ownerWindow.js"() {
    init_esm();
    ownerWindow_default = ownerWindow;
  }
});

// node_modules/@mui/material/utils/requirePropFactory.js
var requirePropFactory_default;
var init_requirePropFactory2 = __esm({
  "node_modules/@mui/material/utils/requirePropFactory.js"() {
    init_esm();
    requirePropFactory_default = requirePropFactory;
  }
});

// node_modules/@mui/material/utils/setRef.js
var setRef_default;
var init_setRef2 = __esm({
  "node_modules/@mui/material/utils/setRef.js"() {
    init_esm();
    setRef_default = setRef;
  }
});

// node_modules/@mui/material/utils/useEnhancedEffect.js
var useEnhancedEffect_default2;
var init_useEnhancedEffect3 = __esm({
  "node_modules/@mui/material/utils/useEnhancedEffect.js"() {
    "use client";
    init_esm();
    useEnhancedEffect_default2 = useEnhancedEffect_default;
  }
});

// node_modules/@mui/material/utils/useId.js
var useId_default;
var init_useId3 = __esm({
  "node_modules/@mui/material/utils/useId.js"() {
    "use client";
    init_esm();
    useId_default = useId;
  }
});

// node_modules/@mui/material/utils/unsupportedProp.js
var unsupportedProp_default;
var init_unsupportedProp2 = __esm({
  "node_modules/@mui/material/utils/unsupportedProp.js"() {
    init_esm();
    unsupportedProp_default = unsupportedProp;
  }
});

// node_modules/@mui/material/utils/useControlled.js
var useControlled_default;
var init_useControlled3 = __esm({
  "node_modules/@mui/material/utils/useControlled.js"() {
    "use client";
    init_esm();
    useControlled_default = useControlled;
  }
});

// node_modules/@mui/material/utils/useEventCallback.js
var useEventCallback_default2;
var init_useEventCallback3 = __esm({
  "node_modules/@mui/material/utils/useEventCallback.js"() {
    "use client";
    init_esm();
    useEventCallback_default2 = useEventCallback_default;
  }
});

// node_modules/@mui/material/utils/useForkRef.js
var useForkRef_default;
var init_useForkRef3 = __esm({
  "node_modules/@mui/material/utils/useForkRef.js"() {
    "use client";
    init_esm();
    useForkRef_default = useForkRef;
  }
});

// node_modules/@mui/material/utils/useIsFocusVisible.js
var useIsFocusVisible_default;
var init_useIsFocusVisible2 = __esm({
  "node_modules/@mui/material/utils/useIsFocusVisible.js"() {
    "use client";
    init_esm();
    useIsFocusVisible_default = useIsFocusVisible;
  }
});

// node_modules/@mui/material/utils/index.js
var utils_exports = {};
__export(utils_exports, {
  capitalize: () => capitalize_default,
  createChainedFunction: () => createChainedFunction_default,
  createSvgIcon: () => createSvgIcon,
  debounce: () => debounce_default,
  deprecatedPropType: () => deprecatedPropType_default,
  isMuiElement: () => isMuiElement_default,
  ownerDocument: () => ownerDocument_default,
  ownerWindow: () => ownerWindow_default,
  requirePropFactory: () => requirePropFactory_default,
  setRef: () => setRef_default,
  unstable_ClassNameGenerator: () => unstable_ClassNameGenerator,
  unstable_useEnhancedEffect: () => useEnhancedEffect_default2,
  unstable_useId: () => useId_default,
  unsupportedProp: () => unsupportedProp_default,
  useControlled: () => useControlled_default,
  useEventCallback: () => useEventCallback_default2,
  useForkRef: () => useForkRef_default,
  useIsFocusVisible: () => useIsFocusVisible_default
});
var unstable_ClassNameGenerator;
var init_utils = __esm({
  "node_modules/@mui/material/utils/index.js"() {
    "use client";
    init_ClassNameGenerator3();
    init_capitalize3();
    init_createChainedFunction2();
    init_createSvgIcon();
    init_debounce3();
    init_deprecatedPropType2();
    init_isMuiElement2();
    init_ownerDocument3();
    init_ownerWindow3();
    init_requirePropFactory2();
    init_setRef2();
    init_useEnhancedEffect3();
    init_useId3();
    init_unsupportedProp2();
    init_useControlled3();
    init_useEventCallback3();
    init_useForkRef3();
    init_useIsFocusVisible2();
    unstable_ClassNameGenerator = {
      configure: (generator) => {
        if (true) {
          console.warn(["MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.", "", "You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead", "", "The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401", "", "The updated documentation: https://mui.com/guides/classname-generator/"].join("\n"));
        }
        ClassNameGenerator_default.configure(generator);
      }
    };
  }
});

// node_modules/@mui/material/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development3 = __commonJS({
  "node_modules/@mui/material/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_SERVER_CONTEXT_TYPE:
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef2 = REACT_FORWARD_REF_TYPE;
        var Fragment54 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo2 = REACT_MEMO_TYPE;
        var Portal3 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement8(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment12(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        function isSuspenseList(object) {
          return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef2;
        exports.Fragment = Fragment54;
        exports.Lazy = Lazy;
        exports.Memo = Memo2;
        exports.Portal = Portal3;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.SuspenseList = SuspenseList;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement8;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment12;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isSuspenseList = isSuspenseList;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/@mui/material/node_modules/react-is/index.js
var require_react_is3 = __commonJS({
  "node_modules/@mui/material/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development3();
    }
  }
});

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@mui/icons-material/utils/createSvgIcon.js
var require_createSvgIcon = __commonJS({
  "node_modules/@mui/icons-material/utils/createSvgIcon.js"(exports) {
    "use strict";
    "use client";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _utils.createSvgIcon;
      }
    });
    var _utils = (init_utils(), __toCommonJS(utils_exports));
  }
});

// node_modules/@mui/icons-material/Lock.js
var require_Lock = __commonJS({
  "node_modules/@mui/icons-material/Lock.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"
    }), "Lock");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Queue.js
var require_Queue = __commonJS({
  "node_modules/@mui/icons-material/Queue.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z"
    }), "Queue");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Add.js
var require_Add = __commonJS({
  "node_modules/@mui/icons-material/Add.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
    }), "Add");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/RemoveRedEye.js
var require_RemoveRedEye = __commonJS({
  "node_modules/@mui/icons-material/RemoveRedEye.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
    }), "RemoveRedEye");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Sort.js
var require_Sort = __commonJS({
  "node_modules/@mui/icons-material/Sort.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z"
    }), "Sort");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/ArrowDropDown.js
var require_ArrowDropDown = __commonJS({
  "node_modules/@mui/icons-material/ArrowDropDown.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "m7 10 5 5 5-5z"
    }), "ArrowDropDown");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Delete.js
var require_Delete = __commonJS({
  "node_modules/@mui/icons-material/Delete.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
    }), "Delete");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Menu.js
var require_Menu = __commonJS({
  "node_modules/@mui/icons-material/Menu.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
    }), "Menu");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/AccountCircle.js
var require_AccountCircle = __commonJS({
  "node_modules/@mui/icons-material/AccountCircle.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20z"
    }), "AccountCircle");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/PowerSettingsNew.js
var require_PowerSettingsNew = __commonJS({
  "node_modules/@mui/icons-material/PowerSettingsNew.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M13 3h-2v10h2V3zm4.83 2.17-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z"
    }), "PowerSettingsNew");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Brightness4.js
var require_Brightness4 = __commonJS({
  "node_modules/@mui/icons-material/Brightness4.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z"
    }), "Brightness4");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Brightness7.js
var require_Brightness7 = __commonJS({
  "node_modules/@mui/icons-material/Brightness7.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"
    }), "Brightness7");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/CheckCircle.js
var require_CheckCircle = __commonJS({
  "node_modules/@mui/icons-material/CheckCircle.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
    }), "CheckCircle");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/ErrorOutline.js
var require_ErrorOutline = __commonJS({
  "node_modules/@mui/icons-material/ErrorOutline.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
    }), "ErrorOutline");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Dashboard.js
var require_Dashboard = __commonJS({
  "node_modules/@mui/icons-material/Dashboard.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"
    }), "Dashboard");
    exports.default = _default;
  }
});

// node_modules/css-mediaquery/index.js
var require_css_mediaquery = __commonJS({
  "node_modules/css-mediaquery/index.js"(exports) {
    "use strict";
    exports.match = matchQuery;
    exports.parse = parseQuery;
    var RE_MEDIA_QUERY = /(?:(only|not)?\s*([^\s\(\)]+)(?:\s*and)?\s*)?(.+)?/i;
    var RE_MQ_EXPRESSION = /\(\s*([^\s\:\)]+)\s*(?:\:\s*([^\s\)]+))?\s*\)/;
    var RE_MQ_FEATURE = /^(?:(min|max)-)?(.+)/;
    var RE_LENGTH_UNIT = /(em|rem|px|cm|mm|in|pt|pc)?$/;
    var RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;
    function matchQuery(mediaQuery2, values3) {
      return parseQuery(mediaQuery2).some(function(query) {
        var inverse = query.inverse;
        var typeMatch = query.type === "all" || values3.type === query.type;
        if (typeMatch && inverse || !(typeMatch || inverse)) {
          return false;
        }
        var expressionsMatch = query.expressions.every(function(expression) {
          var feature = expression.feature, modifier = expression.modifier, expValue = expression.value, value = values3[feature];
          if (!value) {
            return false;
          }
          switch (feature) {
            case "orientation":
            case "scan":
              return value.toLowerCase() === expValue.toLowerCase();
            case "width":
            case "height":
            case "device-width":
            case "device-height":
              expValue = toPx(expValue);
              value = toPx(value);
              break;
            case "resolution":
              expValue = toDpi(expValue);
              value = toDpi(value);
              break;
            case "aspect-ratio":
            case "device-aspect-ratio":
            case /* Deprecated */
            "device-pixel-ratio":
              expValue = toDecimal(expValue);
              value = toDecimal(value);
              break;
            case "grid":
            case "color":
            case "color-index":
            case "monochrome":
              expValue = parseInt(expValue, 10) || 1;
              value = parseInt(value, 10) || 0;
              break;
          }
          switch (modifier) {
            case "min":
              return value >= expValue;
            case "max":
              return value <= expValue;
            default:
              return value === expValue;
          }
        });
        return expressionsMatch && !inverse || !expressionsMatch && inverse;
      });
    }
    function parseQuery(mediaQuery2) {
      return mediaQuery2.split(",").map(function(query) {
        query = query.trim();
        var captures = query.match(RE_MEDIA_QUERY), modifier = captures[1], type = captures[2], expressions = captures[3] || "", parsed = {};
        parsed.inverse = !!modifier && modifier.toLowerCase() === "not";
        parsed.type = type ? type.toLowerCase() : "all";
        expressions = expressions.match(/\([^\)]+\)/g) || [];
        parsed.expressions = expressions.map(function(expression) {
          var captures2 = expression.match(RE_MQ_EXPRESSION), feature = captures2[1].toLowerCase().match(RE_MQ_FEATURE);
          return {
            modifier: feature[1],
            feature: feature[2],
            value: captures2[2]
          };
        });
        return parsed;
      });
    }
    function toDecimal(ratio) {
      var decimal = Number(ratio), numbers;
      if (!decimal) {
        numbers = ratio.match(/^(\d+)\s*\/\s*(\d+)$/);
        decimal = numbers[1] / numbers[2];
      }
      return decimal;
    }
    function toDpi(resolution) {
      var value = parseFloat(resolution), units = String(resolution).match(RE_RESOLUTION_UNIT)[1];
      switch (units) {
        case "dpcm":
          return value / 2.54;
        case "dppx":
          return value * 96;
        default:
          return value;
      }
    }
    function toPx(length2) {
      var value = parseFloat(length2), units = String(length2).match(RE_LENGTH_UNIT)[1];
      switch (units) {
        case "em":
          return value * 16;
        case "rem":
          return value * 16;
        case "cm":
          return value * 96 / 2.54;
        case "mm":
          return value * 96 / 2.54 / 10;
        case "in":
          return value * 96;
        case "pt":
          return value * 72;
        case "pc":
          return value * 72 / 12;
        default:
          return value;
      }
    }
  }
});

// node_modules/@mui/icons-material/Report.js
var require_Report = __commonJS({
  "node_modules/@mui/icons-material/Report.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M15.73 3H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3zM12 17.3c-.72 0-1.3-.58-1.3-1.3 0-.72.58-1.3 1.3-1.3.72 0 1.3.58 1.3 1.3 0 .72-.58 1.3-1.3 1.3zm1-4.3h-2V7h2v6z"
    }), "Report");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/ExpandMore.js
var require_ExpandMore = __commonJS({
  "node_modules/@mui/icons-material/ExpandMore.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"
    }), "ExpandMore");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/History.js
var require_History = __commonJS({
  "node_modules/@mui/icons-material/History.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z"
    }), "History");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Settings.js
var require_Settings = __commonJS({
  "node_modules/@mui/icons-material/Settings.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z"
    }), "Settings");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/DragIndicator.js
var require_DragIndicator = __commonJS({
  "node_modules/@mui/icons-material/DragIndicator.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
    }), "DragIndicator");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/CancelOutlined.js
var require_CancelOutlined = __commonJS({
  "node_modules/@mui/icons-material/CancelOutlined.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z"
    }), "CancelOutlined");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/DeleteOutline.js
var require_DeleteOutline = __commonJS({
  "node_modules/@mui/icons-material/DeleteOutline.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z"
    }), "DeleteOutline");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/ViewList.js
var require_ViewList = __commonJS({
  "node_modules/@mui/icons-material/ViewList.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M3 14h4v-4H3v4zm0 5h4v-4H3v4zM3 9h4V5H3v4zm5 5h13v-4H8v4zm0 5h13v-4H8v4zM8 5v4h13V5H8z"
    }), "ViewList");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/HotTub.js
var require_HotTub = __commonJS({
  "node_modules/@mui/icons-material/HotTub.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)([(0, _jsxRuntime.jsx)("circle", {
      cx: "7",
      cy: "6",
      r: "2"
    }, "0"), (0, _jsxRuntime.jsx)("path", {
      d: "M11.15 12c-.31-.22-.59-.46-.82-.72l-1.4-1.55c-.19-.21-.43-.38-.69-.5-.29-.14-.62-.23-.96-.23h-.03C6.01 9 5 10.01 5 11.25V12H2v8c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-8H11.15zM7 20H5v-6h2v6zm4 0H9v-6h2v6zm4 0h-2v-6h2v6zm4 0h-2v-6h2v6zm-.35-14.14-.07-.07c-.57-.62-.82-1.41-.67-2.2L18 3h-1.89l-.06.43c-.2 1.36.27 2.71 1.3 3.72l.07.06c.57.62.82 1.41.67 2.2l-.11.59h1.91l.06-.43c.21-1.36-.27-2.71-1.3-3.71zm-4 0-.07-.07c-.57-.62-.82-1.41-.67-2.2L14 3h-1.89l-.06.43c-.2 1.36.27 2.71 1.3 3.72l.07.06c.57.62.82 1.41.67 2.2l-.11.59h1.91l.06-.43c.21-1.36-.27-2.71-1.3-3.71z"
    }, "1")], "HotTub");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/GetApp.js
var require_GetApp = __commonJS({
  "node_modules/@mui/icons-material/GetApp.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"
    }), "GetApp");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Update.js
var require_Update = __commonJS({
  "node_modules/@mui/icons-material/Update.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79s7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58s9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z"
    }), "Update");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Create.js
var require_Create = __commonJS({
  "node_modules/@mui/icons-material/Create.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
    }), "Create");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Translate.js
var require_Translate = __commonJS({
  "node_modules/@mui/icons-material/Translate.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "m12.87 15.07-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7 1.62-4.33L19.12 17h-3.24z"
    }), "Translate");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/List.js
var require_List = __commonJS({
  "node_modules/@mui/icons-material/List.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z"
    }), "List");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Refresh.js
var require_Refresh = __commonJS({
  "node_modules/@mui/icons-material/Refresh.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"
    }), "Refresh");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Save.js
var require_Save = __commonJS({
  "node_modules/@mui/icons-material/Save.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
    }), "Save");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/AddCircleOutline.js
var require_AddCircleOutline = __commonJS({
  "node_modules/@mui/icons-material/AddCircleOutline.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
    }), "AddCircleOutline");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/RemoveCircleOutline.js
var require_RemoveCircleOutline = __commonJS({
  "node_modules/@mui/icons-material/RemoveCircleOutline.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
    }), "RemoveCircleOutline");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/ArrowCircleUp.js
var require_ArrowCircleUp = __commonJS({
  "node_modules/@mui/icons-material/ArrowCircleUp.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 20c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0 2c5.52 0 10-4.48 10-10S17.52 2 12 2 2 6.48 2 12s4.48 10 10 10zm-1-10v4h2v-4h3l-4-4-4 4h3z"
    }), "ArrowCircleUp");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/ArrowCircleDown.js
var require_ArrowCircleDown = __commonJS({
  "node_modules/@mui/icons-material/ArrowCircleDown.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 10V8h-2v4H8l4 4 4-4h-3z"
    }), "ArrowCircleDown");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/HighlightOff.js
var require_HighlightOff = __commonJS({
  "node_modules/@mui/icons-material/HighlightOff.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
    }), "HighlightOff");
    exports.default = _default;
  }
});

// node_modules/lodash/_baseDifference.js
var require_baseDifference = __commonJS({
  "node_modules/lodash/_baseDifference.js"(exports, module) {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var arrayMap = require_arrayMap();
    var baseUnary = require_baseUnary();
    var cacheHas = require_cacheHas();
    var LARGE_ARRAY_SIZE = 200;
    function baseDifference(array, values3, iteratee, comparator) {
      var index2 = -1, includes = arrayIncludes, isCommon = true, length2 = array.length, result = [], valuesLength = values3.length;
      if (!length2) {
        return result;
      }
      if (iteratee) {
        values3 = arrayMap(values3, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      } else if (values3.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values3 = new SetCache(values3);
      }
      outer:
        while (++index2 < length2) {
          var value = array[index2], computed = iteratee == null ? value : iteratee(value);
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;
            while (valuesIndex--) {
              if (values3[valuesIndex] === computed) {
                continue outer;
              }
            }
            result.push(value);
          } else if (!includes(values3, computed, comparator)) {
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseDifference;
  }
});

// node_modules/lodash/difference.js
var require_difference = __commonJS({
  "node_modules/lodash/difference.js"(exports, module) {
    var baseDifference = require_baseDifference();
    var baseFlatten = require_baseFlatten();
    var baseRest = require_baseRest();
    var isArrayLikeObject = require_isArrayLikeObject();
    var difference2 = baseRest(function(array, values3) {
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values3, 1, isArrayLikeObject, true)) : [];
    });
    module.exports = difference2;
  }
});

// node_modules/@mui/icons-material/Close.js
var require_Close = __commonJS({
  "node_modules/@mui/icons-material/Close.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
    }), "Close");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/ViewWeek.js
var require_ViewWeek = __commonJS({
  "node_modules/@mui/icons-material/ViewWeek.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M5.33 20H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h1.33c1.1 0 2 .9 2 2v12c0 1.1-.89 2-2 2zM22 18V6c0-1.1-.9-2-2-2h-1.33c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2H20c1.11 0 2-.9 2-2zm-7.33 0V6c0-1.1-.9-2-2-2h-1.33c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h1.33c1.1 0 2-.9 2-2z"
    }), "ViewWeek");
    exports.default = _default;
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    function arrayEach(array, iteratee) {
      var index2 = -1, length2 = array == null ? 0 : array.length;
      while (++index2 < length2) {
        if (iteratee(array[index2], index2, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports, module) {
    var copyObject = require_copyObject();
    var keys = require_keys();
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }
    module.exports = baseAssign;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }
    module.exports = baseAssignIn;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }
    module.exports = copySymbols;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }
    module.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports, module) {
    var objectProto = Object.prototype;
    var hasOwnProperty3 = objectProto.hasOwnProperty;
    function initCloneArray(array) {
      var length2 = array.length, result = new array.constructor(length2);
      if (length2 && typeof array[0] == "string" && hasOwnProperty3.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports, module) {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);
        case boolTag:
        case dateTag:
          return new Ctor(+object);
        case dataViewTag:
          return cloneDataView(object, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object);
        case regexpTag:
          return cloneRegExp(object);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object);
      }
    }
    module.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports, module) {
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports, module) {
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports, module) {
    var Stack3 = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject2 = require_isObject();
    var isSet = require_isSet();
    var keys = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject2(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack3());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key2) {
          result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key2) {
        if (props) {
          key2 = subValue;
          subValue = value[key2];
        }
        assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  }
});

// node_modules/lodash/cloneDeep.js
var require_cloneDeep = __commonJS({
  "node_modules/lodash/cloneDeep.js"(exports, module) {
    var baseClone = require_baseClone();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_SYMBOLS_FLAG = 4;
    function cloneDeep2(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }
    module.exports = cloneDeep2;
  }
});

// node_modules/@mui/icons-material/FilterList.js
var require_FilterList = __commonJS({
  "node_modules/@mui/icons-material/FilterList.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
    }), "FilterList");
    exports.default = _default;
  }
});

// node_modules/lodash/matches.js
var require_matches = __commonJS({
  "node_modules/lodash/matches.js"(exports, module) {
    var baseClone = require_baseClone();
    var baseMatches = require_baseMatches();
    var CLONE_DEEP_FLAG = 1;
    function matches2(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }
    module.exports = matches2;
  }
});

// node_modules/@mui/icons-material/Search.js
var require_Search = __commonJS({
  "node_modules/@mui/icons-material/Search.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
    }), "Search");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/BookmarkBorder.js
var require_BookmarkBorder = __commonJS({
  "node_modules/@mui/icons-material/BookmarkBorder.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15-5-2.18L7 18V5h10v13z"
    }), "BookmarkBorder");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/HelpOutline.js
var require_HelpOutline = __commonJS({
  "node_modules/@mui/icons-material/HelpOutline.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
    }), "HelpOutline");
    exports.default = _default;
  }
});

// node_modules/attr-accept/dist/es/index.js
var require_es = __commonJS({
  "node_modules/attr-accept/dist/es/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = function(file, acceptedFiles) {
      if (file && acceptedFiles) {
        var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
        var fileName = file.name || "";
        var mimeType = (file.type || "").toLowerCase();
        var baseMimeType = mimeType.replace(/\/.*$/, "");
        return acceptedFilesArray.some(function(type) {
          var validType = type.trim().toLowerCase();
          if (validType.charAt(0) === ".") {
            return fileName.toLowerCase().endsWith(validType);
          } else if (validType.endsWith("/*")) {
            return baseMimeType === validType.replace(/\/.*$/, "");
          }
          return mimeType === validType;
        });
      }
      return true;
    };
  }
});

// node_modules/@mui/icons-material/RemoveCircle.js
var require_RemoveCircle = __commonJS({
  "node_modules/@mui/icons-material/RemoveCircle.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z"
    }), "RemoveCircle");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Clear.js
var require_Clear = __commonJS({
  "node_modules/@mui/icons-material/Clear.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
    }), "Clear");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Visibility.js
var require_Visibility = __commonJS({
  "node_modules/@mui/icons-material/Visibility.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
    }), "Visibility");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/VisibilityOff.js
var require_VisibilityOff = __commonJS({
  "node_modules/@mui/icons-material/VisibilityOff.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"
    }), "VisibilityOff");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Done.js
var require_Done = __commonJS({
  "node_modules/@mui/icons-material/Done.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"
    }), "Done");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Error.js
var require_Error = __commonJS({
  "node_modules/@mui/icons-material/Error.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"
    }), "Error");
    exports.default = _default;
  }
});

// node_modules/@mui/icons-material/Inbox.js
var require_Inbox = __commonJS({
  "node_modules/@mui/icons-material/Inbox.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z"
    }), "Inbox");
    exports.default = _default;
  }
});

// node_modules/object-keys/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/object-keys/isArguments.js"(exports, module) {
    "use strict";
    var toStr = Object.prototype.toString;
    module.exports = function isArguments(value) {
      var str = toStr.call(value);
      var isArgs = str === "[object Arguments]";
      if (!isArgs) {
        isArgs = str !== "[object Array]" && value !== null && typeof value === "object" && typeof value.length === "number" && value.length >= 0 && toStr.call(value.callee) === "[object Function]";
      }
      return isArgs;
    };
  }
});

// node_modules/object-keys/implementation.js
var require_implementation = __commonJS({
  "node_modules/object-keys/implementation.js"(exports, module) {
    "use strict";
    var keysShim;
    if (!Object.keys) {
      has = Object.prototype.hasOwnProperty;
      toStr = Object.prototype.toString;
      isArgs = require_isArguments();
      isEnumerable = Object.prototype.propertyIsEnumerable;
      hasDontEnumBug = !isEnumerable.call({ toString: null }, "toString");
      hasProtoEnumBug = isEnumerable.call(function() {
      }, "prototype");
      dontEnums = [
        "toString",
        "toLocaleString",
        "valueOf",
        "hasOwnProperty",
        "isPrototypeOf",
        "propertyIsEnumerable",
        "constructor"
      ];
      equalsConstructorPrototype = function(o) {
        var ctor = o.constructor;
        return ctor && ctor.prototype === o;
      };
      excludedKeys = {
        $applicationCache: true,
        $console: true,
        $external: true,
        $frame: true,
        $frameElement: true,
        $frames: true,
        $innerHeight: true,
        $innerWidth: true,
        $onmozfullscreenchange: true,
        $onmozfullscreenerror: true,
        $outerHeight: true,
        $outerWidth: true,
        $pageXOffset: true,
        $pageYOffset: true,
        $parent: true,
        $scrollLeft: true,
        $scrollTop: true,
        $scrollX: true,
        $scrollY: true,
        $self: true,
        $webkitIndexedDB: true,
        $webkitStorageInfo: true,
        $window: true
      };
      hasAutomationEqualityBug = function() {
        if (typeof window === "undefined") {
          return false;
        }
        for (var k in window) {
          try {
            if (!excludedKeys["$" + k] && has.call(window, k) && window[k] !== null && typeof window[k] === "object") {
              try {
                equalsConstructorPrototype(window[k]);
              } catch (e) {
                return true;
              }
            }
          } catch (e) {
            return true;
          }
        }
        return false;
      }();
      equalsConstructorPrototypeIfNotBuggy = function(o) {
        if (typeof window === "undefined" || !hasAutomationEqualityBug) {
          return equalsConstructorPrototype(o);
        }
        try {
          return equalsConstructorPrototype(o);
        } catch (e) {
          return false;
        }
      };
      keysShim = function keys(object) {
        var isObject2 = object !== null && typeof object === "object";
        var isFunction = toStr.call(object) === "[object Function]";
        var isArguments = isArgs(object);
        var isString = isObject2 && toStr.call(object) === "[object String]";
        var theKeys = [];
        if (!isObject2 && !isFunction && !isArguments) {
          throw new TypeError("Object.keys called on a non-object");
        }
        var skipProto = hasProtoEnumBug && isFunction;
        if (isString && object.length > 0 && !has.call(object, 0)) {
          for (var i = 0; i < object.length; ++i) {
            theKeys.push(String(i));
          }
        }
        if (isArguments && object.length > 0) {
          for (var j = 0; j < object.length; ++j) {
            theKeys.push(String(j));
          }
        } else {
          for (var name in object) {
            if (!(skipProto && name === "prototype") && has.call(object, name)) {
              theKeys.push(String(name));
            }
          }
        }
        if (hasDontEnumBug) {
          var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
          for (var k = 0; k < dontEnums.length; ++k) {
            if (!(skipConstructor && dontEnums[k] === "constructor") && has.call(object, dontEnums[k])) {
              theKeys.push(dontEnums[k]);
            }
          }
        }
        return theKeys;
      };
    }
    var has;
    var toStr;
    var isArgs;
    var isEnumerable;
    var hasDontEnumBug;
    var hasProtoEnumBug;
    var dontEnums;
    var equalsConstructorPrototype;
    var excludedKeys;
    var hasAutomationEqualityBug;
    var equalsConstructorPrototypeIfNotBuggy;
    module.exports = keysShim;
  }
});

// node_modules/object-keys/index.js
var require_object_keys = __commonJS({
  "node_modules/object-keys/index.js"(exports, module) {
    "use strict";
    var slice2 = Array.prototype.slice;
    var isArgs = require_isArguments();
    var origKeys = Object.keys;
    var keysShim = origKeys ? function keys(o) {
      return origKeys(o);
    } : require_implementation();
    var originalKeys = Object.keys;
    keysShim.shim = function shimObjectKeys() {
      if (Object.keys) {
        var keysWorksWithArguments = function() {
          var args = Object.keys(arguments);
          return args && args.length === arguments.length;
        }(1, 2);
        if (!keysWorksWithArguments) {
          Object.keys = function keys(object) {
            if (isArgs(object)) {
              return originalKeys(slice2.call(object));
            }
            return originalKeys(object);
          };
        }
      } else {
        Object.keys = keysShim;
      }
      return Object.keys || keysShim;
    };
    module.exports = keysShim;
  }
});

// node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/has-symbols/shams.js"(exports, module) {
    "use strict";
    module.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (sym in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/has-symbols/index.js"(exports, module) {
    "use strict";
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/has-proto/index.js
var require_has_proto = __commonJS({
  "node_modules/has-proto/index.js"(exports, module) {
    "use strict";
    var test = {
      foo: {}
    };
    var $Object = Object;
    module.exports = function hasProto() {
      return { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);
    };
  }
});

// node_modules/function-bind/implementation.js
var require_implementation2 = __commonJS({
  "node_modules/function-bind/implementation.js"(exports, module) {
    "use strict";
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var slice2 = Array.prototype.slice;
    var toStr = Object.prototype.toString;
    var funcType = "[object Function]";
    module.exports = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slice2.call(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            args.concat(slice2.call(arguments))
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        } else {
          return target.apply(
            that,
            args.concat(slice2.call(arguments))
          );
        }
      };
      var boundLength = Math.max(0, target.length - args.length);
      var boundArgs = [];
      for (var i = 0; i < boundLength; i++) {
        boundArgs.push("$" + i);
      }
      bound = Function("binder", "return function (" + boundArgs.join(",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty2 = function Empty3() {
        };
        Empty2.prototype = target.prototype;
        bound.prototype = new Empty2();
        Empty2.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/function-bind/index.js"(exports, module) {
    "use strict";
    var implementation = require_implementation2();
    module.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/has/src/index.js
var require_src = __commonJS({
  "node_modules/has/src/index.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);
  }
});

// node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/get-intrinsic/index.js"(exports, module) {
    "use strict";
    var undefined2;
    var $SyntaxError = SyntaxError;
    var $Function = Function;
    var $TypeError = TypeError;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e) {
      }
    };
    var $gOPD = Object.getOwnPropertyDescriptor;
    if ($gOPD) {
      try {
        $gOPD({}, "");
      } catch (e) {
        $gOPD = null;
      }
    }
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var hasProto = require_has_proto()();
    var getProto = Object.getPrototypeOf || (hasProto ? function(x) {
      return x.__proto__;
    } : null);
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": Error,
      "%eval%": eval,
      // eslint-disable-line no-eval
      "%EvalError%": EvalError,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": Object,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": RangeError,
      "%ReferenceError%": ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet
    };
    if (getProto) {
      try {
        null.error;
      } catch (e) {
        errorProto = getProto(getProto(e));
        INTRINSICS["%Error.prototype%"] = errorProto;
      }
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn2 = doEval2("%AsyncGeneratorFunction%");
        if (fn2) {
          value = fn2.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen && getProto) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind = require_function_bind();
    var hasOwn = require_src();
    var $concat = bind.call(Function.call, Array.prototype.concat);
    var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
    var $replace = bind.call(Function.call, String.prototype.replace);
    var $strSlice = bind.call(Function.call, String.prototype.slice);
    var $exec = bind.call(Function.call, RegExp.prototype.exec);
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName, function(match2, number2, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number2 || match2;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    module.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i = 1, isOwn = true; i < parts.length; i += 1) {
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD && i + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/has-property-descriptors/index.js
var require_has_property_descriptors = __commonJS({
  "node_modules/has-property-descriptors/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $defineProperty = GetIntrinsic("%Object.defineProperty%", true);
    var hasPropertyDescriptors = function hasPropertyDescriptors2() {
      if ($defineProperty) {
        try {
          $defineProperty({}, "a", { value: 1 });
          return true;
        } catch (e) {
          return false;
        }
      }
      return false;
    };
    hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
      if (!hasPropertyDescriptors()) {
        return null;
      }
      try {
        return $defineProperty([], "length", { value: 1 }).length !== 1;
      } catch (e) {
        return true;
      }
    };
    module.exports = hasPropertyDescriptors;
  }
});

// node_modules/define-properties/index.js
var require_define_properties = __commonJS({
  "node_modules/define-properties/index.js"(exports, module) {
    "use strict";
    var keys = require_object_keys();
    var hasSymbols = typeof Symbol === "function" && typeof Symbol("foo") === "symbol";
    var toStr = Object.prototype.toString;
    var concat = Array.prototype.concat;
    var origDefineProperty = Object.defineProperty;
    var isFunction = function(fn2) {
      return typeof fn2 === "function" && toStr.call(fn2) === "[object Function]";
    };
    var hasPropertyDescriptors = require_has_property_descriptors()();
    var supportsDescriptors = origDefineProperty && hasPropertyDescriptors;
    var defineProperty = function(object, name, value, predicate) {
      if (name in object) {
        if (predicate === true) {
          if (object[name] === value) {
            return;
          }
        } else if (!isFunction(predicate) || !predicate()) {
          return;
        }
      }
      if (supportsDescriptors) {
        origDefineProperty(object, name, {
          configurable: true,
          enumerable: false,
          value,
          writable: true
        });
      } else {
        object[name] = value;
      }
    };
    var defineProperties = function(object, map) {
      var predicates = arguments.length > 2 ? arguments[2] : {};
      var props = keys(map);
      if (hasSymbols) {
        props = concat.call(props, Object.getOwnPropertySymbols(map));
      }
      for (var i = 0; i < props.length; i += 1) {
        defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
      }
    };
    defineProperties.supportsDescriptors = !!supportsDescriptors;
    module.exports = defineProperties;
  }
});

// node_modules/call-bind/index.js
var require_call_bind = __commonJS({
  "node_modules/call-bind/index.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var GetIntrinsic = require_get_intrinsic();
    var $apply = GetIntrinsic("%Function.prototype.apply%");
    var $call = GetIntrinsic("%Function.prototype.call%");
    var $reflectApply = GetIntrinsic("%Reflect.apply%", true) || bind.call($call, $apply);
    var $gOPD = GetIntrinsic("%Object.getOwnPropertyDescriptor%", true);
    var $defineProperty = GetIntrinsic("%Object.defineProperty%", true);
    var $max = GetIntrinsic("%Math.max%");
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e) {
        $defineProperty = null;
      }
    }
    module.exports = function callBind(originalFunction) {
      var func = $reflectApply(bind, $call, arguments);
      if ($gOPD && $defineProperty) {
        var desc = $gOPD(func, "length");
        if (desc.configurable) {
          $defineProperty(
            func,
            "length",
            { value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
          );
        }
      }
      return func;
    };
    var applyBind = function applyBind2() {
      return $reflectApply(bind, $apply, arguments);
    };
    if ($defineProperty) {
      $defineProperty(module.exports, "apply", { value: applyBind });
    } else {
      module.exports.apply = applyBind;
    }
  }
});

// node_modules/call-bind/callBound.js
var require_callBound = __commonJS({
  "node_modules/call-bind/callBound.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBind = require_call_bind();
    var $indexOf = callBind(GetIntrinsic("String.prototype.indexOf"));
    module.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = GetIntrinsic(name, !!allowMissing);
      if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
        return callBind(intrinsic);
      }
      return intrinsic;
    };
  }
});

// node_modules/es-abstract/5/CheckObjectCoercible.js
var require_CheckObjectCoercible = __commonJS({
  "node_modules/es-abstract/5/CheckObjectCoercible.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $TypeError = GetIntrinsic("%TypeError%");
    module.exports = function CheckObjectCoercible(value, optMessage) {
      if (value == null) {
        throw new $TypeError(optMessage || "Cannot call method on " + value);
      }
      return value;
    };
  }
});

// node_modules/es-abstract/2022/RequireObjectCoercible.js
var require_RequireObjectCoercible = __commonJS({
  "node_modules/es-abstract/2022/RequireObjectCoercible.js"(exports, module) {
    "use strict";
    module.exports = require_CheckObjectCoercible();
  }
});

// node_modules/es-abstract/helpers/IsArray.js
var require_IsArray = __commonJS({
  "node_modules/es-abstract/helpers/IsArray.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $Array = GetIntrinsic("%Array%");
    var toStr = !$Array.isArray && require_callBound()("Object.prototype.toString");
    module.exports = $Array.isArray || function IsArray(argument) {
      return toStr(argument) === "[object Array]";
    };
  }
});

// node_modules/es-abstract/2022/IsArray.js
var require_IsArray2 = __commonJS({
  "node_modules/es-abstract/2022/IsArray.js"(exports, module) {
    "use strict";
    module.exports = require_IsArray();
  }
});

// node_modules/es-abstract/2022/Call.js
var require_Call = __commonJS({
  "node_modules/es-abstract/2022/Call.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_callBound();
    var $TypeError = GetIntrinsic("%TypeError%");
    var IsArray = require_IsArray2();
    var $apply = GetIntrinsic("%Reflect.apply%", true) || callBound("Function.prototype.apply");
    module.exports = function Call(F, V) {
      var argumentsList = arguments.length > 2 ? arguments[2] : [];
      if (!IsArray(argumentsList)) {
        throw new $TypeError("Assertion failed: optional `argumentsList`, if provided, must be a List");
      }
      return $apply(F, V, argumentsList);
    };
  }
});

// (disabled):node_modules/object-inspect/util.inspect
var require_util = __commonJS({
  "(disabled):node_modules/object-inspect/util.inspect"() {
  }
});

// node_modules/object-inspect/index.js
var require_object_inspect = __commonJS({
  "node_modules/object-inspect/index.js"(exports, module) {
    var hasMap = typeof Map === "function" && Map.prototype;
    var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
    var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === "function" ? mapSizeDescriptor.get : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === "function" && Set.prototype;
    var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
    var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === "function" ? setSizeDescriptor.get : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === "function" && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === "function" && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var hasWeakRef = typeof WeakRef === "function" && WeakRef.prototype;
    var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var $match = String.prototype.match;
    var $slice = String.prototype.slice;
    var $replace = String.prototype.replace;
    var $toUpperCase = String.prototype.toUpperCase;
    var $toLowerCase = String.prototype.toLowerCase;
    var $test = RegExp.prototype.test;
    var $concat = Array.prototype.concat;
    var $join = Array.prototype.join;
    var $arrSlice = Array.prototype.slice;
    var $floor = Math.floor;
    var bigIntValueOf = typeof BigInt === "function" ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol.prototype.toString : null;
    var hasShammedSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "object";
    var toStringTag = typeof Symbol === "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null;
    var isEnumerable = Object.prototype.propertyIsEnumerable;
    var gPO = (typeof Reflect === "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(O) {
      return O.__proto__;
    } : null);
    function addNumericSeparator(num, str) {
      if (num === Infinity || num === -Infinity || num !== num || num && num > -1e3 && num < 1e3 || $test.call(/e/, str)) {
        return str;
      }
      var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
      if (typeof num === "number") {
        var int = num < 0 ? -$floor(-num) : $floor(num);
        if (int !== num) {
          var intStr = String(int);
          var dec = $slice.call(str, intStr.length + 1);
          return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
        }
      }
      return $replace.call(str, sepRegex, "$&_");
    }
    var utilInspect = require_util();
    var inspectCustom = utilInspect.custom;
    var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
    module.exports = function inspect_(obj, options, depth, seen) {
      var opts = options || {};
      if (has(opts, "quoteStyle") && (opts.quoteStyle !== "single" && opts.quoteStyle !== "double")) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
      }
      if (has(opts, "maxStringLength") && (typeof opts.maxStringLength === "number" ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
      }
      var customInspect = has(opts, "customInspect") ? opts.customInspect : true;
      if (typeof customInspect !== "boolean" && customInspect !== "symbol") {
        throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
      }
      if (has(opts, "indent") && opts.indent !== null && opts.indent !== "	" && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
      }
      if (has(opts, "numericSeparator") && typeof opts.numericSeparator !== "boolean") {
        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
      }
      var numericSeparator = opts.numericSeparator;
      if (typeof obj === "undefined") {
        return "undefined";
      }
      if (obj === null) {
        return "null";
      }
      if (typeof obj === "boolean") {
        return obj ? "true" : "false";
      }
      if (typeof obj === "string") {
        return inspectString(obj, opts);
      }
      if (typeof obj === "number") {
        if (obj === 0) {
          return Infinity / obj > 0 ? "0" : "-0";
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
      }
      if (typeof obj === "bigint") {
        var bigIntStr = String(obj) + "n";
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
      }
      var maxDepth = typeof opts.depth === "undefined" ? 5 : opts.depth;
      if (typeof depth === "undefined") {
        depth = 0;
      }
      if (depth >= maxDepth && maxDepth > 0 && typeof obj === "object") {
        return isArray(obj) ? "[Array]" : "[Object]";
      }
      var indent = getIndent(opts, depth);
      if (typeof seen === "undefined") {
        seen = [];
      } else if (indexOf(seen, obj) >= 0) {
        return "[Circular]";
      }
      function inspect(value, from2, noIndent) {
        if (from2) {
          seen = $arrSlice.call(seen);
          seen.push(from2);
        }
        if (noIndent) {
          var newOpts = {
            depth: opts.depth
          };
          if (has(opts, "quoteStyle")) {
            newOpts.quoteStyle = opts.quoteStyle;
          }
          return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
      }
      if (typeof obj === "function" && !isRegExp(obj)) {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return "[Function" + (name ? ": " + name : " (anonymous)") + "]" + (keys.length > 0 ? " { " + $join.call(keys, ", ") + " }" : "");
      }
      if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
        return typeof obj === "object" && !hasShammedSymbols ? markBoxed(symString) : symString;
      }
      if (isElement8(obj)) {
        var s = "<" + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
          s += " " + attrs[i].name + "=" + wrapQuotes(quote(attrs[i].value), "double", opts);
        }
        s += ">";
        if (obj.childNodes && obj.childNodes.length) {
          s += "...";
        }
        s += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
        return s;
      }
      if (isArray(obj)) {
        if (obj.length === 0) {
          return "[]";
        }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
          return "[" + indentedJoin(xs, indent) + "]";
        }
        return "[ " + $join.call(xs, ", ") + " ]";
      }
      if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!("cause" in Error.prototype) && "cause" in obj && !isEnumerable.call(obj, "cause")) {
          return "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect(obj.cause), parts), ", ") + " }";
        }
        if (parts.length === 0) {
          return "[" + String(obj) + "]";
        }
        return "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }";
      }
      if (typeof obj === "object" && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === "function" && utilInspect) {
          return utilInspect(obj, { depth: maxDepth - depth });
        } else if (customInspect !== "symbol" && typeof obj.inspect === "function") {
          return obj.inspect();
        }
      }
      if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
          mapForEach.call(obj, function(value, key) {
            mapParts.push(inspect(key, obj, true) + " => " + inspect(value, obj));
          });
        }
        return collectionOf("Map", mapSize.call(obj), mapParts, indent);
      }
      if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
          setForEach.call(obj, function(value) {
            setParts.push(inspect(value, obj));
          });
        }
        return collectionOf("Set", setSize.call(obj), setParts, indent);
      }
      if (isWeakMap(obj)) {
        return weakCollectionOf("WeakMap");
      }
      if (isWeakSet(obj)) {
        return weakCollectionOf("WeakSet");
      }
      if (isWeakRef(obj)) {
        return weakCollectionOf("WeakRef");
      }
      if (isNumber2(obj)) {
        return markBoxed(inspect(Number(obj)));
      }
      if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
      }
      if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
      }
      if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
      }
      if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject2 = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? "" : "null prototype";
        var stringTag = !isPlainObject2 && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "";
        var constructorTag = isPlainObject2 || typeof obj.constructor !== "function" ? "" : obj.constructor.name ? obj.constructor.name + " " : "";
        var tag = constructorTag + (stringTag || protoTag ? "[" + $join.call($concat.call([], stringTag || [], protoTag || []), ": ") + "] " : "");
        if (ys.length === 0) {
          return tag + "{}";
        }
        if (indent) {
          return tag + "{" + indentedJoin(ys, indent) + "}";
        }
        return tag + "{ " + $join.call(ys, ", ") + " }";
      }
      return String(obj);
    };
    function wrapQuotes(s, defaultStyle, opts) {
      var quoteChar = (opts.quoteStyle || defaultStyle) === "double" ? '"' : "'";
      return quoteChar + s + quoteChar;
    }
    function quote(s) {
      return $replace.call(String(s), /"/g, "&quot;");
    }
    function isArray(obj) {
      return toStr(obj) === "[object Array]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isDate(obj) {
      return toStr(obj) === "[object Date]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isRegExp(obj) {
      return toStr(obj) === "[object RegExp]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isError(obj) {
      return toStr(obj) === "[object Error]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isString(obj) {
      return toStr(obj) === "[object String]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isNumber2(obj) {
      return toStr(obj) === "[object Number]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isBoolean(obj) {
      return toStr(obj) === "[object Boolean]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isSymbol(obj) {
      if (hasShammedSymbols) {
        return obj && typeof obj === "object" && obj instanceof Symbol;
      }
      if (typeof obj === "symbol") {
        return true;
      }
      if (!obj || typeof obj !== "object" || !symToString) {
        return false;
      }
      try {
        symToString.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isBigInt(obj) {
      if (!obj || typeof obj !== "object" || !bigIntValueOf) {
        return false;
      }
      try {
        bigIntValueOf.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    var hasOwn = Object.prototype.hasOwnProperty || function(key) {
      return key in this;
    };
    function has(obj, key) {
      return hasOwn.call(obj, key);
    }
    function toStr(obj) {
      return objectToString.call(obj);
    }
    function nameOf(f) {
      if (f.name) {
        return f.name;
      }
      var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
      if (m) {
        return m[1];
      }
      return null;
    }
    function indexOf(xs, x) {
      if (xs.indexOf) {
        return xs.indexOf(x);
      }
      for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) {
          return i;
        }
      }
      return -1;
    }
    function isMap(x) {
      if (!mapSize || !x || typeof x !== "object") {
        return false;
      }
      try {
        mapSize.call(x);
        try {
          setSize.call(x);
        } catch (s) {
          return true;
        }
        return x instanceof Map;
      } catch (e) {
      }
      return false;
    }
    function isWeakMap(x) {
      if (!weakMapHas || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakMapHas.call(x, weakMapHas);
        try {
          weakSetHas.call(x, weakSetHas);
        } catch (s) {
          return true;
        }
        return x instanceof WeakMap;
      } catch (e) {
      }
      return false;
    }
    function isWeakRef(x) {
      if (!weakRefDeref || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakRefDeref.call(x);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isSet(x) {
      if (!setSize || !x || typeof x !== "object") {
        return false;
      }
      try {
        setSize.call(x);
        try {
          mapSize.call(x);
        } catch (m) {
          return true;
        }
        return x instanceof Set;
      } catch (e) {
      }
      return false;
    }
    function isWeakSet(x) {
      if (!weakSetHas || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakSetHas.call(x, weakSetHas);
        try {
          weakMapHas.call(x, weakMapHas);
        } catch (s) {
          return true;
        }
        return x instanceof WeakSet;
      } catch (e) {
      }
      return false;
    }
    function isElement8(x) {
      if (!x || typeof x !== "object") {
        return false;
      }
      if (typeof HTMLElement !== "undefined" && x instanceof HTMLElement) {
        return true;
      }
      return typeof x.nodeName === "string" && typeof x.getAttribute === "function";
    }
    function inspectString(str, opts) {
      if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = "... " + remaining + " more character" + (remaining > 1 ? "s" : "");
        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
      }
      var s = $replace.call($replace.call(str, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, lowbyte);
      return wrapQuotes(s, "single", opts);
    }
    function lowbyte(c) {
      var n = c.charCodeAt(0);
      var x = {
        8: "b",
        9: "t",
        10: "n",
        12: "f",
        13: "r"
      }[n];
      if (x) {
        return "\\" + x;
      }
      return "\\x" + (n < 16 ? "0" : "") + $toUpperCase.call(n.toString(16));
    }
    function markBoxed(str) {
      return "Object(" + str + ")";
    }
    function weakCollectionOf(type) {
      return type + " { ? }";
    }
    function collectionOf(type, size2, entries, indent) {
      var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ", ");
      return type + " (" + size2 + ") {" + joinedEntries + "}";
    }
    function singleLineValues(xs) {
      for (var i = 0; i < xs.length; i++) {
        if (indexOf(xs[i], "\n") >= 0) {
          return false;
        }
      }
      return true;
    }
    function getIndent(opts, depth) {
      var baseIndent;
      if (opts.indent === "	") {
        baseIndent = "	";
      } else if (typeof opts.indent === "number" && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), " ");
      } else {
        return null;
      }
      return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
      };
    }
    function indentedJoin(xs, indent) {
      if (xs.length === 0) {
        return "";
      }
      var lineJoiner = "\n" + indent.prev + indent.base;
      return lineJoiner + $join.call(xs, "," + lineJoiner) + "\n" + indent.prev;
    }
    function arrObjKeys(obj, inspect) {
      var isArr = isArray(obj);
      var xs = [];
      if (isArr) {
        xs.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
          xs[i] = has(obj, i) ? inspect(obj[i], obj) : "";
        }
      }
      var syms = typeof gOPS === "function" ? gOPS(obj) : [];
      var symMap;
      if (hasShammedSymbols) {
        symMap = {};
        for (var k = 0; k < syms.length; k++) {
          symMap["$" + syms[k]] = syms[k];
        }
      }
      for (var key in obj) {
        if (!has(obj, key)) {
          continue;
        }
        if (isArr && String(Number(key)) === key && key < obj.length) {
          continue;
        }
        if (hasShammedSymbols && symMap["$" + key] instanceof Symbol) {
          continue;
        } else if ($test.call(/[^\w$]/, key)) {
          xs.push(inspect(key, obj) + ": " + inspect(obj[key], obj));
        } else {
          xs.push(key + ": " + inspect(obj[key], obj));
        }
      }
      if (typeof gOPS === "function") {
        for (var j = 0; j < syms.length; j++) {
          if (isEnumerable.call(obj, syms[j])) {
            xs.push("[" + inspect(syms[j]) + "]: " + inspect(obj[syms[j]], obj));
          }
        }
      }
      return xs;
    }
  }
});

// node_modules/es-abstract/2022/IsPropertyKey.js
var require_IsPropertyKey = __commonJS({
  "node_modules/es-abstract/2022/IsPropertyKey.js"(exports, module) {
    "use strict";
    module.exports = function IsPropertyKey(argument) {
      return typeof argument === "string" || typeof argument === "symbol";
    };
  }
});

// node_modules/es-abstract/5/Type.js
var require_Type = __commonJS({
  "node_modules/es-abstract/5/Type.js"(exports, module) {
    "use strict";
    module.exports = function Type(x) {
      if (x === null) {
        return "Null";
      }
      if (typeof x === "undefined") {
        return "Undefined";
      }
      if (typeof x === "function" || typeof x === "object") {
        return "Object";
      }
      if (typeof x === "number") {
        return "Number";
      }
      if (typeof x === "boolean") {
        return "Boolean";
      }
      if (typeof x === "string") {
        return "String";
      }
    };
  }
});

// node_modules/es-abstract/2022/Type.js
var require_Type2 = __commonJS({
  "node_modules/es-abstract/2022/Type.js"(exports, module) {
    "use strict";
    var ES5Type = require_Type();
    module.exports = function Type(x) {
      if (typeof x === "symbol") {
        return "Symbol";
      }
      if (typeof x === "bigint") {
        return "BigInt";
      }
      return ES5Type(x);
    };
  }
});

// node_modules/es-abstract/2022/Get.js
var require_Get = __commonJS({
  "node_modules/es-abstract/2022/Get.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $TypeError = GetIntrinsic("%TypeError%");
    var inspect = require_object_inspect();
    var IsPropertyKey = require_IsPropertyKey();
    var Type = require_Type2();
    module.exports = function Get(O, P) {
      if (Type(O) !== "Object") {
        throw new $TypeError("Assertion failed: Type(O) is not Object");
      }
      if (!IsPropertyKey(P)) {
        throw new $TypeError("Assertion failed: IsPropertyKey(P) is not true, got " + inspect(P));
      }
      return O[P];
    };
  }
});

// node_modules/es-abstract/2022/HasProperty.js
var require_HasProperty = __commonJS({
  "node_modules/es-abstract/2022/HasProperty.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $TypeError = GetIntrinsic("%TypeError%");
    var IsPropertyKey = require_IsPropertyKey();
    var Type = require_Type2();
    module.exports = function HasProperty(O, P) {
      if (Type(O) !== "Object") {
        throw new $TypeError("Assertion failed: `O` must be an Object");
      }
      if (!IsPropertyKey(P)) {
        throw new $TypeError("Assertion failed: `P` must be a Property Key");
      }
      return P in O;
    };
  }
});

// node_modules/is-callable/index.js
var require_is_callable = __commonJS({
  "node_modules/is-callable/index.js"(exports, module) {
    "use strict";
    var fnToStr = Function.prototype.toString;
    var reflectApply = typeof Reflect === "object" && Reflect !== null && Reflect.apply;
    var badArrayLike;
    var isCallableMarker;
    if (typeof reflectApply === "function" && typeof Object.defineProperty === "function") {
      try {
        badArrayLike = Object.defineProperty({}, "length", {
          get: function() {
            throw isCallableMarker;
          }
        });
        isCallableMarker = {};
        reflectApply(function() {
          throw 42;
        }, null, badArrayLike);
      } catch (_5) {
        if (_5 !== isCallableMarker) {
          reflectApply = null;
        }
      }
    } else {
      reflectApply = null;
    }
    var constructorRegex = /^\s*class\b/;
    var isES6ClassFn = function isES6ClassFunction(value) {
      try {
        var fnStr = fnToStr.call(value);
        return constructorRegex.test(fnStr);
      } catch (e) {
        return false;
      }
    };
    var tryFunctionObject = function tryFunctionToStr(value) {
      try {
        if (isES6ClassFn(value)) {
          return false;
        }
        fnToStr.call(value);
        return true;
      } catch (e) {
        return false;
      }
    };
    var toStr = Object.prototype.toString;
    var objectClass = "[object Object]";
    var fnClass = "[object Function]";
    var genClass = "[object GeneratorFunction]";
    var ddaClass = "[object HTMLAllCollection]";
    var ddaClass2 = "[object HTML document.all class]";
    var ddaClass3 = "[object HTMLCollection]";
    var hasToStringTag = typeof Symbol === "function" && !!Symbol.toStringTag;
    var isIE68 = !(0 in [,]);
    var isDDA = function isDocumentDotAll() {
      return false;
    };
    if (typeof document === "object") {
      all = document.all;
      if (toStr.call(all) === toStr.call(document.all)) {
        isDDA = function isDocumentDotAll(value) {
          if ((isIE68 || !value) && (typeof value === "undefined" || typeof value === "object")) {
            try {
              var str = toStr.call(value);
              return (str === ddaClass || str === ddaClass2 || str === ddaClass3 || str === objectClass) && value("") == null;
            } catch (e) {
            }
          }
          return false;
        };
      }
    }
    var all;
    module.exports = reflectApply ? function isCallable(value) {
      if (isDDA(value)) {
        return true;
      }
      if (!value) {
        return false;
      }
      if (typeof value !== "function" && typeof value !== "object") {
        return false;
      }
      try {
        reflectApply(value, null, badArrayLike);
      } catch (e) {
        if (e !== isCallableMarker) {
          return false;
        }
      }
      return !isES6ClassFn(value) && tryFunctionObject(value);
    } : function isCallable(value) {
      if (isDDA(value)) {
        return true;
      }
      if (!value) {
        return false;
      }
      if (typeof value !== "function" && typeof value !== "object") {
        return false;
      }
      if (hasToStringTag) {
        return tryFunctionObject(value);
      }
      if (isES6ClassFn(value)) {
        return false;
      }
      var strClass = toStr.call(value);
      if (strClass !== fnClass && strClass !== genClass && !/^\[object HTML/.test(strClass)) {
        return false;
      }
      return tryFunctionObject(value);
    };
  }
});

// node_modules/es-abstract/2022/IsCallable.js
var require_IsCallable = __commonJS({
  "node_modules/es-abstract/2022/IsCallable.js"(exports, module) {
    "use strict";
    module.exports = require_is_callable();
  }
});

// node_modules/es-abstract/helpers/maxSafeInteger.js
var require_maxSafeInteger = __commonJS({
  "node_modules/es-abstract/helpers/maxSafeInteger.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $Math = GetIntrinsic("%Math%");
    var $Number = GetIntrinsic("%Number%");
    module.exports = $Number.MAX_SAFE_INTEGER || $Math.pow(2, 53) - 1;
  }
});

// node_modules/es-abstract/2022/abs.js
var require_abs = __commonJS({
  "node_modules/es-abstract/2022/abs.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $abs = GetIntrinsic("%Math.abs%");
    module.exports = function abs2(x) {
      return $abs(x);
    };
  }
});

// node_modules/es-abstract/2022/floor.js
var require_floor = __commonJS({
  "node_modules/es-abstract/2022/floor.js"(exports, module) {
    "use strict";
    var Type = require_Type2();
    var $floor = Math.floor;
    module.exports = function floor2(x) {
      if (Type(x) === "BigInt") {
        return x;
      }
      return $floor(x);
    };
  }
});

// node_modules/es-abstract/helpers/isPrimitive.js
var require_isPrimitive = __commonJS({
  "node_modules/es-abstract/helpers/isPrimitive.js"(exports, module) {
    "use strict";
    module.exports = function isPrimitive(value) {
      return value === null || typeof value !== "function" && typeof value !== "object";
    };
  }
});

// node_modules/es-to-primitive/helpers/isPrimitive.js
var require_isPrimitive2 = __commonJS({
  "node_modules/es-to-primitive/helpers/isPrimitive.js"(exports, module) {
    "use strict";
    module.exports = function isPrimitive(value) {
      return value === null || typeof value !== "function" && typeof value !== "object";
    };
  }
});

// node_modules/has-tostringtag/shams.js
var require_shams2 = __commonJS({
  "node_modules/has-tostringtag/shams.js"(exports, module) {
    "use strict";
    var hasSymbols = require_shams();
    module.exports = function hasToStringTagShams() {
      return hasSymbols() && !!Symbol.toStringTag;
    };
  }
});

// node_modules/is-date-object/index.js
var require_is_date_object = __commonJS({
  "node_modules/is-date-object/index.js"(exports, module) {
    "use strict";
    var getDay = Date.prototype.getDay;
    var tryDateObject = function tryDateGetDayCall(value) {
      try {
        getDay.call(value);
        return true;
      } catch (e) {
        return false;
      }
    };
    var toStr = Object.prototype.toString;
    var dateClass = "[object Date]";
    var hasToStringTag = require_shams2()();
    module.exports = function isDateObject(value) {
      if (typeof value !== "object" || value === null) {
        return false;
      }
      return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
    };
  }
});

// node_modules/is-symbol/index.js
var require_is_symbol = __commonJS({
  "node_modules/is-symbol/index.js"(exports, module) {
    "use strict";
    var toStr = Object.prototype.toString;
    var hasSymbols = require_has_symbols()();
    if (hasSymbols) {
      symToStr = Symbol.prototype.toString;
      symStringRegex = /^Symbol\(.*\)$/;
      isSymbolObject = function isRealSymbolObject(value) {
        if (typeof value.valueOf() !== "symbol") {
          return false;
        }
        return symStringRegex.test(symToStr.call(value));
      };
      module.exports = function isSymbol(value) {
        if (typeof value === "symbol") {
          return true;
        }
        if (toStr.call(value) !== "[object Symbol]") {
          return false;
        }
        try {
          return isSymbolObject(value);
        } catch (e) {
          return false;
        }
      };
    } else {
      module.exports = function isSymbol(value) {
        return false;
      };
    }
    var symToStr;
    var symStringRegex;
    var isSymbolObject;
  }
});

// node_modules/es-to-primitive/es2015.js
var require_es2015 = __commonJS({
  "node_modules/es-to-primitive/es2015.js"(exports, module) {
    "use strict";
    var hasSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "symbol";
    var isPrimitive = require_isPrimitive2();
    var isCallable = require_is_callable();
    var isDate = require_is_date_object();
    var isSymbol = require_is_symbol();
    var ordinaryToPrimitive = function OrdinaryToPrimitive(O, hint) {
      if (typeof O === "undefined" || O === null) {
        throw new TypeError("Cannot call method on " + O);
      }
      if (typeof hint !== "string" || hint !== "number" && hint !== "string") {
        throw new TypeError('hint must be "string" or "number"');
      }
      var methodNames = hint === "string" ? ["toString", "valueOf"] : ["valueOf", "toString"];
      var method, result, i;
      for (i = 0; i < methodNames.length; ++i) {
        method = O[methodNames[i]];
        if (isCallable(method)) {
          result = method.call(O);
          if (isPrimitive(result)) {
            return result;
          }
        }
      }
      throw new TypeError("No default value");
    };
    var GetMethod = function GetMethod2(O, P) {
      var func = O[P];
      if (func !== null && typeof func !== "undefined") {
        if (!isCallable(func)) {
          throw new TypeError(func + " returned for property " + P + " of object " + O + " is not a function");
        }
        return func;
      }
      return void 0;
    };
    module.exports = function ToPrimitive(input) {
      if (isPrimitive(input)) {
        return input;
      }
      var hint = "default";
      if (arguments.length > 1) {
        if (arguments[1] === String) {
          hint = "string";
        } else if (arguments[1] === Number) {
          hint = "number";
        }
      }
      var exoticToPrim;
      if (hasSymbols) {
        if (Symbol.toPrimitive) {
          exoticToPrim = GetMethod(input, Symbol.toPrimitive);
        } else if (isSymbol(input)) {
          exoticToPrim = Symbol.prototype.valueOf;
        }
      }
      if (typeof exoticToPrim !== "undefined") {
        var result = exoticToPrim.call(input, hint);
        if (isPrimitive(result)) {
          return result;
        }
        throw new TypeError("unable to convert exotic object to primitive");
      }
      if (hint === "default" && (isDate(input) || isSymbol(input))) {
        hint = "string";
      }
      return ordinaryToPrimitive(input, hint === "default" ? "number" : hint);
    };
  }
});

// node_modules/es-abstract/2022/ToPrimitive.js
var require_ToPrimitive = __commonJS({
  "node_modules/es-abstract/2022/ToPrimitive.js"(exports, module) {
    "use strict";
    var toPrimitive = require_es2015();
    module.exports = function ToPrimitive(input) {
      if (arguments.length > 1) {
        return toPrimitive(input, arguments[1]);
      }
      return toPrimitive(input);
    };
  }
});

// node_modules/is-regex/index.js
var require_is_regex = __commonJS({
  "node_modules/is-regex/index.js"(exports, module) {
    "use strict";
    var callBound = require_callBound();
    var hasToStringTag = require_shams2()();
    var has;
    var $exec;
    var isRegexMarker;
    var badStringifier;
    if (hasToStringTag) {
      has = callBound("Object.prototype.hasOwnProperty");
      $exec = callBound("RegExp.prototype.exec");
      isRegexMarker = {};
      throwRegexMarker = function() {
        throw isRegexMarker;
      };
      badStringifier = {
        toString: throwRegexMarker,
        valueOf: throwRegexMarker
      };
      if (typeof Symbol.toPrimitive === "symbol") {
        badStringifier[Symbol.toPrimitive] = throwRegexMarker;
      }
    }
    var throwRegexMarker;
    var $toString = callBound("Object.prototype.toString");
    var gOPD = Object.getOwnPropertyDescriptor;
    var regexClass = "[object RegExp]";
    module.exports = hasToStringTag ? function isRegex(value) {
      if (!value || typeof value !== "object") {
        return false;
      }
      var descriptor = gOPD(value, "lastIndex");
      var hasLastIndexDataProperty = descriptor && has(descriptor, "value");
      if (!hasLastIndexDataProperty) {
        return false;
      }
      try {
        $exec(value, badStringifier);
      } catch (e) {
        return e === isRegexMarker;
      }
    } : function isRegex(value) {
      if (!value || typeof value !== "object" && typeof value !== "function") {
        return false;
      }
      return $toString(value) === regexClass;
    };
  }
});

// node_modules/safe-regex-test/index.js
var require_safe_regex_test = __commonJS({
  "node_modules/safe-regex-test/index.js"(exports, module) {
    "use strict";
    var callBound = require_callBound();
    var GetIntrinsic = require_get_intrinsic();
    var isRegex = require_is_regex();
    var $exec = callBound("RegExp.prototype.exec");
    var $TypeError = GetIntrinsic("%TypeError%");
    module.exports = function regexTester(regex2) {
      if (!isRegex(regex2)) {
        throw new $TypeError("`regex` must be a RegExp");
      }
      return function test(s) {
        return $exec(regex2, s) !== null;
      };
    };
  }
});

// node_modules/es-abstract/2022/ToString.js
var require_ToString = __commonJS({
  "node_modules/es-abstract/2022/ToString.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $String = GetIntrinsic("%String%");
    var $TypeError = GetIntrinsic("%TypeError%");
    module.exports = function ToString(argument) {
      if (typeof argument === "symbol") {
        throw new $TypeError("Cannot convert a Symbol value to a string");
      }
      return $String(argument);
    };
  }
});

// node_modules/string.prototype.trim/implementation.js
var require_implementation3 = __commonJS({
  "node_modules/string.prototype.trim/implementation.js"(exports, module) {
    "use strict";
    var RequireObjectCoercible = require_RequireObjectCoercible();
    var ToString = require_ToString();
    var callBound = require_callBound();
    var $replace = callBound("String.prototype.replace");
    var mvsIsWS = /^\s$/.test("᠎");
    var leftWhitespace = mvsIsWS ? /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/ : /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
    var rightWhitespace = mvsIsWS ? /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/ : /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;
    module.exports = function trim2() {
      var S = ToString(RequireObjectCoercible(this));
      return $replace($replace(S, leftWhitespace, ""), rightWhitespace, "");
    };
  }
});

// node_modules/string.prototype.trim/polyfill.js
var require_polyfill = __commonJS({
  "node_modules/string.prototype.trim/polyfill.js"(exports, module) {
    "use strict";
    var implementation = require_implementation3();
    var zeroWidthSpace = "​";
    var mongolianVowelSeparator = "᠎";
    module.exports = function getPolyfill() {
      if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace && mongolianVowelSeparator.trim() === mongolianVowelSeparator && ("_" + mongolianVowelSeparator).trim() === "_" + mongolianVowelSeparator && (mongolianVowelSeparator + "_").trim() === mongolianVowelSeparator + "_") {
        return String.prototype.trim;
      }
      return implementation;
    };
  }
});

// node_modules/string.prototype.trim/shim.js
var require_shim = __commonJS({
  "node_modules/string.prototype.trim/shim.js"(exports, module) {
    "use strict";
    var define = require_define_properties();
    var getPolyfill = require_polyfill();
    module.exports = function shimStringTrim() {
      var polyfill = getPolyfill();
      define(String.prototype, { trim: polyfill }, {
        trim: function testTrim() {
          return String.prototype.trim !== polyfill;
        }
      });
      return polyfill;
    };
  }
});

// node_modules/string.prototype.trim/index.js
var require_string_prototype = __commonJS({
  "node_modules/string.prototype.trim/index.js"(exports, module) {
    "use strict";
    var callBind = require_call_bind();
    var define = require_define_properties();
    var RequireObjectCoercible = require_RequireObjectCoercible();
    var implementation = require_implementation3();
    var getPolyfill = require_polyfill();
    var shim = require_shim();
    var bound = callBind(getPolyfill());
    var boundMethod = function trim2(receiver) {
      RequireObjectCoercible(receiver);
      return bound(receiver);
    };
    define(boundMethod, {
      getPolyfill,
      implementation,
      shim
    });
    module.exports = boundMethod;
  }
});

// node_modules/es-abstract/2022/StringToNumber.js
var require_StringToNumber = __commonJS({
  "node_modules/es-abstract/2022/StringToNumber.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $Number = GetIntrinsic("%Number%");
    var $RegExp = GetIntrinsic("%RegExp%");
    var $TypeError = GetIntrinsic("%TypeError%");
    var $parseInteger = GetIntrinsic("%parseInt%");
    var callBound = require_callBound();
    var regexTester = require_safe_regex_test();
    var $strSlice = callBound("String.prototype.slice");
    var isBinary = regexTester(/^0b[01]+$/i);
    var isOctal = regexTester(/^0o[0-7]+$/i);
    var isInvalidHexLiteral = regexTester(/^[-+]0x[0-9a-f]+$/i);
    var nonWS = ["", "​", "￾"].join("");
    var nonWSregex = new $RegExp("[" + nonWS + "]", "g");
    var hasNonWS = regexTester(nonWSregex);
    var $trim = require_string_prototype();
    var Type = require_Type2();
    module.exports = function StringToNumber(argument) {
      if (Type(argument) !== "String") {
        throw new $TypeError("Assertion failed: `argument` is not a String");
      }
      if (isBinary(argument)) {
        return $Number($parseInteger($strSlice(argument, 2), 2));
      }
      if (isOctal(argument)) {
        return $Number($parseInteger($strSlice(argument, 2), 8));
      }
      if (hasNonWS(argument) || isInvalidHexLiteral(argument)) {
        return NaN;
      }
      var trimmed = $trim(argument);
      if (trimmed !== argument) {
        return StringToNumber(trimmed);
      }
      return $Number(argument);
    };
  }
});

// node_modules/es-abstract/2022/ToNumber.js
var require_ToNumber = __commonJS({
  "node_modules/es-abstract/2022/ToNumber.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $TypeError = GetIntrinsic("%TypeError%");
    var $Number = GetIntrinsic("%Number%");
    var isPrimitive = require_isPrimitive();
    var ToPrimitive = require_ToPrimitive();
    var StringToNumber = require_StringToNumber();
    module.exports = function ToNumber(argument) {
      var value = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);
      if (typeof value === "symbol") {
        throw new $TypeError("Cannot convert a Symbol value to a number");
      }
      if (typeof value === "bigint") {
        throw new $TypeError("Conversion from 'BigInt' to 'number' is not allowed.");
      }
      if (typeof value === "string") {
        return StringToNumber(value);
      }
      return $Number(value);
    };
  }
});

// node_modules/es-abstract/helpers/isNaN.js
var require_isNaN = __commonJS({
  "node_modules/es-abstract/helpers/isNaN.js"(exports, module) {
    "use strict";
    module.exports = Number.isNaN || function isNaN2(a) {
      return a !== a;
    };
  }
});

// node_modules/es-abstract/helpers/isFinite.js
var require_isFinite = __commonJS({
  "node_modules/es-abstract/helpers/isFinite.js"(exports, module) {
    "use strict";
    var $isNaN = require_isNaN();
    module.exports = function(x) {
      return (typeof x === "number" || typeof x === "bigint") && !$isNaN(x) && x !== Infinity && x !== -Infinity;
    };
  }
});

// node_modules/es-abstract/helpers/sign.js
var require_sign = __commonJS({
  "node_modules/es-abstract/helpers/sign.js"(exports, module) {
    "use strict";
    module.exports = function sign(number2) {
      return number2 >= 0 ? 1 : -1;
    };
  }
});

// node_modules/es-abstract/2022/ToIntegerOrInfinity.js
var require_ToIntegerOrInfinity = __commonJS({
  "node_modules/es-abstract/2022/ToIntegerOrInfinity.js"(exports, module) {
    "use strict";
    var abs2 = require_abs();
    var floor2 = require_floor();
    var ToNumber = require_ToNumber();
    var $isNaN = require_isNaN();
    var $isFinite = require_isFinite();
    var $sign = require_sign();
    module.exports = function ToIntegerOrInfinity(value) {
      var number2 = ToNumber(value);
      if ($isNaN(number2) || number2 === 0) {
        return 0;
      }
      if (!$isFinite(number2)) {
        return number2;
      }
      var integer = floor2(abs2(number2));
      if (integer === 0) {
        return 0;
      }
      return $sign(number2) * integer;
    };
  }
});

// node_modules/es-abstract/2022/ToLength.js
var require_ToLength = __commonJS({
  "node_modules/es-abstract/2022/ToLength.js"(exports, module) {
    "use strict";
    var MAX_SAFE_INTEGER = require_maxSafeInteger();
    var ToIntegerOrInfinity = require_ToIntegerOrInfinity();
    module.exports = function ToLength(argument) {
      var len = ToIntegerOrInfinity(argument);
      if (len <= 0) {
        return 0;
      }
      if (len > MAX_SAFE_INTEGER) {
        return MAX_SAFE_INTEGER;
      }
      return len;
    };
  }
});

// node_modules/es-abstract/2022/LengthOfArrayLike.js
var require_LengthOfArrayLike = __commonJS({
  "node_modules/es-abstract/2022/LengthOfArrayLike.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $TypeError = GetIntrinsic("%TypeError%");
    var Get = require_Get();
    var ToLength = require_ToLength();
    var Type = require_Type2();
    module.exports = function LengthOfArrayLike(obj) {
      if (Type(obj) !== "Object") {
        throw new $TypeError("Assertion failed: `obj` must be an Object");
      }
      return ToLength(Get(obj, "length"));
    };
  }
});

// node_modules/es-abstract/2022/ToObject.js
var require_ToObject = __commonJS({
  "node_modules/es-abstract/2022/ToObject.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $Object = GetIntrinsic("%Object%");
    var RequireObjectCoercible = require_RequireObjectCoercible();
    module.exports = function ToObject(value) {
      RequireObjectCoercible(value);
      return $Object(value);
    };
  }
});

// node_modules/is-string/index.js
var require_is_string = __commonJS({
  "node_modules/is-string/index.js"(exports, module) {
    "use strict";
    var strValue = String.prototype.valueOf;
    var tryStringObject = function tryStringObject2(value) {
      try {
        strValue.call(value);
        return true;
      } catch (e) {
        return false;
      }
    };
    var toStr = Object.prototype.toString;
    var strClass = "[object String]";
    var hasToStringTag = require_shams2()();
    module.exports = function isString(value) {
      if (typeof value === "string") {
        return true;
      }
      if (typeof value !== "object") {
        return false;
      }
      return hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;
    };
  }
});

// node_modules/array.prototype.foreach/implementation.js
var require_implementation4 = __commonJS({
  "node_modules/array.prototype.foreach/implementation.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_callBound();
    var $TypeError = GetIntrinsic("%TypeError%");
    var Call = require_Call();
    var Get = require_Get();
    var HasProperty = require_HasProperty();
    var IsCallable = require_IsCallable();
    var LengthOfArrayLike = require_LengthOfArrayLike();
    var ToObject = require_ToObject();
    var ToString = require_ToString();
    var isString = require_is_string();
    var $split = callBound("String.prototype.split");
    var boxedString = Object("a");
    var splitString = boxedString[0] !== "a" || !(0 in boxedString);
    module.exports = function forEach(callbackfn) {
      var thisO = ToObject(this);
      var O = splitString && isString(this) ? $split(this, "") : thisO;
      var len = LengthOfArrayLike(O);
      if (!IsCallable(callbackfn)) {
        throw new $TypeError("Array.prototype.forEach callback must be a function");
      }
      var thisArg;
      if (arguments.length > 1) {
        thisArg = arguments[1];
      }
      var k = 0;
      while (k < len) {
        var Pk = ToString(k);
        var kPresent = HasProperty(O, Pk);
        if (kPresent) {
          var kValue = Get(O, Pk);
          Call(callbackfn, thisArg, [kValue, k, O]);
        }
        k += 1;
      }
      return void 0;
    };
  }
});

// node_modules/es-array-method-boxes-properly/index.js
var require_es_array_method_boxes_properly = __commonJS({
  "node_modules/es-array-method-boxes-properly/index.js"(exports, module) {
    module.exports = function properlyBoxed(method) {
      var properlyBoxesNonStrict = true;
      var properlyBoxesStrict = true;
      var threwException = false;
      if (typeof method === "function") {
        try {
          method.call("f", function(_5, __, O) {
            if (typeof O !== "object") {
              properlyBoxesNonStrict = false;
            }
          });
          method.call(
            [null],
            function() {
              "use strict";
              properlyBoxesStrict = typeof this === "string";
            },
            "x"
          );
        } catch (e) {
          threwException = true;
        }
        return !threwException && properlyBoxesNonStrict && properlyBoxesStrict;
      }
      return false;
    };
  }
});

// node_modules/array.prototype.foreach/polyfill.js
var require_polyfill2 = __commonJS({
  "node_modules/array.prototype.foreach/polyfill.js"(exports, module) {
    "use strict";
    var arrayMethodBoxesProperly = require_es_array_method_boxes_properly();
    var implementation = require_implementation4();
    module.exports = function getPolyfill() {
      var method = Array.prototype.forEach;
      return arrayMethodBoxesProperly(method) ? method : implementation;
    };
  }
});

// node_modules/array.prototype.foreach/shim.js
var require_shim2 = __commonJS({
  "node_modules/array.prototype.foreach/shim.js"(exports, module) {
    "use strict";
    var define = require_define_properties();
    var getPolyfill = require_polyfill2();
    module.exports = function shimForEach() {
      var polyfill = getPolyfill();
      define(
        Array.prototype,
        { forEach: polyfill },
        { forEach: function() {
          return Array.prototype.forEach !== polyfill;
        } }
      );
      return polyfill;
    };
  }
});

// node_modules/array.prototype.foreach/index.js
var require_array_prototype = __commonJS({
  "node_modules/array.prototype.foreach/index.js"(exports, module) {
    "use strict";
    var define = require_define_properties();
    var callBind = require_call_bind();
    var callBound = require_callBound();
    var RequireObjectCoercible = require_RequireObjectCoercible();
    var implementation = require_implementation4();
    var getPolyfill = require_polyfill2();
    var polyfill = getPolyfill();
    var shim = require_shim2();
    var $slice = callBound("Array.prototype.slice");
    var bound = callBind.apply(polyfill);
    var boundCoercible = function forEach(array, callbackfn) {
      RequireObjectCoercible(array);
      return bound(array, $slice(arguments, 1));
    };
    define(boundCoercible, {
      getPolyfill,
      implementation,
      shim
    });
    module.exports = boundCoercible;
  }
});

// node_modules/es-abstract/2023/RequireObjectCoercible.js
var require_RequireObjectCoercible2 = __commonJS({
  "node_modules/es-abstract/2023/RequireObjectCoercible.js"(exports, module) {
    "use strict";
    module.exports = require_CheckObjectCoercible();
  }
});

// node_modules/object.entries/implementation.js
var require_implementation5 = __commonJS({
  "node_modules/object.entries/implementation.js"(exports, module) {
    "use strict";
    var RequireObjectCoercible = require_RequireObjectCoercible2();
    var callBound = require_callBound();
    var $isEnumerable = callBound("Object.prototype.propertyIsEnumerable");
    var $push = callBound("Array.prototype.push");
    module.exports = function entries(O) {
      var obj = RequireObjectCoercible(O);
      var entrys = [];
      for (var key in obj) {
        if ($isEnumerable(obj, key)) {
          $push(entrys, [key, obj[key]]);
        }
      }
      return entrys;
    };
  }
});

// node_modules/object.entries/polyfill.js
var require_polyfill3 = __commonJS({
  "node_modules/object.entries/polyfill.js"(exports, module) {
    "use strict";
    var implementation = require_implementation5();
    module.exports = function getPolyfill() {
      return typeof Object.entries === "function" ? Object.entries : implementation;
    };
  }
});

// node_modules/object.entries/shim.js
var require_shim3 = __commonJS({
  "node_modules/object.entries/shim.js"(exports, module) {
    "use strict";
    var getPolyfill = require_polyfill3();
    var define = require_define_properties();
    module.exports = function shimEntries() {
      var polyfill = getPolyfill();
      define(Object, { entries: polyfill }, {
        entries: function testEntries() {
          return Object.entries !== polyfill;
        }
      });
      return polyfill;
    };
  }
});

// node_modules/object.entries/index.js
var require_object = __commonJS({
  "node_modules/object.entries/index.js"(exports, module) {
    "use strict";
    var define = require_define_properties();
    var callBind = require_call_bind();
    var implementation = require_implementation5();
    var getPolyfill = require_polyfill3();
    var shim = require_shim3();
    var polyfill = callBind(getPolyfill(), Object);
    define(polyfill, {
      getPolyfill,
      implementation,
      shim
    });
    module.exports = polyfill;
  }
});

// node_modules/warning/warning.js
var require_warning = __commonJS({
  "node_modules/warning/warning.js"(exports, module) {
    "use strict";
    var __DEV__ = true;
    var warning = function() {
    };
    if (__DEV__) {
      printWarning = function printWarning2(format, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for (var key = 1; key < len; key++) {
          args[key - 1] = arguments[key];
        }
        var argIndex = 0;
        var message = "Warning: " + format.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
      warning = function(condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format === void 0) {
          throw new Error(
            "`warning(condition, format, ...args)` requires a warning message argument"
          );
        }
        if (!condition) {
          printWarning.apply(null, [format].concat(args));
        }
      };
    }
    var printWarning;
    module.exports = warning;
  }
});

// node_modules/node-polyglot/index.js
var require_node_polyglot = __commonJS({
  "node_modules/node-polyglot/index.js"(exports, module) {
    "use strict";
    var forEach = require_array_prototype();
    var entries = require_object();
    var warning = require_warning();
    var has = require_src();
    var trim2 = require_string_prototype();
    var warn = function warn2(message) {
      warning(false, message);
    };
    var defaultReplace = String.prototype.replace;
    var split = String.prototype.split;
    var delimiter2 = "||||";
    var russianPluralGroups = function(n) {
      var lastTwo = n % 100;
      var end2 = lastTwo % 10;
      if (lastTwo !== 11 && end2 === 1) {
        return 0;
      }
      if (2 <= end2 && end2 <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {
        return 1;
      }
      return 2;
    };
    var defaultPluralRules = {
      // Mapping from pluralization group plural logic.
      pluralTypes: {
        arabic: function(n) {
          if (n < 3) {
            return n;
          }
          var lastTwo = n % 100;
          if (lastTwo >= 3 && lastTwo <= 10)
            return 3;
          return lastTwo >= 11 ? 4 : 5;
        },
        bosnian_serbian: russianPluralGroups,
        chinese: function() {
          return 0;
        },
        croatian: russianPluralGroups,
        french: function(n) {
          return n >= 2 ? 1 : 0;
        },
        german: function(n) {
          return n !== 1 ? 1 : 0;
        },
        russian: russianPluralGroups,
        lithuanian: function(n) {
          if (n % 10 === 1 && n % 100 !== 11) {
            return 0;
          }
          return n % 10 >= 2 && n % 10 <= 9 && (n % 100 < 11 || n % 100 > 19) ? 1 : 2;
        },
        czech: function(n) {
          if (n === 1) {
            return 0;
          }
          return n >= 2 && n <= 4 ? 1 : 2;
        },
        polish: function(n) {
          if (n === 1) {
            return 0;
          }
          var end2 = n % 10;
          return 2 <= end2 && end2 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;
        },
        icelandic: function(n) {
          return n % 10 !== 1 || n % 100 === 11 ? 1 : 0;
        },
        slovenian: function(n) {
          var lastTwo = n % 100;
          if (lastTwo === 1) {
            return 0;
          }
          if (lastTwo === 2) {
            return 1;
          }
          if (lastTwo === 3 || lastTwo === 4) {
            return 2;
          }
          return 3;
        },
        romanian: function(n) {
          if (n === 1) {
            return 0;
          }
          var lastTwo = n % 100;
          if (n === 0 || lastTwo >= 2 && lastTwo <= 19) {
            return 1;
          }
          return 2;
        }
      },
      // Mapping from pluralization group to individual language codes/locales.
      // Will look up based on exact match, if not found and it's a locale will parse the locale
      // for language code, and if that does not exist will default to 'en'
      pluralTypeToLanguages: {
        arabic: ["ar"],
        bosnian_serbian: ["bs-Latn-BA", "bs-Cyrl-BA", "srl-RS", "sr-RS"],
        chinese: ["id", "id-ID", "ja", "ko", "ko-KR", "lo", "ms", "th", "th-TH", "zh"],
        croatian: ["hr", "hr-HR"],
        german: ["fa", "da", "de", "en", "es", "fi", "el", "he", "hi-IN", "hu", "hu-HU", "it", "nl", "no", "pt", "sv", "tr"],
        french: ["fr", "tl", "pt-br"],
        russian: ["ru", "ru-RU"],
        lithuanian: ["lt"],
        czech: ["cs", "cs-CZ", "sk"],
        polish: ["pl"],
        icelandic: ["is", "mk"],
        slovenian: ["sl-SL"],
        romanian: ["ro"]
      }
    };
    function langToTypeMap(mapping) {
      var ret = {};
      forEach(entries(mapping), function(entry) {
        var type = entry[0];
        var langs = entry[1];
        forEach(langs, function(lang) {
          ret[lang] = type;
        });
      });
      return ret;
    }
    function pluralTypeName(pluralRules, locale) {
      var langToPluralType = langToTypeMap(pluralRules.pluralTypeToLanguages);
      return langToPluralType[locale] || langToPluralType[split.call(locale, /-/, 1)[0]] || langToPluralType.en;
    }
    function pluralTypeIndex(pluralRules, pluralType, count) {
      return pluralRules.pluralTypes[pluralType](count);
    }
    function createMemoizedPluralTypeNameSelector() {
      var localePluralTypeStorage = {};
      return function(pluralRules, locale) {
        var pluralType = localePluralTypeStorage[locale];
        if (pluralType && !pluralRules.pluralTypes[pluralType]) {
          pluralType = null;
          localePluralTypeStorage[locale] = pluralType;
        }
        if (!pluralType) {
          pluralType = pluralTypeName(pluralRules, locale);
          if (pluralType) {
            localePluralTypeStorage[locale] = pluralType;
          }
        }
        return pluralType;
      };
    }
    function escape(token2) {
      return token2.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    }
    function constructTokenRegex(opts) {
      var prefix3 = opts && opts.prefix || "%{";
      var suffix = opts && opts.suffix || "}";
      if (prefix3 === delimiter2 || suffix === delimiter2) {
        throw new RangeError('"' + delimiter2 + '" token is reserved for pluralization');
      }
      return new RegExp(escape(prefix3) + "(.*?)" + escape(suffix), "g");
    }
    var memoizedPluralTypeName = createMemoizedPluralTypeNameSelector();
    var defaultTokenRegex = /%\{(.*?)\}/g;
    function transformPhrase(phrase, substitutions, locale, tokenRegex, pluralRules, replaceImplementation) {
      if (typeof phrase !== "string") {
        throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");
      }
      if (substitutions == null) {
        return phrase;
      }
      var result = phrase;
      var interpolationRegex = tokenRegex || defaultTokenRegex;
      var replace2 = replaceImplementation || defaultReplace;
      var options = typeof substitutions === "number" ? { smart_count: substitutions } : substitutions;
      if (options.smart_count != null && phrase) {
        var pluralRulesOrDefault = pluralRules || defaultPluralRules;
        var texts = split.call(phrase, delimiter2);
        var bestLocale = locale || "en";
        var pluralType = memoizedPluralTypeName(pluralRulesOrDefault, bestLocale);
        var pluralTypeWithCount = pluralTypeIndex(
          pluralRulesOrDefault,
          pluralType,
          options.smart_count
        );
        result = trim2(texts[pluralTypeWithCount] || texts[0]);
      }
      result = replace2.call(result, interpolationRegex, function(expression, argument) {
        if (!has(options, argument) || options[argument] == null) {
          return expression;
        }
        return options[argument];
      });
      return result;
    }
    function Polyglot2(options) {
      var opts = options || {};
      this.phrases = {};
      this.extend(opts.phrases || {});
      this.currentLocale = opts.locale || "en";
      var allowMissing = opts.allowMissing ? transformPhrase : null;
      this.onMissingKey = typeof opts.onMissingKey === "function" ? opts.onMissingKey : allowMissing;
      this.warn = opts.warn || warn;
      this.replaceImplementation = opts.replace || defaultReplace;
      this.tokenRegex = constructTokenRegex(opts.interpolation);
      this.pluralRules = opts.pluralRules || defaultPluralRules;
    }
    Polyglot2.prototype.locale = function(newLocale) {
      if (newLocale)
        this.currentLocale = newLocale;
      return this.currentLocale;
    };
    Polyglot2.prototype.extend = function(morePhrases, prefix3) {
      forEach(entries(morePhrases || {}), function(entry) {
        var key = entry[0];
        var phrase = entry[1];
        var prefixedKey = prefix3 ? prefix3 + "." + key : key;
        if (typeof phrase === "object") {
          this.extend(phrase, prefixedKey);
        } else {
          this.phrases[prefixedKey] = phrase;
        }
      }, this);
    };
    Polyglot2.prototype.unset = function(morePhrases, prefix3) {
      if (typeof morePhrases === "string") {
        delete this.phrases[morePhrases];
      } else {
        forEach(entries(morePhrases || {}), function(entry) {
          var key = entry[0];
          var phrase = entry[1];
          var prefixedKey = prefix3 ? prefix3 + "." + key : key;
          if (typeof phrase === "object") {
            this.unset(phrase, prefixedKey);
          } else {
            delete this.phrases[prefixedKey];
          }
        }, this);
      }
    };
    Polyglot2.prototype.clear = function() {
      this.phrases = {};
    };
    Polyglot2.prototype.replace = function(newPhrases) {
      this.clear();
      this.extend(newPhrases);
    };
    Polyglot2.prototype.t = function(key, options) {
      var phrase, result;
      var opts = options == null ? {} : options;
      if (typeof this.phrases[key] === "string") {
        phrase = this.phrases[key];
      } else if (typeof opts._ === "string") {
        phrase = opts._;
      } else if (this.onMissingKey) {
        var onMissingKey = this.onMissingKey;
        result = onMissingKey(
          key,
          opts,
          this.currentLocale,
          this.tokenRegex,
          this.pluralRules,
          this.replaceImplementation
        );
      } else {
        this.warn('Missing translation for key: "' + key + '"');
        result = key;
      }
      if (typeof phrase === "string") {
        result = transformPhrase(
          phrase,
          opts,
          this.currentLocale,
          this.tokenRegex,
          this.pluralRules,
          this.replaceImplementation
        );
      }
      return result;
    };
    Polyglot2.prototype.has = function(key) {
      return has(this.phrases, key);
    };
    Polyglot2.transformPhrase = function transform(phrase, substitutions, locale) {
      return transformPhrase(phrase, substitutions, locale);
    };
    module.exports = Polyglot2;
  }
});

// node_modules/react-admin/dist/esm/Admin.js
var React496 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/auth/AuthCallback.js
var React351 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/auth/AuthError.js
var React350 = __toESM(require_react());

// node_modules/@mui/material/colors/index.js
init_common();
init_red();
init_purple();
init_blue();
init_lightBlue();
init_green();
init_orange();
init_grey();

// node_modules/@mui/material/styles/index.js
init_esm();
init_identifier();

// node_modules/@mui/material/styles/adaptV4Theme.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm2();

// node_modules/@mui/material/styles/index.js
init_esm2();
init_createTheme3();

// node_modules/@mui/material/styles/createMuiStrictModeTheme.js
init_esm();
init_createTheme3();

// node_modules/@mui/material/styles/cssUtils.js
function getUnit(input) {
  return String(input).match(/[\d.\-+]*\s*(.*)/)[1] || "";
}
function toUnitless(length2) {
  return parseFloat(length2);
}

// node_modules/@mui/material/styles/responsiveFontSizes.js
init_extends();
init_esm();

// node_modules/@mui/material/styles/index.js
init_createTransitions();

// node_modules/@mui/material/styles/useTheme.js
var React28 = __toESM(require_react());
init_esm2();
init_defaultTheme();
init_identifier();
function useTheme5() {
  const theme = useTheme_default(defaultTheme_default);
  if (true) {
    React28.useDebugValue(theme);
  }
  return theme[identifier_default] || theme;
}

// node_modules/@mui/material/styles/index.js
init_useThemeProps3();
init_styled2();
init_styled2();

// node_modules/@mui/material/styles/ThemeProvider.js
init_extends();
init_objectWithoutPropertiesLoose();
var React29 = __toESM(require_react());
var import_prop_types19 = __toESM(require_prop_types());
init_esm2();
init_identifier();
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var _excluded16 = ["theme"];
function ThemeProvider4(_ref2) {
  let {
    theme: themeInput
  } = _ref2, props = _objectWithoutPropertiesLoose(_ref2, _excluded16);
  const scopedTheme = themeInput[identifier_default];
  return (0, import_jsx_runtime13.jsx)(ThemeProvider_default2, _extends({}, props, {
    themeId: scopedTheme ? identifier_default : void 0,
    theme: scopedTheme || themeInput
  }));
}
true ? ThemeProvider4.propTypes = {
  /**
   * Your component tree.
   */
  children: import_prop_types19.default.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: import_prop_types19.default.oneOfType([import_prop_types19.default.object, import_prop_types19.default.func]).isRequired
} : void 0;

// node_modules/@mui/material/styles/index.js
init_esm2();

// node_modules/@mui/material/styles/makeStyles.js
init_esm();

// node_modules/@mui/material/styles/withStyles.js
init_esm();

// node_modules/@mui/material/styles/withTheme.js
init_esm();

// node_modules/@mui/material/styles/CssVarsProvider.js
init_extends();
init_esm2();

// node_modules/@mui/material/styles/experimental_extendTheme.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();
init_esm2();

// node_modules/@mui/material/styles/shouldSkipGeneratingVar.js
function shouldSkipGeneratingVar(keys) {
  var _keys$;
  return !!keys[0].match(/(cssVarPrefix|typography|mixins|breakpoints|direction|transitions)/) || !!keys[0].match(/sxConfig$/) || // ends with sxConfig
  keys[0] === "palette" && !!((_keys$ = keys[1]) != null && _keys$.match(/(mode|contrastThreshold|tonalOffset)/));
}

// node_modules/@mui/material/styles/experimental_extendTheme.js
init_createTheme3();

// node_modules/@mui/material/styles/getOverlayAlpha.js
var getOverlayAlpha = (elevation) => {
  let alphaValue;
  if (elevation < 1) {
    alphaValue = 5.11916 * elevation ** 2;
  } else {
    alphaValue = 4.5 * Math.log(elevation + 1) + 2;
  }
  return (alphaValue / 100).toFixed(2);
};
var getOverlayAlpha_default = getOverlayAlpha;

// node_modules/@mui/material/styles/experimental_extendTheme.js
var _excluded17 = ["colorSchemes", "cssVarPrefix", "shouldSkipGeneratingVar"];
var _excluded23 = ["palette"];
var defaultDarkOverlays = [...Array(25)].map((_5, index2) => {
  if (index2 === 0) {
    return void 0;
  }
  const overlay = getOverlayAlpha_default(index2);
  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;
});
function assignNode(obj, keys) {
  keys.forEach((k) => {
    if (!obj[k]) {
      obj[k] = {};
    }
  });
}
function setColor(obj, key, defaultValue) {
  if (!obj[key] && defaultValue) {
    obj[key] = defaultValue;
  }
}
function setColorChannel(obj, key) {
  if (!(`${key}Channel` in obj)) {
    obj[`${key}Channel`] = private_safeColorChannel(obj[key], `MUI: Can't create \`palette.${key}Channel\` because \`palette.${key}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${key}Channel\` as a string (in rgb format, e.g. "12 12 12") or undefined if you want to remove the channel token.`);
  }
}
var silent = (fn2) => {
  try {
    return fn2();
  } catch (error) {
  }
  return void 0;
};
var createGetCssVar2 = (cssVarPrefix = "mui") => createGetCssVar(cssVarPrefix);
function extendTheme(options = {}, ...args) {
  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;
  const {
    colorSchemes: colorSchemesInput = {},
    cssVarPrefix = "mui",
    shouldSkipGeneratingVar: shouldSkipGeneratingVar2 = shouldSkipGeneratingVar
  } = options, input = _objectWithoutPropertiesLoose(options, _excluded17);
  const getCssVar = createGetCssVar2(cssVarPrefix);
  const _createThemeWithoutVa = createTheme_default2(_extends({}, input, colorSchemesInput.light && {
    palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette
  })), {
    palette: lightPalette
  } = _createThemeWithoutVa, muiTheme = _objectWithoutPropertiesLoose(_createThemeWithoutVa, _excluded23);
  const {
    palette: darkPalette
  } = createTheme_default2({
    palette: _extends({
      mode: "dark"
    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)
  });
  let theme = _extends({}, muiTheme, {
    cssVarPrefix,
    getCssVar,
    colorSchemes: _extends({}, colorSchemesInput, {
      light: _extends({}, colorSchemesInput.light, {
        palette: lightPalette,
        opacity: _extends({
          inputPlaceholder: 0.42,
          inputUnderline: 0.42,
          switchTrackDisabled: 0.12,
          switchTrack: 0.38
        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),
        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []
      }),
      dark: _extends({}, colorSchemesInput.dark, {
        palette: darkPalette,
        opacity: _extends({
          inputPlaceholder: 0.5,
          inputUnderline: 0.7,
          switchTrackDisabled: 0.2,
          switchTrack: 0.3
        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),
        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays
      })
    })
  });
  Object.keys(theme.colorSchemes).forEach((key) => {
    const palette2 = theme.colorSchemes[key].palette;
    const setCssVarColor = (cssVar) => {
      const tokens = cssVar.split("-");
      const color2 = tokens[1];
      const colorToken = tokens[2];
      return getCssVar(cssVar, palette2[color2][colorToken]);
    };
    if (key === "light") {
      setColor(palette2.common, "background", "#fff");
      setColor(palette2.common, "onBackground", "#000");
    } else {
      setColor(palette2.common, "background", "#000");
      setColor(palette2.common, "onBackground", "#fff");
    }
    assignNode(palette2, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]);
    if (key === "light") {
      setColor(palette2.Alert, "errorColor", private_safeDarken(palette2.error.light, 0.6));
      setColor(palette2.Alert, "infoColor", private_safeDarken(palette2.info.light, 0.6));
      setColor(palette2.Alert, "successColor", private_safeDarken(palette2.success.light, 0.6));
      setColor(palette2.Alert, "warningColor", private_safeDarken(palette2.warning.light, 0.6));
      setColor(palette2.Alert, "errorFilledBg", setCssVarColor("palette-error-main"));
      setColor(palette2.Alert, "infoFilledBg", setCssVarColor("palette-info-main"));
      setColor(palette2.Alert, "successFilledBg", setCssVarColor("palette-success-main"));
      setColor(palette2.Alert, "warningFilledBg", setCssVarColor("palette-warning-main"));
      setColor(palette2.Alert, "errorFilledColor", silent(() => lightPalette.getContrastText(palette2.error.main)));
      setColor(palette2.Alert, "infoFilledColor", silent(() => lightPalette.getContrastText(palette2.info.main)));
      setColor(palette2.Alert, "successFilledColor", silent(() => lightPalette.getContrastText(palette2.success.main)));
      setColor(palette2.Alert, "warningFilledColor", silent(() => lightPalette.getContrastText(palette2.warning.main)));
      setColor(palette2.Alert, "errorStandardBg", private_safeLighten(palette2.error.light, 0.9));
      setColor(palette2.Alert, "infoStandardBg", private_safeLighten(palette2.info.light, 0.9));
      setColor(palette2.Alert, "successStandardBg", private_safeLighten(palette2.success.light, 0.9));
      setColor(palette2.Alert, "warningStandardBg", private_safeLighten(palette2.warning.light, 0.9));
      setColor(palette2.Alert, "errorIconColor", setCssVarColor("palette-error-main"));
      setColor(palette2.Alert, "infoIconColor", setCssVarColor("palette-info-main"));
      setColor(palette2.Alert, "successIconColor", setCssVarColor("palette-success-main"));
      setColor(palette2.Alert, "warningIconColor", setCssVarColor("palette-warning-main"));
      setColor(palette2.AppBar, "defaultBg", setCssVarColor("palette-grey-100"));
      setColor(palette2.Avatar, "defaultBg", setCssVarColor("palette-grey-400"));
      setColor(palette2.Button, "inheritContainedBg", setCssVarColor("palette-grey-300"));
      setColor(palette2.Button, "inheritContainedHoverBg", setCssVarColor("palette-grey-A100"));
      setColor(palette2.Chip, "defaultBorder", setCssVarColor("palette-grey-400"));
      setColor(palette2.Chip, "defaultAvatarColor", setCssVarColor("palette-grey-700"));
      setColor(palette2.Chip, "defaultIconColor", setCssVarColor("palette-grey-700"));
      setColor(palette2.FilledInput, "bg", "rgba(0, 0, 0, 0.06)");
      setColor(palette2.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)");
      setColor(palette2.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)");
      setColor(palette2.LinearProgress, "primaryBg", private_safeLighten(palette2.primary.main, 0.62));
      setColor(palette2.LinearProgress, "secondaryBg", private_safeLighten(palette2.secondary.main, 0.62));
      setColor(palette2.LinearProgress, "errorBg", private_safeLighten(palette2.error.main, 0.62));
      setColor(palette2.LinearProgress, "infoBg", private_safeLighten(palette2.info.main, 0.62));
      setColor(palette2.LinearProgress, "successBg", private_safeLighten(palette2.success.main, 0.62));
      setColor(palette2.LinearProgress, "warningBg", private_safeLighten(palette2.warning.main, 0.62));
      setColor(palette2.Skeleton, "bg", `rgba(${setCssVarColor("palette-text-primaryChannel")} / 0.11)`);
      setColor(palette2.Slider, "primaryTrack", private_safeLighten(palette2.primary.main, 0.62));
      setColor(palette2.Slider, "secondaryTrack", private_safeLighten(palette2.secondary.main, 0.62));
      setColor(palette2.Slider, "errorTrack", private_safeLighten(palette2.error.main, 0.62));
      setColor(palette2.Slider, "infoTrack", private_safeLighten(palette2.info.main, 0.62));
      setColor(palette2.Slider, "successTrack", private_safeLighten(palette2.success.main, 0.62));
      setColor(palette2.Slider, "warningTrack", private_safeLighten(palette2.warning.main, 0.62));
      const snackbarContentBackground = private_safeEmphasize(palette2.background.default, 0.8);
      setColor(palette2.SnackbarContent, "bg", snackbarContentBackground);
      setColor(palette2.SnackbarContent, "color", silent(() => lightPalette.getContrastText(snackbarContentBackground)));
      setColor(palette2.SpeedDialAction, "fabHoverBg", private_safeEmphasize(palette2.background.paper, 0.15));
      setColor(palette2.StepConnector, "border", setCssVarColor("palette-grey-400"));
      setColor(palette2.StepContent, "border", setCssVarColor("palette-grey-400"));
      setColor(palette2.Switch, "defaultColor", setCssVarColor("palette-common-white"));
      setColor(palette2.Switch, "defaultDisabledColor", setCssVarColor("palette-grey-100"));
      setColor(palette2.Switch, "primaryDisabledColor", private_safeLighten(palette2.primary.main, 0.62));
      setColor(palette2.Switch, "secondaryDisabledColor", private_safeLighten(palette2.secondary.main, 0.62));
      setColor(palette2.Switch, "errorDisabledColor", private_safeLighten(palette2.error.main, 0.62));
      setColor(palette2.Switch, "infoDisabledColor", private_safeLighten(palette2.info.main, 0.62));
      setColor(palette2.Switch, "successDisabledColor", private_safeLighten(palette2.success.main, 0.62));
      setColor(palette2.Switch, "warningDisabledColor", private_safeLighten(palette2.warning.main, 0.62));
      setColor(palette2.TableCell, "border", private_safeLighten(private_safeAlpha(palette2.divider, 1), 0.88));
      setColor(palette2.Tooltip, "bg", private_safeAlpha(palette2.grey[700], 0.92));
    } else {
      setColor(palette2.Alert, "errorColor", private_safeLighten(palette2.error.light, 0.6));
      setColor(palette2.Alert, "infoColor", private_safeLighten(palette2.info.light, 0.6));
      setColor(palette2.Alert, "successColor", private_safeLighten(palette2.success.light, 0.6));
      setColor(palette2.Alert, "warningColor", private_safeLighten(palette2.warning.light, 0.6));
      setColor(palette2.Alert, "errorFilledBg", setCssVarColor("palette-error-dark"));
      setColor(palette2.Alert, "infoFilledBg", setCssVarColor("palette-info-dark"));
      setColor(palette2.Alert, "successFilledBg", setCssVarColor("palette-success-dark"));
      setColor(palette2.Alert, "warningFilledBg", setCssVarColor("palette-warning-dark"));
      setColor(palette2.Alert, "errorFilledColor", silent(() => darkPalette.getContrastText(palette2.error.dark)));
      setColor(palette2.Alert, "infoFilledColor", silent(() => darkPalette.getContrastText(palette2.info.dark)));
      setColor(palette2.Alert, "successFilledColor", silent(() => darkPalette.getContrastText(palette2.success.dark)));
      setColor(palette2.Alert, "warningFilledColor", silent(() => darkPalette.getContrastText(palette2.warning.dark)));
      setColor(palette2.Alert, "errorStandardBg", private_safeDarken(palette2.error.light, 0.9));
      setColor(palette2.Alert, "infoStandardBg", private_safeDarken(palette2.info.light, 0.9));
      setColor(palette2.Alert, "successStandardBg", private_safeDarken(palette2.success.light, 0.9));
      setColor(palette2.Alert, "warningStandardBg", private_safeDarken(palette2.warning.light, 0.9));
      setColor(palette2.Alert, "errorIconColor", setCssVarColor("palette-error-main"));
      setColor(palette2.Alert, "infoIconColor", setCssVarColor("palette-info-main"));
      setColor(palette2.Alert, "successIconColor", setCssVarColor("palette-success-main"));
      setColor(palette2.Alert, "warningIconColor", setCssVarColor("palette-warning-main"));
      setColor(palette2.AppBar, "defaultBg", setCssVarColor("palette-grey-900"));
      setColor(palette2.AppBar, "darkBg", setCssVarColor("palette-background-paper"));
      setColor(palette2.AppBar, "darkColor", setCssVarColor("palette-text-primary"));
      setColor(palette2.Avatar, "defaultBg", setCssVarColor("palette-grey-600"));
      setColor(palette2.Button, "inheritContainedBg", setCssVarColor("palette-grey-800"));
      setColor(palette2.Button, "inheritContainedHoverBg", setCssVarColor("palette-grey-700"));
      setColor(palette2.Chip, "defaultBorder", setCssVarColor("palette-grey-700"));
      setColor(palette2.Chip, "defaultAvatarColor", setCssVarColor("palette-grey-300"));
      setColor(palette2.Chip, "defaultIconColor", setCssVarColor("palette-grey-300"));
      setColor(palette2.FilledInput, "bg", "rgba(255, 255, 255, 0.09)");
      setColor(palette2.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)");
      setColor(palette2.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)");
      setColor(palette2.LinearProgress, "primaryBg", private_safeDarken(palette2.primary.main, 0.5));
      setColor(palette2.LinearProgress, "secondaryBg", private_safeDarken(palette2.secondary.main, 0.5));
      setColor(palette2.LinearProgress, "errorBg", private_safeDarken(palette2.error.main, 0.5));
      setColor(palette2.LinearProgress, "infoBg", private_safeDarken(palette2.info.main, 0.5));
      setColor(palette2.LinearProgress, "successBg", private_safeDarken(palette2.success.main, 0.5));
      setColor(palette2.LinearProgress, "warningBg", private_safeDarken(palette2.warning.main, 0.5));
      setColor(palette2.Skeleton, "bg", `rgba(${setCssVarColor("palette-text-primaryChannel")} / 0.13)`);
      setColor(palette2.Slider, "primaryTrack", private_safeDarken(palette2.primary.main, 0.5));
      setColor(palette2.Slider, "secondaryTrack", private_safeDarken(palette2.secondary.main, 0.5));
      setColor(palette2.Slider, "errorTrack", private_safeDarken(palette2.error.main, 0.5));
      setColor(palette2.Slider, "infoTrack", private_safeDarken(palette2.info.main, 0.5));
      setColor(palette2.Slider, "successTrack", private_safeDarken(palette2.success.main, 0.5));
      setColor(palette2.Slider, "warningTrack", private_safeDarken(palette2.warning.main, 0.5));
      const snackbarContentBackground = private_safeEmphasize(palette2.background.default, 0.98);
      setColor(palette2.SnackbarContent, "bg", snackbarContentBackground);
      setColor(palette2.SnackbarContent, "color", silent(() => darkPalette.getContrastText(snackbarContentBackground)));
      setColor(palette2.SpeedDialAction, "fabHoverBg", private_safeEmphasize(palette2.background.paper, 0.15));
      setColor(palette2.StepConnector, "border", setCssVarColor("palette-grey-600"));
      setColor(palette2.StepContent, "border", setCssVarColor("palette-grey-600"));
      setColor(palette2.Switch, "defaultColor", setCssVarColor("palette-grey-300"));
      setColor(palette2.Switch, "defaultDisabledColor", setCssVarColor("palette-grey-600"));
      setColor(palette2.Switch, "primaryDisabledColor", private_safeDarken(palette2.primary.main, 0.55));
      setColor(palette2.Switch, "secondaryDisabledColor", private_safeDarken(palette2.secondary.main, 0.55));
      setColor(palette2.Switch, "errorDisabledColor", private_safeDarken(palette2.error.main, 0.55));
      setColor(palette2.Switch, "infoDisabledColor", private_safeDarken(palette2.info.main, 0.55));
      setColor(palette2.Switch, "successDisabledColor", private_safeDarken(palette2.success.main, 0.55));
      setColor(palette2.Switch, "warningDisabledColor", private_safeDarken(palette2.warning.main, 0.55));
      setColor(palette2.TableCell, "border", private_safeDarken(private_safeAlpha(palette2.divider, 1), 0.68));
      setColor(palette2.Tooltip, "bg", private_safeAlpha(palette2.grey[700], 0.92));
    }
    setColorChannel(palette2.background, "default");
    setColorChannel(palette2.common, "background");
    setColorChannel(palette2.common, "onBackground");
    setColorChannel(palette2, "divider");
    Object.keys(palette2).forEach((color2) => {
      const colors = palette2[color2];
      if (colors && typeof colors === "object") {
        if (colors.main) {
          setColor(palette2[color2], "mainChannel", private_safeColorChannel(colors.main));
        }
        if (colors.light) {
          setColor(palette2[color2], "lightChannel", private_safeColorChannel(colors.light));
        }
        if (colors.dark) {
          setColor(palette2[color2], "darkChannel", private_safeColorChannel(colors.dark));
        }
        if (colors.contrastText) {
          setColor(palette2[color2], "contrastTextChannel", private_safeColorChannel(colors.contrastText));
        }
        if (color2 === "text") {
          setColorChannel(palette2[color2], "primary");
          setColorChannel(palette2[color2], "secondary");
        }
        if (color2 === "action") {
          if (colors.active) {
            setColorChannel(palette2[color2], "active");
          }
          if (colors.selected) {
            setColorChannel(palette2[color2], "selected");
          }
        }
      }
    });
  });
  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);
  const parserConfig = {
    prefix: cssVarPrefix,
    shouldSkipGeneratingVar: shouldSkipGeneratingVar2
  };
  const {
    vars: themeVars,
    generateCssVars
  } = prepareCssVars_default(theme, parserConfig);
  theme.vars = themeVars;
  theme.generateCssVars = generateCssVars;
  theme.shouldSkipGeneratingVar = shouldSkipGeneratingVar2;
  theme.unstable_sxConfig = _extends({}, defaultSxConfig_default, input == null ? void 0 : input.unstable_sxConfig);
  theme.unstable_sx = function sx(props) {
    return styleFunctionSx_default({
      sx: props,
      theme: this
    });
  };
  return theme;
}

// node_modules/@mui/material/styles/CssVarsProvider.js
init_createTypography();

// node_modules/@mui/material/styles/excludeVariablesFromRoot.js
var excludeVariablesFromRoot = (cssVarPrefix) => [...[...Array(24)].map((_5, index2) => `--${cssVarPrefix ? `${cssVarPrefix}-` : ""}overlays-${index2 + 1}`), `--${cssVarPrefix ? `${cssVarPrefix}-` : ""}palette-AppBar-darkBg`, `--${cssVarPrefix ? `${cssVarPrefix}-` : ""}palette-AppBar-darkColor`];
var excludeVariablesFromRoot_default = excludeVariablesFromRoot;

// node_modules/@mui/material/styles/CssVarsProvider.js
init_identifier();
var defaultTheme5 = extendTheme();
var {
  CssVarsProvider,
  useColorScheme,
  getInitColorSchemeScript: getInitColorSchemeScript2
} = createCssVarsProvider({
  themeId: identifier_default,
  theme: defaultTheme5,
  attribute: "data-mui-color-scheme",
  modeStorageKey: "mui-mode",
  colorSchemeStorageKey: "mui-color-scheme",
  defaultColorScheme: {
    light: "light",
    dark: "dark"
  },
  resolveTheme: (theme) => {
    const newTheme = _extends({}, theme, {
      typography: createTypography(theme.palette, theme.typography)
    });
    newTheme.unstable_sx = function sx(props) {
      return styleFunctionSx_default({
        sx: props,
        theme: this
      });
    };
    return newTheme;
  },
  excludeVariablesFromRoot: excludeVariablesFromRoot_default
});

// node_modules/@mui/material/styles/index.js
init_createTypography();

// node_modules/@mui/material/index.js
init_utils();

// node_modules/@mui/material/Accordion/Accordion.js
init_objectWithoutPropertiesLoose();
init_extends();
var React41 = __toESM(require_react());
var import_react_is2 = __toESM(require_react_is3());
var import_prop_types29 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Collapse/Collapse.js
init_objectWithoutPropertiesLoose();
init_extends();
var React38 = __toESM(require_react());
init_clsx2();
var import_prop_types27 = __toESM(require_prop_types());

// node_modules/react-transition-group/esm/CSSTransition.js
init_extends();
init_objectWithoutPropertiesLoose();
var import_prop_types23 = __toESM(require_prop_types());

// node_modules/dom-helpers/esm/hasClass.js
function hasClass(element, className) {
  if (element.classList)
    return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

// node_modules/dom-helpers/esm/addClass.js
function addClass(element, className) {
  if (element.classList)
    element.classList.add(className);
  else if (!hasClass(element, className))
    if (typeof element.className === "string")
      element.className = element.className + " " + className;
    else
      element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
}

// node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
  }
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_react10 = __toESM(require_react());

// node_modules/react-transition-group/esm/Transition.js
init_objectWithoutPropertiesLoose();
var import_prop_types22 = __toESM(require_prop_types());
var import_react9 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/react-transition-group/esm/config.js
var config_default = {
  disabled: false
};

// node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types21 = __toESM(require_prop_types());
var timeoutsShape = true ? import_prop_types21.default.oneOfType([import_prop_types21.default.number, import_prop_types21.default.shape({
  enter: import_prop_types21.default.number,
  exit: import_prop_types21.default.number,
  appear: import_prop_types21.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types21.default.oneOfType([import_prop_types21.default.string, import_prop_types21.default.shape({
  enter: import_prop_types21.default.string,
  exit: import_prop_types21.default.string,
  active: import_prop_types21.default.string
}), import_prop_types21.default.shape({
  enter: import_prop_types21.default.string,
  enterDone: import_prop_types21.default.string,
  enterActive: import_prop_types21.default.string,
  exit: import_prop_types21.default.string,
  exitDone: import_prop_types21.default.string,
  exitActive: import_prop_types21.default.string
})]) : null;

// node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react8 = __toESM(require_react());
var TransitionGroupContext_default = import_react8.default.createContext(null);

// node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow2(node2) {
  return node2.scrollTop;
};

// node_modules/react-transition-group/esm/Transition.js
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref2, prevState) {
    var nextIn = _ref2.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node2 = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
          if (node2)
            forceReflow(node2);
        }
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config_default.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : import_react_dom.default.findDOMNode(this);
    if (!exit || config_default.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node2 = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node2 || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node2, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children2 = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      import_react9.default.createElement(TransitionGroupContext_default.Provider, {
        value: null
      }, typeof children2 === "function" ? children2(status, childProps) : import_react9.default.cloneElement(import_react9.default.Children.only(children2), childProps))
    );
  };
  return Transition2;
}(import_react9.default.Component);
Transition.contextType = TransitionGroupContext_default;
Transition.propTypes = true ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: import_prop_types22.default.shape({
    current: typeof Element === "undefined" ? import_prop_types22.default.any : function(propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return import_prop_types22.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: import_prop_types22.default.oneOfType([import_prop_types22.default.func.isRequired, import_prop_types22.default.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: import_prop_types22.default.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: import_prop_types22.default.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: import_prop_types22.default.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: import_prop_types22.default.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: import_prop_types22.default.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: import_prop_types22.default.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener)
      pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: import_prop_types22.default.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: import_prop_types22.default.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types22.default.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: import_prop_types22.default.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: import_prop_types22.default.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: import_prop_types22.default.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: import_prop_types22.default.func
} : {};
function noop() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition_default = Transition;

// node_modules/react-transition-group/esm/CSSTransition.js
var _addClass = function addClass2(node2, classes2) {
  return node2 && classes2 && classes2.split(" ").forEach(function(c) {
    return addClass(node2, c);
  });
};
var removeClass2 = function removeClass3(node2, classes2) {
  return node2 && classes2 && classes2.split(" ").forEach(function(c) {
    return removeClass(node2, c);
  });
};
var CSSTransition = function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node2 = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node2, "exit");
      _this.addClass(node2, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node2 = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this.addClass(node2, type, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node2 = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this.removeClasses(node2, type);
      _this.addClass(node2, type, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node2 = _this$resolveArgument4[0];
      _this.removeClasses(node2, "appear");
      _this.removeClasses(node2, "enter");
      _this.addClass(node2, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node2 = _this$resolveArgument5[0];
      _this.addClass(node2, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node2 = _this$resolveArgument6[0];
      _this.removeClasses(node2, "exit");
      _this.addClass(node2, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === "string";
      var prefix3 = isStringClassNames && classNames ? classNames + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix3 + type : classNames[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass3(node2, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      if (node2)
        forceReflow(node2);
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node2, className);
    }
  };
  _proto.removeClasses = function removeClasses(node2, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass2(node2, baseClassName);
    }
    if (activeClassName) {
      removeClass2(node2, activeClassName);
    }
    if (doneClassName) {
      removeClass2(node2, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, _5 = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return import_react10.default.createElement(Transition_default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(import_react10.default.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: classNamesShape,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: import_prop_types23.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types23.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: import_prop_types23.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: import_prop_types23.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: import_prop_types23.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: import_prop_types23.default.func
}) : {};

// node_modules/react-transition-group/esm/ReplaceTransition.js
init_objectWithoutPropertiesLoose();
var import_prop_types25 = __toESM(require_prop_types());
var import_react13 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/react-transition-group/esm/TransitionGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var import_prop_types24 = __toESM(require_prop_types());
var import_react12 = __toESM(require_react());

// node_modules/react-transition-group/esm/utils/ChildMapping.js
var import_react11 = __toESM(require_react());
function getChildMapping(children2, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && (0, import_react11.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children2)
    import_react11.Children.map(children2, function(c) {
      return c;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev2, next2) {
  prev2 = prev2 || {};
  next2 = next2 || {};
  function getValueForKey(key) {
    return key in next2 ? next2[key] : prev2[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev2) {
    if (prevKey in next2) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next2) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return (0, import_react11.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children2 = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children2).forEach(function(key) {
    var child = children2[key];
    if (!(0, import_react11.isValidElement)(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, import_react11.isValidElement)(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children2[key] = (0, import_react11.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children2[key] = (0, import_react11.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, import_react11.isValidElement)(prevChild)) {
      children2[key] = (0, import_react11.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children2;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var values2 = Object.values || function(obj) {
  return Object.keys(obj).map(function(k) {
    return obj[k];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref2) {
    var prevChildMapping = _ref2.children, handleExited = _ref2.handleExited, firstRender = _ref2.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node2) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node2);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children2 = _extends({}, state.children);
        delete children2[child.key];
        return {
          children: children2
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component2 = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children2 = values2(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component2 === null) {
      return import_react12.default.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, children2);
    }
    return import_react12.default.createElement(TransitionGroupContext_default.Provider, {
      value: contextValue
    }, import_react12.default.createElement(Component2, props, children2));
  };
  return TransitionGroup2;
}(import_react12.default.Component);
TransitionGroup.propTypes = true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: import_prop_types24.default.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: import_prop_types24.default.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: import_prop_types24.default.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: import_prop_types24.default.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: import_prop_types24.default.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: import_prop_types24.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;
var TransitionGroup_default = TransitionGroup;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var ReplaceTransition = function(_React$Component) {
  _inheritsLoose(ReplaceTransition2, _React$Component);
  function ReplaceTransition2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
    _this.handleEnter = function() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return _this.handleLifecycle("onEnter", 0, args);
    };
    _this.handleEntering = function() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return _this.handleLifecycle("onEntering", 0, args);
    };
    _this.handleEntered = function() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return _this.handleLifecycle("onEntered", 0, args);
    };
    _this.handleExit = function() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return _this.handleLifecycle("onExit", 1, args);
    };
    _this.handleExiting = function() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      return _this.handleLifecycle("onExiting", 1, args);
    };
    _this.handleExited = function() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      return _this.handleLifecycle("onExited", 1, args);
    };
    return _this;
  }
  var _proto = ReplaceTransition2.prototype;
  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;
    var children2 = this.props.children;
    var child = import_react13.default.Children.toArray(children2)[idx];
    if (child.props[handler])
      (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? void 0 : import_react_dom2.default.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
    var _React$Children$toArr = import_react13.default.Children.toArray(children2), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return import_react13.default.createElement(TransitionGroup_default, props, inProp ? import_react13.default.cloneElement(first, {
      key: "first",
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : import_react13.default.cloneElement(second, {
      key: "second",
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };
  return ReplaceTransition2;
}(import_react13.default.Component);
ReplaceTransition.propTypes = true ? {
  in: import_prop_types25.default.bool.isRequired,
  children: function children(props, propName) {
    if (import_react13.default.Children.count(props[propName]) !== 2)
      return new Error('"' + propName + '" must be exactly two transition components.');
    return null;
  }
} : {};

// node_modules/react-transition-group/esm/SwitchTransition.js
var import_react14 = __toESM(require_react());
var import_prop_types26 = __toESM(require_prop_types());
var _leaveRenders;
var _enterRenders;
function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren)
    return false;
  if (import_react14.default.isValidElement(oldChildren) && import_react14.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }
  return true;
}
var modes = {
  out: "out-in",
  in: "in-out"
};
var callHook = function callHook2(element, name, cb) {
  return function() {
    var _element$props;
    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
    cb();
  };
};
var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref2) {
  var current = _ref2.current, changeState = _ref2.changeState;
  return import_react14.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERING, null);
    })
  });
}, _leaveRenders[modes.in] = function(_ref2) {
  var current = _ref2.current, changeState = _ref2.changeState, children2 = _ref2.children;
  return [current, import_react14.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERING);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {
  var children2 = _ref3.children, changeState = _ref3.changeState;
  return import_react14.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERED, import_react14.default.cloneElement(children2, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function(_ref4) {
  var current = _ref4.current, children2 = _ref4.children, changeState = _ref4.changeState;
  return [import_react14.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERED, import_react14.default.cloneElement(children2, {
        in: true
      }));
    })
  }), import_react14.default.cloneElement(children2, {
    in: true
  })];
}, _enterRenders);
var SwitchTransition = function(_React$Component) {
  _inheritsLoose(SwitchTransition2, _React$Component);
  function SwitchTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: ENTERED,
      current: null
    };
    _this.appeared = false;
    _this.changeState = function(status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }
      _this.setState({
        status,
        current
      });
    };
    return _this;
  }
  var _proto = SwitchTransition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };
  SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }
    if (state.status === ENTERING && props.mode === modes.in) {
      return {
        status: ENTERING
      };
    }
    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: EXITING
      };
    }
    return {
      current: import_react14.default.cloneElement(props.children, {
        in: true
      })
    };
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
    var data = {
      children: children2,
      current,
      changeState: this.changeState,
      status
    };
    var component;
    switch (status) {
      case ENTERING:
        component = enterRenders[mode](data);
        break;
      case EXITING:
        component = leaveRenders[mode](data);
        break;
      case ENTERED:
        component = current;
    }
    return import_react14.default.createElement(TransitionGroupContext_default.Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };
  return SwitchTransition2;
}(import_react14.default.Component);
SwitchTransition.propTypes = true ? {
  /**
   * Transition modes.
   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
   * `in-out`: New element transitions in first, then when complete, the current element transitions out.
   *
   * @type {'out-in'|'in-out'}
   */
  mode: import_prop_types26.default.oneOf([modes.in, modes.out]),
  /**
   * Any `Transition` or `CSSTransition` component.
   */
  children: import_prop_types26.default.oneOfType([import_prop_types26.default.element.isRequired])
} : {};
SwitchTransition.defaultProps = {
  mode: modes.out
};

// node_modules/@mui/material/Collapse/Collapse.js
init_esm();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
init_createTransitions();

// node_modules/@mui/material/transitions/utils.js
var reflow = (node2) => node2.scrollTop;
function getTransitionProps(props, options) {
  var _style$transitionDura, _style$transitionTimi;
  const {
    timeout: timeout2,
    easing: easing2,
    style: style4 = {}
  } = props;
  return {
    duration: (_style$transitionDura = style4.transitionDuration) != null ? _style$transitionDura : typeof timeout2 === "number" ? timeout2 : timeout2[options.mode] || 0,
    easing: (_style$transitionTimi = style4.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing2 === "object" ? easing2[options.mode] : easing2,
    delay: style4.transitionDelay
  };
}

// node_modules/@mui/material/Collapse/Collapse.js
init_utils();

// node_modules/@mui/material/Collapse/collapseClasses.js
init_esm();
init_generateUtilityClass3();
function getCollapseUtilityClass(slot) {
  return generateUtilityClass("MuiCollapse", slot);
}
var collapseClasses = generateUtilityClasses("MuiCollapse", ["root", "horizontal", "vertical", "entered", "hidden", "wrapper", "wrapperInner"]);

// node_modules/@mui/material/Collapse/Collapse.js
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var _excluded19 = ["addEndListener", "children", "className", "collapsedSize", "component", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "orientation", "style", "timeout", "TransitionComponent"];
var useUtilityClasses3 = (ownerState) => {
  const {
    orientation,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", `${orientation}`],
    entered: ["entered"],
    hidden: ["hidden"],
    wrapper: ["wrapper", `${orientation}`],
    wrapperInner: ["wrapperInner", `${orientation}`]
  };
  return composeClasses(slots, getCollapseUtilityClass, classes2);
};
var CollapseRoot = styled_default2("div", {
  name: "MuiCollapse",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.orientation], ownerState.state === "entered" && styles7.entered, ownerState.state === "exited" && !ownerState.in && ownerState.collapsedSize === "0px" && styles7.hidden];
  }
})(({
  theme,
  ownerState
}) => _extends({
  height: 0,
  overflow: "hidden",
  transition: theme.transitions.create("height")
}, ownerState.orientation === "horizontal" && {
  height: "auto",
  width: 0,
  transition: theme.transitions.create("width")
}, ownerState.state === "entered" && _extends({
  height: "auto",
  overflow: "visible"
}, ownerState.orientation === "horizontal" && {
  width: "auto"
}), ownerState.state === "exited" && !ownerState.in && ownerState.collapsedSize === "0px" && {
  visibility: "hidden"
}));
var CollapseWrapper = styled_default2("div", {
  name: "MuiCollapse",
  slot: "Wrapper",
  overridesResolver: (props, styles7) => styles7.wrapper
})(({
  ownerState
}) => _extends({
  // Hack to get children with a negative margin to not falsify the height computation.
  display: "flex",
  width: "100%"
}, ownerState.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
}));
var CollapseWrapperInner = styled_default2("div", {
  name: "MuiCollapse",
  slot: "WrapperInner",
  overridesResolver: (props, styles7) => styles7.wrapperInner
})(({
  ownerState
}) => _extends({
  width: "100%"
}, ownerState.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
}));
var Collapse = React38.forwardRef(function Collapse2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCollapse"
  });
  const {
    addEndListener,
    children: children2,
    className,
    collapsedSize: collapsedSizeProp = "0px",
    component,
    easing: easing2,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    orientation = "vertical",
    style: style4,
    timeout: timeout2 = duration.standard,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded19);
  const ownerState = _extends({}, props, {
    orientation,
    collapsedSize: collapsedSizeProp
  });
  const classes2 = useUtilityClasses3(ownerState);
  const theme = useTheme5();
  const timer = React38.useRef();
  const wrapperRef = React38.useRef(null);
  const autoTransitionDuration = React38.useRef();
  const collapsedSize = typeof collapsedSizeProp === "number" ? `${collapsedSizeProp}px` : collapsedSizeProp;
  const isHorizontal2 = orientation === "horizontal";
  const size2 = isHorizontal2 ? "width" : "height";
  React38.useEffect(() => {
    return () => {
      clearTimeout(timer.current);
    };
  }, []);
  const nodeRef = React38.useRef(null);
  const handleRef = useForkRef_default(ref, nodeRef);
  const normalizedTransitionCallback = (callback) => (maybeIsAppearing) => {
    if (callback) {
      const node2 = nodeRef.current;
      if (maybeIsAppearing === void 0) {
        callback(node2);
      } else {
        callback(node2, maybeIsAppearing);
      }
    }
  };
  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal2 ? "clientWidth" : "clientHeight"] : 0;
  const handleEnter = normalizedTransitionCallback((node2, isAppearing) => {
    if (wrapperRef.current && isHorizontal2) {
      wrapperRef.current.style.position = "absolute";
    }
    node2.style[size2] = collapsedSize;
    if (onEnter) {
      onEnter(node2, isAppearing);
    }
  });
  const handleEntering = normalizedTransitionCallback((node2, isAppearing) => {
    const wrapperSize = getWrapperSize();
    if (wrapperRef.current && isHorizontal2) {
      wrapperRef.current.style.position = "";
    }
    const {
      duration: transitionDuration,
      easing: transitionTimingFunction
    } = getTransitionProps({
      style: style4,
      timeout: timeout2,
      easing: easing2
    }, {
      mode: "enter"
    });
    if (timeout2 === "auto") {
      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);
      node2.style.transitionDuration = `${duration2}ms`;
      autoTransitionDuration.current = duration2;
    } else {
      node2.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : `${transitionDuration}ms`;
    }
    node2.style[size2] = `${wrapperSize}px`;
    node2.style.transitionTimingFunction = transitionTimingFunction;
    if (onEntering) {
      onEntering(node2, isAppearing);
    }
  });
  const handleEntered = normalizedTransitionCallback((node2, isAppearing) => {
    node2.style[size2] = "auto";
    if (onEntered) {
      onEntered(node2, isAppearing);
    }
  });
  const handleExit = normalizedTransitionCallback((node2) => {
    node2.style[size2] = `${getWrapperSize()}px`;
    if (onExit) {
      onExit(node2);
    }
  });
  const handleExited = normalizedTransitionCallback(onExited);
  const handleExiting = normalizedTransitionCallback((node2) => {
    const wrapperSize = getWrapperSize();
    const {
      duration: transitionDuration,
      easing: transitionTimingFunction
    } = getTransitionProps({
      style: style4,
      timeout: timeout2,
      easing: easing2
    }, {
      mode: "exit"
    });
    if (timeout2 === "auto") {
      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);
      node2.style.transitionDuration = `${duration2}ms`;
      autoTransitionDuration.current = duration2;
    } else {
      node2.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : `${transitionDuration}ms`;
    }
    node2.style[size2] = collapsedSize;
    node2.style.transitionTimingFunction = transitionTimingFunction;
    if (onExiting) {
      onExiting(node2);
    }
  });
  const handleAddEndListener = (next2) => {
    if (timeout2 === "auto") {
      timer.current = setTimeout(next2, autoTransitionDuration.current || 0);
    }
    if (addEndListener) {
      addEndListener(nodeRef.current, next2);
    }
  };
  return (0, import_jsx_runtime17.jsx)(TransitionComponent, _extends({
    in: inProp,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    nodeRef,
    timeout: timeout2 === "auto" ? null : timeout2
  }, other, {
    children: (state, childProps) => (0, import_jsx_runtime17.jsx)(CollapseRoot, _extends({
      as: component,
      className: clsx_default2(classes2.root, className, {
        "entered": classes2.entered,
        "exited": !inProp && collapsedSize === "0px" && classes2.hidden
      }[state]),
      style: _extends({
        [isHorizontal2 ? "minWidth" : "minHeight"]: collapsedSize
      }, style4),
      ownerState: _extends({}, ownerState, {
        state
      }),
      ref: handleRef
    }, childProps, {
      children: (0, import_jsx_runtime17.jsx)(CollapseWrapper, {
        ownerState: _extends({}, ownerState, {
          state
        }),
        className: classes2.wrapper,
        ref: wrapperRef,
        children: (0, import_jsx_runtime17.jsx)(CollapseWrapperInner, {
          ownerState: _extends({}, ownerState, {
            state
          }),
          className: classes2.wrapperInner,
          children: children2
        })
      })
    }))
  }));
});
true ? Collapse.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: import_prop_types27.default.func,
  /**
   * The content node to be collapsed.
   */
  children: import_prop_types27.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types27.default.object,
  /**
   * @ignore
   */
  className: import_prop_types27.default.string,
  /**
   * The width (horizontal) or height (vertical) of the container when collapsed.
   * @default '0px'
   */
  collapsedSize: import_prop_types27.default.oneOfType([import_prop_types27.default.number, import_prop_types27.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: elementTypeAcceptingRef_default,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: import_prop_types27.default.oneOfType([import_prop_types27.default.shape({
    enter: import_prop_types27.default.string,
    exit: import_prop_types27.default.string
  }), import_prop_types27.default.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: import_prop_types27.default.bool,
  /**
   * @ignore
   */
  onEnter: import_prop_types27.default.func,
  /**
   * @ignore
   */
  onEntered: import_prop_types27.default.func,
  /**
   * @ignore
   */
  onEntering: import_prop_types27.default.func,
  /**
   * @ignore
   */
  onExit: import_prop_types27.default.func,
  /**
   * @ignore
   */
  onExited: import_prop_types27.default.func,
  /**
   * @ignore
   */
  onExiting: import_prop_types27.default.func,
  /**
   * The transition orientation.
   * @default 'vertical'
   */
  orientation: import_prop_types27.default.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  style: import_prop_types27.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types27.default.oneOfType([import_prop_types27.default.arrayOf(import_prop_types27.default.oneOfType([import_prop_types27.default.func, import_prop_types27.default.object, import_prop_types27.default.bool])), import_prop_types27.default.func, import_prop_types27.default.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default duration.standard
   */
  timeout: import_prop_types27.default.oneOfType([import_prop_types27.default.oneOf(["auto"]), import_prop_types27.default.number, import_prop_types27.default.shape({
    appear: import_prop_types27.default.number,
    enter: import_prop_types27.default.number,
    exit: import_prop_types27.default.number
  })])
} : void 0;
Collapse.muiSupportAuto = true;
var Collapse_default = Collapse;

// node_modules/@mui/material/Paper/Paper.js
init_objectWithoutPropertiesLoose();
init_extends();
var React39 = __toESM(require_react());
var import_prop_types28 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_esm2();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Paper/paperClasses.js
init_esm();
init_generateUtilityClass3();
function getPaperUtilityClass(slot) {
  return generateUtilityClass("MuiPaper", slot);
}
var paperClasses = generateUtilityClasses("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);

// node_modules/@mui/material/Paper/Paper.js
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
var _excluded20 = ["className", "component", "elevation", "square", "variant"];
var useUtilityClasses4 = (ownerState) => {
  const {
    square,
    elevation,
    variant,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", variant, !square && "rounded", variant === "elevation" && `elevation${elevation}`]
  };
  return composeClasses(slots, getPaperUtilityClass, classes2);
};
var PaperRoot = styled_default2("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant], !ownerState.square && styles7.rounded, ownerState.variant === "elevation" && styles7[`elevation${ownerState.elevation}`]];
  }
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$overlays;
  return _extends({
    backgroundColor: (theme.vars || theme).palette.background.paper,
    color: (theme.vars || theme).palette.text.primary,
    transition: theme.transitions.create("box-shadow")
  }, !ownerState.square && {
    borderRadius: theme.shape.borderRadius
  }, ownerState.variant === "outlined" && {
    border: `1px solid ${(theme.vars || theme).palette.divider}`
  }, ownerState.variant === "elevation" && _extends({
    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]
  }, !theme.vars && theme.palette.mode === "dark" && {
    backgroundImage: `linear-gradient(${alpha("#fff", getOverlayAlpha_default(ownerState.elevation))}, ${alpha("#fff", getOverlayAlpha_default(ownerState.elevation))})`
  }, theme.vars && {
    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]
  }));
});
var Paper = React39.forwardRef(function Paper2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiPaper"
  });
  const {
    className,
    component = "div",
    elevation = 1,
    square = false,
    variant = "elevation"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded20);
  const ownerState = _extends({}, props, {
    component,
    elevation,
    square,
    variant
  });
  const classes2 = useUtilityClasses4(ownerState);
  if (true) {
    const theme = useTheme5();
    if (theme.shadows[elevation] === void 0) {
      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${elevation}]\` is defined.`].join("\n"));
    }
  }
  return (0, import_jsx_runtime18.jsx)(PaperRoot, _extends({
    as: component,
    ownerState,
    className: clsx_default2(classes2.root, className),
    ref
  }, other));
});
true ? Paper.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types28.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types28.default.object,
  /**
   * @ignore
   */
  className: import_prop_types28.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types28.default.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: chainPropTypes(integerPropType_default, (props) => {
    const {
      elevation,
      variant
    } = props;
    if (elevation > 0 && variant === "outlined") {
      return new Error(`MUI: Combining \`elevation={${elevation}}\` with \`variant="${variant}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`);
    }
    return null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: import_prop_types28.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types28.default.oneOfType([import_prop_types28.default.arrayOf(import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object, import_prop_types28.default.bool])), import_prop_types28.default.func, import_prop_types28.default.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: import_prop_types28.default.oneOfType([import_prop_types28.default.oneOf(["elevation", "outlined"]), import_prop_types28.default.string])
} : void 0;
var Paper_default = Paper;

// node_modules/@mui/material/Accordion/AccordionContext.js
var React40 = __toESM(require_react());
var AccordionContext = React40.createContext({});
if (true) {
  AccordionContext.displayName = "AccordionContext";
}
var AccordionContext_default = AccordionContext;

// node_modules/@mui/material/Accordion/Accordion.js
init_useControlled3();

// node_modules/@mui/material/Accordion/accordionClasses.js
init_esm();
init_generateUtilityClass3();
function getAccordionUtilityClass(slot) {
  return generateUtilityClass("MuiAccordion", slot);
}
var accordionClasses = generateUtilityClasses("MuiAccordion", ["root", "rounded", "expanded", "disabled", "gutters", "region"]);
var accordionClasses_default = accordionClasses;

// node_modules/@mui/material/Accordion/Accordion.js
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
var _excluded21 = ["children", "className", "defaultExpanded", "disabled", "disableGutters", "expanded", "onChange", "square", "TransitionComponent", "TransitionProps"];
var useUtilityClasses5 = (ownerState) => {
  const {
    classes: classes2,
    square,
    expanded,
    disabled,
    disableGutters
  } = ownerState;
  const slots = {
    root: ["root", !square && "rounded", expanded && "expanded", disabled && "disabled", !disableGutters && "gutters"],
    region: ["region"]
  };
  return composeClasses(slots, getAccordionUtilityClass, classes2);
};
var AccordionRoot = styled_default2(Paper_default, {
  name: "MuiAccordion",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${accordionClasses_default.region}`]: styles7.region
    }, styles7.root, !ownerState.square && styles7.rounded, !ownerState.disableGutters && styles7.gutters];
  }
})(({
  theme
}) => {
  const transition = {
    duration: theme.transitions.duration.shortest
  };
  return {
    position: "relative",
    transition: theme.transitions.create(["margin"], transition),
    overflowAnchor: "none",
    // Keep the same scrolling position
    "&:before": {
      position: "absolute",
      left: 0,
      top: -1,
      right: 0,
      height: 1,
      content: '""',
      opacity: 1,
      backgroundColor: (theme.vars || theme).palette.divider,
      transition: theme.transitions.create(["opacity", "background-color"], transition)
    },
    "&:first-of-type": {
      "&:before": {
        display: "none"
      }
    },
    [`&.${accordionClasses_default.expanded}`]: {
      "&:before": {
        opacity: 0
      },
      "&:first-of-type": {
        marginTop: 0
      },
      "&:last-of-type": {
        marginBottom: 0
      },
      "& + &": {
        "&:before": {
          display: "none"
        }
      }
    },
    [`&.${accordionClasses_default.disabled}`]: {
      backgroundColor: (theme.vars || theme).palette.action.disabledBackground
    }
  };
}, ({
  theme,
  ownerState
}) => _extends({}, !ownerState.square && {
  borderRadius: 0,
  "&:first-of-type": {
    borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,
    borderTopRightRadius: (theme.vars || theme).shape.borderRadius
  },
  "&:last-of-type": {
    borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,
    borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,
    // Fix a rendering issue on Edge
    "@supports (-ms-ime-align: auto)": {
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    }
  }
}, !ownerState.disableGutters && {
  [`&.${accordionClasses_default.expanded}`]: {
    margin: "16px 0"
  }
}));
var Accordion = React41.forwardRef(function Accordion2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAccordion"
  });
  const {
    children: childrenProp,
    className,
    defaultExpanded = false,
    disabled = false,
    disableGutters = false,
    expanded: expandedProp,
    onChange,
    square = false,
    TransitionComponent = Collapse_default,
    TransitionProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded21);
  const [expanded, setExpandedState] = useControlled_default({
    controlled: expandedProp,
    default: defaultExpanded,
    name: "Accordion",
    state: "expanded"
  });
  const handleChange = React41.useCallback((event) => {
    setExpandedState(!expanded);
    if (onChange) {
      onChange(event, !expanded);
    }
  }, [expanded, onChange, setExpandedState]);
  const [summary, ...children2] = React41.Children.toArray(childrenProp);
  const contextValue = React41.useMemo(() => ({
    expanded,
    disabled,
    disableGutters,
    toggle: handleChange
  }), [expanded, disabled, disableGutters, handleChange]);
  const ownerState = _extends({}, props, {
    square,
    disabled,
    disableGutters,
    expanded
  });
  const classes2 = useUtilityClasses5(ownerState);
  return (0, import_jsx_runtime20.jsxs)(AccordionRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState,
    square
  }, other, {
    children: [(0, import_jsx_runtime19.jsx)(AccordionContext_default.Provider, {
      value: contextValue,
      children: summary
    }), (0, import_jsx_runtime19.jsx)(TransitionComponent, _extends({
      in: expanded,
      timeout: "auto"
    }, TransitionProps, {
      children: (0, import_jsx_runtime19.jsx)("div", {
        "aria-labelledby": summary.props.id,
        id: summary.props["aria-controls"],
        role: "region",
        className: classes2.region,
        children: children2
      })
    }))]
  }));
});
true ? Accordion.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: chainPropTypes(import_prop_types29.default.node.isRequired, (props) => {
    const summary = React41.Children.toArray(props.children)[0];
    if ((0, import_react_is2.isFragment)(summary)) {
      return new Error("MUI: The Accordion doesn't accept a Fragment as a child. Consider providing an array instead.");
    }
    if (!React41.isValidElement(summary)) {
      return new Error("MUI: Expected the first child of Accordion to be a valid element.");
    }
    return null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types29.default.object,
  /**
   * @ignore
   */
  className: import_prop_types29.default.string,
  /**
   * If `true`, expands the accordion by default.
   * @default false
   */
  defaultExpanded: import_prop_types29.default.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types29.default.bool,
  /**
   * If `true`, it removes the margin between two expanded accordion items and the increase of height.
   * @default false
   */
  disableGutters: import_prop_types29.default.bool,
  /**
   * If `true`, expands the accordion, otherwise collapse it.
   * Setting this prop enables control over the accordion.
   */
  expanded: import_prop_types29.default.bool,
  /**
   * Callback fired when the expand/collapse state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {boolean} expanded The `expanded` state of the accordion.
   */
  onChange: import_prop_types29.default.func,
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: import_prop_types29.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types29.default.oneOfType([import_prop_types29.default.arrayOf(import_prop_types29.default.oneOfType([import_prop_types29.default.func, import_prop_types29.default.object, import_prop_types29.default.bool])), import_prop_types29.default.func, import_prop_types29.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Collapse
   */
  TransitionComponent: import_prop_types29.default.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types29.default.object
} : void 0;
var Accordion_default = Accordion;

// node_modules/@mui/material/AccordionActions/AccordionActions.js
init_objectWithoutPropertiesLoose();
init_extends();
var React42 = __toESM(require_react());
var import_prop_types30 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/AccordionActions/accordionActionsClasses.js
init_esm();
init_generateUtilityClass3();
function getAccordionActionsUtilityClass(slot) {
  return generateUtilityClass("MuiAccordionActions", slot);
}
var accordionActionsClasses = generateUtilityClasses("MuiAccordionActions", ["root", "spacing"]);

// node_modules/@mui/material/AccordionActions/AccordionActions.js
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var _excluded24 = ["className", "disableSpacing"];
var useUtilityClasses6 = (ownerState) => {
  const {
    classes: classes2,
    disableSpacing
  } = ownerState;
  const slots = {
    root: ["root", !disableSpacing && "spacing"]
  };
  return composeClasses(slots, getAccordionActionsUtilityClass, classes2);
};
var AccordionActionsRoot = styled_default2("div", {
  name: "MuiAccordionActions",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, !ownerState.disableSpacing && styles7.spacing];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end"
}, !ownerState.disableSpacing && {
  "& > :not(:first-of-type)": {
    marginLeft: 8
  }
}));
var AccordionActions = React42.forwardRef(function AccordionActions2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAccordionActions"
  });
  const {
    className,
    disableSpacing = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded24);
  const ownerState = _extends({}, props, {
    disableSpacing
  });
  const classes2 = useUtilityClasses6(ownerState);
  return (0, import_jsx_runtime21.jsx)(AccordionActionsRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other));
});
true ? AccordionActions.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types30.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types30.default.object,
  /**
   * @ignore
   */
  className: import_prop_types30.default.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: import_prop_types30.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types30.default.oneOfType([import_prop_types30.default.arrayOf(import_prop_types30.default.oneOfType([import_prop_types30.default.func, import_prop_types30.default.object, import_prop_types30.default.bool])), import_prop_types30.default.func, import_prop_types30.default.object])
} : void 0;

// node_modules/@mui/material/AccordionDetails/AccordionDetails.js
init_extends();
init_objectWithoutPropertiesLoose();
var React43 = __toESM(require_react());
var import_prop_types31 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js
init_esm();
init_generateUtilityClass3();
function getAccordionDetailsUtilityClass(slot) {
  return generateUtilityClass("MuiAccordionDetails", slot);
}
var accordionDetailsClasses = generateUtilityClasses("MuiAccordionDetails", ["root"]);

// node_modules/@mui/material/AccordionDetails/AccordionDetails.js
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var _excluded25 = ["className"];
var useUtilityClasses7 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getAccordionDetailsUtilityClass, classes2);
};
var AccordionDetailsRoot = styled_default2("div", {
  name: "MuiAccordionDetails",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(({
  theme
}) => ({
  padding: theme.spacing(1, 2, 2)
}));
var AccordionDetails = React43.forwardRef(function AccordionDetails2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAccordionDetails"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded25);
  const ownerState = props;
  const classes2 = useUtilityClasses7(ownerState);
  return (0, import_jsx_runtime22.jsx)(AccordionDetailsRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other));
});
true ? AccordionDetails.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types31.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types31.default.object,
  /**
   * @ignore
   */
  className: import_prop_types31.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types31.default.oneOfType([import_prop_types31.default.arrayOf(import_prop_types31.default.oneOfType([import_prop_types31.default.func, import_prop_types31.default.object, import_prop_types31.default.bool])), import_prop_types31.default.func, import_prop_types31.default.object])
} : void 0;
var AccordionDetails_default = AccordionDetails;

// node_modules/@mui/material/AccordionSummary/AccordionSummary.js
init_objectWithoutPropertiesLoose();
init_extends();
var React47 = __toESM(require_react());
var import_prop_types35 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/ButtonBase/ButtonBase.js
init_extends();
init_objectWithoutPropertiesLoose();
var React46 = __toESM(require_react());
var import_prop_types34 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
init_useForkRef3();
init_useEventCallback3();
init_useIsFocusVisible2();

// node_modules/@mui/material/ButtonBase/TouchRipple.js
init_extends();
init_objectWithoutPropertiesLoose();
var React45 = __toESM(require_react());
var import_prop_types33 = __toESM(require_prop_types());
init_clsx2();
init_esm2();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/ButtonBase/Ripple.js
var React44 = __toESM(require_react());
var import_prop_types32 = __toESM(require_prop_types());
init_clsx2();
var import_jsx_runtime23 = __toESM(require_jsx_runtime());
function Ripple(props) {
  const {
    className,
    classes: classes2,
    pulsate = false,
    rippleX,
    rippleY,
    rippleSize,
    in: inProp,
    onExited,
    timeout: timeout2
  } = props;
  const [leaving, setLeaving] = React44.useState(false);
  const rippleClassName = clsx_default2(className, classes2.ripple, classes2.rippleVisible, pulsate && classes2.ripplePulsate);
  const rippleStyles = {
    width: rippleSize,
    height: rippleSize,
    top: -(rippleSize / 2) + rippleY,
    left: -(rippleSize / 2) + rippleX
  };
  const childClassName = clsx_default2(classes2.child, leaving && classes2.childLeaving, pulsate && classes2.childPulsate);
  if (!inProp && !leaving) {
    setLeaving(true);
  }
  React44.useEffect(() => {
    if (!inProp && onExited != null) {
      const timeoutId = setTimeout(onExited, timeout2);
      return () => {
        clearTimeout(timeoutId);
      };
    }
    return void 0;
  }, [onExited, inProp, timeout2]);
  return (0, import_jsx_runtime23.jsx)("span", {
    className: rippleClassName,
    style: rippleStyles,
    children: (0, import_jsx_runtime23.jsx)("span", {
      className: childClassName
    })
  });
}
true ? Ripple.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types32.default.object.isRequired,
  className: import_prop_types32.default.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: import_prop_types32.default.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: import_prop_types32.default.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: import_prop_types32.default.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: import_prop_types32.default.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: import_prop_types32.default.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: import_prop_types32.default.number,
  /**
   * exit delay
   */
  timeout: import_prop_types32.default.number.isRequired
} : void 0;
var Ripple_default = Ripple;

// node_modules/@mui/material/ButtonBase/touchRippleClasses.js
init_esm();
init_generateUtilityClass3();
var touchRippleClasses = generateUtilityClasses("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]);
var touchRippleClasses_default = touchRippleClasses;

// node_modules/@mui/material/ButtonBase/TouchRipple.js
var import_jsx_runtime24 = __toESM(require_jsx_runtime());
var _excluded26 = ["center", "classes", "className"];
var _ = (t) => t;
var _t;
var _t2;
var _t3;
var _t4;
var DURATION = 550;
var DELAY_RIPPLE = 80;
var enterKeyframe = keyframes(_t || (_t = _`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`));
var exitKeyframe = keyframes(_t2 || (_t2 = _`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`));
var pulsateKeyframe = keyframes(_t3 || (_t3 = _`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`));
var TouchRippleRoot = styled_default2("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
});
var TouchRippleRipple = styled_default2(Ripple_default, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(_t4 || (_t4 = _`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), touchRippleClasses_default.rippleVisible, enterKeyframe, DURATION, ({
  theme
}) => theme.transitions.easing.easeInOut, touchRippleClasses_default.ripplePulsate, ({
  theme
}) => theme.transitions.duration.shorter, touchRippleClasses_default.child, touchRippleClasses_default.childLeaving, exitKeyframe, DURATION, ({
  theme
}) => theme.transitions.easing.easeInOut, touchRippleClasses_default.childPulsate, pulsateKeyframe, ({
  theme
}) => theme.transitions.easing.easeInOut);
var TouchRipple = React45.forwardRef(function TouchRipple2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTouchRipple"
  });
  const {
    center: centerProp = false,
    classes: classes2 = {},
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded26);
  const [ripples, setRipples] = React45.useState([]);
  const nextKey = React45.useRef(0);
  const rippleCallback = React45.useRef(null);
  React45.useEffect(() => {
    if (rippleCallback.current) {
      rippleCallback.current();
      rippleCallback.current = null;
    }
  }, [ripples]);
  const ignoringMouseDown = React45.useRef(false);
  const startTimer = React45.useRef(0);
  const startTimerCommit = React45.useRef(null);
  const container = React45.useRef(null);
  React45.useEffect(() => {
    return () => {
      if (startTimer.current) {
        clearTimeout(startTimer.current);
      }
    };
  }, []);
  const startCommit = React45.useCallback((params) => {
    const {
      pulsate: pulsate2,
      rippleX,
      rippleY,
      rippleSize,
      cb
    } = params;
    setRipples((oldRipples) => [...oldRipples, (0, import_jsx_runtime24.jsx)(TouchRippleRipple, {
      classes: {
        ripple: clsx_default2(classes2.ripple, touchRippleClasses_default.ripple),
        rippleVisible: clsx_default2(classes2.rippleVisible, touchRippleClasses_default.rippleVisible),
        ripplePulsate: clsx_default2(classes2.ripplePulsate, touchRippleClasses_default.ripplePulsate),
        child: clsx_default2(classes2.child, touchRippleClasses_default.child),
        childLeaving: clsx_default2(classes2.childLeaving, touchRippleClasses_default.childLeaving),
        childPulsate: clsx_default2(classes2.childPulsate, touchRippleClasses_default.childPulsate)
      },
      timeout: DURATION,
      pulsate: pulsate2,
      rippleX,
      rippleY,
      rippleSize
    }, nextKey.current)]);
    nextKey.current += 1;
    rippleCallback.current = cb;
  }, [classes2]);
  const start2 = React45.useCallback((event = {}, options = {}, cb = () => {
  }) => {
    const {
      pulsate: pulsate2 = false,
      center = centerProp || options.pulsate,
      fakeElement = false
      // For test purposes
    } = options;
    if ((event == null ? void 0 : event.type) === "mousedown" && ignoringMouseDown.current) {
      ignoringMouseDown.current = false;
      return;
    }
    if ((event == null ? void 0 : event.type) === "touchstart") {
      ignoringMouseDown.current = true;
    }
    const element = fakeElement ? null : container.current;
    const rect = element ? element.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let rippleX;
    let rippleY;
    let rippleSize;
    if (center || event === void 0 || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
      rippleX = Math.round(rect.width / 2);
      rippleY = Math.round(rect.height / 2);
    } else {
      const {
        clientX,
        clientY
      } = event.touches && event.touches.length > 0 ? event.touches[0] : event;
      rippleX = Math.round(clientX - rect.left);
      rippleY = Math.round(clientY - rect.top);
    }
    if (center) {
      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);
      if (rippleSize % 2 === 0) {
        rippleSize += 1;
      }
    } else {
      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);
    }
    if (event != null && event.touches) {
      if (startTimerCommit.current === null) {
        startTimerCommit.current = () => {
          startCommit({
            pulsate: pulsate2,
            rippleX,
            rippleY,
            rippleSize,
            cb
          });
        };
        startTimer.current = setTimeout(() => {
          if (startTimerCommit.current) {
            startTimerCommit.current();
            startTimerCommit.current = null;
          }
        }, DELAY_RIPPLE);
      }
    } else {
      startCommit({
        pulsate: pulsate2,
        rippleX,
        rippleY,
        rippleSize,
        cb
      });
    }
  }, [centerProp, startCommit]);
  const pulsate = React45.useCallback(() => {
    start2({}, {
      pulsate: true
    });
  }, [start2]);
  const stop = React45.useCallback((event, cb) => {
    clearTimeout(startTimer.current);
    if ((event == null ? void 0 : event.type) === "touchend" && startTimerCommit.current) {
      startTimerCommit.current();
      startTimerCommit.current = null;
      startTimer.current = setTimeout(() => {
        stop(event, cb);
      });
      return;
    }
    startTimerCommit.current = null;
    setRipples((oldRipples) => {
      if (oldRipples.length > 0) {
        return oldRipples.slice(1);
      }
      return oldRipples;
    });
    rippleCallback.current = cb;
  }, []);
  React45.useImperativeHandle(ref, () => ({
    pulsate,
    start: start2,
    stop
  }), [pulsate, start2, stop]);
  return (0, import_jsx_runtime24.jsx)(TouchRippleRoot, _extends({
    className: clsx_default2(touchRippleClasses_default.root, classes2.root, className),
    ref: container
  }, other, {
    children: (0, import_jsx_runtime24.jsx)(TransitionGroup_default, {
      component: null,
      exit: true,
      children: ripples
    })
  }));
});
true ? TouchRipple.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: import_prop_types33.default.bool,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types33.default.object,
  /**
   * @ignore
   */
  className: import_prop_types33.default.string
} : void 0;
var TouchRipple_default = TouchRipple;

// node_modules/@mui/material/ButtonBase/buttonBaseClasses.js
init_esm();
init_generateUtilityClass3();
function getButtonBaseUtilityClass(slot) {
  return generateUtilityClass("MuiButtonBase", slot);
}
var buttonBaseClasses = generateUtilityClasses("MuiButtonBase", ["root", "disabled", "focusVisible"]);
var buttonBaseClasses_default = buttonBaseClasses;

// node_modules/@mui/material/ButtonBase/ButtonBase.js
var import_jsx_runtime25 = __toESM(require_jsx_runtime());
var import_jsx_runtime26 = __toESM(require_jsx_runtime());
var _excluded27 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"];
var useUtilityClasses8 = (ownerState) => {
  const {
    disabled,
    focusVisible,
    focusVisibleClassName,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible"]
  };
  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes2);
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += ` ${focusVisibleClassName}`;
  }
  return composedClasses;
};
var ButtonBaseRoot = styled_default2("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${buttonBaseClasses_default.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
});
var ButtonBase = React46.forwardRef(function ButtonBase2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiButtonBase"
  });
  const {
    action,
    centerRipple = false,
    children: children2,
    className,
    component = "button",
    disabled = false,
    disableRipple = false,
    disableTouchRipple = false,
    focusRipple = false,
    LinkComponent = "a",
    onBlur,
    onClick,
    onContextMenu,
    onDragLeave,
    onFocus,
    onFocusVisible,
    onKeyDown,
    onKeyUp,
    onMouseDown,
    onMouseLeave,
    onMouseUp,
    onTouchEnd,
    onTouchMove,
    onTouchStart,
    tabIndex = 0,
    TouchRippleProps,
    touchRippleRef,
    type
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded27);
  const buttonRef = React46.useRef(null);
  const rippleRef = React46.useRef(null);
  const handleRippleRef = useForkRef_default(rippleRef, touchRippleRef);
  const {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible_default();
  const [focusVisible, setFocusVisible] = React46.useState(false);
  if (disabled && focusVisible) {
    setFocusVisible(false);
  }
  React46.useImperativeHandle(action, () => ({
    focusVisible: () => {
      setFocusVisible(true);
      buttonRef.current.focus();
    }
  }), []);
  const [mountedState, setMountedState] = React46.useState(false);
  React46.useEffect(() => {
    setMountedState(true);
  }, []);
  const enableTouchRipple = mountedState && !disableRipple && !disabled;
  React46.useEffect(() => {
    if (focusVisible && focusRipple && !disableRipple && mountedState) {
      rippleRef.current.pulsate();
    }
  }, [disableRipple, focusRipple, focusVisible, mountedState]);
  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {
    return useEventCallback_default2((event) => {
      if (eventCallback) {
        eventCallback(event);
      }
      const ignore = skipRippleAction;
      if (!ignore && rippleRef.current) {
        rippleRef.current[rippleAction](event);
      }
      return true;
    });
  }
  const handleMouseDown = useRippleHandler("start", onMouseDown);
  const handleContextMenu = useRippleHandler("stop", onContextMenu);
  const handleDragLeave = useRippleHandler("stop", onDragLeave);
  const handleMouseUp = useRippleHandler("stop", onMouseUp);
  const handleMouseLeave = useRippleHandler("stop", (event) => {
    if (focusVisible) {
      event.preventDefault();
    }
    if (onMouseLeave) {
      onMouseLeave(event);
    }
  });
  const handleTouchStart = useRippleHandler("start", onTouchStart);
  const handleTouchEnd = useRippleHandler("stop", onTouchEnd);
  const handleTouchMove = useRippleHandler("stop", onTouchMove);
  const handleBlur2 = useRippleHandler("stop", (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event);
    }
  }, false);
  const handleFocus = useEventCallback_default2((event) => {
    if (!buttonRef.current) {
      buttonRef.current = event.currentTarget;
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
      if (onFocusVisible) {
        onFocusVisible(event);
      }
    }
    if (onFocus) {
      onFocus(event);
    }
  });
  const isNonNativeButton = () => {
    const button = buttonRef.current;
    return component && component !== "button" && !(button.tagName === "A" && button.href);
  };
  const keydownRef = React46.useRef(false);
  const handleKeyDown3 = useEventCallback_default2((event) => {
    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === " ") {
      keydownRef.current = true;
      rippleRef.current.stop(event, () => {
        rippleRef.current.start(event);
      });
    }
    if (event.target === event.currentTarget && isNonNativeButton() && event.key === " ") {
      event.preventDefault();
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
    if (event.target === event.currentTarget && isNonNativeButton() && event.key === "Enter" && !disabled) {
      event.preventDefault();
      if (onClick) {
        onClick(event);
      }
    }
  });
  const handleKeyUp = useEventCallback_default2((event) => {
    if (focusRipple && event.key === " " && rippleRef.current && focusVisible && !event.defaultPrevented) {
      keydownRef.current = false;
      rippleRef.current.stop(event, () => {
        rippleRef.current.pulsate(event);
      });
    }
    if (onKeyUp) {
      onKeyUp(event);
    }
    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === " " && !event.defaultPrevented) {
      onClick(event);
    }
  });
  let ComponentProp = component;
  if (ComponentProp === "button" && (other.href || other.to)) {
    ComponentProp = LinkComponent;
  }
  const buttonProps = {};
  if (ComponentProp === "button") {
    buttonProps.type = type === void 0 ? "button" : type;
    buttonProps.disabled = disabled;
  } else {
    if (!other.href && !other.to) {
      buttonProps.role = "button";
    }
    if (disabled) {
      buttonProps["aria-disabled"] = disabled;
    }
  }
  const handleRef = useForkRef_default(ref, focusVisibleRef, buttonRef);
  if (true) {
    React46.useEffect(() => {
      if (enableTouchRipple && !rippleRef.current) {
        console.error(["MUI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join("\n"));
      }
    }, [enableTouchRipple]);
  }
  const ownerState = _extends({}, props, {
    centerRipple,
    component,
    disabled,
    disableRipple,
    disableTouchRipple,
    focusRipple,
    tabIndex,
    focusVisible
  });
  const classes2 = useUtilityClasses8(ownerState);
  return (0, import_jsx_runtime26.jsxs)(ButtonBaseRoot, _extends({
    as: ComponentProp,
    className: clsx_default2(classes2.root, className),
    ownerState,
    onBlur: handleBlur2,
    onClick,
    onContextMenu: handleContextMenu,
    onFocus: handleFocus,
    onKeyDown: handleKeyDown3,
    onKeyUp: handleKeyUp,
    onMouseDown: handleMouseDown,
    onMouseLeave: handleMouseLeave,
    onMouseUp: handleMouseUp,
    onDragLeave: handleDragLeave,
    onTouchEnd: handleTouchEnd,
    onTouchMove: handleTouchMove,
    onTouchStart: handleTouchStart,
    ref: handleRef,
    tabIndex: disabled ? -1 : tabIndex,
    type
  }, buttonProps, other, {
    children: [children2, enableTouchRipple ? (
      /* TouchRipple is only needed client-side, x2 boost on the server. */
      (0, import_jsx_runtime25.jsx)(TouchRipple_default, _extends({
        ref: handleRippleRef,
        center: centerRipple
      }, TouchRippleProps))
    ) : null]
  }));
});
true ? ButtonBase.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: refType_default,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: import_prop_types34.default.bool,
  /**
   * The content of the component.
   */
  children: import_prop_types34.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types34.default.object,
  /**
   * @ignore
   */
  className: import_prop_types34.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: elementTypeAcceptingRef_default,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types34.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: import_prop_types34.default.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: import_prop_types34.default.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: import_prop_types34.default.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: import_prop_types34.default.string,
  /**
   * @ignore
   */
  href: import_prop_types34.default.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: import_prop_types34.default.elementType,
  /**
   * @ignore
   */
  onBlur: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onClick: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onContextMenu: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onDragLeave: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types34.default.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onKeyDown: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onKeyUp: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onMouseDown: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onMouseLeave: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onMouseUp: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onTouchEnd: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onTouchMove: import_prop_types34.default.func,
  /**
   * @ignore
   */
  onTouchStart: import_prop_types34.default.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types34.default.oneOfType([import_prop_types34.default.arrayOf(import_prop_types34.default.oneOfType([import_prop_types34.default.func, import_prop_types34.default.object, import_prop_types34.default.bool])), import_prop_types34.default.func, import_prop_types34.default.object]),
  /**
   * @default 0
   */
  tabIndex: import_prop_types34.default.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: import_prop_types34.default.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: import_prop_types34.default.oneOfType([import_prop_types34.default.func, import_prop_types34.default.shape({
    current: import_prop_types34.default.shape({
      pulsate: import_prop_types34.default.func.isRequired,
      start: import_prop_types34.default.func.isRequired,
      stop: import_prop_types34.default.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: import_prop_types34.default.oneOfType([import_prop_types34.default.oneOf(["button", "reset", "submit"]), import_prop_types34.default.string])
} : void 0;
var ButtonBase_default = ButtonBase;

// node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js
init_esm();
init_generateUtilityClass3();
function getAccordionSummaryUtilityClass(slot) {
  return generateUtilityClass("MuiAccordionSummary", slot);
}
var accordionSummaryClasses = generateUtilityClasses("MuiAccordionSummary", ["root", "expanded", "focusVisible", "disabled", "gutters", "contentGutters", "content", "expandIconWrapper"]);
var accordionSummaryClasses_default = accordionSummaryClasses;

// node_modules/@mui/material/AccordionSummary/AccordionSummary.js
var import_jsx_runtime27 = __toESM(require_jsx_runtime());
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
var _excluded28 = ["children", "className", "expandIcon", "focusVisibleClassName", "onClick"];
var useUtilityClasses9 = (ownerState) => {
  const {
    classes: classes2,
    expanded,
    disabled,
    disableGutters
  } = ownerState;
  const slots = {
    root: ["root", expanded && "expanded", disabled && "disabled", !disableGutters && "gutters"],
    focusVisible: ["focusVisible"],
    content: ["content", expanded && "expanded", !disableGutters && "contentGutters"],
    expandIconWrapper: ["expandIconWrapper", expanded && "expanded"]
  };
  return composeClasses(slots, getAccordionSummaryUtilityClass, classes2);
};
var AccordionSummaryRoot = styled_default2(ButtonBase_default, {
  name: "MuiAccordionSummary",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(({
  theme,
  ownerState
}) => {
  const transition = {
    duration: theme.transitions.duration.shortest
  };
  return _extends({
    display: "flex",
    minHeight: 48,
    padding: theme.spacing(0, 2),
    transition: theme.transitions.create(["min-height", "background-color"], transition),
    [`&.${accordionSummaryClasses_default.focusVisible}`]: {
      backgroundColor: (theme.vars || theme).palette.action.focus
    },
    [`&.${accordionSummaryClasses_default.disabled}`]: {
      opacity: (theme.vars || theme).palette.action.disabledOpacity
    },
    [`&:hover:not(.${accordionSummaryClasses_default.disabled})`]: {
      cursor: "pointer"
    }
  }, !ownerState.disableGutters && {
    [`&.${accordionSummaryClasses_default.expanded}`]: {
      minHeight: 64
    }
  });
});
var AccordionSummaryContent = styled_default2("div", {
  name: "MuiAccordionSummary",
  slot: "Content",
  overridesResolver: (props, styles7) => styles7.content
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  flexGrow: 1,
  margin: "12px 0"
}, !ownerState.disableGutters && {
  transition: theme.transitions.create(["margin"], {
    duration: theme.transitions.duration.shortest
  }),
  [`&.${accordionSummaryClasses_default.expanded}`]: {
    margin: "20px 0"
  }
}));
var AccordionSummaryExpandIconWrapper = styled_default2("div", {
  name: "MuiAccordionSummary",
  slot: "ExpandIconWrapper",
  overridesResolver: (props, styles7) => styles7.expandIconWrapper
})(({
  theme
}) => ({
  display: "flex",
  color: (theme.vars || theme).palette.action.active,
  transform: "rotate(0deg)",
  transition: theme.transitions.create("transform", {
    duration: theme.transitions.duration.shortest
  }),
  [`&.${accordionSummaryClasses_default.expanded}`]: {
    transform: "rotate(180deg)"
  }
}));
var AccordionSummary = React47.forwardRef(function AccordionSummary2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAccordionSummary"
  });
  const {
    children: children2,
    className,
    expandIcon,
    focusVisibleClassName,
    onClick
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded28);
  const {
    disabled = false,
    disableGutters,
    expanded,
    toggle
  } = React47.useContext(AccordionContext_default);
  const handleChange = (event) => {
    if (toggle) {
      toggle(event);
    }
    if (onClick) {
      onClick(event);
    }
  };
  const ownerState = _extends({}, props, {
    expanded,
    disabled,
    disableGutters
  });
  const classes2 = useUtilityClasses9(ownerState);
  return (0, import_jsx_runtime28.jsxs)(AccordionSummaryRoot, _extends({
    focusRipple: false,
    disableRipple: true,
    disabled,
    component: "div",
    "aria-expanded": expanded,
    className: clsx_default2(classes2.root, className),
    focusVisibleClassName: clsx_default2(classes2.focusVisible, focusVisibleClassName),
    onClick: handleChange,
    ref,
    ownerState
  }, other, {
    children: [(0, import_jsx_runtime27.jsx)(AccordionSummaryContent, {
      className: classes2.content,
      ownerState,
      children: children2
    }), expandIcon && (0, import_jsx_runtime27.jsx)(AccordionSummaryExpandIconWrapper, {
      className: classes2.expandIconWrapper,
      ownerState,
      children: expandIcon
    })]
  }));
});
true ? AccordionSummary.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types35.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types35.default.object,
  /**
   * @ignore
   */
  className: import_prop_types35.default.string,
  /**
   * The icon to display as the expand indicator.
   */
  expandIcon: import_prop_types35.default.node,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: import_prop_types35.default.string,
  /**
   * @ignore
   */
  onClick: import_prop_types35.default.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types35.default.oneOfType([import_prop_types35.default.arrayOf(import_prop_types35.default.oneOfType([import_prop_types35.default.func, import_prop_types35.default.object, import_prop_types35.default.bool])), import_prop_types35.default.func, import_prop_types35.default.object])
} : void 0;
var AccordionSummary_default = AccordionSummary;

// node_modules/@mui/material/Alert/Alert.js
init_objectWithoutPropertiesLoose();
init_extends();
var React54 = __toESM(require_react());
var import_prop_types37 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/Alert/alertClasses.js
init_esm();
init_generateUtilityClass3();
function getAlertUtilityClass(slot) {
  return generateUtilityClass("MuiAlert", slot);
}
var alertClasses = generateUtilityClasses("MuiAlert", ["root", "action", "icon", "message", "filled", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]);
var alertClasses_default = alertClasses;

// node_modules/@mui/material/IconButton/IconButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React48 = __toESM(require_react());
var import_prop_types36 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_esm2();
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/IconButton/iconButtonClasses.js
init_esm();
init_generateUtilityClass3();
function getIconButtonUtilityClass(slot) {
  return generateUtilityClass("MuiIconButton", slot);
}
var iconButtonClasses = generateUtilityClasses("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge"]);
var iconButtonClasses_default = iconButtonClasses;

// node_modules/@mui/material/IconButton/IconButton.js
var import_jsx_runtime29 = __toESM(require_jsx_runtime());
var _excluded29 = ["edge", "children", "className", "color", "disabled", "disableFocusRipple", "size"];
var useUtilityClasses10 = (ownerState) => {
  const {
    classes: classes2,
    disabled,
    color: color2,
    edge,
    size: size2
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", color2 !== "default" && `color${capitalize_default(color2)}`, edge && `edge${capitalize_default(edge)}`, `size${capitalize_default(size2)}`]
  };
  return composeClasses(slots, getIconButtonUtilityClass, classes2);
};
var IconButtonRoot = styled_default2(ButtonBase_default, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.color !== "default" && styles7[`color${capitalize_default(ownerState.color)}`], ownerState.edge && styles7[`edge${capitalize_default(ownerState.edge)}`], styles7[`size${capitalize_default(ownerState.size)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: theme.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  overflow: "visible",
  // Explicitly set the default value to solve a bug on IE11.
  color: (theme.vars || theme).palette.action.active,
  transition: theme.transitions.create("background-color", {
    duration: theme.transitions.duration.shortest
  })
}, !ownerState.disableRipple && {
  "&:hover": {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, ownerState.edge === "start" && {
  marginLeft: ownerState.size === "small" ? -3 : -12
}, ownerState.edge === "end" && {
  marginRight: ownerState.size === "small" ? -3 : -12
}), ({
  theme,
  ownerState
}) => {
  var _palette;
  const palette2 = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];
  return _extends({}, ownerState.color === "inherit" && {
    color: "inherit"
  }, ownerState.color !== "inherit" && ownerState.color !== "default" && _extends({
    color: palette2 == null ? void 0 : palette2.main
  }, !ownerState.disableRipple && {
    "&:hover": _extends({}, palette2 && {
      backgroundColor: theme.vars ? `rgba(${palette2.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette2.main, theme.palette.action.hoverOpacity)
    }, {
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    })
  }), ownerState.size === "small" && {
    padding: 5,
    fontSize: theme.typography.pxToRem(18)
  }, ownerState.size === "large" && {
    padding: 12,
    fontSize: theme.typography.pxToRem(28)
  }, {
    [`&.${iconButtonClasses_default.disabled}`]: {
      backgroundColor: "transparent",
      color: (theme.vars || theme).palette.action.disabled
    }
  });
});
var IconButton = React48.forwardRef(function IconButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiIconButton"
  });
  const {
    edge = false,
    children: children2,
    className,
    color: color2 = "default",
    disabled = false,
    disableFocusRipple = false,
    size: size2 = "medium"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded29);
  const ownerState = _extends({}, props, {
    edge,
    color: color2,
    disabled,
    disableFocusRipple,
    size: size2
  });
  const classes2 = useUtilityClasses10(ownerState);
  return (0, import_jsx_runtime29.jsx)(IconButtonRoot, _extends({
    className: clsx_default2(classes2.root, className),
    centerRipple: true,
    focusRipple: !disableFocusRipple,
    disabled,
    ref,
    ownerState
  }, other, {
    children: children2
  }));
});
true ? IconButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The icon to display.
   */
  children: chainPropTypes(import_prop_types36.default.node, (props) => {
    const found = React48.Children.toArray(props.children).some((child) => React48.isValidElement(child) && child.props.onClick);
    if (found) {
      return new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join("\n"));
    }
    return null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types36.default.object,
  /**
   * @ignore
   */
  className: import_prop_types36.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'default'
   */
  color: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types36.default.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types36.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types36.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: import_prop_types36.default.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: import_prop_types36.default.oneOf(["end", "start", false]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["small", "medium", "large"]), import_prop_types36.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types36.default.oneOfType([import_prop_types36.default.arrayOf(import_prop_types36.default.oneOfType([import_prop_types36.default.func, import_prop_types36.default.object, import_prop_types36.default.bool])), import_prop_types36.default.func, import_prop_types36.default.object])
} : void 0;
var IconButton_default = IconButton;

// node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js
var React49 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime30 = __toESM(require_jsx_runtime());
var SuccessOutlined_default = createSvgIcon((0, import_jsx_runtime30.jsx)("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined");

// node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js
var React50 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime31 = __toESM(require_jsx_runtime());
var ReportProblemOutlined_default = createSvgIcon((0, import_jsx_runtime31.jsx)("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined");

// node_modules/@mui/material/internal/svg-icons/ErrorOutline.js
var React51 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime32 = __toESM(require_jsx_runtime());
var ErrorOutline_default = createSvgIcon((0, import_jsx_runtime32.jsx)("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline");

// node_modules/@mui/material/internal/svg-icons/InfoOutlined.js
var React52 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime33 = __toESM(require_jsx_runtime());
var InfoOutlined_default = createSvgIcon((0, import_jsx_runtime33.jsx)("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined");

// node_modules/@mui/material/internal/svg-icons/Close.js
var React53 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime34 = __toESM(require_jsx_runtime());
var Close_default = createSvgIcon((0, import_jsx_runtime34.jsx)("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close");

// node_modules/@mui/material/Alert/Alert.js
var import_jsx_runtime35 = __toESM(require_jsx_runtime());
var import_jsx_runtime36 = __toESM(require_jsx_runtime());
var _excluded30 = ["action", "children", "className", "closeText", "color", "components", "componentsProps", "icon", "iconMapping", "onClose", "role", "severity", "slotProps", "slots", "variant"];
var useUtilityClasses11 = (ownerState) => {
  const {
    variant,
    color: color2,
    severity,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", `${variant}${capitalize_default(color2 || severity)}`, `${variant}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return composeClasses(slots, getAlertUtilityClass, classes2);
};
var AlertRoot = styled_default2(Paper_default, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant], styles7[`${ownerState.variant}${capitalize_default(ownerState.color || ownerState.severity)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  const getColor = theme.palette.mode === "light" ? darken : lighten;
  const getBackgroundColor = theme.palette.mode === "light" ? lighten : darken;
  const color2 = ownerState.color || ownerState.severity;
  return _extends({}, theme.typography.body2, {
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px"
  }, color2 && ownerState.variant === "standard" && {
    color: theme.vars ? theme.vars.palette.Alert[`${color2}Color`] : getColor(theme.palette[color2].light, 0.6),
    backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color2}StandardBg`] : getBackgroundColor(theme.palette[color2].light, 0.9),
    [`& .${alertClasses_default.icon}`]: theme.vars ? {
      color: theme.vars.palette.Alert[`${color2}IconColor`]
    } : {
      color: theme.palette[color2].main
    }
  }, color2 && ownerState.variant === "outlined" && {
    color: theme.vars ? theme.vars.palette.Alert[`${color2}Color`] : getColor(theme.palette[color2].light, 0.6),
    border: `1px solid ${(theme.vars || theme).palette[color2].light}`,
    [`& .${alertClasses_default.icon}`]: theme.vars ? {
      color: theme.vars.palette.Alert[`${color2}IconColor`]
    } : {
      color: theme.palette[color2].main
    }
  }, color2 && ownerState.variant === "filled" && _extends({
    fontWeight: theme.typography.fontWeightMedium
  }, theme.vars ? {
    color: theme.vars.palette.Alert[`${color2}FilledColor`],
    backgroundColor: theme.vars.palette.Alert[`${color2}FilledBg`]
  } : {
    backgroundColor: theme.palette.mode === "dark" ? theme.palette[color2].dark : theme.palette[color2].main,
    color: theme.palette.getContrastText(theme.palette[color2].main)
  }));
});
var AlertIcon = styled_default2("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (props, styles7) => styles7.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
});
var AlertMessage = styled_default2("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (props, styles7) => styles7.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
});
var AlertAction = styled_default2("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (props, styles7) => styles7.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
});
var defaultIconMapping = {
  success: (0, import_jsx_runtime35.jsx)(SuccessOutlined_default, {
    fontSize: "inherit"
  }),
  warning: (0, import_jsx_runtime35.jsx)(ReportProblemOutlined_default, {
    fontSize: "inherit"
  }),
  error: (0, import_jsx_runtime35.jsx)(ErrorOutline_default, {
    fontSize: "inherit"
  }),
  info: (0, import_jsx_runtime35.jsx)(InfoOutlined_default, {
    fontSize: "inherit"
  })
};
var Alert = React54.forwardRef(function Alert2(inProps, ref) {
  var _ref2, _slots$closeButton, _ref22, _slots$closeIcon, _slotProps$closeButto, _slotProps$closeIcon;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAlert"
  });
  const {
    action,
    children: children2,
    className,
    closeText = "Close",
    color: color2,
    components = {},
    componentsProps = {},
    icon,
    iconMapping = defaultIconMapping,
    onClose,
    role = "alert",
    severity = "success",
    slotProps = {},
    slots = {},
    variant = "standard"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded30);
  const ownerState = _extends({}, props, {
    color: color2,
    severity,
    variant
  });
  const classes2 = useUtilityClasses11(ownerState);
  const AlertCloseButton = (_ref2 = (_slots$closeButton = slots.closeButton) != null ? _slots$closeButton : components.CloseButton) != null ? _ref2 : IconButton_default;
  const AlertCloseIcon = (_ref22 = (_slots$closeIcon = slots.closeIcon) != null ? _slots$closeIcon : components.CloseIcon) != null ? _ref22 : Close_default;
  const closeButtonProps = (_slotProps$closeButto = slotProps.closeButton) != null ? _slotProps$closeButto : componentsProps.closeButton;
  const closeIconProps = (_slotProps$closeIcon = slotProps.closeIcon) != null ? _slotProps$closeIcon : componentsProps.closeIcon;
  return (0, import_jsx_runtime36.jsxs)(AlertRoot, _extends({
    role,
    elevation: 0,
    ownerState,
    className: clsx_default2(classes2.root, className),
    ref
  }, other, {
    children: [icon !== false ? (0, import_jsx_runtime35.jsx)(AlertIcon, {
      ownerState,
      className: classes2.icon,
      children: icon || iconMapping[severity] || defaultIconMapping[severity]
    }) : null, (0, import_jsx_runtime35.jsx)(AlertMessage, {
      ownerState,
      className: classes2.message,
      children: children2
    }), action != null ? (0, import_jsx_runtime35.jsx)(AlertAction, {
      ownerState,
      className: classes2.action,
      children: action
    }) : null, action == null && onClose ? (0, import_jsx_runtime35.jsx)(AlertAction, {
      ownerState,
      className: classes2.action,
      children: (0, import_jsx_runtime35.jsx)(AlertCloseButton, _extends({
        size: "small",
        "aria-label": closeText,
        title: closeText,
        color: "inherit",
        onClick: onClose
      }, closeButtonProps, {
        children: (0, import_jsx_runtime35.jsx)(AlertCloseIcon, _extends({
          fontSize: "small"
        }, closeIconProps))
      }))
    }) : null]
  }));
});
true ? Alert.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: import_prop_types37.default.node,
  /**
   * The content of the component.
   */
  children: import_prop_types37.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types37.default.object,
  /**
   * @ignore
   */
  className: import_prop_types37.default.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: import_prop_types37.default.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   */
  color: import_prop_types37.default.oneOfType([import_prop_types37.default.oneOf(["error", "info", "success", "warning"]), import_prop_types37.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types37.default.shape({
    CloseButton: import_prop_types37.default.elementType,
    CloseIcon: import_prop_types37.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types37.default.shape({
    closeButton: import_prop_types37.default.object,
    closeIcon: import_prop_types37.default.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: import_prop_types37.default.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: import_prop_types37.default.shape({
    error: import_prop_types37.default.node,
    info: import_prop_types37.default.node,
    success: import_prop_types37.default.node,
    warning: import_prop_types37.default.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: import_prop_types37.default.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: import_prop_types37.default.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: import_prop_types37.default.oneOf(["error", "info", "success", "warning"]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types37.default.shape({
    closeButton: import_prop_types37.default.object,
    closeIcon: import_prop_types37.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types37.default.shape({
    closeButton: import_prop_types37.default.elementType,
    closeIcon: import_prop_types37.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types37.default.oneOfType([import_prop_types37.default.arrayOf(import_prop_types37.default.oneOfType([import_prop_types37.default.func, import_prop_types37.default.object, import_prop_types37.default.bool])), import_prop_types37.default.func, import_prop_types37.default.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: import_prop_types37.default.oneOfType([import_prop_types37.default.oneOf(["filled", "outlined", "standard"]), import_prop_types37.default.string])
} : void 0;
var Alert_default = Alert;

// node_modules/@mui/material/AlertTitle/AlertTitle.js
init_extends();
init_objectWithoutPropertiesLoose();
var React56 = __toESM(require_react());
var import_prop_types39 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Typography/Typography.js
init_objectWithoutPropertiesLoose();
init_extends();
var React55 = __toESM(require_react());
var import_prop_types38 = __toESM(require_prop_types());
init_clsx2();
init_esm2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/Typography/typographyClasses.js
init_esm();
init_generateUtilityClass3();
function getTypographyUtilityClass(slot) {
  return generateUtilityClass("MuiTypography", slot);
}
var typographyClasses = generateUtilityClasses("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);

// node_modules/@mui/material/Typography/Typography.js
var import_jsx_runtime37 = __toESM(require_jsx_runtime());
var _excluded31 = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"];
var useUtilityClasses12 = (ownerState) => {
  const {
    align,
    gutterBottom,
    noWrap,
    paragraph,
    variant,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", variant, ownerState.align !== "inherit" && `align${capitalize_default(align)}`, gutterBottom && "gutterBottom", noWrap && "noWrap", paragraph && "paragraph"]
  };
  return composeClasses(slots, getTypographyUtilityClass, classes2);
};
var TypographyRoot = styled_default2("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.variant && styles7[ownerState.variant], ownerState.align !== "inherit" && styles7[`align${capitalize_default(ownerState.align)}`], ownerState.noWrap && styles7.noWrap, ownerState.gutterBottom && styles7.gutterBottom, ownerState.paragraph && styles7.paragraph];
  }
})(({
  theme,
  ownerState
}) => _extends({
  margin: 0
}, ownerState.variant === "inherit" && {
  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
  font: "inherit"
}, ownerState.variant !== "inherit" && theme.typography[ownerState.variant], ownerState.align !== "inherit" && {
  textAlign: ownerState.align
}, ownerState.noWrap && {
  overflow: "hidden",
  textOverflow: "ellipsis",
  whiteSpace: "nowrap"
}, ownerState.gutterBottom && {
  marginBottom: "0.35em"
}, ownerState.paragraph && {
  marginBottom: 16
}));
var defaultVariantMapping = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
};
var colorTransformations = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
};
var transformDeprecatedColors = (color2) => {
  return colorTransformations[color2] || color2;
};
var Typography = React55.forwardRef(function Typography2(inProps, ref) {
  const themeProps = useThemeProps2({
    props: inProps,
    name: "MuiTypography"
  });
  const color2 = transformDeprecatedColors(themeProps.color);
  const props = extendSxProp(_extends({}, themeProps, {
    color: color2
  }));
  const {
    align = "inherit",
    className,
    component,
    gutterBottom = false,
    noWrap = false,
    paragraph = false,
    variant = "body1",
    variantMapping = defaultVariantMapping
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded31);
  const ownerState = _extends({}, props, {
    align,
    color: color2,
    className,
    component,
    gutterBottom,
    noWrap,
    paragraph,
    variant,
    variantMapping
  });
  const Component2 = component || (paragraph ? "p" : variantMapping[variant] || defaultVariantMapping[variant]) || "span";
  const classes2 = useUtilityClasses12(ownerState);
  return (0, import_jsx_runtime37.jsx)(TypographyRoot, _extends({
    as: Component2,
    ref,
    ownerState,
    className: clsx_default2(classes2.root, className)
  }, other));
});
true ? Typography.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: import_prop_types38.default.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: import_prop_types38.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types38.default.object,
  /**
   * @ignore
   */
  className: import_prop_types38.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types38.default.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: import_prop_types38.default.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: import_prop_types38.default.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   */
  paragraph: import_prop_types38.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types38.default.oneOfType([import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.func, import_prop_types38.default.object, import_prop_types38.default.bool])), import_prop_types38.default.func, import_prop_types38.default.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), import_prop_types38.default.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: import_prop_types38.default.object
} : void 0;
var Typography_default = Typography;

// node_modules/@mui/material/AlertTitle/alertTitleClasses.js
init_esm();
init_generateUtilityClass3();
function getAlertTitleUtilityClass(slot) {
  return generateUtilityClass("MuiAlertTitle", slot);
}
var alertTitleClasses = generateUtilityClasses("MuiAlertTitle", ["root"]);

// node_modules/@mui/material/AlertTitle/AlertTitle.js
var import_jsx_runtime38 = __toESM(require_jsx_runtime());
var _excluded32 = ["className"];
var useUtilityClasses13 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getAlertTitleUtilityClass, classes2);
};
var AlertTitleRoot = styled_default2(Typography_default, {
  name: "MuiAlertTitle",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(({
  theme
}) => {
  return {
    fontWeight: theme.typography.fontWeightMedium,
    marginTop: -2
  };
});
var AlertTitle = React56.forwardRef(function AlertTitle2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAlertTitle"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded32);
  const ownerState = props;
  const classes2 = useUtilityClasses13(ownerState);
  return (0, import_jsx_runtime38.jsx)(AlertTitleRoot, _extends({
    gutterBottom: true,
    component: "div",
    ownerState,
    ref,
    className: clsx_default2(classes2.root, className)
  }, other));
});
true ? AlertTitle.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types39.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types39.default.object,
  /**
   * @ignore
   */
  className: import_prop_types39.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types39.default.oneOfType([import_prop_types39.default.arrayOf(import_prop_types39.default.oneOfType([import_prop_types39.default.func, import_prop_types39.default.object, import_prop_types39.default.bool])), import_prop_types39.default.func, import_prop_types39.default.object])
} : void 0;

// node_modules/@mui/material/AppBar/AppBar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React57 = __toESM(require_react());
var import_prop_types40 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/AppBar/appBarClasses.js
init_esm();
init_generateUtilityClass3();
function getAppBarUtilityClass(slot) {
  return generateUtilityClass("MuiAppBar", slot);
}
var appBarClasses = generateUtilityClasses("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent"]);

// node_modules/@mui/material/AppBar/AppBar.js
var import_jsx_runtime39 = __toESM(require_jsx_runtime());
var _excluded33 = ["className", "color", "enableColorOnDark", "position"];
var useUtilityClasses14 = (ownerState) => {
  const {
    color: color2,
    position: position3,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", `color${capitalize_default(color2)}`, `position${capitalize_default(position3)}`]
  };
  return composeClasses(slots, getAppBarUtilityClass, classes2);
};
var joinVars = (var1, var2) => var1 ? `${var1 == null ? void 0 : var1.replace(")", "")}, ${var2})` : var2;
var AppBarRoot = styled_default2(Paper_default, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`position${capitalize_default(ownerState.position)}`], styles7[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  const backgroundColorDefault = theme.palette.mode === "light" ? theme.palette.grey[100] : theme.palette.grey[900];
  return _extends({
    display: "flex",
    flexDirection: "column",
    width: "100%",
    boxSizing: "border-box",
    // Prevent padding issue with the Modal and fixed positioned AppBar.
    flexShrink: 0
  }, ownerState.position === "fixed" && {
    position: "fixed",
    zIndex: (theme.vars || theme).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0,
    "@media print": {
      // Prevent the app bar to be visible on each printed page.
      position: "absolute"
    }
  }, ownerState.position === "absolute" && {
    position: "absolute",
    zIndex: (theme.vars || theme).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, ownerState.position === "sticky" && {
    // ⚠️ sticky is not supported by IE11.
    position: "sticky",
    zIndex: (theme.vars || theme).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, ownerState.position === "static" && {
    position: "static"
  }, ownerState.position === "relative" && {
    position: "relative"
  }, !theme.vars && _extends({}, ownerState.color === "default" && {
    backgroundColor: backgroundColorDefault,
    color: theme.palette.getContrastText(backgroundColorDefault)
  }, ownerState.color && ownerState.color !== "default" && ownerState.color !== "inherit" && ownerState.color !== "transparent" && {
    backgroundColor: theme.palette[ownerState.color].main,
    color: theme.palette[ownerState.color].contrastText
  }, ownerState.color === "inherit" && {
    color: "inherit"
  }, theme.palette.mode === "dark" && !ownerState.enableColorOnDark && {
    backgroundColor: null,
    color: null
  }, ownerState.color === "transparent" && _extends({
    backgroundColor: "transparent",
    color: "inherit"
  }, theme.palette.mode === "dark" && {
    backgroundImage: "none"
  })), theme.vars && _extends({}, ownerState.color === "default" && {
    "--AppBar-background": ownerState.enableColorOnDark ? theme.vars.palette.AppBar.defaultBg : joinVars(theme.vars.palette.AppBar.darkBg, theme.vars.palette.AppBar.defaultBg),
    "--AppBar-color": ownerState.enableColorOnDark ? theme.vars.palette.text.primary : joinVars(theme.vars.palette.AppBar.darkColor, theme.vars.palette.text.primary)
  }, ownerState.color && !ownerState.color.match(/^(default|inherit|transparent)$/) && {
    "--AppBar-background": ownerState.enableColorOnDark ? theme.vars.palette[ownerState.color].main : joinVars(theme.vars.palette.AppBar.darkBg, theme.vars.palette[ownerState.color].main),
    "--AppBar-color": ownerState.enableColorOnDark ? theme.vars.palette[ownerState.color].contrastText : joinVars(theme.vars.palette.AppBar.darkColor, theme.vars.palette[ownerState.color].contrastText)
  }, {
    backgroundColor: "var(--AppBar-background)",
    color: ownerState.color === "inherit" ? "inherit" : "var(--AppBar-color)"
  }, ownerState.color === "transparent" && {
    backgroundImage: "none",
    backgroundColor: "transparent",
    color: "inherit"
  }));
});
var AppBar = React57.forwardRef(function AppBar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAppBar"
  });
  const {
    className,
    color: color2 = "primary",
    enableColorOnDark = false,
    position: position3 = "fixed"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded33);
  const ownerState = _extends({}, props, {
    color: color2,
    position: position3,
    enableColorOnDark
  });
  const classes2 = useUtilityClasses14(ownerState);
  return (0, import_jsx_runtime39.jsx)(AppBarRoot, _extends({
    square: true,
    component: "header",
    ownerState,
    elevation: 4,
    className: clsx_default2(classes2.root, className, position3 === "fixed" && "mui-fixed"),
    ref
  }, other));
});
true ? AppBar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types40.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types40.default.object,
  /**
   * @ignore
   */
  className: import_prop_types40.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types40.default.oneOfType([import_prop_types40.default.oneOf(["default", "inherit", "primary", "secondary", "transparent"]), import_prop_types40.default.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: import_prop_types40.default.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: import_prop_types40.default.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types40.default.oneOfType([import_prop_types40.default.arrayOf(import_prop_types40.default.oneOfType([import_prop_types40.default.func, import_prop_types40.default.object, import_prop_types40.default.bool])), import_prop_types40.default.func, import_prop_types40.default.object])
} : void 0;
var AppBar_default = AppBar;

// node_modules/@mui/material/Autocomplete/Autocomplete.js
init_objectWithoutPropertiesLoose();
init_extends();
var React136 = __toESM(require_react());
var import_prop_types74 = __toESM(require_prop_types());
init_clsx2();
init_esm();

// node_modules/@mui/base/utils/appendOwnerState.js
init_extends();

// node_modules/@mui/base/utils/isHostComponent.js
function isHostComponent(element) {
  return typeof element === "string";
}

// node_modules/@mui/base/utils/appendOwnerState.js
function appendOwnerState(elementType, otherProps, ownerState) {
  if (elementType === void 0 || isHostComponent(elementType)) {
    return otherProps;
  }
  return _extends({}, otherProps, {
    ownerState: _extends({}, otherProps.ownerState, ownerState)
  });
}

// node_modules/@mui/base/utils/areArraysEqual.js
function areArraysEqual(array1, array2, itemComparer = (a, b) => a === b) {
  return array1.length === array2.length && array1.every((value, index2) => itemComparer(value, array2[index2]));
}

// node_modules/@mui/base/utils/ClassNameConfigurator.js
var React58 = __toESM(require_react());
var import_jsx_runtime40 = __toESM(require_jsx_runtime());
var defaultContextValue = {
  disableDefaultClasses: false
};
var ClassNameConfiguratorContext = React58.createContext(defaultContextValue);
function useClassNamesOverride(generateUtilityClass2) {
  const {
    disableDefaultClasses
  } = React58.useContext(ClassNameConfiguratorContext);
  return (slot) => {
    if (disableDefaultClasses) {
      return "";
    }
    return generateUtilityClass2(slot);
  };
}

// node_modules/@mui/base/utils/extractEventHandlers.js
function extractEventHandlers(object, excludeKeys = []) {
  if (object === void 0) {
    return {};
  }
  const result = {};
  Object.keys(object).filter((prop) => prop.match(/^on[A-Z]/) && typeof object[prop] === "function" && !excludeKeys.includes(prop)).forEach((prop) => {
    result[prop] = object[prop];
  });
  return result;
}

// node_modules/@mui/base/utils/resolveComponentProps.js
function resolveComponentProps(componentProps, ownerState, slotState) {
  if (typeof componentProps === "function") {
    return componentProps(ownerState, slotState);
  }
  return componentProps;
}

// node_modules/@mui/base/utils/useSlotProps.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();

// node_modules/@mui/base/utils/mergeSlotProps.js
init_extends();

// node_modules/@mui/base/node_modules/clsx/dist/clsx.mjs
function r3(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e)
    n += e;
  else if ("object" == typeof e)
    if (Array.isArray(e))
      for (t = 0; t < e.length; t++)
        e[t] && (f = r3(e[t])) && (n && (n += " "), n += f);
    else
      for (t in e)
        e[t] && (n && (n += " "), n += t);
  return n;
}
function clsx3() {
  for (var e, t, f = 0, n = ""; f < arguments.length; )
    (e = arguments[f++]) && (t = r3(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_default3 = clsx3;

// node_modules/@mui/base/utils/omitEventHandlers.js
function omitEventHandlers(object) {
  if (object === void 0) {
    return {};
  }
  const result = {};
  Object.keys(object).filter((prop) => !(prop.match(/^on[A-Z]/) && typeof object[prop] === "function")).forEach((prop) => {
    result[prop] = object[prop];
  });
  return result;
}

// node_modules/@mui/base/utils/mergeSlotProps.js
function mergeSlotProps(parameters) {
  const {
    getSlotProps,
    additionalProps,
    externalSlotProps,
    externalForwardedProps,
    className
  } = parameters;
  if (!getSlotProps) {
    const joinedClasses2 = clsx_default3(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);
    const mergedStyle2 = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);
    const props2 = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);
    if (joinedClasses2.length > 0) {
      props2.className = joinedClasses2;
    }
    if (Object.keys(mergedStyle2).length > 0) {
      props2.style = mergedStyle2;
    }
    return {
      props: props2,
      internalRef: void 0
    };
  }
  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));
  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);
  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);
  const internalSlotProps = getSlotProps(eventHandlers);
  const joinedClasses = clsx_default3(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);
  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);
  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);
  if (joinedClasses.length > 0) {
    props.className = joinedClasses;
  }
  if (Object.keys(mergedStyle).length > 0) {
    props.style = mergedStyle;
  }
  return {
    props,
    internalRef: internalSlotProps.ref
  };
}

// node_modules/@mui/base/utils/useSlotProps.js
var _excluded34 = ["elementType", "externalSlotProps", "ownerState", "skipResolvingSlotProps"];
function useSlotProps(parameters) {
  var _parameters$additiona;
  const {
    elementType,
    externalSlotProps,
    ownerState,
    skipResolvingSlotProps = false
  } = parameters, rest = _objectWithoutPropertiesLoose(parameters, _excluded34);
  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);
  const {
    props: mergedProps,
    internalRef
  } = mergeSlotProps(_extends({}, rest, {
    externalSlotProps: resolvedComponentsProps
  }));
  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);
  const props = appendOwnerState(elementType, _extends({}, mergedProps, {
    ref
  }), ownerState);
  return props;
}

// node_modules/@mui/base/utils/prepareForSlot.js
init_extends();
init_objectWithoutPropertiesLoose();
var React59 = __toESM(require_react());

// node_modules/@mui/base/Badge/Badge.js
init_extends();
init_objectWithoutPropertiesLoose();
var React60 = __toESM(require_react());
var import_prop_types41 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/base/useBadge/useBadge.js
init_esm();
function useBadge(parameters) {
  const {
    badgeContent: badgeContentProp,
    invisible: invisibleProp = false,
    max: maxProp = 99,
    showZero = false
  } = parameters;
  const prevProps = usePreviousProps_default({
    badgeContent: badgeContentProp,
    max: maxProp
  });
  let invisible = invisibleProp;
  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {
    invisible = true;
  }
  const {
    badgeContent,
    max: max3 = maxProp
  } = invisible ? prevProps : parameters;
  const displayValue = badgeContent && Number(badgeContent) > max3 ? `${max3}+` : badgeContent;
  return {
    badgeContent,
    invisible,
    max: max3,
    displayValue
  };
}

// node_modules/@mui/base/generateUtilityClasses/index.js
init_esm();

// node_modules/@mui/base/generateUtilityClass/index.js
init_esm();

// node_modules/@mui/base/Badge/badgeClasses.js
function getBadgeUtilityClass(slot) {
  return generateUtilityClass("MuiBadge", slot);
}
var badgeClasses = generateUtilityClasses("MuiBadge", ["root", "badge", "invisible"]);

// node_modules/@mui/base/Badge/Badge.js
var import_jsx_runtime41 = __toESM(require_jsx_runtime());
var import_jsx_runtime42 = __toESM(require_jsx_runtime());
var _excluded35 = ["badgeContent", "children", "invisible", "max", "slotProps", "slots", "showZero"];
var useUtilityClasses15 = (ownerState) => {
  const {
    invisible
  } = ownerState;
  const slots = {
    root: ["root"],
    badge: ["badge", invisible && "invisible"]
  };
  return composeClasses(slots, useClassNamesOverride(getBadgeUtilityClass));
};
var Badge = React60.forwardRef(function Badge2(props, forwardedRef) {
  var _slots$root, _slots$badge;
  const {
    children: children2,
    max: maxProp = 99,
    slotProps = {},
    slots = {},
    showZero = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded35);
  const {
    badgeContent,
    max: max3,
    displayValue,
    invisible
  } = useBadge(_extends({}, props, {
    max: maxProp
  }));
  const ownerState = _extends({}, props, {
    badgeContent,
    invisible,
    max: max3,
    showZero
  });
  const classes2 = useUtilityClasses15(ownerState);
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "span";
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: classes2.root
  });
  const BadgeComponent = (_slots$badge = slots.badge) != null ? _slots$badge : "span";
  const badgeProps = useSlotProps({
    elementType: BadgeComponent,
    externalSlotProps: slotProps.badge,
    ownerState,
    className: classes2.badge
  });
  return (0, import_jsx_runtime42.jsxs)(Root42, _extends({}, rootProps, {
    children: [children2, (0, import_jsx_runtime41.jsx)(BadgeComponent, _extends({}, badgeProps, {
      children: displayValue
    }))]
  }));
});
true ? Badge.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The content rendered within the badge.
   */
  badgeContent: import_prop_types41.default.node,
  /**
   * The badge will be added relative to this node.
   */
  children: import_prop_types41.default.node,
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: import_prop_types41.default.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: import_prop_types41.default.number,
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: import_prop_types41.default.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: import_prop_types41.default.shape({
    badge: import_prop_types41.default.oneOfType([import_prop_types41.default.func, import_prop_types41.default.object]),
    root: import_prop_types41.default.oneOfType([import_prop_types41.default.func, import_prop_types41.default.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types41.default.shape({
    badge: import_prop_types41.default.elementType,
    root: import_prop_types41.default.elementType
  })
} : void 0;

// node_modules/@mui/base/Button/Button.js
init_extends();
init_objectWithoutPropertiesLoose();
var React62 = __toESM(require_react());
var import_prop_types42 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/base/Button/buttonClasses.js
function getButtonUtilityClass(slot) {
  return generateUtilityClass("MuiButton", slot);
}
var buttonClasses = generateUtilityClasses("MuiButton", ["root", "active", "disabled", "focusVisible"]);

// node_modules/@mui/base/useButton/useButton.js
init_extends();
var React61 = __toESM(require_react());
init_esm();
function useButton(parameters = {}) {
  const {
    disabled = false,
    focusableWhenDisabled,
    href,
    rootRef: externalRef,
    tabIndex,
    to,
    type
  } = parameters;
  const buttonRef = React61.useRef();
  const [active, setActive] = React61.useState(false);
  const {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusVisible, setFocusVisible] = React61.useState(false);
  if (disabled && !focusableWhenDisabled && focusVisible) {
    setFocusVisible(false);
  }
  React61.useEffect(() => {
    isFocusVisibleRef.current = focusVisible;
  }, [focusVisible, isFocusVisibleRef]);
  const [hostElementName, setHostElementName] = React61.useState("");
  const createHandleMouseLeave = (otherHandlers) => (event) => {
    var _otherHandlers$onMous;
    if (focusVisible) {
      event.preventDefault();
    }
    (_otherHandlers$onMous = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);
  };
  const createHandleBlur = (otherHandlers) => (event) => {
    var _otherHandlers$onBlur;
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
  };
  const createHandleFocus = (otherHandlers) => (event) => {
    var _otherHandlers$onFocu2;
    if (!buttonRef.current) {
      buttonRef.current = event.currentTarget;
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      var _otherHandlers$onFocu;
      setFocusVisible(true);
      (_otherHandlers$onFocu = otherHandlers.onFocusVisible) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
    }
    (_otherHandlers$onFocu2 = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu2.call(otherHandlers, event);
  };
  const isNativeButton = () => {
    const button = buttonRef.current;
    return hostElementName === "BUTTON" || hostElementName === "INPUT" && ["button", "submit", "reset"].includes(button == null ? void 0 : button.type) || hostElementName === "A" && (button == null ? void 0 : button.href);
  };
  const createHandleClick = (otherHandlers) => (event) => {
    if (!disabled) {
      var _otherHandlers$onClic;
      (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
    }
  };
  const createHandleMouseDown = (otherHandlers) => (event) => {
    var _otherHandlers$onMous2;
    if (!disabled) {
      setActive(true);
      document.addEventListener("mouseup", () => {
        setActive(false);
      }, {
        once: true
      });
    }
    (_otherHandlers$onMous2 = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);
  };
  const createHandleKeyDown = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyD;
    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);
    if (event.defaultMuiPrevented) {
      return;
    }
    if (event.target === event.currentTarget && !isNativeButton() && event.key === " ") {
      event.preventDefault();
    }
    if (event.target === event.currentTarget && event.key === " " && !disabled) {
      setActive(true);
    }
    if (event.target === event.currentTarget && !isNativeButton() && event.key === "Enter" && !disabled) {
      var _otherHandlers$onClic2;
      (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);
      event.preventDefault();
    }
  };
  const createHandleKeyUp = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyU;
    if (event.target === event.currentTarget) {
      setActive(false);
    }
    (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);
    if (event.target === event.currentTarget && !isNativeButton() && !disabled && event.key === " " && !event.defaultMuiPrevented) {
      var _otherHandlers$onClic3;
      (_otherHandlers$onClic3 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic3.call(otherHandlers, event);
    }
  };
  const updateHostElementName = React61.useCallback((instance) => {
    var _instance$tagName;
    setHostElementName((_instance$tagName = instance == null ? void 0 : instance.tagName) != null ? _instance$tagName : "");
  }, []);
  const handleRef = useForkRef(updateHostElementName, externalRef, focusVisibleRef, buttonRef);
  const buttonProps = {};
  if (tabIndex !== void 0) {
    buttonProps.tabIndex = tabIndex;
  }
  if (hostElementName === "BUTTON") {
    buttonProps.type = type != null ? type : "button";
    if (focusableWhenDisabled) {
      buttonProps["aria-disabled"] = disabled;
    } else {
      buttonProps.disabled = disabled;
    }
  } else if (hostElementName !== "") {
    if (!href && !to) {
      buttonProps.role = "button";
      buttonProps.tabIndex = tabIndex != null ? tabIndex : 0;
    }
    if (disabled) {
      buttonProps["aria-disabled"] = disabled;
      buttonProps.tabIndex = focusableWhenDisabled ? tabIndex != null ? tabIndex : 0 : -1;
    }
  }
  const getRootProps = (externalProps = {}) => {
    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));
    const props = _extends({
      type
    }, externalEventHandlers, buttonProps, externalProps, {
      onBlur: createHandleBlur(externalEventHandlers),
      onClick: createHandleClick(externalEventHandlers),
      onFocus: createHandleFocus(externalEventHandlers),
      onKeyDown: createHandleKeyDown(externalEventHandlers),
      onKeyUp: createHandleKeyUp(externalEventHandlers),
      onMouseDown: createHandleMouseDown(externalEventHandlers),
      onMouseLeave: createHandleMouseLeave(externalEventHandlers),
      ref: handleRef
    });
    delete props.onFocusVisible;
    return props;
  };
  return {
    getRootProps,
    focusVisible,
    setFocusVisible,
    active,
    rootRef: handleRef
  };
}

// node_modules/@mui/base/Button/Button.js
var import_jsx_runtime43 = __toESM(require_jsx_runtime());
var _excluded36 = ["action", "children", "disabled", "focusableWhenDisabled", "onFocusVisible", "slotProps", "slots"];
var useUtilityClasses16 = (ownerState) => {
  const {
    active,
    disabled,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", active && "active"]
  };
  return composeClasses(slots, useClassNamesOverride(getButtonUtilityClass));
};
var Button = React62.forwardRef(function Button2(props, forwardedRef) {
  var _slots$root;
  const {
    action,
    children: children2,
    focusableWhenDisabled = false,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded36);
  const buttonRef = React62.useRef();
  const {
    active,
    focusVisible,
    setFocusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    focusableWhenDisabled
  }));
  React62.useImperativeHandle(action, () => ({
    focusVisible: () => {
      setFocusVisible(true);
      buttonRef.current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    active,
    focusableWhenDisabled,
    focusVisible
  });
  const classes2 = useUtilityClasses16(ownerState);
  const defaultElement = other.href || other.to ? "a" : "button";
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : defaultElement;
  const rootProps = useSlotProps({
    elementType: Root42,
    getSlotProps: getRootProps,
    externalForwardedProps: other,
    externalSlotProps: slotProps.root,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: classes2.root
  });
  return (0, import_jsx_runtime43.jsx)(Root42, _extends({}, rootProps, {
    children: children2
  }));
});
true ? Button.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A ref for imperative actions. It currently only supports `focusVisible()` action.
   */
  action: import_prop_types42.default.oneOfType([import_prop_types42.default.func, import_prop_types42.default.shape({
    current: import_prop_types42.default.shape({
      focusVisible: import_prop_types42.default.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  children: import_prop_types42.default.node,
  /**
   * @ignore
   */
  className: import_prop_types42.default.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types42.default.bool,
  /**
   * If `true`, allows a disabled button to receive focus.
   * @default false
   */
  focusableWhenDisabled: import_prop_types42.default.bool,
  /**
   * @ignore
   */
  href: import_prop_types42.default.string,
  /**
   * @ignore
   */
  onFocusVisible: import_prop_types42.default.func,
  /**
   * The props used for each slot inside the Button.
   * @default {}
   */
  slotProps: import_prop_types42.default.shape({
    root: import_prop_types42.default.oneOfType([import_prop_types42.default.func, import_prop_types42.default.object])
  }),
  /**
   * The components used for each slot inside the Button.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types42.default.shape({
    root: import_prop_types42.default.elementType
  }),
  /**
   * @ignore
   */
  to: import_prop_types42.default.string
} : void 0;

// node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js
var React63 = __toESM(require_react());
var import_prop_types43 = __toESM(require_prop_types());
init_esm();
var import_jsx_runtime44 = __toESM(require_jsx_runtime());
function mapEventPropToEvent(eventProp) {
  return eventProp.substring(2).toLowerCase();
}
function clickedRootScrollbar(event, doc) {
  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;
}
function ClickAwayListener(props) {
  const {
    children: children2,
    disableReactTree = false,
    mouseEvent = "onClick",
    onClickAway,
    touchEvent = "onTouchEnd"
  } = props;
  const movedRef = React63.useRef(false);
  const nodeRef = React63.useRef(null);
  const activatedRef = React63.useRef(false);
  const syntheticEventRef = React63.useRef(false);
  React63.useEffect(() => {
    setTimeout(() => {
      activatedRef.current = true;
    }, 0);
    return () => {
      activatedRef.current = false;
    };
  }, []);
  const handleRef = useForkRef(
    // @ts-expect-error TODO upstream fix
    children2.ref,
    nodeRef
  );
  const handleClickAway = useEventCallback_default((event) => {
    const insideReactTree = syntheticEventRef.current;
    syntheticEventRef.current = false;
    const doc = ownerDocument(nodeRef.current);
    if (!activatedRef.current || !nodeRef.current || "clientX" in event && clickedRootScrollbar(event, doc)) {
      return;
    }
    if (movedRef.current) {
      movedRef.current = false;
      return;
    }
    let insideDOM;
    if (event.composedPath) {
      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;
    } else {
      insideDOM = !doc.documentElement.contains(
        // @ts-expect-error returns `false` as intended when not dispatched from a Node
        event.target
      ) || nodeRef.current.contains(
        // @ts-expect-error returns `false` as intended when not dispatched from a Node
        event.target
      );
    }
    if (!insideDOM && (disableReactTree || !insideReactTree)) {
      onClickAway(event);
    }
  });
  const createHandleSynthetic = (handlerName) => (event) => {
    syntheticEventRef.current = true;
    const childrenPropsHandler = children2.props[handlerName];
    if (childrenPropsHandler) {
      childrenPropsHandler(event);
    }
  };
  const childrenProps = {
    ref: handleRef
  };
  if (touchEvent !== false) {
    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);
  }
  React63.useEffect(() => {
    if (touchEvent !== false) {
      const mappedTouchEvent = mapEventPropToEvent(touchEvent);
      const doc = ownerDocument(nodeRef.current);
      const handleTouchMove = () => {
        movedRef.current = true;
      };
      doc.addEventListener(mappedTouchEvent, handleClickAway);
      doc.addEventListener("touchmove", handleTouchMove);
      return () => {
        doc.removeEventListener(mappedTouchEvent, handleClickAway);
        doc.removeEventListener("touchmove", handleTouchMove);
      };
    }
    return void 0;
  }, [handleClickAway, touchEvent]);
  if (mouseEvent !== false) {
    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);
  }
  React63.useEffect(() => {
    if (mouseEvent !== false) {
      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);
      const doc = ownerDocument(nodeRef.current);
      doc.addEventListener(mappedMouseEvent, handleClickAway);
      return () => {
        doc.removeEventListener(mappedMouseEvent, handleClickAway);
      };
    }
    return void 0;
  }, [handleClickAway, mouseEvent]);
  return (0, import_jsx_runtime44.jsx)(React63.Fragment, {
    children: React63.cloneElement(children2, childrenProps)
  });
}
true ? ClickAwayListener.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The wrapped element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: import_prop_types43.default.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: import_prop_types43.default.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", false]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: import_prop_types43.default.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: import_prop_types43.default.oneOf(["onTouchEnd", "onTouchStart", false])
} : void 0;
if (true) {
  ClickAwayListener["propTypes"] = exactProp(ClickAwayListener.propTypes);
}

// node_modules/@mui/base/index.js
init_composeClasses3();

// node_modules/@mui/base/Dropdown/Dropdown.js
var React67 = __toESM(require_react());
var import_prop_types44 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/base/useDropdown/DropdownContext.js
var React64 = __toESM(require_react());
var DropdownContext = React64.createContext(null);

// node_modules/@mui/base/useDropdown/useDropdown.js
var React66 = __toESM(require_react());

// node_modules/@mui/base/utils/useControllableReducer.js
init_extends();
var React65 = __toESM(require_react());
function areEqual(a, b) {
  return a === b;
}
var EMPTY_OBJECT = {};
var NOOP = () => {
};
function getControlledState(internalState, controlledProps) {
  const augmentedState = _extends({}, internalState);
  Object.keys(controlledProps).forEach((key) => {
    if (controlledProps[key] !== void 0) {
      augmentedState[key] = controlledProps[key];
    }
  });
  return augmentedState;
}
function useStateChangeDetection(parameters) {
  const {
    nextState,
    initialState: initialState3,
    stateComparers,
    onStateChange,
    controlledProps,
    lastActionRef
  } = parameters;
  const internalPreviousStateRef = React65.useRef(initialState3);
  React65.useEffect(() => {
    if (lastActionRef.current === null) {
      return;
    }
    const previousState = getControlledState(internalPreviousStateRef.current, controlledProps);
    Object.keys(nextState).forEach((key) => {
      var _stateComparers$key;
      const stateComparer = (_stateComparers$key = stateComparers[key]) != null ? _stateComparers$key : areEqual;
      const nextStateItem = nextState[key];
      const previousStateItem = previousState[key];
      if (previousStateItem == null && nextStateItem != null || previousStateItem != null && nextStateItem == null || previousStateItem != null && nextStateItem != null && !stateComparer(nextStateItem, previousStateItem)) {
        var _event, _type;
        onStateChange == null ? void 0 : onStateChange((_event = lastActionRef.current.event) != null ? _event : null, key, nextStateItem, (_type = lastActionRef.current.type) != null ? _type : "", nextState);
      }
    });
    internalPreviousStateRef.current = nextState;
    lastActionRef.current = null;
  }, [internalPreviousStateRef, nextState, lastActionRef, onStateChange, stateComparers, controlledProps]);
}
function useControllableReducer(parameters) {
  const lastActionRef = React65.useRef(null);
  const {
    reducer: reducer2,
    initialState: initialState3,
    controlledProps = EMPTY_OBJECT,
    stateComparers = EMPTY_OBJECT,
    onStateChange = NOOP,
    actionContext
  } = parameters;
  const reducerWithControlledState = React65.useCallback((state, action) => {
    lastActionRef.current = action;
    const controlledState = getControlledState(state, controlledProps);
    const newState = reducer2(controlledState, action);
    return newState;
  }, [controlledProps, reducer2]);
  const [nextState, dispatch] = React65.useReducer(reducerWithControlledState, initialState3);
  const dispatchWithContext = React65.useCallback((action) => {
    dispatch(_extends({}, action, {
      context: actionContext
    }));
  }, [actionContext]);
  useStateChangeDetection({
    nextState,
    initialState: initialState3,
    stateComparers: stateComparers != null ? stateComparers : EMPTY_OBJECT,
    onStateChange: onStateChange != null ? onStateChange : NOOP,
    controlledProps,
    lastActionRef
  });
  return [getControlledState(nextState, controlledProps), dispatchWithContext];
}

// node_modules/@mui/base/useDropdown/useDropdown.types.js
var DropdownActionTypes = {
  blur: "dropdown:blur",
  escapeKeyDown: "dropdown:escapeKeyDown",
  toggle: "dropdown:toggle",
  open: "dropdown:open",
  close: "dropdown:close"
};

// node_modules/@mui/base/useDropdown/dropdownReducer.js
function dropdownReducer(state, action) {
  switch (action.type) {
    case DropdownActionTypes.blur:
      return {
        open: false
      };
    case DropdownActionTypes.escapeKeyDown:
      return {
        open: false
      };
    case DropdownActionTypes.toggle:
      return {
        open: !state.open
      };
    case DropdownActionTypes.open:
      return {
        open: true
      };
    case DropdownActionTypes.close:
      return {
        open: false
      };
    default:
      throw new Error(`Unhandled action`);
  }
}

// node_modules/@mui/base/useDropdown/useDropdown.js
function useDropdown(parameters = {}) {
  const {
    defaultOpen,
    onOpenChange,
    open: openProp
  } = parameters;
  const [popupId, setPopupId] = React66.useState("");
  const [triggerElement, setTriggerElement] = React66.useState(null);
  const lastActionType = React66.useRef(null);
  const handleStateChange = React66.useCallback((event, field, value, reason) => {
    if (field === "open") {
      onOpenChange == null ? void 0 : onOpenChange(event, value);
    }
    lastActionType.current = reason;
  }, [onOpenChange]);
  const controlledProps = React66.useMemo(() => openProp !== void 0 ? {
    open: openProp
  } : {}, [openProp]);
  const [state, dispatch] = useControllableReducer({
    controlledProps,
    initialState: defaultOpen ? {
      open: true
    } : {
      open: false
    },
    onStateChange: handleStateChange,
    reducer: dropdownReducer
  });
  React66.useEffect(() => {
    if (!state.open && lastActionType.current !== null && lastActionType.current !== DropdownActionTypes.blur) {
      triggerElement == null ? void 0 : triggerElement.focus();
    }
  }, [state.open, triggerElement]);
  const contextValue = {
    state,
    dispatch,
    popupId,
    registerPopup: setPopupId,
    registerTrigger: setTriggerElement,
    triggerElement
  };
  return {
    contextValue,
    open: state.open
  };
}

// node_modules/@mui/base/Dropdown/Dropdown.js
var import_jsx_runtime45 = __toESM(require_jsx_runtime());
function Dropdown(props) {
  const {
    children: children2,
    open,
    defaultOpen,
    onOpenChange
  } = props;
  const {
    contextValue
  } = useDropdown({
    defaultOpen,
    onOpenChange,
    open
  });
  return (0, import_jsx_runtime45.jsx)(DropdownContext.Provider, {
    value: contextValue,
    children: children2
  });
}
true ? Dropdown.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types44.default.node,
  /**
   * If `true`, the dropdown is initially open.
   */
  defaultOpen: import_prop_types44.default.bool,
  /**
   * Callback fired when the component requests to be opened or closed.
   */
  onOpenChange: import_prop_types44.default.func,
  /**
   * Allows to control whether the dropdown is open.
   * This is a controlled counterpart of `defaultOpen`.
   */
  open: import_prop_types44.default.bool
} : void 0;
if (true) {
  Dropdown["propTypes"] = exactProp(Dropdown.propTypes);
}

// node_modules/@mui/base/FocusTrap/FocusTrap.js
var React68 = __toESM(require_react());
var import_prop_types45 = __toESM(require_prop_types());
init_esm();
var import_jsx_runtime46 = __toESM(require_jsx_runtime());
var import_jsx_runtime47 = __toESM(require_jsx_runtime());
var candidatesSelector = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function getTabIndex(node2) {
  const tabindexAttr = parseInt(node2.getAttribute("tabindex") || "", 10);
  if (!Number.isNaN(tabindexAttr)) {
    return tabindexAttr;
  }
  if (node2.contentEditable === "true" || (node2.nodeName === "AUDIO" || node2.nodeName === "VIDEO" || node2.nodeName === "DETAILS") && node2.getAttribute("tabindex") === null) {
    return 0;
  }
  return node2.tabIndex;
}
function isNonTabbableRadio(node2) {
  if (node2.tagName !== "INPUT" || node2.type !== "radio") {
    return false;
  }
  if (!node2.name) {
    return false;
  }
  const getRadio = (selector) => node2.ownerDocument.querySelector(`input[type="radio"]${selector}`);
  let roving = getRadio(`[name="${node2.name}"]:checked`);
  if (!roving) {
    roving = getRadio(`[name="${node2.name}"]`);
  }
  return roving !== node2;
}
function isNodeMatchingSelectorFocusable(node2) {
  if (node2.disabled || node2.tagName === "INPUT" && node2.type === "hidden" || isNonTabbableRadio(node2)) {
    return false;
  }
  return true;
}
function defaultGetTabbable(root) {
  const regularTabNodes = [];
  const orderedTabNodes = [];
  Array.from(root.querySelectorAll(candidatesSelector)).forEach((node2, i) => {
    const nodeTabIndex = getTabIndex(node2);
    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node2)) {
      return;
    }
    if (nodeTabIndex === 0) {
      regularTabNodes.push(node2);
    } else {
      orderedTabNodes.push({
        documentOrder: i,
        tabIndex: nodeTabIndex,
        node: node2
      });
    }
  });
  return orderedTabNodes.sort((a, b) => a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex).map((a) => a.node).concat(regularTabNodes);
}
function defaultIsEnabled() {
  return true;
}
function FocusTrap(props) {
  const {
    children: children2,
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableRestoreFocus = false,
    getTabbable = defaultGetTabbable,
    isEnabled = defaultIsEnabled,
    open
  } = props;
  const ignoreNextEnforceFocus = React68.useRef(false);
  const sentinelStart = React68.useRef(null);
  const sentinelEnd = React68.useRef(null);
  const nodeToRestore = React68.useRef(null);
  const reactFocusEventTarget = React68.useRef(null);
  const activated = React68.useRef(false);
  const rootRef = React68.useRef(null);
  const handleRef = useForkRef(children2.ref, rootRef);
  const lastKeydown = React68.useRef(null);
  React68.useEffect(() => {
    if (!open || !rootRef.current) {
      return;
    }
    activated.current = !disableAutoFocus;
  }, [disableAutoFocus, open]);
  React68.useEffect(() => {
    if (!open || !rootRef.current) {
      return;
    }
    const doc = ownerDocument(rootRef.current);
    if (!rootRef.current.contains(doc.activeElement)) {
      if (!rootRef.current.hasAttribute("tabIndex")) {
        if (true) {
          console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join("\n"));
        }
        rootRef.current.setAttribute("tabIndex", "-1");
      }
      if (activated.current) {
        rootRef.current.focus();
      }
    }
    return () => {
      if (!disableRestoreFocus) {
        if (nodeToRestore.current && nodeToRestore.current.focus) {
          ignoreNextEnforceFocus.current = true;
          nodeToRestore.current.focus();
        }
        nodeToRestore.current = null;
      }
    };
  }, [open]);
  React68.useEffect(() => {
    if (!open || !rootRef.current) {
      return;
    }
    const doc = ownerDocument(rootRef.current);
    const contain = (nativeEvent) => {
      const {
        current: rootElement
      } = rootRef;
      if (rootElement === null) {
        return;
      }
      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {
        ignoreNextEnforceFocus.current = false;
        return;
      }
      if (!rootElement.contains(doc.activeElement)) {
        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {
          reactFocusEventTarget.current = null;
        } else if (reactFocusEventTarget.current !== null) {
          return;
        }
        if (!activated.current) {
          return;
        }
        let tabbable = [];
        if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {
          tabbable = getTabbable(rootRef.current);
        }
        if (tabbable.length > 0) {
          var _lastKeydown$current, _lastKeydown$current2;
          const isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === "Tab");
          const focusNext = tabbable[0];
          const focusPrevious = tabbable[tabbable.length - 1];
          if (typeof focusNext !== "string" && typeof focusPrevious !== "string") {
            if (isShiftTab) {
              focusPrevious.focus();
            } else {
              focusNext.focus();
            }
          }
        } else {
          rootElement.focus();
        }
      }
    };
    const loopFocus = (nativeEvent) => {
      lastKeydown.current = nativeEvent;
      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== "Tab") {
        return;
      }
      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {
        ignoreNextEnforceFocus.current = true;
        if (sentinelEnd.current) {
          sentinelEnd.current.focus();
        }
      }
    };
    doc.addEventListener("focusin", contain);
    doc.addEventListener("keydown", loopFocus, true);
    const interval = setInterval(() => {
      if (doc.activeElement && doc.activeElement.tagName === "BODY") {
        contain(null);
      }
    }, 50);
    return () => {
      clearInterval(interval);
      doc.removeEventListener("focusin", contain);
      doc.removeEventListener("keydown", loopFocus, true);
    };
  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);
  const onFocus = (event) => {
    if (nodeToRestore.current === null) {
      nodeToRestore.current = event.relatedTarget;
    }
    activated.current = true;
    reactFocusEventTarget.current = event.target;
    const childrenPropsHandler = children2.props.onFocus;
    if (childrenPropsHandler) {
      childrenPropsHandler(event);
    }
  };
  const handleFocusSentinel = (event) => {
    if (nodeToRestore.current === null) {
      nodeToRestore.current = event.relatedTarget;
    }
    activated.current = true;
  };
  return (0, import_jsx_runtime47.jsxs)(React68.Fragment, {
    children: [(0, import_jsx_runtime46.jsx)("div", {
      tabIndex: open ? 0 : -1,
      onFocus: handleFocusSentinel,
      ref: sentinelStart,
      "data-testid": "sentinelStart"
    }), React68.cloneElement(children2, {
      ref: handleRef,
      onFocus
    }), (0, import_jsx_runtime46.jsx)("div", {
      tabIndex: open ? 0 : -1,
      onFocus: handleFocusSentinel,
      ref: sentinelEnd,
      "data-testid": "sentinelEnd"
    })]
  });
}
true ? FocusTrap.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A single child content element.
   */
  children: elementAcceptingRef_default,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: import_prop_types45.default.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: import_prop_types45.default.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: import_prop_types45.default.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: import_prop_types45.default.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: import_prop_types45.default.func,
  /**
   * If `true`, focus is locked.
   */
  open: import_prop_types45.default.bool.isRequired
} : void 0;
if (true) {
  FocusTrap["propTypes"] = exactProp(FocusTrap.propTypes);
}

// node_modules/@mui/base/FormControl/FormControl.js
init_extends();
init_objectWithoutPropertiesLoose();
var React70 = __toESM(require_react());
var import_prop_types46 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/base/FormControl/FormControlContext.js
var React69 = __toESM(require_react());
var FormControlContext = React69.createContext(void 0);
if (true) {
  FormControlContext.displayName = "FormControlContext";
}

// node_modules/@mui/base/FormControl/formControlClasses.js
function getFormControlUtilityClass(slot) {
  return generateUtilityClass("MuiFormControl", slot);
}
var formControlClasses = generateUtilityClasses("MuiFormControl", ["root", "disabled", "error", "filled", "focused", "required"]);

// node_modules/@mui/base/FormControl/FormControl.js
init_composeClasses3();
var import_jsx_runtime48 = __toESM(require_jsx_runtime());
var _excluded37 = ["defaultValue", "children", "disabled", "error", "onChange", "required", "slotProps", "slots", "value"];
function hasValue(value) {
  return value != null && !(Array.isArray(value) && value.length === 0) && value !== "";
}
function useUtilityClasses17(ownerState) {
  const {
    disabled,
    error,
    filled,
    focused,
    required: required2
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focused && "focused", error && "error", filled && "filled", required2 && "required"]
  };
  return composeClasses(slots, useClassNamesOverride(getFormControlUtilityClass));
}
var FormControl = React70.forwardRef(function FormControl2(props, forwardedRef) {
  var _slots$root;
  const {
    defaultValue,
    children: children2,
    disabled = false,
    error = false,
    onChange,
    required: required2 = false,
    slotProps = {},
    slots = {},
    value: incomingValue
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded37);
  const [value, setValue] = useControlled({
    controlled: incomingValue,
    default: defaultValue,
    name: "FormControl",
    state: "value"
  });
  const filled = hasValue(value);
  const [focusedState, setFocused] = React70.useState(false);
  const focused = focusedState && !disabled;
  React70.useEffect(() => setFocused((isFocused) => disabled ? false : isFocused), [disabled]);
  const ownerState = _extends({}, props, {
    disabled,
    error,
    filled,
    focused,
    required: required2
  });
  const childContext = React70.useMemo(() => {
    return {
      disabled,
      error,
      filled,
      focused,
      onBlur: () => {
        setFocused(false);
      },
      onChange: (event) => {
        setValue(event.target.value);
        onChange == null ? void 0 : onChange(event);
      },
      onFocus: () => {
        setFocused(true);
      },
      required: required2,
      value: value != null ? value : ""
    };
  }, [disabled, error, filled, focused, onChange, required2, setValue, value]);
  const classes2 = useUtilityClasses17(ownerState);
  const renderChildren = () => {
    if (typeof children2 === "function") {
      return children2(childContext);
    }
    return children2;
  };
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "div";
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef,
      children: renderChildren()
    },
    ownerState,
    className: classes2.root
  });
  return (0, import_jsx_runtime48.jsx)(FormControlContext.Provider, {
    value: childContext,
    children: (0, import_jsx_runtime48.jsx)(Root42, _extends({}, rootProps))
  });
});
true ? FormControl.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types46.default.oneOfType([import_prop_types46.default.node, import_prop_types46.default.func]),
  /**
   * Class name applied to the root element.
   */
  className: import_prop_types46.default.string,
  /**
   * @ignore
   */
  defaultValue: import_prop_types46.default.any,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: import_prop_types46.default.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: import_prop_types46.default.bool,
  /**
   * Callback fired when the form element's value is modified.
   */
  onChange: import_prop_types46.default.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: import_prop_types46.default.bool,
  /**
   * The props used for each slot inside the FormControl.
   * @default {}
   */
  slotProps: import_prop_types46.default.shape({
    root: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object])
  }),
  /**
   * The components used for each slot inside the FormControl.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types46.default.shape({
    root: import_prop_types46.default.elementType
  }),
  /**
   * The value of the form element.
   */
  value: import_prop_types46.default.any
} : void 0;

// node_modules/@mui/base/FormControl/useFormControlContext.js
var React71 = __toESM(require_react());
function useFormControlContext() {
  return React71.useContext(FormControlContext);
}

// node_modules/@mui/base/Input/Input.js
init_extends();
init_objectWithoutPropertiesLoose();
var React73 = __toESM(require_react());
var import_prop_types47 = __toESM(require_prop_types());

// node_modules/@mui/base/Input/inputClasses.js
function getInputUtilityClass(slot) {
  return generateUtilityClass("MuiInput", slot);
}
var inputClasses = generateUtilityClasses("MuiInput", ["root", "formControl", "focused", "disabled", "error", "multiline", "input", "inputMultiline", "inputTypeSearch", "adornedStart", "adornedEnd"]);

// node_modules/@mui/base/useInput/useInput.js
init_extends();
init_esm();
var React72 = __toESM(require_react());
init_esm();
function useInput2(parameters) {
  const {
    defaultValue: defaultValueProp,
    disabled: disabledProp = false,
    error: errorProp = false,
    onBlur,
    onChange,
    onFocus,
    required: requiredProp = false,
    value: valueProp,
    inputRef: inputRefProp
  } = parameters;
  const formControlContext = useFormControlContext();
  let defaultValue;
  let disabled;
  let error;
  let required2;
  let value;
  if (formControlContext) {
    var _formControlContext$d, _formControlContext$e, _formControlContext$r;
    defaultValue = void 0;
    disabled = (_formControlContext$d = formControlContext.disabled) != null ? _formControlContext$d : false;
    error = (_formControlContext$e = formControlContext.error) != null ? _formControlContext$e : false;
    required2 = (_formControlContext$r = formControlContext.required) != null ? _formControlContext$r : false;
    value = formControlContext.value;
    if (true) {
      const definedLocalProps = ["defaultValue", "disabled", "error", "required", "value"].filter((prop) => parameters[prop] !== void 0);
      if (definedLocalProps.length > 0) {
        console.warn(["MUI: You have set props on an input that is inside a FormControl.", "Set these props on a FormControl instead. Otherwise they will be ignored.", `Ignored props: ${definedLocalProps.join(", ")}`].join("\n"));
      }
    }
  } else {
    defaultValue = defaultValueProp;
    disabled = disabledProp;
    error = errorProp;
    required2 = requiredProp;
    value = valueProp;
  }
  const {
    current: isControlled
  } = React72.useRef(value != null);
  const handleInputRefWarning = React72.useCallback((instance) => {
    if (true) {
      if (instance && instance.nodeName !== "INPUT" && !instance.focus) {
        console.error(["MUI: You have provided a `slots.input` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join("\n"));
      }
    }
  }, []);
  const inputRef = React72.useRef(null);
  const handleInputRef = useForkRef(inputRef, inputRefProp, handleInputRefWarning);
  const [focused, setFocused] = React72.useState(false);
  React72.useEffect(() => {
    if (!formControlContext && disabled && focused) {
      setFocused(false);
      onBlur == null ? void 0 : onBlur();
    }
  }, [formControlContext, disabled, focused, onBlur]);
  const handleFocus = (otherHandlers) => (event) => {
    var _otherHandlers$onFocu;
    if (formControlContext != null && formControlContext.disabled) {
      event.stopPropagation();
      return;
    }
    (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
    if (formControlContext && formControlContext.onFocus) {
      var _formControlContext$o;
      formControlContext == null || (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);
    } else {
      setFocused(true);
    }
  };
  const handleBlur2 = (otherHandlers) => (event) => {
    var _otherHandlers$onBlur;
    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
    if (formControlContext && formControlContext.onBlur) {
      formControlContext.onBlur();
    } else {
      setFocused(false);
    }
  };
  const handleChange = (otherHandlers) => (event, ...args) => {
    var _formControlContext$o2, _otherHandlers$onChan;
    if (!isControlled) {
      const element = event.target || inputRef.current;
      if (element == null) {
        throw new Error(true ? `MUI: Expected valid input target. Did you use a custom \`slots.input\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : formatMuiErrorMessage(17));
      }
    }
    formControlContext == null || (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event);
    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event, ...args);
  };
  const handleClick2 = (otherHandlers) => (event) => {
    var _otherHandlers$onClic;
    if (inputRef.current && event.currentTarget === event.target) {
      inputRef.current.focus();
    }
    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
  };
  const getRootProps = (externalProps = {}) => {
    const propsEventHandlers = extractEventHandlers(parameters, ["onBlur", "onChange", "onFocus"]);
    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));
    return _extends({}, externalProps, externalEventHandlers, {
      onClick: handleClick2(externalEventHandlers)
    });
  };
  const getInputProps = (externalProps = {}) => {
    const propsEventHandlers = {
      onBlur,
      onChange,
      onFocus
    };
    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));
    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {
      onBlur: handleBlur2(externalEventHandlers),
      onChange: handleChange(externalEventHandlers),
      onFocus: handleFocus(externalEventHandlers)
    });
    return _extends({}, mergedEventHandlers, {
      "aria-invalid": error || void 0,
      defaultValue,
      ref: handleInputRef,
      value,
      required: required2,
      disabled
    });
  };
  return {
    disabled,
    error,
    focused,
    formControlContext,
    getInputProps,
    getRootProps,
    inputRef: handleInputRef,
    required: required2,
    value
  };
}

// node_modules/@mui/base/Input/Input.js
init_composeClasses3();
var import_jsx_runtime49 = __toESM(require_jsx_runtime());
var import_jsx_runtime50 = __toESM(require_jsx_runtime());
var _excluded38 = ["aria-describedby", "aria-label", "aria-labelledby", "autoComplete", "autoFocus", "className", "defaultValue", "disabled", "endAdornment", "error", "id", "multiline", "name", "onClick", "onChange", "onKeyDown", "onKeyUp", "onFocus", "onBlur", "placeholder", "readOnly", "required", "startAdornment", "value", "type", "rows", "slotProps", "slots", "minRows", "maxRows"];
var useUtilityClasses18 = (ownerState) => {
  const {
    disabled,
    error,
    focused,
    formControlContext,
    multiline,
    startAdornment,
    endAdornment
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", error && "error", focused && "focused", Boolean(formControlContext) && "formControl", multiline && "multiline", Boolean(startAdornment) && "adornedStart", Boolean(endAdornment) && "adornedEnd"],
    input: ["input", disabled && "disabled", multiline && "multiline"]
  };
  return composeClasses(slots, useClassNamesOverride(getInputUtilityClass));
};
var Input = React73.forwardRef(function Input2(props, forwardedRef) {
  var _slots$root, _slots$textarea, _slots$input;
  const {
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    autoComplete,
    autoFocus,
    className,
    defaultValue,
    disabled,
    endAdornment,
    error,
    id,
    multiline = false,
    name,
    onClick,
    onChange,
    onKeyDown,
    onKeyUp,
    onFocus,
    onBlur,
    placeholder,
    readOnly,
    required: required2,
    startAdornment,
    value,
    type: typeProp,
    rows,
    slotProps = {},
    slots = {},
    minRows,
    maxRows
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded38);
  const {
    getRootProps,
    getInputProps,
    focused,
    formControlContext,
    error: errorState,
    disabled: disabledState
  } = useInput2({
    disabled,
    defaultValue,
    error,
    onBlur,
    onClick,
    onChange,
    onFocus,
    required: required2,
    value
  });
  const type = !multiline ? typeProp != null ? typeProp : "text" : void 0;
  const ownerState = _extends({}, props, {
    disabled: disabledState,
    error: errorState,
    focused,
    formControlContext,
    multiline,
    type
  });
  const classes2 = useUtilityClasses18(ownerState);
  const propsToForward = {
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    autoComplete,
    autoFocus,
    id,
    onKeyDown,
    onKeyUp,
    name,
    placeholder,
    readOnly,
    type
  };
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "div";
  const rootProps = useSlotProps({
    elementType: Root42,
    getSlotProps: getRootProps,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: [classes2.root, className]
  });
  const InputComponent = multiline ? (_slots$textarea = slots.textarea) != null ? _slots$textarea : "textarea" : (_slots$input = slots.input) != null ? _slots$input : "input";
  const inputProps = useSlotProps({
    elementType: InputComponent,
    getSlotProps: (otherHandlers) => {
      return getInputProps(_extends({}, propsToForward, otherHandlers));
    },
    externalSlotProps: slotProps.input,
    additionalProps: _extends({
      rows: multiline ? rows : void 0
    }, multiline && !isHostComponent(InputComponent) && {
      minRows: rows || minRows,
      maxRows: rows || maxRows
    }),
    ownerState,
    className: classes2.input
  });
  if (true) {
    if (multiline) {
      if (rows) {
        if (minRows || maxRows) {
          console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.");
        }
      }
    }
  }
  return (0, import_jsx_runtime50.jsxs)(Root42, _extends({}, rootProps, {
    children: [startAdornment, (0, import_jsx_runtime49.jsx)(InputComponent, _extends({}, inputProps)), endAdornment]
  }));
});
true ? Input.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  "aria-describedby": import_prop_types47.default.string,
  /**
   * @ignore
   */
  "aria-label": import_prop_types47.default.string,
  /**
   * @ignore
   */
  "aria-labelledby": import_prop_types47.default.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: import_prop_types47.default.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: import_prop_types47.default.bool,
  /**
   * Class name applied to the root element.
   */
  className: import_prop_types47.default.string,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types47.default.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: import_prop_types47.default.bool,
  /**
   * Trailing adornment for this input.
   */
  endAdornment: import_prop_types47.default.node,
  /**
   * If `true`, the `input` will indicate an error by setting the `aria-invalid` attribute on the input and the `Mui-error` class on the root element.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: import_prop_types47.default.bool,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types47.default.string,
  /**
   * @ignore
   */
  inputRef: import_prop_types47.default.oneOfType([import_prop_types47.default.func, import_prop_types47.default.shape({
    current: import_prop_types47.default.object
  })]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: import_prop_types47.default.number,
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: import_prop_types47.default.number,
  /**
   * If `true`, a `textarea` element is rendered.
   * @default false
   */
  multiline: import_prop_types47.default.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: import_prop_types47.default.string,
  /**
   * @ignore
   */
  onBlur: import_prop_types47.default.func,
  /**
   * @ignore
   */
  onChange: import_prop_types47.default.func,
  /**
   * @ignore
   */
  onClick: import_prop_types47.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types47.default.func,
  /**
   * @ignore
   */
  onKeyDown: import_prop_types47.default.func,
  /**
   * @ignore
   */
  onKeyUp: import_prop_types47.default.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: import_prop_types47.default.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: import_prop_types47.default.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: import_prop_types47.default.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: import_prop_types47.default.number,
  /**
   * The props used for each slot inside the Input.
   * @default {}
   */
  slotProps: import_prop_types47.default.shape({
    input: import_prop_types47.default.oneOfType([import_prop_types47.default.func, import_prop_types47.default.object]),
    root: import_prop_types47.default.oneOfType([import_prop_types47.default.func, import_prop_types47.default.object])
  }),
  /**
   * The components used for each slot inside the InputBase.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types47.default.shape({
    input: import_prop_types47.default.elementType,
    root: import_prop_types47.default.elementType,
    textarea: import_prop_types47.default.elementType
  }),
  /**
   * Leading adornment for this input.
   */
  startAdornment: import_prop_types47.default.node,
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: import_prop_types47.default.oneOf(["button", "checkbox", "color", "date", "datetime-local", "email", "file", "hidden", "image", "month", "number", "password", "radio", "range", "reset", "search", "submit", "tel", "text", "time", "url", "week"]),
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: import_prop_types47.default.any
} : void 0;

// node_modules/@mui/base/Menu/Menu.js
init_extends();
init_objectWithoutPropertiesLoose();
var React87 = __toESM(require_react());
var import_prop_types50 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/base/Menu/menuClasses.js
function getMenuUtilityClass(slot) {
  return generateUtilityClass("MuiMenu", slot);
}
var menuClasses = generateUtilityClasses("MuiMenu", ["root", "listbox", "expanded"]);

// node_modules/@mui/base/useMenu/useMenu.js
init_extends();
var React83 = __toESM(require_react());
init_esm();

// node_modules/@mui/base/useMenu/menuReducer.js
init_extends();

// node_modules/@mui/base/useList/useList.js
init_extends();
var React78 = __toESM(require_react());
init_esm();

// node_modules/@mui/base/useList/listActions.types.js
var ListActionTypes = {
  blur: "list:blur",
  focus: "list:focus",
  itemClick: "list:itemClick",
  itemHover: "list:itemHover",
  itemsChange: "list:itemsChange",
  keyDown: "list:keyDown",
  resetHighlight: "list:resetHighlight",
  textNavigation: "list:textNavigation"
};

// node_modules/@mui/base/useList/listReducer.js
init_extends();
function findValidItemToHighlight(currentIndex, lookupDirection, items, includeDisabledItems, isItemDisabled, wrapAround) {
  if (items.length === 0 || !includeDisabledItems && items.every((item, itemIndex) => isItemDisabled(item, itemIndex))) {
    return -1;
  }
  let nextFocus = currentIndex;
  for (; ; ) {
    if (!wrapAround && lookupDirection === "next" && nextFocus === items.length || !wrapAround && lookupDirection === "previous" && nextFocus === -1) {
      return -1;
    }
    const nextFocusDisabled = includeDisabledItems ? false : isItemDisabled(items[nextFocus], nextFocus);
    if (nextFocusDisabled) {
      nextFocus += lookupDirection === "next" ? 1 : -1;
      if (wrapAround) {
        nextFocus = (nextFocus + items.length) % items.length;
      }
    } else {
      return nextFocus;
    }
  }
}
function moveHighlight(previouslyHighlightedValue, offset3, context) {
  var _items$nextIndex;
  const {
    items,
    isItemDisabled,
    disableListWrap,
    disabledItemsFocusable,
    itemComparer,
    focusManagement
  } = context;
  const defaultHighlightedIndex = focusManagement === "DOM" ? 0 : -1;
  const maxIndex = items.length - 1;
  const previouslyHighlightedIndex = previouslyHighlightedValue == null ? -1 : items.findIndex((item) => itemComparer(item, previouslyHighlightedValue));
  let nextIndexCandidate;
  let lookupDirection;
  let wrapAround = !disableListWrap;
  switch (offset3) {
    case "reset":
      if (defaultHighlightedIndex === -1) {
        return null;
      }
      nextIndexCandidate = 0;
      lookupDirection = "next";
      wrapAround = false;
      break;
    case "start":
      nextIndexCandidate = 0;
      lookupDirection = "next";
      wrapAround = false;
      break;
    case "end":
      nextIndexCandidate = maxIndex;
      lookupDirection = "previous";
      wrapAround = false;
      break;
    default: {
      const newIndex = previouslyHighlightedIndex + offset3;
      if (newIndex < 0) {
        if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(offset3) > 1) {
          nextIndexCandidate = 0;
          lookupDirection = "next";
        } else {
          nextIndexCandidate = maxIndex;
          lookupDirection = "previous";
        }
      } else if (newIndex > maxIndex) {
        if (!wrapAround || Math.abs(offset3) > 1) {
          nextIndexCandidate = maxIndex;
          lookupDirection = "previous";
        } else {
          nextIndexCandidate = 0;
          lookupDirection = "next";
        }
      } else {
        nextIndexCandidate = newIndex;
        lookupDirection = offset3 >= 0 ? "next" : "previous";
      }
    }
  }
  const nextIndex = findValidItemToHighlight(nextIndexCandidate, lookupDirection, items, disabledItemsFocusable, isItemDisabled, wrapAround);
  if (nextIndex === -1 && previouslyHighlightedValue !== null && !isItemDisabled(previouslyHighlightedValue, previouslyHighlightedIndex)) {
    return previouslyHighlightedValue;
  }
  return (_items$nextIndex = items[nextIndex]) != null ? _items$nextIndex : null;
}
function toggleSelection(item, selectedValues, selectionMode, itemComparer) {
  if (selectionMode === "none") {
    return [];
  }
  if (selectionMode === "single") {
    if (itemComparer(selectedValues[0], item)) {
      return selectedValues;
    }
    return [item];
  }
  if (selectedValues.some((sv) => itemComparer(sv, item))) {
    return selectedValues.filter((sv) => !itemComparer(sv, item));
  }
  return [...selectedValues, item];
}
function handleItemSelection(item, state, context) {
  const {
    itemComparer,
    isItemDisabled,
    selectionMode,
    items
  } = context;
  const {
    selectedValues
  } = state;
  const itemIndex = items.findIndex((i) => itemComparer(item, i));
  if (isItemDisabled(item, itemIndex)) {
    return state;
  }
  const newSelectedValues = toggleSelection(item, selectedValues, selectionMode, itemComparer);
  return _extends({}, state, {
    selectedValues: newSelectedValues,
    highlightedValue: item
  });
}
function handleKeyDown2(key, state, context) {
  const previouslySelectedValue = state.highlightedValue;
  const {
    orientation,
    pageSize: pageSize2
  } = context;
  switch (key) {
    case "Home":
      return _extends({}, state, {
        highlightedValue: moveHighlight(previouslySelectedValue, "start", context)
      });
    case "End":
      return _extends({}, state, {
        highlightedValue: moveHighlight(previouslySelectedValue, "end", context)
      });
    case "PageUp":
      return _extends({}, state, {
        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize2, context)
      });
    case "PageDown":
      return _extends({}, state, {
        highlightedValue: moveHighlight(previouslySelectedValue, pageSize2, context)
      });
    case "ArrowUp":
      if (orientation !== "vertical") {
        break;
      }
      return _extends({}, state, {
        highlightedValue: moveHighlight(previouslySelectedValue, -1, context)
      });
    case "ArrowDown":
      if (orientation !== "vertical") {
        break;
      }
      return _extends({}, state, {
        highlightedValue: moveHighlight(previouslySelectedValue, 1, context)
      });
    case "ArrowLeft": {
      if (orientation === "vertical") {
        break;
      }
      const offset3 = orientation === "horizontal-ltr" ? -1 : 1;
      return _extends({}, state, {
        highlightedValue: moveHighlight(previouslySelectedValue, offset3, context)
      });
    }
    case "ArrowRight": {
      if (orientation === "vertical") {
        break;
      }
      const offset3 = orientation === "horizontal-ltr" ? 1 : -1;
      return _extends({}, state, {
        highlightedValue: moveHighlight(previouslySelectedValue, offset3, context)
      });
    }
    case "Enter":
    case " ":
      if (state.highlightedValue === null) {
        return state;
      }
      return handleItemSelection(state.highlightedValue, state, context);
    default:
      break;
  }
  return state;
}
function handleBlur(state, context) {
  if (context.focusManagement === "DOM") {
    return state;
  }
  return _extends({}, state, {
    highlightedValue: null
  });
}
function textCriteriaMatches(nextFocus, searchString, stringifyItem) {
  var _stringifyItem;
  const text2 = (_stringifyItem = stringifyItem(nextFocus)) == null ? void 0 : _stringifyItem.trim().toLowerCase();
  if (!text2 || text2.length === 0) {
    return false;
  }
  return text2.indexOf(searchString) === 0;
}
function handleTextNavigation(state, searchString, context) {
  const {
    items,
    isItemDisabled,
    disabledItemsFocusable,
    getItemAsString
  } = context;
  const startWithCurrentItem = searchString.length > 1;
  let nextItem3 = startWithCurrentItem ? state.highlightedValue : moveHighlight(state.highlightedValue, 1, context);
  for (let index2 = 0; index2 < items.length; index2 += 1) {
    if (!nextItem3 || !startWithCurrentItem && state.highlightedValue === nextItem3) {
      return state;
    }
    if (textCriteriaMatches(nextItem3, searchString, getItemAsString) && (!isItemDisabled(nextItem3, items.indexOf(nextItem3)) || disabledItemsFocusable)) {
      return _extends({}, state, {
        highlightedValue: nextItem3
      });
    }
    nextItem3 = moveHighlight(nextItem3, 1, context);
  }
  return state;
}
function handleItemsChange(items, previousItems, state, context) {
  var _state$selectedValues;
  const {
    itemComparer,
    focusManagement
  } = context;
  let newHighlightedValue = null;
  if (state.highlightedValue != null) {
    var _items$find;
    newHighlightedValue = (_items$find = items.find((item) => itemComparer(item, state.highlightedValue))) != null ? _items$find : null;
  } else if (focusManagement === "DOM" && previousItems.length === 0) {
    newHighlightedValue = moveHighlight(null, "reset", context);
  }
  const selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];
  const newSelectedValues = selectedValues.filter((selectedValue) => items.some((item) => itemComparer(item, selectedValue)));
  return _extends({}, state, {
    highlightedValue: newHighlightedValue,
    selectedValues: newSelectedValues
  });
}
function handleResetHighlight(state, context) {
  return _extends({}, state, {
    highlightedValue: moveHighlight(null, "reset", context)
  });
}
function listReducer(state, action) {
  const {
    type,
    context
  } = action;
  switch (type) {
    case ListActionTypes.keyDown:
      return handleKeyDown2(action.key, state, context);
    case ListActionTypes.itemClick:
      return handleItemSelection(action.item, state, context);
    case ListActionTypes.blur:
      return handleBlur(state, context);
    case ListActionTypes.textNavigation:
      return handleTextNavigation(state, action.searchString, context);
    case ListActionTypes.itemsChange:
      return handleItemsChange(action.items, action.previousItems, state, context);
    case ListActionTypes.resetHighlight:
      return handleResetHighlight(state, context);
    default:
      return state;
  }
}

// node_modules/@mui/base/useList/useListChangeNotifiers.js
var React75 = __toESM(require_react());

// node_modules/@mui/base/utils/useMessageBus.js
var React74 = __toESM(require_react());
function createMessageBus() {
  const listeners = /* @__PURE__ */ new Map();
  function subscribe(topic, callback) {
    let topicListeners = listeners.get(topic);
    if (!topicListeners) {
      topicListeners = /* @__PURE__ */ new Set([callback]);
      listeners.set(topic, topicListeners);
    } else {
      topicListeners.add(callback);
    }
    return () => {
      topicListeners.delete(callback);
      if (topicListeners.size === 0) {
        listeners.delete(topic);
      }
    };
  }
  function publish(topic, ...args) {
    const topicListeners = listeners.get(topic);
    if (topicListeners) {
      topicListeners.forEach((callback) => callback(...args));
    }
  }
  return {
    subscribe,
    publish
  };
}
function useMessageBus() {
  const bus = React74.useRef();
  if (!bus.current) {
    bus.current = createMessageBus();
  }
  return bus.current;
}

// node_modules/@mui/base/useList/useListChangeNotifiers.js
var SELECTION_CHANGE_TOPIC = "select:change-selection";
var HIGHLIGHT_CHANGE_TOPIC = "select:change-highlight";
function useListChangeNotifiers() {
  const messageBus = useMessageBus();
  const notifySelectionChanged = React75.useCallback((newSelectedItems) => {
    messageBus.publish(SELECTION_CHANGE_TOPIC, newSelectedItems);
  }, [messageBus]);
  const notifyHighlightChanged = React75.useCallback((newHighlightedItem) => {
    messageBus.publish(HIGHLIGHT_CHANGE_TOPIC, newHighlightedItem);
  }, [messageBus]);
  const registerSelectionChangeHandler = React75.useCallback((handler) => {
    return messageBus.subscribe(SELECTION_CHANGE_TOPIC, handler);
  }, [messageBus]);
  const registerHighlightChangeHandler = React75.useCallback((handler) => {
    return messageBus.subscribe(HIGHLIGHT_CHANGE_TOPIC, handler);
  }, [messageBus]);
  return {
    notifySelectionChanged,
    notifyHighlightChanged,
    registerSelectionChangeHandler,
    registerHighlightChangeHandler
  };
}

// node_modules/@mui/base/utils/useLatest.js
var React76 = __toESM(require_react());
function useLatest(value, deps) {
  const ref = React76.useRef(value);
  React76.useEffect(() => {
    ref.current = value;
  }, deps != null ? deps : [value]);
  return ref;
}

// node_modules/@mui/base/utils/useTextNavigation.js
var React77 = __toESM(require_react());
var TEXT_NAVIGATION_RESET_TIMEOUT = 500;
function useTextNavigation(callback) {
  const textCriteriaRef = React77.useRef({
    searchString: "",
    lastTime: null
  });
  return React77.useCallback((event) => {
    if (event.key.length === 1 && event.key !== " ") {
      const textCriteria = textCriteriaRef.current;
      const lowerKey = event.key.toLowerCase();
      const currentTime = performance.now();
      if (textCriteria.searchString.length > 0 && textCriteria.lastTime && currentTime - textCriteria.lastTime > TEXT_NAVIGATION_RESET_TIMEOUT) {
        textCriteria.searchString = lowerKey;
      } else if (textCriteria.searchString.length !== 1 || lowerKey !== textCriteria.searchString) {
        textCriteria.searchString += lowerKey;
      }
      textCriteria.lastTime = currentTime;
      callback(textCriteria.searchString, event);
    }
  }, [callback]);
}

// node_modules/@mui/base/useList/useList.js
var EMPTY_OBJECT2 = {};
var NOOP2 = () => {
};
var defaultItemComparer = (optionA, optionB) => optionA === optionB;
var defaultIsItemDisabled = () => false;
var defaultItemStringifier = (item) => typeof item === "string" ? item : String(item);
var defaultGetInitialState = () => ({
  highlightedValue: null,
  selectedValues: []
});
function useList2(params) {
  const {
    controlledProps = EMPTY_OBJECT2,
    disabledItemsFocusable = false,
    disableListWrap = false,
    focusManagement = "activeDescendant",
    getInitialState = defaultGetInitialState,
    getItemDomElement,
    getItemId,
    isItemDisabled = defaultIsItemDisabled,
    rootRef: externalListRef,
    onStateChange = NOOP2,
    items,
    itemComparer = defaultItemComparer,
    getItemAsString = defaultItemStringifier,
    onChange,
    onHighlightChange,
    onItemsChange,
    orientation = "vertical",
    pageSize: pageSize2 = 5,
    reducerActionContext = EMPTY_OBJECT2,
    selectionMode = "single",
    stateReducer: externalReducer
  } = params;
  if (true) {
    if (focusManagement === "DOM" && getItemDomElement == null) {
      throw new Error("useList: The `getItemDomElement` prop is required when using the `DOM` focus management.");
    }
    if (focusManagement === "activeDescendant" && getItemId == null) {
      throw new Error("useList: The `getItemId` prop is required when using the `activeDescendant` focus management.");
    }
  }
  const listRef = React78.useRef(null);
  const handleRef = useForkRef(externalListRef, listRef);
  const handleHighlightChange = React78.useCallback((event, value, reason) => {
    onHighlightChange == null ? void 0 : onHighlightChange(event, value, reason);
    if (focusManagement === "DOM" && value != null && (reason === ListActionTypes.itemClick || reason === ListActionTypes.keyDown || reason === ListActionTypes.textNavigation)) {
      var _getItemDomElement;
      getItemDomElement == null || (_getItemDomElement = getItemDomElement(value)) == null ? void 0 : _getItemDomElement.focus();
    }
  }, [getItemDomElement, onHighlightChange, focusManagement]);
  const stateComparers = React78.useMemo(() => ({
    highlightedValue: itemComparer,
    selectedValues: (valuesArray1, valuesArray2) => areArraysEqual(valuesArray1, valuesArray2, itemComparer)
  }), [itemComparer]);
  const handleStateChange = React78.useCallback((event, field, value, reason, state2) => {
    onStateChange == null ? void 0 : onStateChange(event, field, value, reason, state2);
    switch (field) {
      case "highlightedValue":
        handleHighlightChange(event, value, reason);
        break;
      case "selectedValues":
        onChange == null ? void 0 : onChange(event, value, reason);
        break;
      default:
        break;
    }
  }, [handleHighlightChange, onChange, onStateChange]);
  const listActionContext = React78.useMemo(() => {
    return {
      disabledItemsFocusable,
      disableListWrap,
      focusManagement,
      isItemDisabled,
      itemComparer,
      items,
      getItemAsString,
      onHighlightChange: handleHighlightChange,
      orientation,
      pageSize: pageSize2,
      selectionMode,
      stateComparers
    };
  }, [disabledItemsFocusable, disableListWrap, focusManagement, isItemDisabled, itemComparer, items, getItemAsString, handleHighlightChange, orientation, pageSize2, selectionMode, stateComparers]);
  const initialState3 = getInitialState();
  const reducer2 = externalReducer != null ? externalReducer : listReducer;
  const actionContext = React78.useMemo(() => _extends({}, reducerActionContext, listActionContext), [reducerActionContext, listActionContext]);
  const [state, dispatch] = useControllableReducer({
    reducer: reducer2,
    actionContext,
    initialState: initialState3,
    controlledProps,
    stateComparers,
    onStateChange: handleStateChange
  });
  const {
    highlightedValue,
    selectedValues
  } = state;
  const handleTextNavigation2 = useTextNavigation((searchString, event) => dispatch({
    type: ListActionTypes.textNavigation,
    event,
    searchString
  }));
  const latestSelectedValues = useLatest(selectedValues);
  const latestHighlightedValue = useLatest(highlightedValue);
  const previousItems = React78.useRef([]);
  React78.useEffect(() => {
    if (areArraysEqual(previousItems.current, items, itemComparer)) {
      return;
    }
    dispatch({
      type: ListActionTypes.itemsChange,
      event: null,
      items,
      previousItems: previousItems.current
    });
    previousItems.current = items;
    onItemsChange == null ? void 0 : onItemsChange(items);
  }, [items, itemComparer, dispatch, onItemsChange]);
  const {
    notifySelectionChanged,
    notifyHighlightChanged,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler
  } = useListChangeNotifiers();
  React78.useEffect(() => {
    notifySelectionChanged(selectedValues);
  }, [selectedValues, notifySelectionChanged]);
  React78.useEffect(() => {
    notifyHighlightChanged(highlightedValue);
  }, [highlightedValue, notifyHighlightChanged]);
  const createHandleKeyDown = (other) => (event) => {
    var _other$onKeyDown;
    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);
    if (event.defaultMuiPrevented) {
      return;
    }
    const keysToPreventDefault = ["Home", "End", "PageUp", "PageDown"];
    if (orientation === "vertical") {
      keysToPreventDefault.push("ArrowUp", "ArrowDown");
    } else {
      keysToPreventDefault.push("ArrowLeft", "ArrowRight");
    }
    if (focusManagement === "activeDescendant") {
      keysToPreventDefault.push(" ", "Enter");
    }
    if (keysToPreventDefault.includes(event.key)) {
      event.preventDefault();
    }
    dispatch({
      type: ListActionTypes.keyDown,
      key: event.key,
      event
    });
    handleTextNavigation2(event);
  };
  const createHandleBlur = (other) => (event) => {
    var _other$onBlur, _listRef$current;
    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);
    if (event.defaultMuiPrevented) {
      return;
    }
    if ((_listRef$current = listRef.current) != null && _listRef$current.contains(event.relatedTarget)) {
      return;
    }
    dispatch({
      type: ListActionTypes.blur,
      event
    });
  };
  const getRootProps = (otherHandlers = {}) => {
    return _extends({}, otherHandlers, {
      "aria-activedescendant": focusManagement === "activeDescendant" && highlightedValue != null ? getItemId(highlightedValue) : void 0,
      onBlur: createHandleBlur(otherHandlers),
      onKeyDown: createHandleKeyDown(otherHandlers),
      tabIndex: focusManagement === "DOM" ? -1 : 0,
      ref: handleRef
    });
  };
  const getItemState = React78.useCallback((item) => {
    var _latestSelectedValues;
    const index2 = items.findIndex((i) => itemComparer(i, item));
    const selected = ((_latestSelectedValues = latestSelectedValues.current) != null ? _latestSelectedValues : []).some((value) => value != null && itemComparer(item, value));
    const disabled = isItemDisabled(item, index2);
    const highlighted = latestHighlightedValue.current != null && itemComparer(item, latestHighlightedValue.current);
    const focusable = focusManagement === "DOM";
    return {
      disabled,
      focusable,
      highlighted,
      index: index2,
      selected
    };
  }, [items, isItemDisabled, itemComparer, latestSelectedValues, latestHighlightedValue, focusManagement]);
  const contextValue = React78.useMemo(() => ({
    dispatch,
    getItemState,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler
  }), [dispatch, getItemState, registerHighlightChangeHandler, registerSelectionChangeHandler]);
  React78.useDebugValue({
    state
  });
  return {
    contextValue,
    dispatch,
    getRootProps,
    rootRef: handleRef,
    state
  };
}

// node_modules/@mui/base/useList/useListItem.js
init_extends();
var React81 = __toESM(require_react());
init_esm();

// node_modules/@mui/base/utils/useForcedRerendering.js
var React79 = __toESM(require_react());
function useForcedRerendering() {
  const [, setState] = React79.useState({});
  return React79.useCallback(() => {
    setState({});
  }, []);
}

// node_modules/@mui/base/useList/ListContext.js
var React80 = __toESM(require_react());
var ListContext2 = React80.createContext(null);
if (true) {
  ListContext2.displayName = "ListContext";
}

// node_modules/@mui/base/useList/useListItem.js
function useListItem(parameters) {
  const {
    handlePointerOverEvents = false,
    item,
    rootRef: externalRef
  } = parameters;
  const itemRef = React81.useRef(null);
  const handleRef = useForkRef(itemRef, externalRef);
  const listContext = React81.useContext(ListContext2);
  if (!listContext) {
    throw new Error("useListItem must be used within a ListProvider");
  }
  const {
    dispatch,
    getItemState,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler
  } = listContext;
  const {
    highlighted,
    selected,
    focusable
  } = getItemState(item);
  const rerender = useForcedRerendering();
  useEnhancedEffect_default(() => {
    function updateHighlightedState(highlightedItem) {
      if (highlightedItem === item && !highlighted) {
        rerender();
      } else if (highlightedItem !== item && highlighted) {
        rerender();
      }
    }
    return registerHighlightChangeHandler(updateHighlightedState);
  });
  useEnhancedEffect_default(() => {
    function updateSelectedState(selectedItems) {
      if (!selected) {
        if (selectedItems.includes(item)) {
          rerender();
        }
      } else if (!selectedItems.includes(item)) {
        rerender();
      }
    }
    return registerSelectionChangeHandler(updateSelectedState);
  }, [registerSelectionChangeHandler, rerender, selected, item]);
  const createHandleClick = React81.useCallback((other) => (event) => {
    var _other$onClick;
    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);
    if (event.defaultPrevented) {
      return;
    }
    dispatch({
      type: ListActionTypes.itemClick,
      item,
      event
    });
  }, [dispatch, item]);
  const createHandlePointerOver = React81.useCallback((other) => (event) => {
    var _other$onMouseOver;
    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);
    if (event.defaultPrevented) {
      return;
    }
    dispatch({
      type: ListActionTypes.itemHover,
      item,
      event
    });
  }, [dispatch, item]);
  let tabIndex;
  if (focusable) {
    tabIndex = highlighted ? 0 : -1;
  }
  const getRootProps = (otherHandlers = {}) => _extends({}, otherHandlers, {
    onClick: createHandleClick(otherHandlers),
    onPointerOver: handlePointerOverEvents ? createHandlePointerOver(otherHandlers) : void 0,
    ref: handleRef,
    tabIndex
  });
  return {
    getRootProps,
    highlighted,
    rootRef: handleRef,
    selected
  };
}

// node_modules/@mui/base/useMenu/menuReducer.js
function menuReducer(state, action) {
  if (action.type === ListActionTypes.itemHover) {
    return state;
  }
  const newState = listReducer(state, action);
  if (newState.highlightedValue === null && action.context.items.length > 0) {
    return _extends({}, newState, {
      highlightedValue: action.context.items[0]
    });
  }
  if (action.type === ListActionTypes.keyDown) {
    if (action.event.key === "Escape") {
      return _extends({}, newState, {
        open: false
      });
    }
  }
  if (action.type === ListActionTypes.blur) {
    var _action$context$listb;
    if (!((_action$context$listb = action.context.listboxRef.current) != null && _action$context$listb.contains(action.event.relatedTarget))) {
      var _action$context$listb2, _action$event$related;
      const listboxId = (_action$context$listb2 = action.context.listboxRef.current) == null ? void 0 : _action$context$listb2.getAttribute("id");
      const controlledBy = (_action$event$related = action.event.relatedTarget) == null ? void 0 : _action$event$related.getAttribute("aria-controls");
      if (listboxId && controlledBy && listboxId === controlledBy) {
        return newState;
      }
      return _extends({}, newState, {
        open: false,
        highlightedValue: action.context.items[0]
      });
    }
  }
  return newState;
}

// node_modules/@mui/base/utils/useCompound.js
var React82 = __toESM(require_react());
var CompoundComponentContext = React82.createContext(null);
CompoundComponentContext.displayName = "CompoundComponentContext";
function sortSubitems(subitems) {
  const subitemsArray = Array.from(subitems.keys()).map((key) => {
    const subitem = subitems.get(key);
    return {
      key,
      subitem
    };
  });
  subitemsArray.sort((a, b) => {
    const aNode = a.subitem.ref.current;
    const bNode = b.subitem.ref.current;
    if (aNode === null || bNode === null || aNode === bNode) {
      return 0;
    }
    return aNode.compareDocumentPosition(bNode) & Node.DOCUMENT_POSITION_PRECEDING ? 1 : -1;
  });
  return new Map(subitemsArray.map((item) => [item.key, item.subitem]));
}
function useCompoundParent() {
  const [subitems, setSubitems] = React82.useState(/* @__PURE__ */ new Map());
  const subitemKeys = React82.useRef(/* @__PURE__ */ new Set());
  const deregisterItem = React82.useCallback(function deregisterItem2(id) {
    subitemKeys.current.delete(id);
    setSubitems((previousState) => {
      const newState = new Map(previousState);
      newState.delete(id);
      return newState;
    });
  }, []);
  const registerItem = React82.useCallback(function registerItem2(id, item) {
    let providedOrGeneratedId;
    if (typeof id === "function") {
      providedOrGeneratedId = id(subitemKeys.current);
    } else {
      providedOrGeneratedId = id;
    }
    subitemKeys.current.add(providedOrGeneratedId);
    setSubitems((previousState) => {
      const newState = new Map(previousState);
      newState.set(providedOrGeneratedId, item);
      return newState;
    });
    return {
      id: providedOrGeneratedId,
      deregister: () => deregisterItem(providedOrGeneratedId)
    };
  }, [deregisterItem]);
  const sortedSubitems = React82.useMemo(() => sortSubitems(subitems), [subitems]);
  const getItemIndex = React82.useCallback(function getItemIndex2(id) {
    return Array.from(sortedSubitems.keys()).indexOf(id);
  }, [sortedSubitems]);
  const contextValue = React82.useMemo(() => ({
    getItemIndex,
    registerItem,
    totalSubitemCount: subitems.size
  }), [getItemIndex, registerItem, subitems.size]);
  return {
    contextValue,
    subitems: sortedSubitems
  };
}

// node_modules/@mui/base/utils/combineHooksSlotProps.js
init_extends();
function combineHooksSlotProps(getFirstProps, getSecondProps) {
  return function getCombinedProps(external = {}) {
    const firstResult = _extends({}, external, getFirstProps(external));
    const result = _extends({}, firstResult, getSecondProps(firstResult));
    return result;
  };
}

// node_modules/@mui/base/useMenu/useMenu.js
var FALLBACK_MENU_CONTEXT = {
  dispatch: () => {
  },
  popupId: "",
  registerPopup: () => {
  },
  registerTrigger: () => {
  },
  state: {
    open: true
  },
  triggerElement: null
};
function useMenu(parameters = {}) {
  var _useId, _React$useContext;
  const {
    listboxRef: listboxRefProp,
    onItemsChange,
    id: idParam
  } = parameters;
  const rootRef = React83.useRef(null);
  const handleRef = useForkRef(rootRef, listboxRefProp);
  const listboxId = (_useId = useId(idParam)) != null ? _useId : "";
  const {
    state: {
      open
    },
    dispatch: menuDispatch,
    triggerElement,
    registerPopup
  } = (_React$useContext = React83.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT;
  const isInitiallyOpen = React83.useRef(open);
  const {
    subitems,
    contextValue: compoundComponentContextValue
  } = useCompoundParent();
  const subitemKeys = React83.useMemo(() => Array.from(subitems.keys()), [subitems]);
  const getItemDomElement = React83.useCallback((itemId) => {
    var _subitems$get$ref$cur, _subitems$get;
    if (itemId == null) {
      return null;
    }
    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;
  }, [subitems]);
  const {
    dispatch: listDispatch,
    getRootProps: getListRootProps,
    contextValue: listContextValue,
    state: {
      highlightedValue
    },
    rootRef: mergedListRef
  } = useList2({
    disabledItemsFocusable: true,
    focusManagement: "DOM",
    getItemDomElement,
    getInitialState: () => ({
      selectedValues: [],
      highlightedValue: null
    }),
    isItemDisabled: (id) => {
      var _subitems$get2;
      return (subitems == null || (_subitems$get2 = subitems.get(id)) == null ? void 0 : _subitems$get2.disabled) || false;
    },
    items: subitemKeys,
    getItemAsString: (id) => {
      var _subitems$get3, _subitems$get4;
      return ((_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.label) || ((_subitems$get4 = subitems.get(id)) == null || (_subitems$get4 = _subitems$get4.ref.current) == null ? void 0 : _subitems$get4.innerText);
    },
    rootRef: handleRef,
    onItemsChange,
    reducerActionContext: {
      listboxRef: rootRef
    },
    selectionMode: "none",
    stateReducer: menuReducer
  });
  useEnhancedEffect_default(() => {
    registerPopup(listboxId);
  }, [listboxId, registerPopup]);
  React83.useEffect(() => {
    if (open && highlightedValue === subitemKeys[0] && !isInitiallyOpen.current) {
      var _subitems$get5;
      (_subitems$get5 = subitems.get(subitemKeys[0])) == null || (_subitems$get5 = _subitems$get5.ref) == null || (_subitems$get5 = _subitems$get5.current) == null ? void 0 : _subitems$get5.focus();
    }
  }, [open, highlightedValue, subitems, subitemKeys]);
  React83.useEffect(() => {
    var _rootRef$current;
    if ((_rootRef$current = rootRef.current) != null && _rootRef$current.contains(document.activeElement) && highlightedValue !== null) {
      var _subitems$get6;
      subitems == null || (_subitems$get6 = subitems.get(highlightedValue)) == null || (_subitems$get6 = _subitems$get6.ref.current) == null ? void 0 : _subitems$get6.focus();
    }
  }, [highlightedValue, subitems]);
  const createHandleBlur = (otherHandlers) => (event) => {
    var _otherHandlers$onBlur, _rootRef$current2;
    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
    if (event.defaultMuiPrevented) {
      return;
    }
    if ((_rootRef$current2 = rootRef.current) != null && _rootRef$current2.contains(event.relatedTarget) || event.relatedTarget === triggerElement) {
      return;
    }
    menuDispatch({
      type: DropdownActionTypes.blur,
      event
    });
  };
  const createHandleKeyDown = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyD;
    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);
    if (event.defaultMuiPrevented) {
      return;
    }
    if (event.key === "Escape") {
      menuDispatch({
        type: DropdownActionTypes.escapeKeyDown,
        event
      });
    }
  };
  const getOwnListboxHandlers = (otherHandlers = {}) => ({
    onBlur: createHandleBlur(otherHandlers),
    onKeyDown: createHandleKeyDown(otherHandlers)
  });
  const getListboxProps = (otherHandlers = {}) => {
    const getCombinedRootProps = combineHooksSlotProps(getOwnListboxHandlers, getListRootProps);
    return _extends({}, getCombinedRootProps(otherHandlers), {
      id: listboxId,
      role: "menu"
    });
  };
  React83.useDebugValue({
    subitems,
    highlightedValue
  });
  return {
    contextValue: _extends({}, compoundComponentContextValue, listContextValue),
    dispatch: listDispatch,
    getListboxProps,
    highlightedValue,
    listboxRef: mergedListRef,
    menuItems: subitems,
    open,
    triggerElement
  };
}

// node_modules/@mui/base/useMenu/MenuProvider.js
var React84 = __toESM(require_react());
var import_jsx_runtime51 = __toESM(require_jsx_runtime());
function MenuProvider(props) {
  const {
    value,
    children: children2
  } = props;
  const {
    dispatch,
    getItemIndex,
    getItemState,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler,
    registerItem,
    totalSubitemCount
  } = value;
  const listContextValue = React84.useMemo(() => ({
    dispatch,
    getItemState,
    getItemIndex,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler
  }), [dispatch, getItemIndex, getItemState, registerHighlightChangeHandler, registerSelectionChangeHandler]);
  const compoundComponentContextValue = React84.useMemo(() => ({
    getItemIndex,
    registerItem,
    totalSubitemCount
  }), [registerItem, getItemIndex, totalSubitemCount]);
  return (0, import_jsx_runtime51.jsx)(CompoundComponentContext.Provider, {
    value: compoundComponentContextValue,
    children: (0, import_jsx_runtime51.jsx)(ListContext2.Provider, {
      value: listContextValue,
      children: children2
    })
  });
}

// node_modules/@mui/base/Menu/Menu.js
init_composeClasses3();

// node_modules/@mui/base/Popper/Popper.js
init_extends();
init_objectWithoutPropertiesLoose();
var React86 = __toESM(require_react());
init_esm();

// node_modules/@popperjs/core/lib/enums.js
var top2 = "top";
var bottom2 = "bottom";
var right2 = "right";
var left2 = "left";
var auto = "auto";
var basePlacements = [top2, bottom2, right2, left2];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

// node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}

// node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node2) {
  if (node2 == null) {
    return window;
  }
  if (node2.toString() !== "[object Window]") {
    var ownerDocument2 = node2.ownerDocument;
    return ownerDocument2 ? ownerDocument2.defaultView || window : window;
  }
  return node2;
}

// node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement(node2) {
  var OwnElement = getWindow(node2).Element;
  return node2 instanceof OwnElement || node2 instanceof Element;
}
function isHTMLElement(node2) {
  var OwnElement = getWindow(node2).HTMLElement;
  return node2 instanceof OwnElement || node2 instanceof HTMLElement;
}
function isShadowRoot(node2) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node2).ShadowRoot;
  return node2 instanceof OwnElement || node2 instanceof ShadowRoot;
}

// node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref2) {
  var state = _ref2.state;
  Object.keys(state.elements).forEach(function(name) {
    var style4 = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name];
    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style4);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state.elements).forEach(function(name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
      var style4 = styleProperties.reduce(function(style5, property) {
        style5[property] = "";
        return style5;
      }, {});
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style4);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
var applyStyles_default = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect,
  requires: ["computeStyles"]
};

// node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}

// node_modules/@popperjs/core/lib/utils/math.js
var max = Math.max;
var min = Math.min;
var round2 = Math.round;

// node_modules/@popperjs/core/lib/utils/userAgent.js
function getUAString() {
  var uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function(item) {
      return item.brand + "/" + item.version;
    }).join(" ");
  }
  return navigator.userAgent;
}

// node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}

// node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round2(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round2(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  var _ref2 = isElement(element) ? getWindow(element) : window, visualViewport = _ref2.visualViewport;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width2 = clientRect.width / scaleX;
  var height2 = clientRect.height / scaleY;
  return {
    width: width2,
    height: height2,
    top: y,
    right: x + width2,
    bottom: y + height2,
    left: x,
    x,
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width2 = element.offsetWidth;
  var height2 = element.offsetHeight;
  if (Math.abs(clientRect.width - width2) <= 1) {
    width2 = clientRect.width;
  }
  if (Math.abs(clientRect.height - height2) <= 1) {
    height2 = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width2,
    height: height2
  };
}

// node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next2 = child;
    do {
      if (next2 && parent.isSameNode(next2)) {
        return true;
      }
      next2 = next2.parentNode || next2.host;
    } while (next2);
  }
  return false;
}

// node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}

// node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element) {
  return ((isElement(element) ? element.ownerDocument : (
    // $FlowFixMe[prop-missing]
    element.document
  )) || window.document).documentElement;
}

// node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || // DOM Element detected
    (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element)
  );
}

// node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());
  if (isIE && isHTMLElement(element)) {
    var elementCss = getComputedStyle(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css2 = getComputedStyle(currentNode);
    if (css2.transform !== "none" || css2.perspective !== "none" || css2.contain === "paint" || ["transform", "perspective"].indexOf(css2.willChange) !== -1 || isFirefox && css2.willChange === "filter" || isFirefox && css2.filter && css2.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}

// node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}

// node_modules/@popperjs/core/lib/utils/within.js
function within(min3, value, max3) {
  return max(min3, min(value, max3));
}
function withinMaxClamp(min3, value, max3) {
  var v = within(min3, value, max3);
  return v > max3 ? max3 : v;
}

// node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

// node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

// node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

// node_modules/@popperjs/core/lib/modifiers/arrow.js
var toPaddingObject = function toPaddingObject2(padding2, state) {
  padding2 = typeof padding2 === "function" ? padding2(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding2;
  return mergePaddingObject(typeof padding2 !== "number" ? padding2 : expandToHashMap(padding2, basePlacements));
};
function arrow(_ref2) {
  var _state$modifiersData$;
  var state = _ref2.state, name = _ref2.name, options = _ref2.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left2, right2].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top2 : left2;
  var maxProp = axis === "y" ? bottom2 : right2;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min3 = paddingObject[minProp];
  var max3 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset3 = within(min3, center, max3);
  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset3, _state$modifiersData$.centerOffset = offset3 - center, _state$modifiersData$);
}
function effect2(_ref2) {
  var state = _ref2.state, options = _ref2.options;
  var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }
  state.elements.arrow = arrowElement;
}
var arrow_default = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect: effect2,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};

// node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}

// node_modules/@popperjs/core/lib/modifiers/computeStyles.js
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref2, win) {
  var x = _ref2.x, y = _ref2.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round2(x * dpr) / dpr || 0,
    y: round2(y * dpr) / dpr || 0
  };
}
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position3 = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left2;
  var sideY = top2;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle(offsetParent).position !== "static" && position3 === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top2 || (placement === left2 || placement === right2) && variation === end) {
      sideY = bottom2;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        offsetParent[heightProp]
      );
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left2 || (placement === top2 || placement === bottom2) && variation === end) {
      sideX = right2;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        offsetParent[widthProp]
      );
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position: position3
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x,
    y
  }, getWindow(popper2)) : {
    x,
    y
  };
  x = _ref4.x;
  y = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
function computeStyles(_ref5) {
  var state = _ref5.state, options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration,
    isFixed: state.options.strategy === "fixed"
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-placement": state.placement
  });
}
var computeStyles_default = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};

// node_modules/@popperjs/core/lib/modifiers/eventListeners.js
var passive = {
  passive: true
};
function effect3(_ref2) {
  var state = _ref2.state, instance = _ref2.instance, options = _ref2.options;
  var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
var eventListeners_default = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function fn() {
  },
  effect: effect3,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash2 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash2[matched];
  });
}

// node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var hash3 = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash3[matched];
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node2) {
  var win = getWindow(node2);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

// node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html3 = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width2 = html3.clientWidth;
  var height2 = html3.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width2 = visualViewport.width;
    height2 = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width: width2,
    height: height2,
    x: x + getWindowScrollBarX(element),
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html3 = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body2 = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width2 = max(html3.scrollWidth, html3.clientWidth, body2 ? body2.scrollWidth : 0, body2 ? body2.clientWidth : 0);
  var height2 = max(html3.scrollHeight, html3.clientHeight, body2 ? body2.scrollHeight : 0, body2 ? body2.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;
  if (getComputedStyle(body2 || html3).direction === "rtl") {
    x += max(html3.clientWidth, body2 ? body2.clientWidth : 0) - width2;
  }
  return {
    width: width2,
    height: height2,
    x,
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle(element), overflow2 = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow2 + overflowY + overflowX);
}

// node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node2) {
  if (["html", "body", "#document"].indexOf(getNodeName(node2)) >= 0) {
    return node2.ownerDocument.body;
  }
  if (isHTMLElement(node2) && isScrollParent(node2)) {
    return node2;
  }
  return getScrollParent(getParentNode(node2));
}

// node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    updatedList.concat(listScrollParents(getParentNode(target)))
  );
}

// node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === "fixed");
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

// node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref2) {
  var reference2 = _ref2.reference, element = _ref2.element, placement = _ref2.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top2:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom2:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right2:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left2:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}

// node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding2 = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding2 !== "number" ? padding2 : expandToHashMap(padding2, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset3 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply = [right2, bottom2].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top2, bottom2].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset3[axis] * multiply;
    });
  }
  return overflowOffsets;
}

// node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding2 = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements3 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements3.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements3;
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding: padding2
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a, b) {
    return overflows[a] - overflows[b];
  });
}

// node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref2) {
  var state = _ref2.state, options = _ref2.options, name = _ref2.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding2 = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements3 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding: padding2,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements3[0];
  for (var i = 0; i < placements3.length; i++) {
    var placement = placements3[i];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top2, bottom2].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow2 = detectOverflow(state, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding: padding2
    });
    var mainVariationSide = isVertical ? isStartVariation ? right2 : left2 : isStartVariation ? bottom2 : top2;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow2[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow2[mainVariationSide] <= 0, overflow2[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop2(_i2) {
      var fittingPlacement = placements3.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
}
var flip_default = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};

// node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow2, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow2.top - rect.height - preventedOffsets.y,
    right: overflow2.right - rect.width + preventedOffsets.x,
    bottom: overflow2.bottom - rect.height + preventedOffsets.y,
    left: overflow2.left - rect.width - preventedOffsets.x
  };
}
function isAnySideFullyClipped(overflow2) {
  return [top2, right2, bottom2, left2].some(function(side) {
    return overflow2[side] >= 0;
  });
}
function hide(_ref2) {
  var state = _ref2.state, name = _ref2.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
var hide_default = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hide
};

// node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset3) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left2, top2].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref2 = typeof offset3 === "function" ? offset3(Object.assign({}, rects, {
    placement
  })) : offset3, skidding = _ref2[0], distance = _ref2[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left2, right2].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
function offset(_ref2) {
  var state = _ref2.state, options = _ref2.options, name = _ref2.name;
  var _options$offset = options.offset, offset3 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset3);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }
  state.modifiersData[name] = data;
}
var offset_default = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};

// node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref2) {
  var state = _ref2.state, name = _ref2.name;
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: "absolute",
    placement: state.placement
  });
}
var popperOffsets_default = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}

// node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref2) {
  var state = _ref2.state, options = _ref2.options, name = _ref2.name;
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding2 = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow2 = detectOverflow(state, {
    boundary,
    rootBoundary,
    padding: padding2,
    altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top2 : left2;
    var altSide = mainAxis === "y" ? bottom2 : right2;
    var len = mainAxis === "y" ? "height" : "width";
    var offset3 = popperOffsets2[mainAxis];
    var min3 = offset3 + overflow2[mainSide];
    var max3 = offset3 - overflow2[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset3 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset3 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min3, tetherMin) : min3, offset3, tether ? max(max3, tetherMax) : max3);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset3;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top2 : left2;
    var _altSide = mainAxis === "x" ? bottom2 : right2;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow2[_mainSide];
    var _max = _offset - overflow2[_altSide];
    var isOriginSide = [top2, left2].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
}
var preventOverflow_default = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};

// node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node2) {
  if (node2 === getWindow(node2) || !isHTMLElement(node2)) {
    return getWindowScroll(node2);
  } else {
    return getHTMLElementScroll(node2);
  }
}

// node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round2(rect.width) / element.offsetWidth || 1;
  var scaleY = round2(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

// node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order2(modifiers) {
  var map = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  var orderedModifiers = order2(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

// node_modules/@popperjs/core/lib/utils/debounce.js
function debounce2(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}

// node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}

// node_modules/@popperjs/core/lib/createPopper.js
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers3 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions5 = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper4(reference2, popper2, options) {
    if (options === void 0) {
      options = defaultOptions5;
    }
    var state = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions5),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state,
      setOptions: function setOptions(setOptionsAction) {
        var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions5, state.options, options2);
        state.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers3, state.options.modifiers)));
        state.orderedModifiers = orderedModifiers.filter(function(m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          return;
        }
        state.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state.reset = false;
        state.placement = state.options.placement;
        state.orderedModifiers.forEach(function(modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        for (var index2 = 0; index2 < state.orderedModifiers.length; index2++) {
          if (state.reset === true) {
            state.reset = false;
            index2 = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index2], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state = fn2({
              state,
              options: _options,
              name,
              instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce2(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference2, popper2)) {
      return instance;
    }
    instance.setOptions(options).then(function(state2) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state2);
      }
    });
    function runModifierEffects() {
      state.orderedModifiers.forEach(function(_ref2) {
        var name = _ref2.name, _ref$options = _ref2.options, options2 = _ref$options === void 0 ? {} : _ref$options, effect4 = _ref2.effect;
        if (typeof effect4 === "function") {
          var cleanupFn = effect4({
            state,
            name,
            instance,
            options: options2
          });
          var noopFn = function noopFn2() {
          };
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}
var createPopper = popperGenerator();

// node_modules/@popperjs/core/lib/popper-lite.js
var defaultModifiers = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default];
var createPopper2 = popperGenerator({
  defaultModifiers
});

// node_modules/@popperjs/core/lib/popper.js
var defaultModifiers2 = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default];
var createPopper3 = popperGenerator({
  defaultModifiers: defaultModifiers2
});

// node_modules/@mui/base/Popper/Popper.js
var import_prop_types49 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/base/Portal/Portal.js
var React85 = __toESM(require_react());
var ReactDOM3 = __toESM(require_react_dom());
var import_prop_types48 = __toESM(require_prop_types());
init_esm();
var import_jsx_runtime52 = __toESM(require_jsx_runtime());
function getContainer(container) {
  return typeof container === "function" ? container() : container;
}
var Portal = React85.forwardRef(function Portal2(props, forwardedRef) {
  const {
    children: children2,
    container,
    disablePortal = false
  } = props;
  const [mountNode, setMountNode] = React85.useState(null);
  const handleRef = useForkRef(React85.isValidElement(children2) ? children2.ref : null, forwardedRef);
  useEnhancedEffect_default(() => {
    if (!disablePortal) {
      setMountNode(getContainer(container) || document.body);
    }
  }, [container, disablePortal]);
  useEnhancedEffect_default(() => {
    if (mountNode && !disablePortal) {
      setRef(forwardedRef, mountNode);
      return () => {
        setRef(forwardedRef, null);
      };
    }
    return void 0;
  }, [forwardedRef, mountNode, disablePortal]);
  if (disablePortal) {
    if (React85.isValidElement(children2)) {
      const newProps = {
        ref: handleRef
      };
      return React85.cloneElement(children2, newProps);
    }
    return (0, import_jsx_runtime52.jsx)(React85.Fragment, {
      children: children2
    });
  }
  return (0, import_jsx_runtime52.jsx)(React85.Fragment, {
    children: mountNode ? ReactDOM3.createPortal(children2, mountNode) : mountNode
  });
});
true ? Portal.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The children to render into the `container`.
   */
  children: import_prop_types48.default.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: import_prop_types48.default.oneOfType([HTMLElementType, import_prop_types48.default.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: import_prop_types48.default.bool
} : void 0;
if (true) {
  Portal["propTypes"] = exactProp(Portal.propTypes);
}

// node_modules/@mui/base/Popper/popperClasses.js
function getPopperUtilityClass(slot) {
  return generateUtilityClass("MuiPopper", slot);
}
var popperClasses = generateUtilityClasses("MuiPopper", ["root"]);

// node_modules/@mui/base/Popper/Popper.js
var import_jsx_runtime53 = __toESM(require_jsx_runtime());
var _excluded39 = ["anchorEl", "children", "direction", "disablePortal", "modifiers", "open", "placement", "popperOptions", "popperRef", "slotProps", "slots", "TransitionProps", "ownerState"];
var _excluded210 = ["anchorEl", "children", "container", "direction", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition", "slotProps", "slots"];
function flipPlacement(placement, direction) {
  if (direction === "ltr") {
    return placement;
  }
  switch (placement) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return placement;
  }
}
function resolveAnchorEl(anchorEl) {
  return typeof anchorEl === "function" ? anchorEl() : anchorEl;
}
function isHTMLElement2(element) {
  return element.nodeType !== void 0;
}
function isVirtualElement(element) {
  return !isHTMLElement2(element);
}
var useUtilityClasses19 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, useClassNamesOverride(getPopperUtilityClass));
};
var defaultPopperOptions = {};
var PopperTooltip = React86.forwardRef(function PopperTooltip2(props, forwardedRef) {
  var _slots$root;
  const {
    anchorEl,
    children: children2,
    direction,
    disablePortal,
    modifiers,
    open,
    placement: initialPlacement,
    popperOptions,
    popperRef: popperRefProp,
    slotProps = {},
    slots = {},
    TransitionProps
    // @ts-ignore internal logic
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded39);
  const tooltipRef = React86.useRef(null);
  const ownRef = useForkRef(tooltipRef, forwardedRef);
  const popperRef = React86.useRef(null);
  const handlePopperRef = useForkRef(popperRef, popperRefProp);
  const handlePopperRefRef = React86.useRef(handlePopperRef);
  useEnhancedEffect_default(() => {
    handlePopperRefRef.current = handlePopperRef;
  }, [handlePopperRef]);
  React86.useImperativeHandle(popperRefProp, () => popperRef.current, []);
  const rtlPlacement = flipPlacement(initialPlacement, direction);
  const [placement, setPlacement] = React86.useState(rtlPlacement);
  const [resolvedAnchorElement, setResolvedAnchorElement] = React86.useState(resolveAnchorEl(anchorEl));
  React86.useEffect(() => {
    if (popperRef.current) {
      popperRef.current.forceUpdate();
    }
  });
  React86.useEffect(() => {
    if (anchorEl) {
      setResolvedAnchorElement(resolveAnchorEl(anchorEl));
    }
  }, [anchorEl]);
  useEnhancedEffect_default(() => {
    if (!resolvedAnchorElement || !open) {
      return void 0;
    }
    const handlePopperUpdate = (data) => {
      setPlacement(data.placement);
    };
    if (true) {
      if (resolvedAnchorElement && isHTMLElement2(resolvedAnchorElement) && resolvedAnchorElement.nodeType === 1) {
        const box = resolvedAnchorElement.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      }
    }
    let popperModifiers = [{
      name: "preventOverflow",
      options: {
        altBoundary: disablePortal
      }
    }, {
      name: "flip",
      options: {
        altBoundary: disablePortal
      }
    }, {
      name: "onUpdate",
      enabled: true,
      phase: "afterWrite",
      fn: ({
        state
      }) => {
        handlePopperUpdate(state);
      }
    }];
    if (modifiers != null) {
      popperModifiers = popperModifiers.concat(modifiers);
    }
    if (popperOptions && popperOptions.modifiers != null) {
      popperModifiers = popperModifiers.concat(popperOptions.modifiers);
    }
    const popper2 = createPopper3(resolvedAnchorElement, tooltipRef.current, _extends({
      placement: rtlPlacement
    }, popperOptions, {
      modifiers: popperModifiers
    }));
    handlePopperRefRef.current(popper2);
    return () => {
      popper2.destroy();
      handlePopperRefRef.current(null);
    };
  }, [resolvedAnchorElement, disablePortal, modifiers, open, popperOptions, rtlPlacement]);
  const childProps = {
    placement
  };
  if (TransitionProps !== null) {
    childProps.TransitionProps = TransitionProps;
  }
  const classes2 = useUtilityClasses19();
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "div";
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      role: "tooltip",
      ref: ownRef
    },
    ownerState: props,
    className: classes2.root
  });
  return (0, import_jsx_runtime53.jsx)(Root42, _extends({}, rootProps, {
    children: typeof children2 === "function" ? children2(childProps) : children2
  }));
});
var Popper = React86.forwardRef(function Popper2(props, forwardedRef) {
  const {
    anchorEl,
    children: children2,
    container: containerProp,
    direction = "ltr",
    disablePortal = false,
    keepMounted = false,
    modifiers,
    open,
    placement = "bottom",
    popperOptions = defaultPopperOptions,
    popperRef,
    style: style4,
    transition = false,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded210);
  const [exited, setExited] = React86.useState(true);
  const handleEnter = () => {
    setExited(false);
  };
  const handleExited = () => {
    setExited(true);
  };
  if (!keepMounted && !open && (!transition || exited)) {
    return null;
  }
  let container;
  if (containerProp) {
    container = containerProp;
  } else if (anchorEl) {
    const resolvedAnchorEl = resolveAnchorEl(anchorEl);
    container = resolvedAnchorEl && isHTMLElement2(resolvedAnchorEl) ? ownerDocument(resolvedAnchorEl).body : ownerDocument(null).body;
  }
  const display = !open && keepMounted && (!transition || exited) ? "none" : void 0;
  const transitionProps = transition ? {
    in: open,
    onEnter: handleEnter,
    onExited: handleExited
  } : void 0;
  return (0, import_jsx_runtime53.jsx)(Portal, {
    disablePortal,
    container,
    children: (0, import_jsx_runtime53.jsx)(PopperTooltip, _extends({
      anchorEl,
      direction,
      disablePortal,
      modifiers,
      ref: forwardedRef,
      open: transition ? !exited : open,
      placement,
      popperOptions,
      popperRef,
      slotProps,
      slots
    }, other, {
      style: _extends({
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display
      }, style4),
      TransitionProps: transitionProps,
      children: children2
    }))
  });
});
true ? Popper.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: chainPropTypes(import_prop_types49.default.oneOfType([HTMLElementType, import_prop_types49.default.object, import_prop_types49.default.func]), (props) => {
    if (props.open) {
      const resolvedAnchorEl = resolveAnchorEl(props.anchorEl);
      if (resolvedAnchorEl && isHTMLElement2(resolvedAnchorEl) && resolvedAnchorEl.nodeType === 1) {
        const box = resolvedAnchorEl.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      } else if (!resolvedAnchorEl || typeof resolvedAnchorEl.getBoundingClientRect !== "function" || isVirtualElement(resolvedAnchorEl) && resolvedAnchorEl.contextElement != null && resolvedAnchorEl.contextElement.nodeType !== 1) {
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join("\n"));
      }
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: import_prop_types49.default.oneOfType([import_prop_types49.default.node, import_prop_types49.default.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: import_prop_types49.default.oneOfType([HTMLElementType, import_prop_types49.default.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: import_prop_types49.default.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: import_prop_types49.default.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: import_prop_types49.default.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: import_prop_types49.default.arrayOf(import_prop_types49.default.shape({
    data: import_prop_types49.default.object,
    effect: import_prop_types49.default.func,
    enabled: import_prop_types49.default.bool,
    fn: import_prop_types49.default.func,
    name: import_prop_types49.default.any,
    options: import_prop_types49.default.object,
    phase: import_prop_types49.default.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: import_prop_types49.default.arrayOf(import_prop_types49.default.string),
    requiresIfExists: import_prop_types49.default.arrayOf(import_prop_types49.default.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types49.default.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: import_prop_types49.default.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: import_prop_types49.default.shape({
    modifiers: import_prop_types49.default.array,
    onFirstUpdate: import_prop_types49.default.func,
    placement: import_prop_types49.default.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: import_prop_types49.default.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: refType_default,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: import_prop_types49.default.shape({
    root: import_prop_types49.default.oneOfType([import_prop_types49.default.func, import_prop_types49.default.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types49.default.shape({
    root: import_prop_types49.default.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: import_prop_types49.default.bool
} : void 0;

// node_modules/@mui/base/Menu/Menu.js
var import_jsx_runtime54 = __toESM(require_jsx_runtime());
var _excluded40 = ["actions", "children", "onItemsChange", "slotProps", "slots"];
function useUtilityClasses20(ownerState) {
  const {
    open
  } = ownerState;
  const slots = {
    root: ["root", open && "expanded"],
    listbox: ["listbox", open && "expanded"]
  };
  return composeClasses(slots, useClassNamesOverride(getMenuUtilityClass));
}
var Menu = React87.forwardRef(function Menu2(props, forwardedRef) {
  var _slots$root, _slots$listbox;
  const {
    actions,
    children: children2,
    onItemsChange,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded40);
  const {
    contextValue,
    getListboxProps,
    dispatch,
    open,
    triggerElement
  } = useMenu({
    onItemsChange
  });
  React87.useImperativeHandle(actions, () => ({
    dispatch,
    resetHighlight: () => dispatch({
      type: ListActionTypes.resetHighlight,
      event: null
    })
  }), [dispatch]);
  const ownerState = _extends({}, props, {
    open
  });
  const classes2 = useUtilityClasses20(ownerState);
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "div";
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef,
      role: void 0
    },
    className: classes2.root,
    ownerState
  });
  const Listbox = (_slots$listbox = slots.listbox) != null ? _slots$listbox : "ul";
  const listboxProps = useSlotProps({
    elementType: Listbox,
    getSlotProps: getListboxProps,
    externalSlotProps: slotProps.listbox,
    className: classes2.listbox,
    ownerState
  });
  if (open === true && triggerElement == null) {
    return (0, import_jsx_runtime54.jsx)(Root42, _extends({}, rootProps, {
      children: (0, import_jsx_runtime54.jsx)(Listbox, _extends({}, listboxProps, {
        children: (0, import_jsx_runtime54.jsx)(MenuProvider, {
          value: contextValue,
          children: children2
        })
      }))
    }));
  }
  return (0, import_jsx_runtime54.jsx)(Popper, _extends({}, rootProps, {
    open,
    anchorEl: triggerElement,
    slots: {
      root: Root42
    },
    children: (0, import_jsx_runtime54.jsx)(Listbox, _extends({}, listboxProps, {
      children: (0, import_jsx_runtime54.jsx)(MenuProvider, {
        value: contextValue,
        children: children2
      })
    }))
  }));
});
true ? Menu.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A ref with imperative actions that can be performed on the menu.
   */
  actions: refType_default,
  /**
   * @ignore
   */
  children: import_prop_types50.default.node,
  /**
   * @ignore
   */
  className: import_prop_types50.default.string,
  /**
   * Function called when the items displayed in the menu change.
   */
  onItemsChange: import_prop_types50.default.func,
  /**
   * The props used for each slot inside the Menu.
   * @default {}
   */
  slotProps: import_prop_types50.default.shape({
    listbox: import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.object]),
    root: import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.object])
  }),
  /**
   * The components used for each slot inside the Menu.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types50.default.shape({
    listbox: import_prop_types50.default.elementType,
    root: import_prop_types50.default.elementType
  })
} : void 0;

// node_modules/@mui/base/MenuButton/MenuButton.js
init_extends();
init_objectWithoutPropertiesLoose();
var React89 = __toESM(require_react());
var import_prop_types51 = __toESM(require_prop_types());

// node_modules/@mui/base/useMenuButton/useMenuButton.js
init_extends();
var React88 = __toESM(require_react());
init_esm();
function useMenuButton(parameters = {}) {
  const {
    disabled = false,
    focusableWhenDisabled,
    rootRef: externalRef
  } = parameters;
  const menuContext = React88.useContext(DropdownContext);
  if (menuContext === null) {
    throw new Error("useMenuButton: no menu context available.");
  }
  const {
    state,
    dispatch,
    registerTrigger,
    popupId
  } = menuContext;
  const {
    getRootProps: getButtonRootProps,
    rootRef: buttonRootRef,
    active
  } = useButton({
    disabled,
    focusableWhenDisabled,
    rootRef: externalRef
  });
  const handleRef = useForkRef(buttonRootRef, registerTrigger);
  const createHandleClick = (otherHandlers) => (event) => {
    var _otherHandlers$onClic;
    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
    if (event.defaultMuiPrevented) {
      return;
    }
    dispatch({
      type: DropdownActionTypes.toggle,
      event
    });
  };
  const createHandleKeyDown = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyD;
    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);
    if (event.defaultMuiPrevented) {
      return;
    }
    if (event.key === "ArrowDown" || event.key === "ArrowUp") {
      event.preventDefault();
      dispatch({
        type: DropdownActionTypes.open,
        event
      });
    }
  };
  const getOwnRootProps = (otherHandlers = {}) => ({
    onClick: createHandleClick(otherHandlers),
    onKeyDown: createHandleKeyDown(otherHandlers)
  });
  const getRootProps = (otherHandlers = {}) => {
    const getCombinedProps = combineHooksSlotProps(getButtonRootProps, getOwnRootProps);
    return _extends({}, getCombinedProps(otherHandlers), {
      "aria-haspopup": "menu",
      "aria-expanded": state.open,
      "aria-controls": popupId,
      ref: handleRef
    });
  };
  return {
    active,
    getRootProps,
    open: state.open,
    rootRef: handleRef
  };
}

// node_modules/@mui/base/MenuButton/MenuButton.js
init_composeClasses3();

// node_modules/@mui/base/MenuButton/menuButtonClasses.js
function getMenuButtonUtilityClass(slot) {
  return generateUtilityClass("MuiMenuButton", slot);
}
var menuButtonClasses = generateUtilityClasses("MuiMenuButton", ["root", "active", "disabled", "expanded"]);

// node_modules/@mui/base/MenuButton/MenuButton.js
var import_jsx_runtime55 = __toESM(require_jsx_runtime());
var _excluded41 = ["children", "disabled", "label", "slots", "slotProps", "focusableWhenDisabled"];
var useUtilityClasses21 = (ownerState) => {
  const {
    active,
    disabled,
    open
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", active && "active", open && "expanded"]
  };
  return composeClasses(slots, useClassNamesOverride(getMenuButtonUtilityClass));
};
var MenuButton = React89.forwardRef(function MenuButton2(props, forwardedRef) {
  const {
    children: children2,
    disabled = false,
    slots = {},
    slotProps = {},
    focusableWhenDisabled = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded41);
  const {
    getRootProps,
    open,
    active
  } = useMenuButton({
    disabled,
    focusableWhenDisabled,
    rootRef: forwardedRef
  });
  const ownerState = _extends({}, props, {
    open,
    active,
    disabled,
    focusableWhenDisabled
  });
  const classes2 = useUtilityClasses21(ownerState);
  const Root42 = slots.root || "button";
  const rootProps = useSlotProps({
    elementType: Root42,
    getSlotProps: getRootProps,
    externalForwardedProps: other,
    externalSlotProps: slotProps.root,
    additionalProps: {
      ref: forwardedRef,
      type: "button"
    },
    ownerState,
    className: classes2.root
  });
  return (0, import_jsx_runtime55.jsx)(Root42, _extends({}, rootProps, {
    children: children2
  }));
});
true ? MenuButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types51.default.node,
  /**
   * Class name applied to the root element.
   */
  className: import_prop_types51.default.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types51.default.bool,
  /**
   * If `true`, allows a disabled button to receive focus.
   * @default false
   */
  focusableWhenDisabled: import_prop_types51.default.bool,
  /**
   * Label of the button
   */
  label: import_prop_types51.default.string,
  /**
   * The components used for each slot inside the MenuButton.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slotProps: import_prop_types51.default.shape({
    root: import_prop_types51.default.oneOfType([import_prop_types51.default.func, import_prop_types51.default.object])
  }),
  /**
   * The props used for each slot inside the MenuButton.
   * @default {}
   */
  slots: import_prop_types51.default.shape({
    root: import_prop_types51.default.elementType
  })
} : void 0;

// node_modules/@mui/base/MenuItem/MenuItem.js
init_extends();
init_objectWithoutPropertiesLoose();
var React92 = __toESM(require_react());
var import_prop_types52 = __toESM(require_prop_types());

// node_modules/@mui/base/MenuItem/menuItemClasses.js
function getMenuItemUtilityClass(slot) {
  return generateUtilityClass("MuiMenuItem", slot);
}
var menuItemClasses = generateUtilityClasses("MuiMenuItem", ["root", "disabled", "focusVisible"]);

// node_modules/@mui/base/useMenuItem/useMenuItem.js
init_extends();
var React91 = __toESM(require_react());
init_esm();

// node_modules/@mui/base/utils/useCompoundItem.js
var React90 = __toESM(require_react());
init_esm();
function useCompoundItem(id, itemMetadata) {
  const context = React90.useContext(CompoundComponentContext);
  if (context === null) {
    throw new Error("useCompoundItem must be used within a useCompoundParent");
  }
  const {
    registerItem
  } = context;
  const [registeredId, setRegisteredId] = React90.useState(typeof id === "function" ? void 0 : id);
  useEnhancedEffect_default(() => {
    const {
      id: returnedId,
      deregister
    } = registerItem(id, itemMetadata);
    setRegisteredId(returnedId);
    return deregister;
  }, [registerItem, itemMetadata, id]);
  return {
    id: registeredId,
    index: registeredId !== void 0 ? context.getItemIndex(registeredId) : -1,
    totalItemCount: context.totalSubitemCount
  };
}

// node_modules/@mui/base/useMenuItem/useMenuItem.js
function idGenerator(existingKeys) {
  return `menu-item-${existingKeys.size}`;
}
var FALLBACK_MENU_CONTEXT2 = {
  dispatch: () => {
  },
  popupId: "",
  registerPopup: () => {
  },
  registerTrigger: () => {
  },
  state: {
    open: true
  },
  triggerElement: null
};
function useMenuItem(params) {
  var _React$useContext;
  const {
    disabled = false,
    id: idParam,
    rootRef: externalRef,
    label
  } = params;
  const id = useId(idParam);
  const itemRef = React91.useRef(null);
  const itemMetadata = React91.useMemo(() => ({
    disabled,
    id: id != null ? id : "",
    label,
    ref: itemRef
  }), [disabled, id, label]);
  const {
    dispatch
  } = (_React$useContext = React91.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT2;
  const {
    getRootProps: getListRootProps,
    highlighted,
    rootRef: listItemRefHandler
  } = useListItem({
    item: id
  });
  const {
    index: index2,
    totalItemCount
  } = useCompoundItem(id != null ? id : idGenerator, itemMetadata);
  const {
    getRootProps: getButtonProps,
    focusVisible,
    rootRef: buttonRefHandler
  } = useButton({
    disabled,
    focusableWhenDisabled: true
  });
  const handleRef = useForkRef(listItemRefHandler, buttonRefHandler, externalRef, itemRef);
  React91.useDebugValue({
    id,
    highlighted,
    disabled,
    label
  });
  const createHandleClick = (otherHandlers) => (event) => {
    var _otherHandlers$onClic;
    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
    if (event.defaultMuiPrevented) {
      return;
    }
    dispatch({
      type: DropdownActionTypes.close,
      event
    });
  };
  const getOwnHandlers = (otherHandlers = {}) => _extends({}, otherHandlers, {
    onClick: createHandleClick(otherHandlers)
  });
  function getRootProps(otherHandlers = {}) {
    const getCombinedRootProps = combineHooksSlotProps(getOwnHandlers, combineHooksSlotProps(getButtonProps, getListRootProps));
    return _extends({}, getCombinedRootProps(otherHandlers), {
      ref: handleRef,
      role: "menuitem"
    });
  }
  if (id === void 0) {
    return {
      getRootProps,
      disabled: false,
      focusVisible,
      highlighted: false,
      index: -1,
      totalItemCount: 0,
      rootRef: handleRef
    };
  }
  return {
    getRootProps,
    disabled,
    focusVisible,
    highlighted,
    index: index2,
    totalItemCount,
    rootRef: handleRef
  };
}

// node_modules/@mui/base/MenuItem/MenuItem.js
init_composeClasses3();
var import_jsx_runtime56 = __toESM(require_jsx_runtime());
var _excluded42 = ["children", "disabled", "label", "slotProps", "slots"];
function useUtilityClasses22(ownerState) {
  const {
    disabled,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible"]
  };
  return composeClasses(slots, useClassNamesOverride(getMenuItemUtilityClass));
}
var MenuItem = React92.forwardRef(function MenuItem2(props, forwardedRef) {
  var _slots$root;
  const {
    children: children2,
    disabled: disabledProp = false,
    label,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded42);
  const {
    getRootProps,
    disabled,
    focusVisible,
    highlighted
  } = useMenuItem({
    disabled: disabledProp,
    rootRef: forwardedRef,
    label
  });
  const ownerState = _extends({}, props, {
    disabled,
    focusVisible,
    highlighted
  });
  const classes2 = useUtilityClasses22(ownerState);
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "li";
  const rootProps = useSlotProps({
    elementType: Root42,
    getSlotProps: getRootProps,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    className: classes2.root,
    ownerState
  });
  return (0, import_jsx_runtime56.jsx)(Root42, _extends({}, rootProps, {
    children: children2
  }));
});
true ? MenuItem.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types52.default.node,
  /**
   * @ignore
   */
  className: import_prop_types52.default.string,
  /**
   * @ignore
   */
  disabled: import_prop_types52.default.bool,
  /**
   * A text representation of the menu item's content.
   * Used for keyboard text navigation matching.
   */
  label: import_prop_types52.default.string,
  /**
   * @ignore
   */
  onClick: import_prop_types52.default.func,
  /**
   * The props used for each slot inside the MenuItem.
   * @default {}
   */
  slotProps: import_prop_types52.default.shape({
    root: import_prop_types52.default.oneOfType([import_prop_types52.default.func, import_prop_types52.default.object])
  }),
  /**
   * The components used for each slot inside the MenuItem.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types52.default.shape({
    root: import_prop_types52.default.elementType
  })
} : void 0;

// node_modules/@mui/base/Modal/Modal.js
init_extends();
init_objectWithoutPropertiesLoose();
var React94 = __toESM(require_react());
var import_prop_types53 = __toESM(require_prop_types());
init_esm();
init_composeClasses3();

// node_modules/@mui/base/unstable_useModal/useModal.js
init_extends();
var React93 = __toESM(require_react());
init_esm();

// node_modules/@mui/base/unstable_useModal/ModalManager.js
init_esm();
function isOverflowing(container) {
  const doc = ownerDocument(container);
  if (doc.body === container) {
    return ownerWindow(container).innerWidth > doc.documentElement.clientWidth;
  }
  return container.scrollHeight > container.clientHeight;
}
function ariaHidden(element, show) {
  if (show) {
    element.setAttribute("aria-hidden", "true");
  } else {
    element.removeAttribute("aria-hidden");
  }
}
function getPaddingRight(element) {
  return parseInt(ownerWindow(element).getComputedStyle(element).paddingRight, 10) || 0;
}
function isAriaHiddenForbiddenOnElement(element) {
  const forbiddenTagNames = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"];
  const isForbiddenTagName = forbiddenTagNames.indexOf(element.tagName) !== -1;
  const isInputHidden = element.tagName === "INPUT" && element.getAttribute("type") === "hidden";
  return isForbiddenTagName || isInputHidden;
}
function ariaHiddenSiblings(container, mountElement, currentElement, elementsToExclude, show) {
  const blacklist = [mountElement, currentElement, ...elementsToExclude];
  [].forEach.call(container.children, (element) => {
    const isNotExcludedElement = blacklist.indexOf(element) === -1;
    const isNotForbiddenElement = !isAriaHiddenForbiddenOnElement(element);
    if (isNotExcludedElement && isNotForbiddenElement) {
      ariaHidden(element, show);
    }
  });
}
function findIndexOf(items, callback) {
  let idx = -1;
  items.some((item, index2) => {
    if (callback(item)) {
      idx = index2;
      return true;
    }
    return false;
  });
  return idx;
}
function handleContainer(containerInfo, props) {
  const restoreStyle = [];
  const container = containerInfo.container;
  if (!props.disableScrollLock) {
    if (isOverflowing(container)) {
      const scrollbarSize = getScrollbarSize(ownerDocument(container));
      restoreStyle.push({
        value: container.style.paddingRight,
        property: "padding-right",
        el: container
      });
      container.style.paddingRight = `${getPaddingRight(container) + scrollbarSize}px`;
      const fixedElements2 = ownerDocument(container).querySelectorAll(".mui-fixed");
      [].forEach.call(fixedElements2, (element) => {
        restoreStyle.push({
          value: element.style.paddingRight,
          property: "padding-right",
          el: element
        });
        element.style.paddingRight = `${getPaddingRight(element) + scrollbarSize}px`;
      });
    }
    let scrollContainer;
    if (container.parentNode instanceof DocumentFragment) {
      scrollContainer = ownerDocument(container).body;
    } else {
      const parent = container.parentElement;
      const containerWindow = ownerWindow(container);
      scrollContainer = (parent == null ? void 0 : parent.nodeName) === "HTML" && containerWindow.getComputedStyle(parent).overflowY === "scroll" ? parent : container;
    }
    restoreStyle.push({
      value: scrollContainer.style.overflow,
      property: "overflow",
      el: scrollContainer
    }, {
      value: scrollContainer.style.overflowX,
      property: "overflow-x",
      el: scrollContainer
    }, {
      value: scrollContainer.style.overflowY,
      property: "overflow-y",
      el: scrollContainer
    });
    scrollContainer.style.overflow = "hidden";
  }
  const restore = () => {
    restoreStyle.forEach(({
      value,
      el,
      property
    }) => {
      if (value) {
        el.style.setProperty(property, value);
      } else {
        el.style.removeProperty(property);
      }
    });
  };
  return restore;
}
function getHiddenSiblings(container) {
  const hiddenSiblings = [];
  [].forEach.call(container.children, (element) => {
    if (element.getAttribute("aria-hidden") === "true") {
      hiddenSiblings.push(element);
    }
  });
  return hiddenSiblings;
}
var ModalManager = class {
  constructor() {
    this.containers = void 0;
    this.modals = void 0;
    this.modals = [];
    this.containers = [];
  }
  add(modal, container) {
    let modalIndex = this.modals.indexOf(modal);
    if (modalIndex !== -1) {
      return modalIndex;
    }
    modalIndex = this.modals.length;
    this.modals.push(modal);
    if (modal.modalRef) {
      ariaHidden(modal.modalRef, false);
    }
    const hiddenSiblings = getHiddenSiblings(container);
    ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);
    const containerIndex = findIndexOf(this.containers, (item) => item.container === container);
    if (containerIndex !== -1) {
      this.containers[containerIndex].modals.push(modal);
      return modalIndex;
    }
    this.containers.push({
      modals: [modal],
      container,
      restore: null,
      hiddenSiblings
    });
    return modalIndex;
  }
  mount(modal, props) {
    const containerIndex = findIndexOf(this.containers, (item) => item.modals.indexOf(modal) !== -1);
    const containerInfo = this.containers[containerIndex];
    if (!containerInfo.restore) {
      containerInfo.restore = handleContainer(containerInfo, props);
    }
  }
  remove(modal, ariaHiddenState = true) {
    const modalIndex = this.modals.indexOf(modal);
    if (modalIndex === -1) {
      return modalIndex;
    }
    const containerIndex = findIndexOf(this.containers, (item) => item.modals.indexOf(modal) !== -1);
    const containerInfo = this.containers[containerIndex];
    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);
    this.modals.splice(modalIndex, 1);
    if (containerInfo.modals.length === 0) {
      if (containerInfo.restore) {
        containerInfo.restore();
      }
      if (modal.modalRef) {
        ariaHidden(modal.modalRef, ariaHiddenState);
      }
      ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);
      this.containers.splice(containerIndex, 1);
    } else {
      const nextTop = containerInfo.modals[containerInfo.modals.length - 1];
      if (nextTop.modalRef) {
        ariaHidden(nextTop.modalRef, false);
      }
    }
    return modalIndex;
  }
  isTopModal(modal) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;
  }
};

// node_modules/@mui/base/unstable_useModal/useModal.js
function getContainer2(container) {
  return typeof container === "function" ? container() : container;
}
function getHasTransition(children2) {
  return children2 ? children2.props.hasOwnProperty("in") : false;
}
var defaultManager = new ModalManager();
function useModal(parameters) {
  const {
    container,
    disableEscapeKeyDown = false,
    disableScrollLock = false,
    // @ts-ignore internal logic - Base UI supports the manager as a prop too
    manager = defaultManager,
    closeAfterTransition = false,
    onTransitionEnter,
    onTransitionExited,
    children: children2,
    onClose,
    open,
    rootRef
  } = parameters;
  const modal = React93.useRef({});
  const mountNodeRef = React93.useRef(null);
  const modalRef = React93.useRef(null);
  const handleRef = useForkRef(modalRef, rootRef);
  const [exited, setExited] = React93.useState(!open);
  const hasTransition = getHasTransition(children2);
  let ariaHiddenProp = true;
  if (parameters["aria-hidden"] === "false" || parameters["aria-hidden"] === false) {
    ariaHiddenProp = false;
  }
  const getDoc = () => ownerDocument(mountNodeRef.current);
  const getModal = () => {
    modal.current.modalRef = modalRef.current;
    modal.current.mount = mountNodeRef.current;
    return modal.current;
  };
  const handleMounted = () => {
    manager.mount(getModal(), {
      disableScrollLock
    });
    if (modalRef.current) {
      modalRef.current.scrollTop = 0;
    }
  };
  const handleOpen = useEventCallback_default(() => {
    const resolvedContainer = getContainer2(container) || getDoc().body;
    manager.add(getModal(), resolvedContainer);
    if (modalRef.current) {
      handleMounted();
    }
  });
  const isTopModal = React93.useCallback(() => manager.isTopModal(getModal()), [manager]);
  const handlePortalRef = useEventCallback_default((node2) => {
    mountNodeRef.current = node2;
    if (!node2) {
      return;
    }
    if (open && isTopModal()) {
      handleMounted();
    } else if (modalRef.current) {
      ariaHidden(modalRef.current, ariaHiddenProp);
    }
  });
  const handleClose = React93.useCallback(() => {
    manager.remove(getModal(), ariaHiddenProp);
  }, [ariaHiddenProp, manager]);
  React93.useEffect(() => {
    return () => {
      handleClose();
    };
  }, [handleClose]);
  React93.useEffect(() => {
    if (open) {
      handleOpen();
    } else if (!hasTransition || !closeAfterTransition) {
      handleClose();
    }
  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);
  const createHandleKeyDown = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyD;
    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);
    if (event.key !== "Escape" || !isTopModal()) {
      return;
    }
    if (!disableEscapeKeyDown) {
      event.stopPropagation();
      if (onClose) {
        onClose(event, "escapeKeyDown");
      }
    }
  };
  const createHandleBackdropClick = (otherHandlers) => (event) => {
    var _otherHandlers$onClic;
    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
    if (event.target !== event.currentTarget) {
      return;
    }
    if (onClose) {
      onClose(event, "backdropClick");
    }
  };
  const getRootProps = (otherHandlers = {}) => {
    const propsEventHandlers = extractEventHandlers(parameters);
    delete propsEventHandlers.onTransitionEnter;
    delete propsEventHandlers.onTransitionExited;
    const externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);
    return _extends({
      role: "presentation"
    }, externalEventHandlers, {
      onKeyDown: createHandleKeyDown(externalEventHandlers),
      ref: handleRef
    });
  };
  const getBackdropProps = (otherHandlers = {}) => {
    const externalEventHandlers = otherHandlers;
    return _extends({
      "aria-hidden": true
    }, externalEventHandlers, {
      onClick: createHandleBackdropClick(externalEventHandlers),
      open
    });
  };
  const getTransitionProps2 = () => {
    const handleEnter = () => {
      setExited(false);
      if (onTransitionEnter) {
        onTransitionEnter();
      }
    };
    const handleExited = () => {
      setExited(true);
      if (onTransitionExited) {
        onTransitionExited();
      }
      if (closeAfterTransition) {
        handleClose();
      }
    };
    return {
      onEnter: createChainedFunction(handleEnter, children2.props.onEnter),
      onExited: createChainedFunction(handleExited, children2.props.onExited)
    };
  };
  return {
    getRootProps,
    getBackdropProps,
    getTransitionProps: getTransitionProps2,
    rootRef: handleRef,
    portalRef: handlePortalRef,
    isTopModal,
    exited,
    hasTransition
  };
}

// node_modules/@mui/base/Modal/modalClasses.js
function getModalUtilityClass(slot) {
  return generateUtilityClass("MuiModal", slot);
}
var modalClasses = generateUtilityClasses("MuiModal", ["root", "hidden", "backdrop"]);

// node_modules/@mui/base/Modal/Modal.js
var import_jsx_runtime57 = __toESM(require_jsx_runtime());
var import_jsx_runtime58 = __toESM(require_jsx_runtime());
var _excluded43 = ["children", "closeAfterTransition", "container", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "onBackdropClick", "onClose", "onKeyDown", "open", "onTransitionEnter", "onTransitionExited", "slotProps", "slots"];
var useUtilityClasses23 = (ownerState) => {
  const {
    open,
    exited
  } = ownerState;
  const slots = {
    root: ["root", !open && exited && "hidden"],
    backdrop: ["backdrop"]
  };
  return composeClasses(slots, useClassNamesOverride(getModalUtilityClass));
};
var Modal = React94.forwardRef(function Modal2(props, forwardedRef) {
  var _slots$root;
  const {
    children: children2,
    closeAfterTransition = false,
    container,
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableEscapeKeyDown = false,
    disablePortal = false,
    disableRestoreFocus = false,
    disableScrollLock = false,
    hideBackdrop = false,
    keepMounted = false,
    onBackdropClick,
    open,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded43);
  const propsWithDefaults = _extends({}, props, {
    closeAfterTransition,
    disableAutoFocus,
    disableEnforceFocus,
    disableEscapeKeyDown,
    disablePortal,
    disableRestoreFocus,
    disableScrollLock,
    hideBackdrop,
    keepMounted
  });
  const {
    getRootProps,
    getBackdropProps,
    getTransitionProps: getTransitionProps2,
    portalRef,
    isTopModal,
    exited,
    hasTransition
  } = useModal(_extends({}, propsWithDefaults, {
    rootRef: forwardedRef
  }));
  const ownerState = _extends({}, propsWithDefaults, {
    exited,
    hasTransition
  });
  const classes2 = useUtilityClasses23(ownerState);
  const childProps = {};
  if (children2.props.tabIndex === void 0) {
    childProps.tabIndex = "-1";
  }
  if (hasTransition) {
    const {
      onEnter,
      onExited
    } = getTransitionProps2();
    childProps.onEnter = onEnter;
    childProps.onExited = onExited;
  }
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "div";
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    getSlotProps: getRootProps,
    className: classes2.root,
    ownerState
  });
  const BackdropComponent = slots.backdrop;
  const backdropProps = useSlotProps({
    elementType: BackdropComponent,
    externalSlotProps: slotProps.backdrop,
    getSlotProps: (otherHandlers) => {
      return getBackdropProps(_extends({}, otherHandlers, {
        onClick: (e) => {
          if (onBackdropClick) {
            onBackdropClick(e);
          }
          if (otherHandlers != null && otherHandlers.onClick) {
            otherHandlers.onClick(e);
          }
        }
      }));
    },
    className: classes2.backdrop,
    ownerState
  });
  if (!keepMounted && !open && (!hasTransition || exited)) {
    return null;
  }
  return (0, import_jsx_runtime57.jsx)(Portal, {
    ref: portalRef,
    container,
    disablePortal,
    children: (0, import_jsx_runtime58.jsxs)(Root42, _extends({}, rootProps, {
      children: [!hideBackdrop && BackdropComponent ? (0, import_jsx_runtime57.jsx)(BackdropComponent, _extends({}, backdropProps)) : null, (0, import_jsx_runtime57.jsx)(FocusTrap, {
        disableEnforceFocus,
        disableAutoFocus,
        disableRestoreFocus,
        isEnabled: isTopModal,
        open,
        children: React94.cloneElement(children2, childProps)
      })]
    }))
  });
});
true ? Modal.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A single child content element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: import_prop_types53.default.bool,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: import_prop_types53.default.oneOfType([HTMLElementType, import_prop_types53.default.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: import_prop_types53.default.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: import_prop_types53.default.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: import_prop_types53.default.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: import_prop_types53.default.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: import_prop_types53.default.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: import_prop_types53.default.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: import_prop_types53.default.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: import_prop_types53.default.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: import_prop_types53.default.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: import_prop_types53.default.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: import_prop_types53.default.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: import_prop_types53.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types53.default.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: import_prop_types53.default.shape({
    backdrop: import_prop_types53.default.oneOfType([import_prop_types53.default.func, import_prop_types53.default.object]),
    root: import_prop_types53.default.oneOfType([import_prop_types53.default.func, import_prop_types53.default.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types53.default.shape({
    backdrop: import_prop_types53.default.elementType,
    root: import_prop_types53.default.elementType
  })
} : void 0;

// node_modules/@mui/base/NoSsr/NoSsr.js
var React95 = __toESM(require_react());
var import_prop_types54 = __toESM(require_prop_types());
init_esm();
var import_jsx_runtime59 = __toESM(require_jsx_runtime());
function NoSsr(props) {
  const {
    children: children2,
    defer = false,
    fallback = null
  } = props;
  const [mountedState, setMountedState] = React95.useState(false);
  useEnhancedEffect_default(() => {
    if (!defer) {
      setMountedState(true);
    }
  }, [defer]);
  React95.useEffect(() => {
    if (defer) {
      setMountedState(true);
    }
  }, [defer]);
  return (0, import_jsx_runtime59.jsx)(React95.Fragment, {
    children: mountedState ? children2 : fallback
  });
}
true ? NoSsr.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * You can wrap a node.
   */
  children: import_prop_types54.default.node,
  /**
   * If `true`, the component will not only prevent server-side rendering.
   * It will also defer the rendering of the children into a different screen frame.
   * @default false
   */
  defer: import_prop_types54.default.bool,
  /**
   * The fallback content to display.
   * @default null
   */
  fallback: import_prop_types54.default.node
} : void 0;
if (true) {
  NoSsr["propTypes"] = exactProp(NoSsr.propTypes);
}

// node_modules/@mui/base/Unstable_NumberInput/NumberInput.js
init_extends();
init_objectWithoutPropertiesLoose();
var React97 = __toESM(require_react());
var import_prop_types55 = __toESM(require_prop_types());

// node_modules/@mui/base/Unstable_NumberInput/numberInputClasses.js
function getNumberInputUtilityClass(slot) {
  return generateUtilityClass("MuiNumberInput", slot);
}
var numberInputClasses = generateUtilityClasses("MuiNumberInput", [
  "root",
  "formControl",
  "focused",
  "disabled",
  "readOnly",
  "error",
  "input",
  "incrementButton",
  "decrementButton"
  // 'adornedStart',
  // 'adornedEnd',
]);

// node_modules/@mui/base/unstable_useNumberInput/useNumberInput.js
init_extends();
init_esm();
var React96 = __toESM(require_react());
init_esm();

// node_modules/@mui/base/unstable_useNumberInput/utils.js
function simpleClamp(val, min3 = Number.MIN_SAFE_INTEGER, max3 = Number.MAX_SAFE_INTEGER) {
  return Math.max(min3, Math.min(val, max3));
}
function clamp2(val, min3 = Number.MIN_SAFE_INTEGER, max3 = Number.MAX_SAFE_INTEGER, stepProp = NaN) {
  if (Number.isNaN(stepProp)) {
    return simpleClamp(val, min3, max3);
  }
  const step = stepProp || 1;
  const remainder = val % step;
  const positivity = Math.sign(remainder);
  if (Math.abs(remainder) > step / 2) {
    return simpleClamp(val + positivity * (step - Math.abs(remainder)), min3, max3);
  }
  return simpleClamp(val - positivity * Math.abs(remainder), min3, max3);
}
function isNumber(val) {
  return typeof val === "number" && !Number.isNaN(val) && Number.isFinite(val);
}

// node_modules/@mui/base/unstable_useNumberInput/useNumberInput.js
var STEP_KEYS = ["ArrowUp", "ArrowDown", "PageUp", "PageDown"];
var SUPPORTED_KEYS = [...STEP_KEYS, "Home", "End"];
function parseInput(v) {
  return v ? String(v.trim()) : String(v);
}
function useNumberInput(parameters) {
  const {
    min: min3,
    max: max3,
    step,
    shiftMultiplier = 10,
    defaultValue: defaultValueProp,
    disabled: disabledProp = false,
    error: errorProp = false,
    onBlur,
    onInputChange,
    onFocus,
    onChange,
    required: requiredProp = false,
    readOnly: readOnlyProp = false,
    value: valueProp,
    inputRef: inputRefProp,
    inputId: inputIdProp
  } = parameters;
  const formControlContext = useFormControlContext();
  const {
    current: isControlled
  } = React96.useRef(valueProp != null);
  const handleInputRefWarning = React96.useCallback((instance) => {
    if (true) {
      if (instance && instance.nodeName !== "INPUT" && !instance.focus) {
        console.error(["MUI: You have provided a `slots.input` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join("\n"));
      }
    }
  }, []);
  const inputRef = React96.useRef(null);
  const handleInputRef = useForkRef(inputRef, inputRefProp, handleInputRefWarning);
  const inputId = useId(inputIdProp);
  const [focused, setFocused] = React96.useState(false);
  const [value, setValue] = React96.useState(valueProp != null ? valueProp : defaultValueProp);
  const [dirtyValue, setDirtyValue] = React96.useState(value ? String(value) : void 0);
  React96.useEffect(() => {
    if (!formControlContext && disabledProp && focused) {
      setFocused(false);
      onBlur == null ? void 0 : onBlur();
    }
  }, [formControlContext, disabledProp, focused, onBlur]);
  const handleFocus = (otherHandlers) => (event) => {
    var _otherHandlers$onFocu;
    (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
    if (event.defaultPrevented) {
      return;
    }
    if (formControlContext && formControlContext.onFocus) {
      var _formControlContext$o;
      formControlContext == null || (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);
    }
    setFocused(true);
  };
  const handleValueChange = () => (event, val) => {
    let newValue;
    if (val === void 0) {
      newValue = val;
      setDirtyValue("");
    } else {
      newValue = clamp2(val, min3, max3, step);
      setDirtyValue(String(newValue));
    }
    setValue(newValue);
    if (isNumber(newValue)) {
      onChange == null ? void 0 : onChange(event, newValue);
    } else {
      onChange == null ? void 0 : onChange(event, void 0);
    }
  };
  const handleInputChange = (otherHandlers) => (event) => {
    var _formControlContext$o2, _otherHandlers$onInpu;
    if (!isControlled && event.target === null) {
      throw new Error(true ? `MUI: Expected valid input target. Did you use a custom \`slots.input\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : formatMuiErrorMessage(17));
    }
    formControlContext == null || (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event);
    (_otherHandlers$onInpu = otherHandlers.onInputChange) == null ? void 0 : _otherHandlers$onInpu.call(otherHandlers, event);
    const val = parseInput(event.currentTarget.value);
    if (val === "" || val === "-") {
      setDirtyValue(val);
      setValue(void 0);
    }
    if (val.match(/^-?\d+?$/)) {
      setDirtyValue(val);
      setValue(parseInt(val, 10));
    }
  };
  const handleBlur2 = (otherHandlers) => (event) => {
    var _otherHandlers$onBlur;
    const val = parseInput(event.currentTarget.value);
    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
    if (val === "" || val === "-") {
      handleValueChange()(event, void 0);
    } else {
      handleValueChange()(event, parseInt(val, 10));
    }
    if (formControlContext && formControlContext.onBlur) {
      formControlContext.onBlur();
    }
    setFocused(false);
  };
  const handleClick2 = (otherHandlers) => (event) => {
    var _otherHandlers$onClic;
    if (inputRef.current && event.currentTarget === event.target) {
      inputRef.current.focus();
    }
    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
  };
  const handleStep = (direction) => (event) => {
    let newValue;
    if (isNumber(value)) {
      const multiplier = event.shiftKey || event.key === "PageUp" || event.key === "PageDown" ? shiftMultiplier : 1;
      newValue = {
        up: value + (step != null ? step : 1) * multiplier,
        down: value - (step != null ? step : 1) * multiplier
      }[direction];
    } else {
      newValue = {
        up: min3 != null ? min3 : 0,
        down: max3 != null ? max3 : 0
      }[direction];
    }
    handleValueChange()(event, newValue);
  };
  const handleKeyDown3 = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyD;
    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);
    if (event.defaultPrevented) {
      return;
    }
    if (SUPPORTED_KEYS.includes(event.key)) {
      event.preventDefault();
    }
    if (STEP_KEYS.includes(event.key)) {
      const direction = {
        ArrowUp: "up",
        ArrowDown: "down",
        PageUp: "up",
        PageDown: "down"
      }[event.key];
      handleStep(direction)(event);
    }
    if (event.key === "Home" && isNumber(max3)) {
      handleValueChange()(event, max3);
    }
    if (event.key === "End" && isNumber(min3)) {
      handleValueChange()(event, min3);
    }
  };
  const getRootProps = (externalProps = {}) => {
    const propsEventHandlers = extractEventHandlers(parameters, ["onBlur", "onInputChange", "onFocus", "onChange"]);
    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));
    return _extends({}, externalProps, externalEventHandlers, {
      onClick: handleClick2(externalEventHandlers)
    });
  };
  const getInputProps = (externalProps = {}) => {
    var _ref2;
    const externalEventHandlers = _extends({
      onBlur,
      onFocus
    }, extractEventHandlers(externalProps, ["onInputChange"]));
    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {
      onFocus: handleFocus(externalEventHandlers),
      onChange: handleInputChange(_extends({}, externalEventHandlers, {
        onInputChange
      })),
      onBlur: handleBlur2(externalEventHandlers),
      onKeyDown: handleKeyDown3(externalEventHandlers)
    });
    const displayValue = (_ref2 = focused ? dirtyValue : value) != null ? _ref2 : "";
    return _extends({}, mergedEventHandlers, {
      type: "text",
      id: inputId,
      "aria-invalid": errorProp || void 0,
      defaultValue: void 0,
      ref: handleInputRef,
      value: displayValue,
      "aria-valuenow": displayValue,
      "aria-valuetext": String(displayValue),
      "aria-valuemin": min3,
      "aria-valuemax": max3,
      autoComplete: "off",
      autoCorrect: "off",
      spellCheck: "false",
      required: requiredProp,
      readOnly: readOnlyProp,
      "aria-disabled": disabledProp,
      disabled: disabledProp
    });
  };
  const handleStepperButtonMouseDown = (event) => {
    event.preventDefault();
    if (inputRef.current) {
      inputRef.current.focus();
    }
  };
  const stepperButtonCommonProps = {
    "aria-controls": inputId,
    tabIndex: -1
  };
  const isIncrementDisabled = disabledProp || (isNumber(value) ? value >= (max3 != null ? max3 : Number.MAX_SAFE_INTEGER) : false);
  const getIncrementButtonProps = (externalProps = {}) => {
    return _extends({}, externalProps, stepperButtonCommonProps, {
      disabled: isIncrementDisabled,
      "aria-disabled": isIncrementDisabled,
      onMouseDown: handleStepperButtonMouseDown,
      onClick: handleStep("up")
    });
  };
  const isDecrementDisabled = disabledProp || (isNumber(value) ? value <= (min3 != null ? min3 : Number.MIN_SAFE_INTEGER) : false);
  const getDecrementButtonProps = (externalProps = {}) => {
    return _extends({}, externalProps, stepperButtonCommonProps, {
      disabled: isDecrementDisabled,
      "aria-disabled": isDecrementDisabled,
      onMouseDown: handleStepperButtonMouseDown,
      onClick: handleStep("down")
    });
  };
  return {
    disabled: disabledProp,
    error: errorProp,
    focused,
    formControlContext,
    getInputProps,
    getIncrementButtonProps,
    getDecrementButtonProps,
    getRootProps,
    required: requiredProp,
    value: focused ? dirtyValue : value,
    isIncrementDisabled,
    isDecrementDisabled,
    inputValue: dirtyValue
  };
}

// node_modules/@mui/base/Unstable_NumberInput/NumberInput.js
init_composeClasses3();
var import_jsx_runtime60 = __toESM(require_jsx_runtime());
var import_jsx_runtime61 = __toESM(require_jsx_runtime());
var _excluded44 = ["className", "defaultValue", "disabled", "error", "id", "max", "min", "onBlur", "onInputChange", "onFocus", "onChange", "placeholder", "required", "readOnly", "shiftMultiplier", "step", "value", "slotProps", "slots"];
var useUtilityClasses24 = (ownerState) => {
  const {
    disabled,
    error,
    focused,
    readOnly,
    formControlContext,
    isIncrementDisabled,
    isDecrementDisabled
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", error && "error", focused && "focused", readOnly && "readOnly", Boolean(formControlContext) && "formControl"],
    input: ["input", disabled && "disabled", readOnly && "readOnly"],
    incrementButton: ["incrementButton", isIncrementDisabled && "disabled"],
    decrementButton: ["decrementButton", isDecrementDisabled && "disabled"]
  };
  return composeClasses(slots, useClassNamesOverride(getNumberInputUtilityClass));
};
var NumberInput = React97.forwardRef(function NumberInput2(props, forwardedRef) {
  var _slots$root, _slots$input, _slots$incrementButto, _slots$decrementButto;
  const {
    className,
    defaultValue,
    disabled,
    error,
    id,
    max: max3,
    min: min3,
    onBlur,
    onInputChange,
    onFocus,
    onChange,
    placeholder,
    required: required2,
    readOnly = false,
    shiftMultiplier,
    step,
    value,
    slotProps = {},
    slots = {}
  } = props, rest = _objectWithoutPropertiesLoose(props, _excluded44);
  const {
    getRootProps,
    getInputProps,
    getIncrementButtonProps,
    getDecrementButtonProps,
    focused,
    error: errorState,
    disabled: disabledState,
    formControlContext,
    isIncrementDisabled,
    isDecrementDisabled
  } = useNumberInput({
    min: min3,
    max: max3,
    step,
    shiftMultiplier,
    defaultValue,
    disabled,
    error,
    onFocus,
    onInputChange,
    onBlur,
    onChange,
    required: required2,
    readOnly,
    value,
    inputId: id
  });
  const ownerState = _extends({}, props, {
    disabled: disabledState,
    error: errorState,
    focused,
    readOnly,
    formControlContext,
    isIncrementDisabled,
    isDecrementDisabled
  });
  const classes2 = useUtilityClasses24(ownerState);
  const propsForwardedToInputSlot = {
    placeholder
  };
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "div";
  const rootProps = useSlotProps({
    elementType: Root42,
    getSlotProps: getRootProps,
    externalSlotProps: slotProps.root,
    externalForwardedProps: rest,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: [classes2.root, className]
  });
  const Input5 = (_slots$input = slots.input) != null ? _slots$input : "input";
  const inputProps = useSlotProps({
    elementType: Input5,
    getSlotProps: (otherHandlers) => getInputProps(_extends({}, otherHandlers, propsForwardedToInputSlot)),
    externalSlotProps: slotProps.input,
    ownerState,
    className: classes2.input
  });
  const IncrementButton = (_slots$incrementButto = slots.incrementButton) != null ? _slots$incrementButto : "button";
  const incrementButtonProps = useSlotProps({
    elementType: IncrementButton,
    getSlotProps: getIncrementButtonProps,
    externalSlotProps: slotProps.incrementButton,
    ownerState,
    className: classes2.incrementButton
  });
  const DecrementButton = (_slots$decrementButto = slots.decrementButton) != null ? _slots$decrementButto : "button";
  const decrementButtonProps = useSlotProps({
    elementType: DecrementButton,
    getSlotProps: getDecrementButtonProps,
    externalSlotProps: slotProps.decrementButton,
    ownerState,
    className: classes2.decrementButton
  });
  return (0, import_jsx_runtime61.jsxs)(Root42, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime60.jsx)(DecrementButton, _extends({}, decrementButtonProps)), (0, import_jsx_runtime60.jsx)(IncrementButton, _extends({}, incrementButtonProps)), (0, import_jsx_runtime60.jsx)(Input5, _extends({}, inputProps))]
  }));
});
true ? NumberInput.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types55.default.node,
  /**
   * @ignore
   */
  className: import_prop_types55.default.string,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types55.default.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: import_prop_types55.default.bool,
  /**
   * If `true`, the `input` will indicate an error by setting the `aria-invalid` attribute on the input and the `Mui-error` class on the root element.
   */
  error: import_prop_types55.default.bool,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types55.default.string,
  /**
   * The maximum value.
   */
  max: import_prop_types55.default.number,
  /**
   * The minimum value.
   */
  min: import_prop_types55.default.number,
  /**
   * @ignore
   */
  onBlur: import_prop_types55.default.func,
  /**
   * Callback fired after the value is clamped and changes - when the `input` is blurred or when
   * the stepper buttons are triggered.
   * Called with `undefined` when the value is unset.
   *
   * @param {React.FocusEvent<HTMLInputElement>|React.PointerEvent|React.KeyboardEvent} event The event source of the callback
   * @param {number|undefined} value The new value of the component
   */
  onChange: import_prop_types55.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types55.default.func,
  /**
   * Callback fired when the `input` value changes after each keypress, before clamping is applied.
   * Note that `event.target.value` may contain values that fall outside of `min` and `max` or
   * are otherwise "invalid".
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   */
  onInputChange: import_prop_types55.default.func,
  /**
   * @ignore
   */
  placeholder: import_prop_types55.default.string,
  /**
   * If `true`, the `input` element becomes read-only. The stepper buttons remain active,
   * with the addition that they are now keyboard focusable.
   * @default false
   */
  readOnly: import_prop_types55.default.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: import_prop_types55.default.bool,
  /**
   * Multiplier applied to `step` if the shift key is held while incrementing
   * or decrementing the value. Defaults to `10`.
   */
  shiftMultiplier: import_prop_types55.default.number,
  /**
   * The props used for each slot inside the NumberInput.
   * @default {}
   */
  slotProps: import_prop_types55.default.shape({
    decrementButton: import_prop_types55.default.oneOfType([import_prop_types55.default.func, import_prop_types55.default.object]),
    incrementButton: import_prop_types55.default.oneOfType([import_prop_types55.default.func, import_prop_types55.default.object]),
    input: import_prop_types55.default.oneOfType([import_prop_types55.default.func, import_prop_types55.default.object]),
    root: import_prop_types55.default.oneOfType([import_prop_types55.default.func, import_prop_types55.default.object])
  }),
  /**
   * The components used for each slot inside the InputBase.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types55.default.shape({
    decrementButton: import_prop_types55.default.elementType,
    incrementButton: import_prop_types55.default.elementType,
    input: import_prop_types55.default.elementType,
    root: import_prop_types55.default.elementType
  }),
  /**
   * The amount that the value changes on each increment or decrement.
   */
  step: import_prop_types55.default.number,
  /**
   * The current value. Use when the component is controlled.
   */
  value: import_prop_types55.default.any
} : void 0;

// node_modules/@mui/base/OptionGroup/OptionGroup.js
init_extends();
init_objectWithoutPropertiesLoose();
var React98 = __toESM(require_react());
var import_prop_types56 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/base/OptionGroup/optionGroupClasses.js
function getOptionGroupUtilityClass(slot) {
  return generateUtilityClass("MuiOptionGroup", slot);
}
var optionGroupClasses = generateUtilityClasses("MuiOptionGroup", ["root", "disabled", "label", "list"]);

// node_modules/@mui/base/OptionGroup/OptionGroup.js
var import_jsx_runtime62 = __toESM(require_jsx_runtime());
var import_jsx_runtime63 = __toESM(require_jsx_runtime());
var _excluded45 = ["disabled", "slotProps", "slots"];
function useUtilityClasses25(disabled) {
  const slots = {
    root: ["root", disabled && "disabled"],
    label: ["label"],
    list: ["list"]
  };
  return composeClasses(slots, useClassNamesOverride(getOptionGroupUtilityClass));
}
var OptionGroup = React98.forwardRef(function OptionGroup2(props, forwardedRef) {
  const {
    disabled = false,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded45);
  const Root42 = (slots == null ? void 0 : slots.root) || "li";
  const Label = (slots == null ? void 0 : slots.label) || "span";
  const List4 = (slots == null ? void 0 : slots.list) || "ul";
  const classes2 = useUtilityClasses25(disabled);
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState: props,
    className: classes2.root
  });
  const labelProps = useSlotProps({
    elementType: Label,
    externalSlotProps: slotProps.label,
    ownerState: props,
    className: classes2.label
  });
  const listProps = useSlotProps({
    elementType: List4,
    externalSlotProps: slotProps.list,
    ownerState: props,
    className: classes2.list
  });
  return (0, import_jsx_runtime63.jsxs)(Root42, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime62.jsx)(Label, _extends({}, labelProps, {
      children: props.label
    })), (0, import_jsx_runtime62.jsx)(List4, _extends({}, listProps, {
      children: props.children
    }))]
  }));
});
true ? OptionGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types56.default.node,
  /**
   * @ignore
   */
  className: import_prop_types56.default.string,
  /**
   * If `true` all the options in the group will be disabled.
   * @default false
   */
  disabled: import_prop_types56.default.bool,
  /**
   * The human-readable description of the group.
   */
  label: import_prop_types56.default.node,
  /**
   * The props used for each slot inside the Input.
   * @default {}
   */
  slotProps: import_prop_types56.default.shape({
    label: import_prop_types56.default.oneOfType([import_prop_types56.default.func, import_prop_types56.default.object]),
    list: import_prop_types56.default.oneOfType([import_prop_types56.default.func, import_prop_types56.default.object]),
    root: import_prop_types56.default.oneOfType([import_prop_types56.default.func, import_prop_types56.default.object])
  }),
  /**
   * The components used for each slot inside the OptionGroup.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types56.default.shape({
    label: import_prop_types56.default.elementType,
    list: import_prop_types56.default.elementType,
    root: import_prop_types56.default.elementType
  })
} : void 0;

// node_modules/@mui/base/Option/Option.js
init_extends();
init_objectWithoutPropertiesLoose();
var React100 = __toESM(require_react());
var import_prop_types57 = __toESM(require_prop_types());
init_esm();
init_composeClasses3();

// node_modules/@mui/base/Option/optionClasses.js
function getOptionUtilityClass(slot) {
  return generateUtilityClass("MuiOption", slot);
}
var optionClasses = generateUtilityClasses("MuiOption", ["root", "disabled", "selected", "highlighted"]);

// node_modules/@mui/base/useOption/useOption.js
init_extends();
var React99 = __toESM(require_react());
init_esm();
function useOption(params) {
  const {
    value,
    label,
    disabled,
    rootRef: optionRefParam,
    id: idParam
  } = params;
  const {
    getRootProps: getListItemProps,
    rootRef: listItemRefHandler,
    highlighted,
    selected
  } = useListItem({
    item: value
  });
  const id = useId(idParam);
  const optionRef = React99.useRef(null);
  const selectOption = React99.useMemo(() => ({
    disabled,
    label,
    value,
    ref: optionRef,
    id
  }), [disabled, label, value, id]);
  const {
    index: index2
  } = useCompoundItem(value, selectOption);
  const handleRef = useForkRef(optionRefParam, optionRef, listItemRefHandler);
  return {
    getRootProps: (otherHandlers = {}) => _extends({}, otherHandlers, getListItemProps(otherHandlers), {
      id,
      ref: handleRef,
      role: "option",
      "aria-selected": selected
    }),
    highlighted,
    index: index2,
    selected,
    rootRef: handleRef
  };
}

// node_modules/@mui/base/Option/Option.js
var import_jsx_runtime64 = __toESM(require_jsx_runtime());
var _excluded46 = ["children", "disabled", "label", "slotProps", "slots", "value"];
function useUtilityClasses26(ownerState) {
  const {
    disabled,
    highlighted,
    selected
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", highlighted && "highlighted", selected && "selected"]
  };
  return composeClasses(slots, useClassNamesOverride(getOptionUtilityClass));
}
var Option = React100.memo(React100.forwardRef(function Option2(props, forwardedRef) {
  var _slots$root, _optionRef$current;
  const {
    children: children2,
    disabled = false,
    label,
    slotProps = {},
    slots = {},
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded46);
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "li";
  const optionRef = React100.useRef(null);
  const combinedRef = useForkRef(optionRef, forwardedRef);
  const computedLabel = label != null ? label : typeof children2 === "string" ? children2 : (_optionRef$current = optionRef.current) == null ? void 0 : _optionRef$current.innerText;
  const {
    getRootProps,
    selected,
    highlighted,
    index: index2
  } = useOption({
    disabled,
    label: computedLabel,
    rootRef: combinedRef,
    value
  });
  const ownerState = _extends({}, props, {
    disabled,
    highlighted,
    index: index2,
    selected
  });
  const classes2 = useUtilityClasses26(ownerState);
  const rootProps = useSlotProps({
    getSlotProps: getRootProps,
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    className: classes2.root,
    ownerState
  });
  return (0, import_jsx_runtime64.jsx)(Root42, _extends({}, rootProps, {
    children: children2
  }));
}));
true ? Option.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types57.default.node,
  /**
   * @ignore
   */
  className: import_prop_types57.default.string,
  /**
   * If `true`, the option will be disabled.
   * @default false
   */
  disabled: import_prop_types57.default.bool,
  /**
   * A text representation of the option's content.
   * Used for keyboard text navigation matching.
   */
  label: import_prop_types57.default.string,
  /**
   * The props used for each slot inside the Option.
   * @default {}
   */
  slotProps: import_prop_types57.default.shape({
    root: import_prop_types57.default.oneOfType([import_prop_types57.default.func, import_prop_types57.default.object])
  }),
  /**
   * The components used for each slot inside the Option.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types57.default.shape({
    root: import_prop_types57.default.elementType
  }),
  /**
   * The value of the option.
   */
  value: import_prop_types57.default.any.isRequired
} : void 0;

// node_modules/@mui/base/Unstable_Popup/Popup.js
init_extends();
init_objectWithoutPropertiesLoose();
var React102 = __toESM(require_react());
var import_prop_types58 = __toESM(require_prop_types());

// node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
var sides = ["top", "right", "bottom", "left"];
var alignments = ["start", "end"];
var placements2 = sides.reduce((acc, side) => acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), []);
var min2 = Math.min;
var max2 = Math.max;
var round3 = Math.round;
var floor = Math.floor;
var createCoords = (v) => ({
  x: v,
  y: v
});
var oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
var oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length2 = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length2] > rects.floating[length2]) {
    mainAlignmentSide = getOppositePlacement2(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement2(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement2(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl = ["right", "left"];
  const tb = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl)
        return isStart ? rl : lr;
      return isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list = list.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement2(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding2) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding2
  };
}
function getPaddingObject(padding2) {
  return typeof padding2 !== "number" ? expandPaddingObject(padding2) : {
    top: padding2,
    right: padding2,
    bottom: padding2,
    left: padding2
  };
}
function rectToClientRect2(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}

// node_modules/@floating-ui/core/dist/floating-ui.core.mjs
function computeCoordsFromPlacement(_ref2, placement, rtl) {
  let {
    reference: reference2,
    floating
  } = _ref2;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical = sideAxis === "y";
  const commonX = reference2.x + reference2.width / 2 - floating.width / 2;
  const commonY = reference2.y + reference2.height / 2 - floating.height / 2;
  const commonAlign = reference2[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference2.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case "right":
      coords = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference2.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference2.x,
        y: reference2.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference2, floating, config) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware: middleware2 = [],
    platform: platform2
  } = config;
  const validMiddleware = middleware2.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference: reference2,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn: fn2
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn2({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference: reference2,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference: reference2,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
      continue;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow2(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding: padding2 = 0
  } = evaluate(options, state);
  const paddingObject = getPaddingObject(padding2);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect2(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    ...rects.floating,
    x,
    y
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect2(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
var flip2 = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options, state);
      const side = getSide(placement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement2(initialPlacement)] : getExpandedPlacements(initialPlacement));
      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== "none") {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements3 = [initialPlacement, ...fallbackPlacements];
      const overflow2 = await detectOverflow2(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow2[side]);
      }
      if (checkCrossAxis) {
        const sides2 = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow2[sides2[0]], overflow2[sides2[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements3[nextIndex];
        if (nextPlacement) {
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$map$so;
              const placement2 = (_overflowsData$map$so = overflowsData.map((d) => [d.placement, d.overflows.filter((overflow3) => overflow3 > 0).reduce((acc, overflow3) => acc + overflow3, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
              if (placement2) {
                resetPlacement = placement2;
              }
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
async function convertValueToCoords(state, options) {
  const {
    placement,
    platform: platform2,
    elements
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getSideAxis(placement) === "y";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options, state);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset2 = function(options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: "offset",
    options,
    async fn(state) {
      const {
        x,
        y
      } = state;
      const diffCoords = await convertValueToCoords(state, options);
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }
  };
};

// node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs
function getNodeName2(node2) {
  if (isNode(node2)) {
    return (node2.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow2(node2) {
  var _node$ownerDocument;
  return (node2 == null ? void 0 : (_node$ownerDocument = node2.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement2(node2) {
  var _ref2;
  return (_ref2 = (isNode(node2) ? node2.ownerDocument : node2.document) || window.document) == null ? void 0 : _ref2.documentElement;
}
function isNode(value) {
  return value instanceof Node || value instanceof getWindow2(value).Node;
}
function isElement2(value) {
  return value instanceof Element || value instanceof getWindow2(value).Element;
}
function isHTMLElement3(value) {
  return value instanceof HTMLElement || value instanceof getWindow2(value).HTMLElement;
}
function isShadowRoot2(value) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow2(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow: overflow2,
    overflowX,
    overflowY,
    display
  } = getComputedStyle2(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow2 + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement2(element) {
  return ["table", "td", "th"].includes(getNodeName2(element));
}
function isContainingBlock(element) {
  const webkit = isWebKit();
  const css2 = getComputedStyle2(element);
  return css2.transform !== "none" || css2.perspective !== "none" || (css2.containerType ? css2.containerType !== "normal" : false) || !webkit && (css2.backdropFilter ? css2.backdropFilter !== "none" : false) || !webkit && (css2.filter ? css2.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css2.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css2.contain || "").includes(value));
}
function getContainingBlock2(element) {
  let currentNode = getParentNode2(element);
  while (isHTMLElement3(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = getParentNode2(currentNode);
    }
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports)
    return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node2) {
  return ["html", "body", "#document"].includes(getNodeName2(node2));
}
function getComputedStyle2(element) {
  return getWindow2(element).getComputedStyle(element);
}
function getNodeScroll2(element) {
  if (isElement2(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getParentNode2(node2) {
  if (getNodeName2(node2) === "html") {
    return node2;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node2.assignedSlot || // DOM Element detected.
    node2.parentNode || // ShadowRoot detected.
    isShadowRoot2(node2) && node2.host || // Fallback.
    getDocumentElement2(node2)
  );
  return isShadowRoot2(result) ? result.host : result;
}
function getNearestOverflowAncestor(node2) {
  const parentNode = getParentNode2(node2);
  if (isLastTraversableNode(parentNode)) {
    return node2.ownerDocument ? node2.ownerDocument.body : node2.body;
  }
  if (isHTMLElement3(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node2, list) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  const scrollableAncestor = getNearestOverflowAncestor(node2);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node2.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow2(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));
}

// node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
function getCssDimensions(element) {
  const css2 = getComputedStyle2(element);
  let width2 = parseFloat(css2.width) || 0;
  let height2 = parseFloat(css2.height) || 0;
  const hasOffset = isHTMLElement3(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width2;
  const offsetHeight = hasOffset ? element.offsetHeight : height2;
  const shouldFallback = round3(width2) !== offsetWidth || round3(height2) !== offsetHeight;
  if (shouldFallback) {
    width2 = offsetWidth;
    height2 = offsetHeight;
  }
  return {
    width: width2,
    height: height2,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement2(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement3(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width: width2,
    height: height2,
    $
  } = getCssDimensions(domElement);
  let x = ($ ? round3(rect.width) : rect.width) / width2;
  let y = ($ ? round3(rect.height) : rect.height) / height2;
  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}
var noOffsets = createCoords(0);
function getVisualOffsets(element) {
  const win = getWindow2(element);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow2(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect2(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement2(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width2 = clientRect.width / scale.x;
  let height2 = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow2(domElement);
    const offsetWin = offsetParent && isElement2(offsetParent) ? getWindow2(offsetParent) : offsetParent;
    let currentIFrame = win.frameElement;
    while (currentIFrame && offsetParent && offsetWin !== win) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css2 = getComputedStyle2(currentIFrame);
      const left3 = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css2.paddingLeft)) * iframeScale.x;
      const top3 = iframeRect.top + (currentIFrame.clientTop + parseFloat(css2.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width2 *= iframeScale.x;
      height2 *= iframeScale.y;
      x += left3;
      y += top3;
      currentIFrame = getWindow2(currentIFrame).frameElement;
    }
  }
  return rectToClientRect2({
    width: width2,
    height: height2,
    x,
    y
  });
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref2) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref2;
  const isOffsetParentAnElement = isHTMLElement3(offsetParent);
  const documentElement = getDocumentElement2(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName2(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll2(offsetParent);
    }
    if (isHTMLElement3(offsetParent)) {
      const offsetRect = getBoundingClientRect2(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getWindowScrollBarX2(element) {
  return getBoundingClientRect2(getDocumentElement2(element)).left + getNodeScroll2(element).scrollLeft;
}
function getDocumentRect2(element) {
  const html3 = getDocumentElement2(element);
  const scroll = getNodeScroll2(element);
  const body2 = element.ownerDocument.body;
  const width2 = max2(html3.scrollWidth, html3.clientWidth, body2.scrollWidth, body2.clientWidth);
  const height2 = max2(html3.scrollHeight, html3.clientHeight, body2.scrollHeight, body2.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX2(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle2(body2).direction === "rtl") {
    x += max2(html3.clientWidth, body2.clientWidth) - width2;
  }
  return {
    width: width2,
    height: height2,
    x,
    y
  };
}
function getViewportRect2(element, strategy) {
  const win = getWindow2(element);
  const html3 = getDocumentElement2(element);
  const visualViewport = win.visualViewport;
  let width2 = html3.clientWidth;
  let height2 = html3.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width2 = visualViewport.width;
    height2 = visualViewport.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width: width2,
    height: height2,
    x,
    y
  };
}
function getInnerBoundingClientRect2(element, strategy) {
  const clientRect = getBoundingClientRect2(element, true, strategy === "fixed");
  const top3 = clientRect.top + element.clientTop;
  const left3 = clientRect.left + element.clientLeft;
  const scale = isHTMLElement3(element) ? getScale(element) : createCoords(1);
  const width2 = element.clientWidth * scale.x;
  const height2 = element.clientHeight * scale.y;
  const x = left3 * scale.x;
  const y = top3 * scale.y;
  return {
    width: width2,
    height: height2,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect2(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect2(getDocumentElement2(element));
  } else if (isElement2(clippingAncestor)) {
    rect = getInnerBoundingClientRect2(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect2(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode2(element);
  if (parentNode === stopNode || !isElement2(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle2(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache2) {
  const cachedResult = cache2.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element).filter((el) => isElement2(el) && getNodeName2(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle2(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode2(element) : element;
  while (isElement2(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle2(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result = result.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode2(currentNode);
  }
  cache2.set(element, result);
  return result;
}
function getClippingRect2(_ref2) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref2;
  const elementClippingAncestors = boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max2(rect.top, accRect.top);
    accRect.right = min2(rect.right, accRect.right);
    accRect.bottom = min2(rect.bottom, accRect.bottom);
    accRect.left = max2(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  return getCssDimensions(element);
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement3(offsetParent);
  const documentElement = getDocumentElement2(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect2(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName2(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll2(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect2(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX2(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
function getTrueOffsetParent2(element, polyfill) {
  if (!isHTMLElement3(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  return element.offsetParent;
}
function getOffsetParent2(element, polyfill) {
  const window2 = getWindow2(element);
  if (!isHTMLElement3(element)) {
    return window2;
  }
  let offsetParent = getTrueOffsetParent2(element, polyfill);
  while (offsetParent && isTableElement2(offsetParent) && getComputedStyle2(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent2(offsetParent, polyfill);
  }
  if (offsetParent && (getNodeName2(offsetParent) === "html" || getNodeName2(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static" && !isContainingBlock(offsetParent))) {
    return window2;
  }
  return offsetParent || getContainingBlock2(element) || window2;
}
var getElementRects = async function(_ref2) {
  let {
    reference: reference2,
    floating,
    strategy
  } = _ref2;
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent2;
  const getDimensionsFn = this.getDimensions;
  return {
    reference: getRectRelativeToOffsetParent(reference2, await getOffsetParentFn(floating), strategy),
    floating: {
      x: 0,
      y: 0,
      ...await getDimensionsFn(floating)
    }
  };
};
function isRTL(element) {
  return getComputedStyle2(element).direction === "rtl";
}
var platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement: getDocumentElement2,
  getClippingRect: getClippingRect2,
  getOffsetParent: getOffsetParent2,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement: isElement2,
  isRTL
};
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root = getDocumentElement2(element);
  function cleanup() {
    clearTimeout(timeoutId);
    io && io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const {
      left: left3,
      top: top3,
      width: width2,
      height: height2
    } = element.getBoundingClientRect();
    if (!skip) {
      onMove();
    }
    if (!width2 || !height2) {
      return;
    }
    const insetTop = floor(top3);
    const insetRight = floor(root.clientWidth - (left3 + width2));
    const insetBottom = floor(root.clientHeight - (top3 + height2));
    const insetLeft = floor(left3);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: max2(0, min2(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 100);
        } else {
          refresh(false, ratio);
        }
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (e) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference2, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference2);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref2) => {
      let [firstEntry] = _ref2;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          resizeObserver && resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect2(reference2) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect2(reference2);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    cleanupIo && cleanupIo();
    resizeObserver && resizeObserver.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var computePosition2 = (reference2, floating, options) => {
  const cache2 = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache2
  };
  return computePosition(reference2, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs
var React101 = __toESM(require_react(), 1);
var import_react15 = __toESM(require_react(), 1);
var ReactDOM4 = __toESM(require_react_dom(), 1);
var index = typeof document !== "undefined" ? import_react15.useLayoutEffect : import_react15.useEffect;
function deepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (typeof a === "function" && a.toString() === b.toString()) {
    return true;
  }
  let length2, i, keys;
  if (a && b && typeof a == "object") {
    if (Array.isArray(a)) {
      length2 = a.length;
      if (length2 != b.length)
        return false;
      for (i = length2; i-- !== 0; ) {
        if (!deepEqual(a[i], b[i])) {
          return false;
        }
      }
      return true;
    }
    keys = Object.keys(a);
    length2 = keys.length;
    if (length2 !== Object.keys(b).length) {
      return false;
    }
    for (i = length2; i-- !== 0; ) {
      if (!{}.hasOwnProperty.call(b, keys[i])) {
        return false;
      }
    }
    for (i = length2; i-- !== 0; ) {
      const key = keys[i];
      if (key === "_owner" && a.$$typeof) {
        continue;
      }
      if (!deepEqual(a[key], b[key])) {
        return false;
      }
    }
    return true;
  }
  return a !== a && b !== b;
}
function getDPR(element) {
  if (typeof window === "undefined") {
    return 1;
  }
  const win = element.ownerDocument.defaultView || window;
  return win.devicePixelRatio || 1;
}
function roundByDPR(element, value) {
  const dpr = getDPR(element);
  return Math.round(value * dpr) / dpr;
}
function useLatestRef(value) {
  const ref = React101.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware: middleware2 = [],
    platform: platform2,
    elements: {
      reference: externalReference,
      floating: externalFloating
    } = {},
    transform = true,
    whileElementsMounted,
    open
  } = options;
  const [data, setData] = React101.useState({
    x: 0,
    y: 0,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = React101.useState(middleware2);
  if (!deepEqual(latestMiddleware, middleware2)) {
    setLatestMiddleware(middleware2);
  }
  const [_reference, _setReference] = React101.useState(null);
  const [_floating, _setFloating] = React101.useState(null);
  const setReference = React101.useCallback((node2) => {
    if (node2 != referenceRef.current) {
      referenceRef.current = node2;
      _setReference(node2);
    }
  }, [_setReference]);
  const setFloating = React101.useCallback((node2) => {
    if (node2 !== floatingRef.current) {
      floatingRef.current = node2;
      _setFloating(node2);
    }
  }, [_setFloating]);
  const referenceEl = externalReference || _reference;
  const floatingEl = externalFloating || _floating;
  const referenceRef = React101.useRef(null);
  const floatingRef = React101.useRef(null);
  const dataRef = React101.useRef(data);
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const platformRef = useLatestRef(platform2);
  const update = React101.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    const config = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    if (platformRef.current) {
      config.platform = platformRef.current;
    }
    computePosition2(referenceRef.current, floatingRef.current, config).then((data2) => {
      const fullData = {
        ...data2,
        isPositioned: true
      };
      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
        dataRef.current = fullData;
        ReactDOM4.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy, platformRef]);
  index(() => {
    if (open === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData((data2) => ({
        ...data2,
        isPositioned: false
      }));
    }
  }, [open]);
  const isMountedRef = React101.useRef(false);
  index(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index(() => {
    if (referenceEl)
      referenceRef.current = referenceEl;
    if (floatingEl)
      floatingRef.current = floatingEl;
    if (referenceEl && floatingEl) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(referenceEl, floatingEl, update);
      } else {
        update();
      }
    }
  }, [referenceEl, floatingEl, update, whileElementsMountedRef]);
  const refs = React101.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = React101.useMemo(() => ({
    reference: referenceEl,
    floating: floatingEl
  }), [referenceEl, floatingEl]);
  const floatingStyles = React101.useMemo(() => {
    const initialStyles = {
      position: strategy,
      left: 0,
      top: 0
    };
    if (!elements.floating) {
      return initialStyles;
    }
    const x = roundByDPR(elements.floating, data.x);
    const y = roundByDPR(elements.floating, data.y);
    if (transform) {
      return {
        ...initialStyles,
        transform: "translate(" + x + "px, " + y + "px)",
        ...getDPR(elements.floating) >= 1.5 && {
          willChange: "transform"
        }
      };
    }
    return {
      position: strategy,
      left: x,
      top: y
    };
  }, [strategy, transform, elements.floating, data.x, data.y]);
  return React101.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    floatingStyles
  }), [data, update, refs, elements, floatingStyles]);
}

// node_modules/@mui/base/Unstable_Popup/Popup.js
init_esm();
init_composeClasses3();

// node_modules/@mui/base/Unstable_Popup/popupClasses.js
function getPopupUtilityClass(slot) {
  return generateUtilityClass("MuiPopup", slot);
}
var popupClasses = generateUtilityClasses("MuiPopup", ["root", "open"]);

// node_modules/@mui/base/Unstable_Popup/Popup.js
var import_jsx_runtime65 = __toESM(require_jsx_runtime());
var _excluded47 = ["anchor", "children", "container", "disablePortal", "keepMounted", "middleware", "offset", "open", "placement", "slotProps", "slots", "strategy", "withTransition"];
function useUtilityClasses27(ownerState) {
  const {
    open
  } = ownerState;
  const slots = {
    root: ["root", open && "open"]
  };
  return composeClasses(slots, useClassNamesOverride(getPopupUtilityClass));
}
function resolveAnchor(anchor) {
  return typeof anchor === "function" ? anchor() : anchor;
}
var Popup = React102.forwardRef(function Popup2(props, forwardedRef) {
  var _slots$root;
  const {
    anchor: anchorProp,
    children: children2,
    container,
    disablePortal = false,
    keepMounted = false,
    middleware: middleware2,
    offset: offsetProp = 0,
    open = false,
    placement = "bottom",
    slotProps = {},
    slots = {},
    strategy = "absolute",
    withTransition = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded47);
  const {
    refs,
    elements,
    floatingStyles,
    update,
    placement: finalPlacement
  } = useFloating({
    elements: {
      reference: resolveAnchor(anchorProp)
    },
    open,
    middleware: middleware2 != null ? middleware2 : [offset2(offsetProp != null ? offsetProp : 0), flip2()],
    placement,
    strategy,
    whileElementsMounted: !keepMounted ? autoUpdate : void 0
  });
  const handleRef = useForkRef(refs.setFloating, forwardedRef);
  const [exited, setExited] = React102.useState(true);
  const handleEntering = () => {
    setExited(false);
  };
  const handleExited = () => {
    setExited(true);
  };
  useEnhancedEffect_default(() => {
    if (keepMounted && open && elements.reference && elements.floating) {
      const cleanup = autoUpdate(elements.reference, elements.floating, update);
      return cleanup;
    }
    return void 0;
  }, [keepMounted, open, elements, update]);
  const ownerState = _extends({}, props, {
    disablePortal,
    keepMounted,
    offset: offset2,
    open,
    placement,
    finalPlacement,
    strategy,
    withTransition
  });
  const display = !open && keepMounted && (!withTransition || exited) ? "none" : void 0;
  const classes2 = useUtilityClasses27(ownerState);
  const Root42 = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : "div";
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    ownerState,
    className: classes2.root,
    additionalProps: {
      ref: handleRef,
      role: "tooltip",
      style: _extends({}, floatingStyles, {
        display
      })
    }
  });
  const shouldRender = open || keepMounted || withTransition && !exited;
  if (!shouldRender) {
    return null;
  }
  const childProps = {
    placement: finalPlacement,
    requestOpen: open,
    onExited: handleExited,
    onEnter: handleEntering
  };
  return (0, import_jsx_runtime65.jsx)(Portal, {
    disablePortal,
    container,
    children: (0, import_jsx_runtime65.jsx)(Root42, _extends({}, rootProps, {
      children: typeof children2 === "function" ? children2(childProps) : children2
    }))
  });
});
true ? Popup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * An HTML element, [virtual element](https://floating-ui.com/docs/virtual-elements),
   * or a function that returns either.
   * It's used to set the position of the popup.
   */
  anchor: import_prop_types58.default.oneOfType([HTMLElementType, import_prop_types58.default.object, import_prop_types58.default.func]),
  /**
   * @ignore
   */
  children: import_prop_types58.default.oneOfType([import_prop_types58.default.node, import_prop_types58.default.func]),
  /**
   * An HTML element or function that returns one. The container will have the portal children appended to it.
   * By default, it uses the body of the top-level document object, so it's `document.body` in these cases.
   */
  container: import_prop_types58.default.oneOfType([HTMLElementType, import_prop_types58.default.func]),
  /**
   * If `true`, the popup will be rendered where it is defined, without the use of portals.
   * @default false
   */
  disablePortal: import_prop_types58.default.bool,
  /**
   * If `true`, the popup will exist in the DOM even if it's closed.
   * Its visibility will be controlled by the `display` CSS property.
   *
   * Otherwise, a closed popup will be removed from the DOM.
   *
   * @default false
   */
  keepMounted: import_prop_types58.default.bool,
  /**
   * Collection of Floating UI middleware to use when positioning the popup.
   * If not provided, the [`offset`](https://floating-ui.com/docs/offset)
   * and [`flip`](https://floating-ui.com/docs/flip) functions will be used.
   *
   * @see https://floating-ui.com/docs/computePosition#middleware
   */
  middleware: import_prop_types58.default.arrayOf(import_prop_types58.default.oneOfType([import_prop_types58.default.oneOf([false]), import_prop_types58.default.shape({
    fn: import_prop_types58.default.func.isRequired,
    name: import_prop_types58.default.string.isRequired,
    options: import_prop_types58.default.any
  })])),
  /**
   * Distance between a popup and the trigger element.
   * This prop is ignored when custom `middleware` is provided.
   *
   * @default 0
   * @see https://floating-ui.com/docs/offset
   */
  offset: import_prop_types58.default.oneOfType([import_prop_types58.default.func, import_prop_types58.default.number, import_prop_types58.default.shape({
    alignmentAxis: import_prop_types58.default.number,
    crossAxis: import_prop_types58.default.number,
    mainAxis: import_prop_types58.default.number
  })]),
  /**
   * If `true`, the popup is visible.
   *
   * @default false
   */
  open: import_prop_types58.default.bool,
  /**
   * Determines where to place the popup relative to the trigger element.
   *
   * @default 'bottom'
   * @see https://floating-ui.com/docs/computePosition#placement
   */
  placement: import_prop_types58.default.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The props used for each slot inside the Popup.
   *
   * @default {}
   */
  slotProps: import_prop_types58.default.shape({
    root: import_prop_types58.default.oneOfType([import_prop_types58.default.func, import_prop_types58.default.object])
  }),
  /**
   * The components used for each slot inside the Popup.
   * Either a string to use a HTML element or a component.
   *
   * @default {}
   */
  slots: import_prop_types58.default.shape({
    root: import_prop_types58.default.elementType
  }),
  /**
   * The type of CSS position property to use (absolute or fixed).
   *
   * @default 'absolute'
   * @see https://floating-ui.com/docs/computePosition#strategy
   */
  strategy: import_prop_types58.default.oneOf(["absolute", "fixed"]),
  /**
   * If `true`, the popup will not disappear immediately when it needs to be closed
   * but wait until the exit transition has finished.
   * In such a case, a function form of `children` must be used and `onExited`
   * callback function must be called when the transition or animation finish.
   *
   * @default false
   */
  withTransition: import_prop_types58.default.bool
} : void 0;

// node_modules/@mui/base/Select/Select.js
init_extends();
init_objectWithoutPropertiesLoose();
var React105 = __toESM(require_react());
var import_prop_types59 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/base/useSelect/useSelect.js
init_extends();
var React103 = __toESM(require_react());
init_esm();

// node_modules/@mui/base/useSelect/useSelect.types.js
var SelectActionTypes = {
  buttonClick: "buttonClick"
};

// node_modules/@mui/base/useSelect/defaultOptionStringifier.js
var defaultOptionStringifier = (option) => {
  const {
    label,
    value
  } = option;
  if (typeof label === "string") {
    return label;
  }
  if (typeof value === "string") {
    return value;
  }
  return String(option);
};

// node_modules/@mui/base/useSelect/selectReducer.js
init_extends();
function selectReducer(state, action) {
  const {
    open
  } = state;
  const {
    context: {
      selectionMode
    }
  } = action;
  if (action.type === SelectActionTypes.buttonClick) {
    var _state$selectedValues;
    const itemToHighlight = (_state$selectedValues = state.selectedValues[0]) != null ? _state$selectedValues : moveHighlight(null, "start", action.context);
    return _extends({}, state, {
      open: !open,
      highlightedValue: !open ? itemToHighlight : null
    });
  }
  const newState = listReducer(state, action);
  switch (action.type) {
    case ListActionTypes.keyDown:
      if (state.open) {
        if (action.event.key === "Escape") {
          return _extends({}, newState, {
            open: false
          });
        }
        if (selectionMode === "single" && (action.event.key === "Enter" || action.event.key === " ")) {
          return _extends({}, newState, {
            open: false
          });
        }
      } else {
        if (action.event.key === "Enter" || action.event.key === " " || action.event.key === "ArrowDown") {
          var _state$selectedValues2;
          return _extends({}, state, {
            open: true,
            highlightedValue: (_state$selectedValues2 = state.selectedValues[0]) != null ? _state$selectedValues2 : moveHighlight(null, "start", action.context)
          });
        }
        if (action.event.key === "ArrowUp") {
          var _state$selectedValues3;
          return _extends({}, state, {
            open: true,
            highlightedValue: (_state$selectedValues3 = state.selectedValues[0]) != null ? _state$selectedValues3 : moveHighlight(null, "end", action.context)
          });
        }
      }
      break;
    case ListActionTypes.itemClick:
      if (selectionMode === "single") {
        return _extends({}, newState, {
          open: false
        });
      }
      break;
    case ListActionTypes.blur:
      return _extends({}, newState, {
        open: false
      });
    default:
      return newState;
  }
  return newState;
}

// node_modules/@mui/base/useSelect/useSelect.js
var visuallyHiddenStyle = {
  clip: "rect(1px, 1px, 1px, 1px)",
  clipPath: "inset(50%)",
  height: "1px",
  width: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  left: "50%",
  bottom: 0
  // to display the native browser validation error at the bottom of the Select.
};
var noop2 = () => {
};
function defaultFormValueProvider(selectedOption) {
  if (Array.isArray(selectedOption)) {
    if (selectedOption.length === 0) {
      return "";
    }
    return JSON.stringify(selectedOption.map((o) => o.value));
  }
  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {
    return "";
  }
  if (typeof selectedOption.value === "string" || typeof selectedOption.value === "number") {
    return selectedOption.value;
  }
  return JSON.stringify(selectedOption.value);
}
function preventDefault(event) {
  event.preventDefault();
}
function useSelect(props) {
  const {
    areOptionsEqual,
    buttonRef: buttonRefProp,
    defaultOpen = false,
    defaultValue: defaultValueProp,
    disabled = false,
    listboxId: listboxIdProp,
    listboxRef: listboxRefProp,
    multiple = false,
    name,
    required: required2,
    onChange,
    onHighlightChange,
    onOpenChange,
    open: openProp,
    options: optionsParam,
    getOptionAsString = defaultOptionStringifier,
    getSerializedValue = defaultFormValueProvider,
    value: valueProp
  } = props;
  const buttonRef = React103.useRef(null);
  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);
  const listboxRef = React103.useRef(null);
  const listboxId = useId(listboxIdProp);
  let defaultValue;
  if (valueProp === void 0 && defaultValueProp === void 0) {
    defaultValue = [];
  } else if (defaultValueProp !== void 0) {
    if (multiple) {
      defaultValue = defaultValueProp;
    } else {
      defaultValue = defaultValueProp == null ? [] : [defaultValueProp];
    }
  }
  const value = React103.useMemo(() => {
    if (valueProp !== void 0) {
      if (multiple) {
        return valueProp;
      }
      return valueProp == null ? [] : [valueProp];
    }
    return void 0;
  }, [valueProp, multiple]);
  const {
    subitems,
    contextValue: compoundComponentContextValue
  } = useCompoundParent();
  const options = React103.useMemo(() => {
    if (optionsParam != null) {
      return new Map(optionsParam.map((option, index2) => [option.value, {
        value: option.value,
        label: option.label,
        disabled: option.disabled,
        ref: React103.createRef(),
        id: `${listboxId}_${index2}`
      }]));
    }
    return subitems;
  }, [optionsParam, subitems, listboxId]);
  const handleListboxRef = useForkRef(listboxRefProp, listboxRef);
  const {
    getRootProps: getButtonRootProps,
    active: buttonActive,
    focusVisible: buttonFocusVisible,
    rootRef: mergedButtonRef
  } = useButton({
    disabled,
    rootRef: handleButtonRef
  });
  const optionValues = React103.useMemo(() => Array.from(options.keys()), [options]);
  const getOptionByValue = React103.useCallback((valueToGet) => {
    if (areOptionsEqual !== void 0) {
      const similarValue = optionValues.find((optionValue) => areOptionsEqual(optionValue, valueToGet));
      return options.get(similarValue);
    }
    return options.get(valueToGet);
  }, [options, areOptionsEqual, optionValues]);
  const isItemDisabled = React103.useCallback((valueToCheck) => {
    var _option$disabled;
    const option = getOptionByValue(valueToCheck);
    return (_option$disabled = option == null ? void 0 : option.disabled) != null ? _option$disabled : false;
  }, [getOptionByValue]);
  const stringifyOption = React103.useCallback((valueToCheck) => {
    const option = getOptionByValue(valueToCheck);
    if (!option) {
      return "";
    }
    return getOptionAsString(option);
  }, [getOptionByValue, getOptionAsString]);
  const controlledState = React103.useMemo(() => ({
    selectedValues: value,
    open: openProp
  }), [value, openProp]);
  const getItemId = React103.useCallback((itemValue) => {
    var _options$get;
    return (_options$get = options.get(itemValue)) == null ? void 0 : _options$get.id;
  }, [options]);
  const handleSelectionChange = React103.useCallback((event, newValues) => {
    if (multiple) {
      onChange == null ? void 0 : onChange(event, newValues);
    } else {
      var _newValues$;
      onChange == null ? void 0 : onChange(event, (_newValues$ = newValues[0]) != null ? _newValues$ : null);
    }
  }, [multiple, onChange]);
  const handleHighlightChange = React103.useCallback((event, newValue) => {
    onHighlightChange == null ? void 0 : onHighlightChange(event, newValue != null ? newValue : null);
  }, [onHighlightChange]);
  const handleStateChange = React103.useCallback((event, field, fieldValue) => {
    if (field === "open") {
      onOpenChange == null ? void 0 : onOpenChange(fieldValue);
      if (fieldValue === false && (event == null ? void 0 : event.type) !== "blur") {
        var _buttonRef$current;
        (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
      }
    }
  }, [onOpenChange]);
  const useListParameters = {
    getInitialState: () => {
      var _defaultValue;
      return {
        highlightedValue: null,
        selectedValues: (_defaultValue = defaultValue) != null ? _defaultValue : [],
        open: defaultOpen
      };
    },
    getItemId,
    controlledProps: controlledState,
    itemComparer: areOptionsEqual,
    isItemDisabled,
    rootRef: mergedButtonRef,
    onChange: handleSelectionChange,
    onHighlightChange: handleHighlightChange,
    onStateChange: handleStateChange,
    reducerActionContext: React103.useMemo(() => ({
      multiple
    }), [multiple]),
    items: optionValues,
    getItemAsString: stringifyOption,
    selectionMode: multiple ? "multiple" : "single",
    stateReducer: selectReducer
  };
  const {
    dispatch,
    getRootProps: getListboxRootProps,
    contextValue: listContextValue,
    state: {
      open,
      highlightedValue: highlightedOption,
      selectedValues: selectedOptions
    },
    rootRef: mergedListRootRef
  } = useList2(useListParameters);
  const createHandleButtonMouseDown = (otherHandlers) => (event) => {
    var _otherHandlers$onMous;
    otherHandlers == null || (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);
    if (!event.defaultMuiPrevented) {
      const action = {
        type: SelectActionTypes.buttonClick,
        event
      };
      dispatch(action);
    }
  };
  useEnhancedEffect_default(() => {
    if (highlightedOption != null) {
      var _getOptionByValue;
      const optionRef = (_getOptionByValue = getOptionByValue(highlightedOption)) == null ? void 0 : _getOptionByValue.ref;
      if (!listboxRef.current || !(optionRef != null && optionRef.current)) {
        return;
      }
      const listboxClientRect = listboxRef.current.getBoundingClientRect();
      const optionClientRect = optionRef.current.getBoundingClientRect();
      if (optionClientRect.top < listboxClientRect.top) {
        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;
      } else if (optionClientRect.bottom > listboxClientRect.bottom) {
        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;
      }
    }
  }, [highlightedOption, getOptionByValue]);
  const getOptionMetadata = React103.useCallback((optionValue) => getOptionByValue(optionValue), [getOptionByValue]);
  const getSelectTriggerProps = (otherHandlers = {}) => {
    return _extends({}, otherHandlers, {
      onMouseDown: createHandleButtonMouseDown(otherHandlers),
      ref: mergedListRootRef,
      role: "combobox",
      "aria-expanded": open,
      "aria-controls": listboxId
    });
  };
  const getButtonProps = (otherHandlers = {}) => {
    const listboxAndButtonProps = combineHooksSlotProps(getButtonRootProps, getListboxRootProps);
    const combinedProps = combineHooksSlotProps(listboxAndButtonProps, getSelectTriggerProps);
    return combinedProps(otherHandlers);
  };
  const getListboxProps = (otherHandlers = {}) => {
    return _extends({}, otherHandlers, {
      id: listboxId,
      role: "listbox",
      "aria-multiselectable": multiple ? "true" : void 0,
      ref: handleListboxRef,
      onMouseDown: preventDefault
      // to prevent the button from losing focus when interacting with the listbox
    });
  };
  React103.useDebugValue({
    selectedOptions,
    highlightedOption,
    open
  });
  const contextValue = React103.useMemo(() => _extends({}, listContextValue, compoundComponentContextValue), [listContextValue, compoundComponentContextValue]);
  let selectValue;
  if (props.multiple) {
    selectValue = selectedOptions;
  } else {
    selectValue = selectedOptions.length > 0 ? selectedOptions[0] : null;
  }
  let selectedOptionsMetadata;
  if (multiple) {
    selectedOptionsMetadata = selectValue.map((v) => getOptionMetadata(v)).filter((o) => o !== void 0);
  } else {
    var _getOptionMetadata;
    selectedOptionsMetadata = (_getOptionMetadata = getOptionMetadata(selectValue)) != null ? _getOptionMetadata : null;
  }
  const getHiddenInputProps = (otherHandlers = {}) => _extends({
    name,
    tabIndex: -1,
    "aria-hidden": true,
    required: required2 ? true : void 0,
    value: getSerializedValue(selectedOptionsMetadata),
    onChange: noop2,
    style: visuallyHiddenStyle
  }, otherHandlers);
  return {
    buttonActive,
    buttonFocusVisible,
    buttonRef: mergedButtonRef,
    contextValue,
    disabled,
    dispatch,
    getButtonProps,
    getHiddenInputProps,
    getListboxProps,
    getOptionMetadata,
    listboxRef: mergedListRootRef,
    open,
    options: optionValues,
    value: selectValue,
    highlightedOption
  };
}

// node_modules/@mui/base/useSelect/SelectProvider.js
var React104 = __toESM(require_react());
var import_jsx_runtime66 = __toESM(require_jsx_runtime());
function SelectProvider(props) {
  const {
    value,
    children: children2
  } = props;
  const {
    dispatch,
    getItemIndex,
    getItemState,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler,
    registerItem,
    totalSubitemCount
  } = value;
  const listContextValue = React104.useMemo(() => ({
    dispatch,
    getItemState,
    getItemIndex,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler
  }), [dispatch, getItemIndex, getItemState, registerHighlightChangeHandler, registerSelectionChangeHandler]);
  const compoundComponentContextValue = React104.useMemo(() => ({
    getItemIndex,
    registerItem,
    totalSubitemCount
  }), [registerItem, getItemIndex, totalSubitemCount]);
  return (0, import_jsx_runtime66.jsx)(CompoundComponentContext.Provider, {
    value: compoundComponentContextValue,
    children: (0, import_jsx_runtime66.jsx)(ListContext2.Provider, {
      value: listContextValue,
      children: children2
    })
  });
}

// node_modules/@mui/base/Select/Select.js
init_composeClasses3();

// node_modules/@mui/base/Select/selectClasses.js
function getSelectUtilityClass(slot) {
  return generateUtilityClass("MuiSelect", slot);
}
var selectClasses = generateUtilityClasses("MuiSelect", ["root", "button", "listbox", "popper", "active", "expanded", "disabled", "focusVisible"]);

// node_modules/@mui/base/Select/Select.js
var import_jsx_runtime67 = __toESM(require_jsx_runtime());
var import_jsx_runtime68 = __toESM(require_jsx_runtime());
var _excluded48 = ["areOptionsEqual", "autoFocus", "children", "defaultValue", "defaultListboxOpen", "disabled", "getSerializedValue", "listboxId", "listboxOpen", "multiple", "name", "required", "onChange", "onListboxOpenChange", "getOptionAsString", "renderValue", "slotProps", "slots", "value"];
function defaultRenderValue(selectedOptions) {
  var _selectedOptions$labe;
  if (Array.isArray(selectedOptions)) {
    return (0, import_jsx_runtime67.jsx)(React105.Fragment, {
      children: selectedOptions.map((o) => o.label).join(", ")
    });
  }
  return (_selectedOptions$labe = selectedOptions == null ? void 0 : selectedOptions.label) != null ? _selectedOptions$labe : "";
}
function useUtilityClasses28(ownerState) {
  const {
    active,
    disabled,
    open,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", active && "active", open && "expanded"],
    listbox: ["listbox", disabled && "disabled"],
    popper: ["popper"]
  };
  return composeClasses(slots, useClassNamesOverride(getSelectUtilityClass));
}
var Select = React105.forwardRef(function Select2(props, forwardedRef) {
  var _slots$root, _slots$listbox, _slots$popper;
  const {
    areOptionsEqual,
    autoFocus,
    children: children2,
    defaultValue,
    defaultListboxOpen = false,
    disabled: disabledProp,
    getSerializedValue,
    listboxId,
    listboxOpen: listboxOpenProp,
    multiple = false,
    name,
    required: required2 = false,
    onChange,
    onListboxOpenChange,
    getOptionAsString = defaultOptionStringifier,
    renderValue: renderValueProp,
    slotProps = {},
    slots = {},
    value: valueProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded48);
  const renderValue = renderValueProp != null ? renderValueProp : defaultRenderValue;
  const [buttonDefined, setButtonDefined] = React105.useState(false);
  const buttonRef = React105.useRef(null);
  const listboxRef = React105.useRef(null);
  const Button6 = (_slots$root = slots.root) != null ? _slots$root : "button";
  const ListboxRoot = (_slots$listbox = slots.listbox) != null ? _slots$listbox : "ul";
  const PopperComponent = (_slots$popper = slots.popper) != null ? _slots$popper : Popper;
  const handleButtonRefChange = React105.useCallback((element) => {
    setButtonDefined(element != null);
  }, []);
  const handleButtonRef = useForkRef(forwardedRef, buttonRef, handleButtonRefChange);
  React105.useEffect(() => {
    if (autoFocus) {
      buttonRef.current.focus();
    }
  }, [autoFocus]);
  const {
    buttonActive,
    buttonFocusVisible,
    contextValue,
    disabled,
    getButtonProps,
    getListboxProps,
    getHiddenInputProps,
    getOptionMetadata,
    value,
    open
  } = useSelect({
    name,
    required: required2,
    getSerializedValue,
    areOptionsEqual,
    buttonRef: handleButtonRef,
    defaultOpen: defaultListboxOpen,
    defaultValue,
    disabled: disabledProp,
    listboxId,
    multiple,
    open: listboxOpenProp,
    onChange,
    onOpenChange: onListboxOpenChange,
    getOptionAsString,
    value: valueProp
  });
  const ownerState = _extends({}, props, {
    active: buttonActive,
    defaultListboxOpen,
    disabled,
    focusVisible: buttonFocusVisible,
    open,
    multiple,
    renderValue,
    value
  });
  const classes2 = useUtilityClasses28(ownerState);
  const buttonProps = useSlotProps({
    elementType: Button6,
    getSlotProps: getButtonProps,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    ownerState,
    className: classes2.root
  });
  const listboxProps = useSlotProps({
    elementType: ListboxRoot,
    getSlotProps: getListboxProps,
    externalSlotProps: slotProps.listbox,
    additionalProps: {
      ref: listboxRef
    },
    ownerState,
    className: classes2.listbox
  });
  const popperProps = useSlotProps({
    elementType: PopperComponent,
    externalSlotProps: slotProps.popper,
    additionalProps: {
      anchorEl: buttonRef.current,
      keepMounted: true,
      open,
      placement: "bottom-start",
      role: void 0
    },
    ownerState,
    className: classes2.popper
  });
  let selectedOptionsMetadata;
  if (multiple) {
    selectedOptionsMetadata = value.map((v) => getOptionMetadata(v)).filter((o) => o !== void 0);
  } else {
    var _getOptionMetadata;
    selectedOptionsMetadata = (_getOptionMetadata = getOptionMetadata(value)) != null ? _getOptionMetadata : null;
  }
  return (0, import_jsx_runtime68.jsxs)(React105.Fragment, {
    children: [(0, import_jsx_runtime67.jsx)(Button6, _extends({}, buttonProps, {
      children: renderValue(selectedOptionsMetadata)
    })), buttonDefined && (0, import_jsx_runtime67.jsx)(PopperComponent, _extends({}, popperProps, {
      children: (0, import_jsx_runtime67.jsx)(ListboxRoot, _extends({}, listboxProps, {
        children: (0, import_jsx_runtime67.jsx)(SelectProvider, {
          value: contextValue,
          children: children2
        })
      }))
    })), (0, import_jsx_runtime67.jsx)("input", _extends({}, getHiddenInputProps()))]
  });
});
true ? Select.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A function used to determine if two options' values are equal.
   * By default, reference equality is used.
   *
   * There is a performance impact when using the `areOptionsEqual` prop (proportional to the number of options).
   * Therefore, it's recommented to use the default reference equality comparison whenever possible.
   */
  areOptionsEqual: import_prop_types59.default.func,
  /**
   * If `true`, the select element is focused during the first mount
   * @default false
   */
  autoFocus: import_prop_types59.default.bool,
  /**
   * @ignore
   */
  children: import_prop_types59.default.node,
  /**
   * @ignore
   */
  className: import_prop_types59.default.string,
  /**
   * If `true`, the select will be initially open.
   * @default false
   */
  defaultListboxOpen: import_prop_types59.default.bool,
  /**
   * The default selected value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types59.default.any,
  /**
   * If `true`, the select is disabled.
   * @default false
   */
  disabled: import_prop_types59.default.bool,
  /**
   * A function used to convert the option label to a string.
   * It's useful when labels are elements and need to be converted to plain text
   * to enable navigation using character keys on a keyboard.
   *
   * @default defaultOptionStringifier
   */
  getOptionAsString: import_prop_types59.default.func,
  /**
   * A function to convert the currently selected value to a string.
   * Used to set a value of a hidden input associated with the select,
   * so that the selected value can be posted with a form.
   */
  getSerializedValue: import_prop_types59.default.func,
  /**
   * `id` attribute of the listbox element.
   */
  listboxId: import_prop_types59.default.string,
  /**
   * Controls the open state of the select's listbox.
   * @default undefined
   */
  listboxOpen: import_prop_types59.default.bool,
  /**
   * If `true`, selecting multiple values is allowed.
   * This affects the type of the `value`, `defaultValue`, and `onChange` props.
   *
   * @default false
   */
  multiple: import_prop_types59.default.bool,
  /**
   * Name of the element. For example used by the server to identify the fields in form submits.
   * If the name is provided, the component will render a hidden input element that can be submitted to a server.
   */
  name: import_prop_types59.default.string,
  /**
   * Callback fired when an option is selected.
   */
  onChange: import_prop_types59.default.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see listboxOpen).
   */
  onListboxOpenChange: import_prop_types59.default.func,
  /**
   * Function that customizes the rendering of the selected value.
   */
  renderValue: import_prop_types59.default.func,
  /**
   * If `true`, the Select cannot be empty when submitting form.
   * @default false
   */
  required: import_prop_types59.default.bool,
  /**
   * The props used for each slot inside the Input.
   * @default {}
   */
  slotProps: import_prop_types59.default.shape({
    listbox: import_prop_types59.default.oneOfType([import_prop_types59.default.func, import_prop_types59.default.object]),
    popper: import_prop_types59.default.oneOfType([import_prop_types59.default.func, import_prop_types59.default.object]),
    root: import_prop_types59.default.oneOfType([import_prop_types59.default.func, import_prop_types59.default.object])
  }),
  /**
   * The components used for each slot inside the Select.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types59.default.shape({
    listbox: import_prop_types59.default.elementType,
    popper: import_prop_types59.default.elementType,
    root: import_prop_types59.default.elementType
  }),
  /**
   * The selected value.
   * Set to `null` to deselect all options.
   */
  value: import_prop_types59.default.any
} : void 0;

// node_modules/@mui/base/Slider/Slider.js
init_extends();
init_objectWithoutPropertiesLoose();
var React107 = __toESM(require_react());
var import_prop_types60 = __toESM(require_prop_types());
init_esm();
init_composeClasses3();

// node_modules/@mui/base/Slider/sliderClasses.js
function getSliderUtilityClass(slot) {
  return generateUtilityClass("MuiSlider", slot);
}
var sliderClasses = generateUtilityClasses("MuiSlider", ["root", "active", "focusVisible", "disabled", "dragging", "marked", "vertical", "trackInverted", "trackFalse", "rail", "track", "mark", "markActive", "markLabel", "markLabelActive", "thumb"]);

// node_modules/@mui/base/useSlider/useSlider.js
init_extends();
var React106 = __toESM(require_react());
init_esm();
var INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;
function asc(a, b) {
  return a - b;
}
function clamp4(value, min3, max3) {
  if (value == null) {
    return min3;
  }
  return Math.min(Math.max(min3, value), max3);
}
function findClosest(values3, currentValue) {
  var _values$reduce;
  const {
    index: closestIndex
  } = (_values$reduce = values3.reduce((acc, value, index2) => {
    const distance = Math.abs(currentValue - value);
    if (acc === null || distance < acc.distance || distance === acc.distance) {
      return {
        distance,
        index: index2
      };
    }
    return acc;
  }, null)) != null ? _values$reduce : {};
  return closestIndex;
}
function trackFinger(event, touchId) {
  if (touchId.current !== void 0 && event.changedTouches) {
    const touchEvent = event;
    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {
      const touch = touchEvent.changedTouches[i];
      if (touch.identifier === touchId.current) {
        return {
          x: touch.clientX,
          y: touch.clientY
        };
      }
    }
    return false;
  }
  return {
    x: event.clientX,
    y: event.clientY
  };
}
function valueToPercent(value, min3, max3) {
  return (value - min3) * 100 / (max3 - min3);
}
function percentToValue(percent, min3, max3) {
  return (max3 - min3) * percent + min3;
}
function getDecimalPrecision(num) {
  if (Math.abs(num) < 1) {
    const parts = num.toExponential().split("e-");
    const matissaDecimalPart = parts[0].split(".")[1];
    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);
  }
  const decimalPart = num.toString().split(".")[1];
  return decimalPart ? decimalPart.length : 0;
}
function roundValueToStep(value, step, min3) {
  const nearest = Math.round((value - min3) / step) * step + min3;
  return Number(nearest.toFixed(getDecimalPrecision(step)));
}
function setValueIndex({
  values: values3,
  newValue,
  index: index2
}) {
  const output = values3.slice();
  output[index2] = newValue;
  return output.sort(asc);
}
function focusThumb({
  sliderRef,
  activeIndex,
  setActive
}) {
  var _sliderRef$current, _doc$activeElement;
  const doc = ownerDocument(sliderRef.current);
  if (!((_sliderRef$current = sliderRef.current) != null && _sliderRef$current.contains(doc.activeElement)) || Number(doc == null || (_doc$activeElement = doc.activeElement) == null ? void 0 : _doc$activeElement.getAttribute("data-index")) !== activeIndex) {
    var _sliderRef$current2;
    (_sliderRef$current2 = sliderRef.current) == null ? void 0 : _sliderRef$current2.querySelector(`[type="range"][data-index="${activeIndex}"]`).focus();
  }
  if (setActive) {
    setActive(activeIndex);
  }
}
function areValuesEqual(newValue, oldValue) {
  if (typeof newValue === "number" && typeof oldValue === "number") {
    return newValue === oldValue;
  }
  if (typeof newValue === "object" && typeof oldValue === "object") {
    return areArraysEqual(newValue, oldValue);
  }
  return false;
}
var axisProps = {
  horizontal: {
    offset: (percent) => ({
      left: `${percent}%`
    }),
    leap: (percent) => ({
      width: `${percent}%`
    })
  },
  "horizontal-reverse": {
    offset: (percent) => ({
      right: `${percent}%`
    }),
    leap: (percent) => ({
      width: `${percent}%`
    })
  },
  vertical: {
    offset: (percent) => ({
      bottom: `${percent}%`
    }),
    leap: (percent) => ({
      height: `${percent}%`
    })
  }
};
var Identity = (x) => x;
var cachedSupportsTouchActionNone;
function doesSupportTouchActionNone() {
  if (cachedSupportsTouchActionNone === void 0) {
    if (typeof CSS !== "undefined" && typeof CSS.supports === "function") {
      cachedSupportsTouchActionNone = CSS.supports("touch-action", "none");
    } else {
      cachedSupportsTouchActionNone = true;
    }
  }
  return cachedSupportsTouchActionNone;
}
function useSlider(parameters) {
  const {
    "aria-labelledby": ariaLabelledby,
    defaultValue,
    disabled = false,
    disableSwap = false,
    isRtl = false,
    marks: marksProp = false,
    max: max3 = 100,
    min: min3 = 0,
    name,
    onChange,
    onChangeCommitted,
    orientation = "horizontal",
    rootRef: ref,
    scale = Identity,
    step = 1,
    tabIndex,
    value: valueProp
  } = parameters;
  const touchId = React106.useRef();
  const [active, setActive] = React106.useState(-1);
  const [open, setOpen] = React106.useState(-1);
  const [dragging, setDragging] = React106.useState(false);
  const moveCount = React106.useRef(0);
  const [valueDerived, setValueState] = useControlled({
    controlled: valueProp,
    default: defaultValue != null ? defaultValue : min3,
    name: "Slider"
  });
  const handleChange = onChange && ((event, value, thumbIndex) => {
    const nativeEvent = event.nativeEvent || event;
    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
    Object.defineProperty(clonedEvent, "target", {
      writable: true,
      value: {
        value,
        name
      }
    });
    onChange(clonedEvent, value, thumbIndex);
  });
  const range = Array.isArray(valueDerived);
  let values3 = range ? valueDerived.slice().sort(asc) : [valueDerived];
  values3 = values3.map((value) => clamp4(value, min3, max3));
  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max3 - min3) / step) + 1)].map((_5, index2) => ({
    value: min3 + step * index2
  })) : marksProp || [];
  const marksValues = marks.map((mark) => mark.value);
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusedThumbIndex, setFocusedThumbIndex] = React106.useState(-1);
  const sliderRef = React106.useRef();
  const handleFocusRef = useForkRef(focusVisibleRef, sliderRef);
  const handleRef = useForkRef(ref, handleFocusRef);
  const createHandleHiddenInputFocus = (otherHandlers) => (event) => {
    var _otherHandlers$onFocu;
    const index2 = Number(event.currentTarget.getAttribute("data-index"));
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusedThumbIndex(index2);
    }
    setOpen(index2);
    otherHandlers == null || (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
  };
  const createHandleHiddenInputBlur = (otherHandlers) => (event) => {
    var _otherHandlers$onBlur;
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusedThumbIndex(-1);
    }
    setOpen(-1);
    otherHandlers == null || (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
  };
  useEnhancedEffect_default(() => {
    if (disabled && sliderRef.current.contains(document.activeElement)) {
      var _document$activeEleme;
      (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.blur();
    }
  }, [disabled]);
  if (disabled && active !== -1) {
    setActive(-1);
  }
  if (disabled && focusedThumbIndex !== -1) {
    setFocusedThumbIndex(-1);
  }
  const createHandleHiddenInputChange = (otherHandlers) => (event) => {
    var _otherHandlers$onChan;
    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event);
    const index2 = Number(event.currentTarget.getAttribute("data-index"));
    const value = values3[index2];
    const marksIndex = marksValues.indexOf(value);
    let newValue = event.target.valueAsNumber;
    if (marks && step == null) {
      const maxMarksValue = marksValues[marksValues.length - 1];
      if (newValue > maxMarksValue) {
        newValue = maxMarksValue;
      } else if (newValue < marksValues[0]) {
        newValue = marksValues[0];
      } else {
        newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];
      }
    }
    newValue = clamp4(newValue, min3, max3);
    if (range) {
      if (disableSwap) {
        newValue = clamp4(newValue, values3[index2 - 1] || -Infinity, values3[index2 + 1] || Infinity);
      }
      const previousValue = newValue;
      newValue = setValueIndex({
        values: values3,
        newValue,
        index: index2
      });
      let activeIndex = index2;
      if (!disableSwap) {
        activeIndex = newValue.indexOf(previousValue);
      }
      focusThumb({
        sliderRef,
        activeIndex
      });
    }
    setValueState(newValue);
    setFocusedThumbIndex(index2);
    if (handleChange && !areValuesEqual(newValue, valueDerived)) {
      handleChange(event, newValue, index2);
    }
    if (onChangeCommitted) {
      onChangeCommitted(event, newValue);
    }
  };
  const previousIndex = React106.useRef();
  let axis = orientation;
  if (isRtl && orientation === "horizontal") {
    axis += "-reverse";
  }
  const getFingerNewValue = ({
    finger,
    move = false
  }) => {
    const {
      current: slider
    } = sliderRef;
    const {
      width: width2,
      height: height2,
      bottom: bottom3,
      left: left3
    } = slider.getBoundingClientRect();
    let percent;
    if (axis.indexOf("vertical") === 0) {
      percent = (bottom3 - finger.y) / height2;
    } else {
      percent = (finger.x - left3) / width2;
    }
    if (axis.indexOf("-reverse") !== -1) {
      percent = 1 - percent;
    }
    let newValue;
    newValue = percentToValue(percent, min3, max3);
    if (step) {
      newValue = roundValueToStep(newValue, step, min3);
    } else {
      const closestIndex = findClosest(marksValues, newValue);
      newValue = marksValues[closestIndex];
    }
    newValue = clamp4(newValue, min3, max3);
    let activeIndex = 0;
    if (range) {
      if (!move) {
        activeIndex = findClosest(values3, newValue);
      } else {
        activeIndex = previousIndex.current;
      }
      if (disableSwap) {
        newValue = clamp4(newValue, values3[activeIndex - 1] || -Infinity, values3[activeIndex + 1] || Infinity);
      }
      const previousValue = newValue;
      newValue = setValueIndex({
        values: values3,
        newValue,
        index: activeIndex
      });
      if (!(disableSwap && move)) {
        activeIndex = newValue.indexOf(previousValue);
        previousIndex.current = activeIndex;
      }
    }
    return {
      newValue,
      activeIndex
    };
  };
  const handleTouchMove = useEventCallback_default((nativeEvent) => {
    const finger = trackFinger(nativeEvent, touchId);
    if (!finger) {
      return;
    }
    moveCount.current += 1;
    if (nativeEvent.type === "mousemove" && nativeEvent.buttons === 0) {
      handleTouchEnd(nativeEvent);
      return;
    }
    const {
      newValue,
      activeIndex
    } = getFingerNewValue({
      finger,
      move: true
    });
    focusThumb({
      sliderRef,
      activeIndex,
      setActive
    });
    setValueState(newValue);
    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {
      setDragging(true);
    }
    if (handleChange && !areValuesEqual(newValue, valueDerived)) {
      handleChange(nativeEvent, newValue, activeIndex);
    }
  });
  const handleTouchEnd = useEventCallback_default((nativeEvent) => {
    const finger = trackFinger(nativeEvent, touchId);
    setDragging(false);
    if (!finger) {
      return;
    }
    const {
      newValue
    } = getFingerNewValue({
      finger,
      move: true
    });
    setActive(-1);
    if (nativeEvent.type === "touchend") {
      setOpen(-1);
    }
    if (onChangeCommitted) {
      onChangeCommitted(nativeEvent, newValue);
    }
    touchId.current = void 0;
    stopListening();
  });
  const handleTouchStart = useEventCallback_default((nativeEvent) => {
    if (disabled) {
      return;
    }
    if (!doesSupportTouchActionNone()) {
      nativeEvent.preventDefault();
    }
    const touch = nativeEvent.changedTouches[0];
    if (touch != null) {
      touchId.current = touch.identifier;
    }
    const finger = trackFinger(nativeEvent, touchId);
    if (finger !== false) {
      const {
        newValue,
        activeIndex
      } = getFingerNewValue({
        finger
      });
      focusThumb({
        sliderRef,
        activeIndex,
        setActive
      });
      setValueState(newValue);
      if (handleChange && !areValuesEqual(newValue, valueDerived)) {
        handleChange(nativeEvent, newValue, activeIndex);
      }
    }
    moveCount.current = 0;
    const doc = ownerDocument(sliderRef.current);
    doc.addEventListener("touchmove", handleTouchMove);
    doc.addEventListener("touchend", handleTouchEnd);
  });
  const stopListening = React106.useCallback(() => {
    const doc = ownerDocument(sliderRef.current);
    doc.removeEventListener("mousemove", handleTouchMove);
    doc.removeEventListener("mouseup", handleTouchEnd);
    doc.removeEventListener("touchmove", handleTouchMove);
    doc.removeEventListener("touchend", handleTouchEnd);
  }, [handleTouchEnd, handleTouchMove]);
  React106.useEffect(() => {
    const {
      current: slider
    } = sliderRef;
    slider.addEventListener("touchstart", handleTouchStart, {
      passive: doesSupportTouchActionNone()
    });
    return () => {
      slider.removeEventListener("touchstart", handleTouchStart, {
        passive: doesSupportTouchActionNone()
      });
      stopListening();
    };
  }, [stopListening, handleTouchStart]);
  React106.useEffect(() => {
    if (disabled) {
      stopListening();
    }
  }, [disabled, stopListening]);
  const createHandleMouseDown = (otherHandlers) => (event) => {
    var _otherHandlers$onMous;
    (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);
    if (disabled) {
      return;
    }
    if (event.defaultPrevented) {
      return;
    }
    if (event.button !== 0) {
      return;
    }
    event.preventDefault();
    const finger = trackFinger(event, touchId);
    if (finger !== false) {
      const {
        newValue,
        activeIndex
      } = getFingerNewValue({
        finger
      });
      focusThumb({
        sliderRef,
        activeIndex,
        setActive
      });
      setValueState(newValue);
      if (handleChange && !areValuesEqual(newValue, valueDerived)) {
        handleChange(event, newValue, activeIndex);
      }
    }
    moveCount.current = 0;
    const doc = ownerDocument(sliderRef.current);
    doc.addEventListener("mousemove", handleTouchMove);
    doc.addEventListener("mouseup", handleTouchEnd);
  };
  const trackOffset = valueToPercent(range ? values3[0] : min3, min3, max3);
  const trackLeap = valueToPercent(values3[values3.length - 1], min3, max3) - trackOffset;
  const getRootProps = (otherHandlers = {}) => {
    const ownEventHandlers = {
      onMouseDown: createHandleMouseDown(otherHandlers || {})
    };
    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);
    return _extends({
      ref: handleRef
    }, mergedEventHandlers);
  };
  const createHandleMouseOver = (otherHandlers) => (event) => {
    var _otherHandlers$onMous2;
    (_otherHandlers$onMous2 = otherHandlers.onMouseOver) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);
    const index2 = Number(event.currentTarget.getAttribute("data-index"));
    setOpen(index2);
  };
  const createHandleMouseLeave = (otherHandlers) => (event) => {
    var _otherHandlers$onMous3;
    (_otherHandlers$onMous3 = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);
    setOpen(-1);
  };
  const getThumbProps = (otherHandlers = {}) => {
    const ownEventHandlers = {
      onMouseOver: createHandleMouseOver(otherHandlers || {}),
      onMouseLeave: createHandleMouseLeave(otherHandlers || {})
    };
    return _extends({}, otherHandlers, ownEventHandlers);
  };
  const getThumbStyle = (index2) => {
    return {
      // So the non active thumb doesn't show its label on hover.
      pointerEvents: active !== -1 && active !== index2 ? "none" : void 0
    };
  };
  const getHiddenInputProps = (otherHandlers = {}) => {
    var _parameters$step;
    const ownEventHandlers = {
      onChange: createHandleHiddenInputChange(otherHandlers || {}),
      onFocus: createHandleHiddenInputFocus(otherHandlers || {}),
      onBlur: createHandleHiddenInputBlur(otherHandlers || {})
    };
    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);
    return _extends({
      tabIndex,
      "aria-labelledby": ariaLabelledby,
      "aria-orientation": orientation,
      "aria-valuemax": scale(max3),
      "aria-valuemin": scale(min3),
      name,
      type: "range",
      min: parameters.min,
      max: parameters.max,
      step: parameters.step === null && parameters.marks ? "any" : (_parameters$step = parameters.step) != null ? _parameters$step : void 0,
      disabled
    }, mergedEventHandlers, {
      style: _extends({}, visuallyHidden_default, {
        direction: isRtl ? "rtl" : "ltr",
        // So that VoiceOver's focus indicator matches the thumb's dimensions
        width: "100%",
        height: "100%"
      })
    });
  };
  return {
    active,
    axis,
    axisProps,
    dragging,
    focusedThumbIndex,
    getHiddenInputProps,
    getRootProps,
    getThumbProps,
    marks,
    open,
    range,
    rootRef: handleRef,
    trackLeap,
    trackOffset,
    values: values3,
    getThumbStyle
  };
}

// node_modules/@mui/base/Slider/Slider.js
var import_jsx_runtime69 = __toESM(require_jsx_runtime());
var import_jsx_runtime70 = __toESM(require_jsx_runtime());
var _excluded49 = ["aria-label", "aria-valuetext", "aria-labelledby", "className", "disableSwap", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "orientation", "scale", "step", "tabIndex", "track", "value", "valueLabelFormat", "isRtl", "defaultValue", "slotProps", "slots"];
function Identity2(x) {
  return x;
}
var useUtilityClasses29 = (ownerState) => {
  const {
    disabled,
    dragging,
    marked,
    orientation,
    track
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", dragging && "dragging", marked && "marked", orientation === "vertical" && "vertical", track === "inverted" && "trackInverted", track === false && "trackFalse"],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    thumb: ["thumb", disabled && "disabled"],
    active: ["active"],
    disabled: ["disabled"],
    focusVisible: ["focusVisible"]
  };
  return composeClasses(slots, useClassNamesOverride(getSliderUtilityClass));
};
var Slider = React107.forwardRef(function Slider2(props, forwardedRef) {
  var _slots$root, _slots$rail, _slots$track, _slots$thumb, _slots$mark, _slots$markLabel;
  const {
    "aria-label": ariaLabel,
    "aria-valuetext": ariaValuetext,
    "aria-labelledby": ariaLabelledby,
    className,
    disableSwap = false,
    disabled = false,
    getAriaLabel,
    getAriaValueText,
    marks: marksProp = false,
    max: max3 = 100,
    min: min3 = 0,
    orientation = "horizontal",
    scale = Identity2,
    step = 1,
    track = "normal",
    valueLabelFormat = Identity2,
    isRtl = false,
    defaultValue,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded49);
  const partialOwnerState = _extends({}, props, {
    marks: marksProp,
    disabled,
    disableSwap,
    isRtl,
    defaultValue,
    max: max3,
    min: min3,
    orientation,
    scale,
    step,
    track,
    valueLabelFormat
  });
  const {
    axisProps: axisProps2,
    getRootProps,
    getHiddenInputProps,
    getThumbProps,
    active,
    axis,
    range,
    focusedThumbIndex,
    dragging,
    marks,
    values: values3,
    trackOffset,
    trackLeap,
    getThumbStyle
  } = useSlider(_extends({}, partialOwnerState, {
    rootRef: forwardedRef
  }));
  const ownerState = _extends({}, partialOwnerState, {
    marked: marks.length > 0 && marks.some((mark) => mark.label),
    dragging,
    focusedThumbIndex,
    activeThumbIndex: active
  });
  const classes2 = useUtilityClasses29(ownerState);
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "span";
  const rootProps = useSlotProps({
    elementType: Root42,
    getSlotProps: getRootProps,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    ownerState,
    className: [classes2.root, className]
  });
  const Rail = (_slots$rail = slots.rail) != null ? _slots$rail : "span";
  const railProps = useSlotProps({
    elementType: Rail,
    externalSlotProps: slotProps.rail,
    ownerState,
    className: classes2.rail
  });
  const Track = (_slots$track = slots.track) != null ? _slots$track : "span";
  const trackProps = useSlotProps({
    elementType: Track,
    externalSlotProps: slotProps.track,
    additionalProps: {
      style: _extends({}, axisProps2[axis].offset(trackOffset), axisProps2[axis].leap(trackLeap))
    },
    ownerState,
    className: classes2.track
  });
  const Thumb = (_slots$thumb = slots.thumb) != null ? _slots$thumb : "span";
  const thumbProps = useSlotProps({
    elementType: Thumb,
    getSlotProps: getThumbProps,
    externalSlotProps: slotProps.thumb,
    ownerState,
    skipResolvingSlotProps: true
  });
  const ValueLabel = slots.valueLabel;
  const valueLabelProps = useSlotProps({
    elementType: ValueLabel,
    externalSlotProps: slotProps.valueLabel,
    ownerState
  });
  const Mark = (_slots$mark = slots.mark) != null ? _slots$mark : "span";
  const markProps = useSlotProps({
    elementType: Mark,
    externalSlotProps: slotProps.mark,
    ownerState,
    className: classes2.mark
  });
  const MarkLabel = (_slots$markLabel = slots.markLabel) != null ? _slots$markLabel : "span";
  const markLabelProps = useSlotProps({
    elementType: MarkLabel,
    externalSlotProps: slotProps.markLabel,
    ownerState
  });
  const Input5 = slots.input || "input";
  const inputProps = useSlotProps({
    elementType: Input5,
    getSlotProps: getHiddenInputProps,
    externalSlotProps: slotProps.input,
    ownerState
  });
  return (0, import_jsx_runtime70.jsxs)(Root42, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime69.jsx)(Rail, _extends({}, railProps)), (0, import_jsx_runtime69.jsx)(Track, _extends({}, trackProps)), marks.filter((mark) => mark.value >= min3 && mark.value <= max3).map((mark, index2) => {
      const percent = valueToPercent(mark.value, min3, max3);
      const style4 = axisProps2[axis].offset(percent);
      let markActive;
      if (track === false) {
        markActive = values3.indexOf(mark.value) !== -1;
      } else {
        markActive = track === "normal" && (range ? mark.value >= values3[0] && mark.value <= values3[values3.length - 1] : mark.value <= values3[0]) || track === "inverted" && (range ? mark.value <= values3[0] || mark.value >= values3[values3.length - 1] : mark.value >= values3[0]);
      }
      return (0, import_jsx_runtime70.jsxs)(React107.Fragment, {
        children: [(0, import_jsx_runtime69.jsx)(Mark, _extends({
          "data-index": index2
        }, markProps, !isHostComponent(Mark) && {
          markActive
        }, {
          style: _extends({}, style4, markProps.style),
          className: clsx_default3(markProps.className, markActive && classes2.markActive)
        })), mark.label != null ? (0, import_jsx_runtime69.jsx)(MarkLabel, _extends({
          "aria-hidden": true,
          "data-index": index2
        }, markLabelProps, !isHostComponent(MarkLabel) && {
          markLabelActive: markActive
        }, {
          style: _extends({}, style4, markLabelProps.style),
          className: clsx_default3(classes2.markLabel, markLabelProps.className, markActive && classes2.markLabelActive),
          children: mark.label
        })) : null]
      }, index2);
    }), values3.map((value, index2) => {
      const percent = valueToPercent(value, min3, max3);
      const style4 = axisProps2[axis].offset(percent);
      const resolvedSlotProps = resolveComponentProps(slotProps.thumb, ownerState, {
        index: index2,
        focused: focusedThumbIndex === index2,
        active: active === index2
      });
      return (0, import_jsx_runtime70.jsxs)(Thumb, _extends({
        "data-index": index2
      }, thumbProps, resolvedSlotProps, {
        className: clsx_default3(classes2.thumb, thumbProps.className, resolvedSlotProps == null ? void 0 : resolvedSlotProps.className, active === index2 && classes2.active, focusedThumbIndex === index2 && classes2.focusVisible),
        style: _extends({}, style4, getThumbStyle(index2), thumbProps.style, resolvedSlotProps == null ? void 0 : resolvedSlotProps.style),
        children: [(0, import_jsx_runtime69.jsx)(Input5, _extends({
          "data-index": index2,
          "aria-label": getAriaLabel ? getAriaLabel(index2) : ariaLabel,
          "aria-valuenow": scale(value),
          "aria-labelledby": ariaLabelledby,
          "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index2) : ariaValuetext,
          value: values3[index2]
        }, inputProps)), ValueLabel ? (0, import_jsx_runtime69.jsx)(ValueLabel, _extends({}, !isHostComponent(ValueLabel) && {
          valueLabelFormat,
          index: index2,
          disabled
        }, valueLabelProps, {
          children: typeof valueLabelFormat === "function" ? valueLabelFormat(scale(value), index2) : valueLabelFormat
        })) : null]
      }), index2);
    })]
  }));
});
true ? Slider.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The label of the slider.
   */
  "aria-label": chainPropTypes(import_prop_types60.default.string, (props) => {
    const range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-label"] != null) {
      return new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.");
    }
    return null;
  }),
  /**
   * The id of the element containing a label for the slider.
   */
  "aria-labelledby": import_prop_types60.default.string,
  /**
   * A string value that provides a user-friendly name for the current value of the slider.
   */
  "aria-valuetext": chainPropTypes(import_prop_types60.default.string, (props) => {
    const range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-valuetext"] != null) {
      return new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.");
    }
    return null;
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types60.default.oneOfType([import_prop_types60.default.arrayOf(import_prop_types60.default.number), import_prop_types60.default.number]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types60.default.bool,
  /**
   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
   * @default false
   */
  disableSwap: import_prop_types60.default.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
   * This is important for screen reader users.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaLabel: import_prop_types60.default.func,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
   * This is important for screen reader users.
   * @param {number} value The thumb label's value to format.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaValueText: import_prop_types60.default.func,
  /**
   * If `true` the Slider will be rendered right-to-left (with the lowest value on the right-hand side).
   * @default false
   */
  isRtl: import_prop_types60.default.bool,
  /**
   * Marks indicate predetermined values to which the user can move the slider.
   * If `true` the marks are spaced according the value of the `step` prop.
   * If an array, it should contain objects with `value` and an optional `label` keys.
   * @default false
   */
  marks: import_prop_types60.default.oneOfType([import_prop_types60.default.arrayOf(import_prop_types60.default.shape({
    label: import_prop_types60.default.node,
    value: import_prop_types60.default.number.isRequired
  })), import_prop_types60.default.bool]),
  /**
   * The maximum allowed value of the slider.
   * Should not be equal to min.
   * @default 100
   */
  max: import_prop_types60.default.number,
  /**
   * The minimum allowed value of the slider.
   * Should not be equal to max.
   * @default 0
   */
  min: import_prop_types60.default.number,
  /**
   * Name attribute of the hidden `input` element.
   */
  name: import_prop_types60.default.string,
  /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {Event} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   * @param {number} activeThumb Index of the currently moved thumb.
   */
  onChange: import_prop_types60.default.func,
  /**
   * Callback function that is fired when the `mouseup` is triggered.
   *
   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   */
  onChangeCommitted: import_prop_types60.default.func,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: import_prop_types60.default.oneOf(["horizontal", "vertical"]),
  /**
   * A transformation function, to change the scale of the slider.
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  scale: import_prop_types60.default.func,
  /**
   * The props used for each slot inside the Slider.
   * @default {}
   */
  slotProps: import_prop_types60.default.shape({
    input: import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.object]),
    mark: import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.object]),
    markLabel: import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.object]),
    rail: import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.object]),
    root: import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.object]),
    thumb: import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.object]),
    track: import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.object]),
    valueLabel: import_prop_types60.default.oneOfType([import_prop_types60.default.any, import_prop_types60.default.func])
  }),
  /**
   * The components used for each slot inside the Slider.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types60.default.shape({
    input: import_prop_types60.default.elementType,
    mark: import_prop_types60.default.elementType,
    markLabel: import_prop_types60.default.elementType,
    rail: import_prop_types60.default.elementType,
    root: import_prop_types60.default.elementType,
    thumb: import_prop_types60.default.elementType,
    track: import_prop_types60.default.elementType,
    valueLabel: import_prop_types60.default.elementType
  }),
  /**
   * The granularity with which the slider can step through values. (A "discrete" slider.)
   * The `min` prop serves as the origin for the valid values.
   * We recommend (max - min) to be evenly divisible by the step.
   *
   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
   * @default 1
   */
  step: import_prop_types60.default.number,
  /**
   * Tab index attribute of the hidden `input` element.
   */
  tabIndex: import_prop_types60.default.number,
  /**
   * The track presentation:
   *
   * - `normal` the track will render a bar representing the slider value.
   * - `inverted` the track will render a bar representing the remaining slider value.
   * - `false` the track will render without a bar.
   * @default 'normal'
   */
  track: import_prop_types60.default.oneOf(["inverted", "normal", false]),
  /**
   * The value of the slider.
   * For ranged sliders, provide an array with two values.
   */
  value: import_prop_types60.default.oneOfType([import_prop_types60.default.arrayOf(import_prop_types60.default.number), import_prop_types60.default.number]),
  /**
   * The format function the value label's value.
   *
   * When a function is provided, it should have the following signature:
   *
   * - {number} value The value label's value to format
   * - {number} index The value label's index to format
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  valueLabelFormat: import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.string])
} : void 0;

// node_modules/@mui/base/Snackbar/Snackbar.js
init_extends();
init_objectWithoutPropertiesLoose();
var React109 = __toESM(require_react());
var import_prop_types61 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/base/Snackbar/snackbarClasses.js
function getSnackbarUtilityClass(slot) {
  return generateUtilityClass("MuiSnackbar", slot);
}
var snackbarClasses = generateUtilityClasses("MuiSnackbar", ["root"]);

// node_modules/@mui/base/useSnackbar/useSnackbar.js
init_extends();
var React108 = __toESM(require_react());
init_esm();
function useSnackbar(parameters) {
  const {
    autoHideDuration = null,
    disableWindowBlurListener = false,
    onClose,
    open,
    resumeHideDuration
  } = parameters;
  const timerAutoHide = React108.useRef();
  React108.useEffect(() => {
    if (!open) {
      return void 0;
    }
    function handleKeyDown3(nativeEvent) {
      if (!nativeEvent.defaultPrevented) {
        if (nativeEvent.key === "Escape" || nativeEvent.key === "Esc") {
          onClose == null ? void 0 : onClose(nativeEvent, "escapeKeyDown");
        }
      }
    }
    document.addEventListener("keydown", handleKeyDown3);
    return () => {
      document.removeEventListener("keydown", handleKeyDown3);
    };
  }, [open, onClose]);
  const handleClose = useEventCallback_default((event, reason) => {
    onClose == null ? void 0 : onClose(event, reason);
  });
  const setAutoHideTimer = useEventCallback_default((autoHideDurationParam) => {
    if (!onClose || autoHideDurationParam == null) {
      return;
    }
    clearTimeout(timerAutoHide.current);
    timerAutoHide.current = setTimeout(() => {
      handleClose(null, "timeout");
    }, autoHideDurationParam);
  });
  React108.useEffect(() => {
    if (open) {
      setAutoHideTimer(autoHideDuration);
    }
    return () => {
      clearTimeout(timerAutoHide.current);
    };
  }, [open, autoHideDuration, setAutoHideTimer]);
  const handleClickAway = (event) => {
    onClose == null ? void 0 : onClose(event, "clickaway");
  };
  const handlePause = () => {
    clearTimeout(timerAutoHide.current);
  };
  const handleResume = React108.useCallback(() => {
    if (autoHideDuration != null) {
      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);
    }
  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);
  const createHandleBlur = (otherHandlers) => (event) => {
    const onBlurCallback = otherHandlers.onBlur;
    onBlurCallback == null ? void 0 : onBlurCallback(event);
    handleResume();
  };
  const createHandleFocus = (otherHandlers) => (event) => {
    const onFocusCallback = otherHandlers.onFocus;
    onFocusCallback == null ? void 0 : onFocusCallback(event);
    handlePause();
  };
  const createMouseEnter = (otherHandlers) => (event) => {
    const onMouseEnterCallback = otherHandlers.onMouseEnter;
    onMouseEnterCallback == null ? void 0 : onMouseEnterCallback(event);
    handlePause();
  };
  const createMouseLeave = (otherHandlers) => (event) => {
    const onMouseLeaveCallback = otherHandlers.onMouseLeave;
    onMouseLeaveCallback == null ? void 0 : onMouseLeaveCallback(event);
    handleResume();
  };
  React108.useEffect(() => {
    if (!disableWindowBlurListener && open) {
      window.addEventListener("focus", handleResume);
      window.addEventListener("blur", handlePause);
      return () => {
        window.removeEventListener("focus", handleResume);
        window.removeEventListener("blur", handlePause);
      };
    }
    return void 0;
  }, [disableWindowBlurListener, handleResume, open]);
  const getRootProps = (otherHandlers = {}) => {
    const propsEventHandlers = extractEventHandlers(parameters);
    const externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);
    return _extends({
      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.
      // See https://github.com/mui/material-ui/issues/29080
      role: "presentation"
    }, externalEventHandlers, {
      onBlur: createHandleBlur(externalEventHandlers),
      onFocus: createHandleFocus(externalEventHandlers),
      onMouseEnter: createMouseEnter(externalEventHandlers),
      onMouseLeave: createMouseLeave(externalEventHandlers)
    });
  };
  return {
    getRootProps,
    onClickAway: handleClickAway
  };
}

// node_modules/@mui/base/Snackbar/Snackbar.js
var import_jsx_runtime71 = __toESM(require_jsx_runtime());
var _excluded50 = ["autoHideDuration", "children", "disableWindowBlurListener", "exited", "onBlur", "onClose", "onFocus", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "slotProps", "slots"];
var useUtilityClasses30 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, useClassNamesOverride(getSnackbarUtilityClass));
};
var Snackbar = React109.forwardRef(function Snackbar2(props, forwardedRef) {
  const {
    autoHideDuration = null,
    children: children2,
    disableWindowBlurListener = false,
    exited = true,
    onClose,
    open,
    resumeHideDuration,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded50);
  const classes2 = useUtilityClasses30();
  const {
    getRootProps,
    onClickAway
  } = useSnackbar(_extends({}, props, {
    autoHideDuration,
    disableWindowBlurListener,
    onClose,
    open,
    resumeHideDuration
  }));
  const ownerState = props;
  const Root42 = slots.root || "div";
  const rootProps = useSlotProps({
    elementType: Root42,
    getSlotProps: getRootProps,
    externalForwardedProps: other,
    externalSlotProps: slotProps.root,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: classes2.root
  });
  const clickAwayListenerProps = useSlotProps({
    elementType: ClickAwayListener,
    externalSlotProps: slotProps.clickAwayListener,
    additionalProps: {
      onClickAway
    },
    ownerState
  });
  delete clickAwayListenerProps.ownerState;
  if (!open && exited) {
    return null;
  }
  return (0, import_jsx_runtime71.jsx)(ClickAwayListener, _extends({}, clickAwayListenerProps, {
    children: (0, import_jsx_runtime71.jsx)(Root42, _extends({}, rootProps, {
      children: children2
    }))
  }));
});
true ? Snackbar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The number of milliseconds to wait before automatically calling the
   * `onClose` function. `onClose` should then set the state of the `open`
   * prop to hide the Snackbar. This behavior is disabled by default with
   * the `null` value.
   * @default null
   */
  autoHideDuration: import_prop_types61.default.number,
  /**
   * @ignore
   */
  children: import_prop_types61.default.node,
  /**
   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.
   * @default false
   */
  disableWindowBlurListener: import_prop_types61.default.bool,
  /**
   * The prop used to handle exited transition and unmount the component.
   * @default true
   */
  exited: import_prop_types61.default.bool,
  /**
   * Callback fired when the component requests to be closed.
   * Typically `onClose` is used to set state in the parent component,
   * which is used to control the `Snackbar` `open` prop.
   * The `reason` parameter can optionally be used to control the response to `onClose`,
   * for example ignoring `clickaway`.
   *
   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.
   * @param {string} reason Can be: `"timeout"` (`autoHideDuration` expired), `"clickaway"`, or `"escapeKeyDown"`.
   */
  onClose: import_prop_types61.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types61.default.bool,
  /**
   * The number of milliseconds to wait before dismissing after user interaction.
   * If `autoHideDuration` prop isn't specified, it does nothing.
   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,
   * we default to `autoHideDuration / 2` ms.
   */
  resumeHideDuration: import_prop_types61.default.number,
  /**
   * The props used for each slot inside the Snackbar.
   * @default {}
   */
  slotProps: import_prop_types61.default.shape({
    clickAwayListener: import_prop_types61.default.oneOfType([import_prop_types61.default.func, import_prop_types61.default.shape({
      children: import_prop_types61.default.element.isRequired,
      disableReactTree: import_prop_types61.default.bool,
      mouseEvent: import_prop_types61.default.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", false]),
      onClickAway: import_prop_types61.default.func,
      touchEvent: import_prop_types61.default.oneOf(["onTouchEnd", "onTouchStart", false])
    })]),
    root: import_prop_types61.default.oneOfType([import_prop_types61.default.func, import_prop_types61.default.object])
  }),
  /**
   * The components used for each slot inside the Snackbar.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types61.default.shape({
    root: import_prop_types61.default.elementType
  })
} : void 0;

// node_modules/@mui/base/Switch/Switch.js
init_extends();
init_objectWithoutPropertiesLoose();
var React111 = __toESM(require_react());
var import_prop_types62 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/base/useSwitch/useSwitch.js
init_extends();
var React110 = __toESM(require_react());
init_esm();
function useSwitch(props) {
  const {
    checked: checkedProp,
    defaultChecked,
    disabled,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly,
    required: required2
  } = props;
  const [checked, setCheckedState] = useControlled({
    controlled: checkedProp,
    default: Boolean(defaultChecked),
    name: "Switch",
    state: "checked"
  });
  const createHandleInputChange = (otherProps) => (event) => {
    var _otherProps$onChange;
    if (event.nativeEvent.defaultPrevented) {
      return;
    }
    setCheckedState(event.target.checked);
    onChange == null ? void 0 : onChange(event);
    (_otherProps$onChange = otherProps.onChange) == null ? void 0 : _otherProps$onChange.call(otherProps, event);
  };
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusVisible, setFocusVisible] = React110.useState(false);
  if (disabled && focusVisible) {
    setFocusVisible(false);
  }
  React110.useEffect(() => {
    isFocusVisibleRef.current = focusVisible;
  }, [focusVisible, isFocusVisibleRef]);
  const inputRef = React110.useRef(null);
  const createHandleFocus = (otherProps) => (event) => {
    var _otherProps$onFocus;
    if (!inputRef.current) {
      inputRef.current = event.currentTarget;
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
      onFocusVisible == null ? void 0 : onFocusVisible(event);
    }
    onFocus == null ? void 0 : onFocus(event);
    (_otherProps$onFocus = otherProps.onFocus) == null ? void 0 : _otherProps$onFocus.call(otherProps, event);
  };
  const createHandleBlur = (otherProps) => (event) => {
    var _otherProps$onBlur;
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    onBlur == null ? void 0 : onBlur(event);
    (_otherProps$onBlur = otherProps.onBlur) == null ? void 0 : _otherProps$onBlur.call(otherProps, event);
  };
  const handleInputRef = useForkRef(focusVisibleRef, inputRef);
  const getInputProps = (otherProps = {}) => _extends({
    checked: checkedProp,
    defaultChecked,
    disabled,
    readOnly,
    ref: handleInputRef,
    required: required2,
    type: "checkbox"
  }, otherProps, {
    onChange: createHandleInputChange(otherProps),
    onFocus: createHandleFocus(otherProps),
    onBlur: createHandleBlur(otherProps)
  });
  return {
    checked,
    disabled: Boolean(disabled),
    focusVisible,
    getInputProps,
    inputRef: handleInputRef,
    readOnly: Boolean(readOnly)
  };
}

// node_modules/@mui/base/Switch/switchClasses.js
function getSwitchUtilityClass(slot) {
  return generateUtilityClass("MuiSwitch", slot);
}
var switchClasses = generateUtilityClasses("MuiSwitch", ["root", "input", "track", "thumb", "checked", "disabled", "focusVisible", "readOnly"]);

// node_modules/@mui/base/Switch/Switch.js
var import_jsx_runtime72 = __toESM(require_jsx_runtime());
var import_jsx_runtime73 = __toESM(require_jsx_runtime());
var _excluded51 = ["checked", "defaultChecked", "disabled", "onBlur", "onChange", "onFocus", "onFocusVisible", "readOnly", "required", "slotProps", "slots"];
var useUtilityClasses31 = (ownerState) => {
  const {
    checked,
    disabled,
    focusVisible,
    readOnly
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", focusVisible && "focusVisible", readOnly && "readOnly"],
    thumb: ["thumb"],
    input: ["input"],
    track: ["track"]
  };
  return composeClasses(slots, useClassNamesOverride(getSwitchUtilityClass));
};
var Switch = React111.forwardRef(function Switch2(props, forwardedRef) {
  var _slots$root, _slots$thumb, _slots$input, _slots$track;
  const {
    checked: checkedProp,
    defaultChecked,
    disabled: disabledProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly: readOnlyProp,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded51);
  const useSwitchProps = {
    checked: checkedProp,
    defaultChecked,
    disabled: disabledProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly: readOnlyProp
  };
  const {
    getInputProps,
    checked,
    disabled,
    focusVisible,
    readOnly
  } = useSwitch(useSwitchProps);
  const ownerState = _extends({}, props, {
    checked,
    disabled,
    focusVisible,
    readOnly
  });
  const classes2 = useUtilityClasses31(ownerState);
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "span";
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: classes2.root
  });
  const Thumb = (_slots$thumb = slots.thumb) != null ? _slots$thumb : "span";
  const thumbProps = useSlotProps({
    elementType: Thumb,
    externalSlotProps: slotProps.thumb,
    ownerState,
    className: classes2.thumb
  });
  const Input5 = (_slots$input = slots.input) != null ? _slots$input : "input";
  const inputProps = useSlotProps({
    elementType: Input5,
    getSlotProps: getInputProps,
    externalSlotProps: slotProps.input,
    ownerState,
    className: classes2.input
  });
  const Track = slots.track === null ? () => null : (_slots$track = slots.track) != null ? _slots$track : "span";
  const trackProps = useSlotProps({
    elementType: Track,
    externalSlotProps: slotProps.track,
    ownerState,
    className: classes2.track
  });
  return (0, import_jsx_runtime73.jsxs)(Root42, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime72.jsx)(Track, _extends({}, trackProps)), (0, import_jsx_runtime72.jsx)(Thumb, _extends({}, thumbProps)), (0, import_jsx_runtime72.jsx)(Input5, _extends({}, inputProps))]
  }));
});
true ? Switch.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types62.default.bool,
  /**
   * Class name applied to the root element.
   */
  className: import_prop_types62.default.string,
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: import_prop_types62.default.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types62.default.bool,
  /**
   * @ignore
   */
  onBlur: import_prop_types62.default.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types62.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types62.default.func,
  /**
   * @ignore
   */
  onFocusVisible: import_prop_types62.default.func,
  /**
   * If `true`, the component is read only.
   */
  readOnly: import_prop_types62.default.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: import_prop_types62.default.bool,
  /**
   * The props used for each slot inside the Switch.
   * @default {}
   */
  slotProps: import_prop_types62.default.shape({
    input: import_prop_types62.default.oneOfType([import_prop_types62.default.func, import_prop_types62.default.object]),
    root: import_prop_types62.default.oneOfType([import_prop_types62.default.func, import_prop_types62.default.object]),
    thumb: import_prop_types62.default.oneOfType([import_prop_types62.default.func, import_prop_types62.default.object]),
    track: import_prop_types62.default.oneOfType([import_prop_types62.default.func, import_prop_types62.default.object])
  }),
  /**
   * The components used for each slot inside the Switch.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types62.default.shape({
    input: import_prop_types62.default.elementType,
    root: import_prop_types62.default.elementType,
    thumb: import_prop_types62.default.elementType,
    track: import_prop_types62.default.oneOfType([import_prop_types62.default.elementType, import_prop_types62.default.oneOf([null])])
  })
} : void 0;

// node_modules/@mui/base/TablePagination/TablePagination.js
init_extends();
init_objectWithoutPropertiesLoose();
var React113 = __toESM(require_react());
var import_prop_types63 = __toESM(require_prop_types());
init_esm();
init_composeClasses3();

// node_modules/@mui/base/TablePagination/TablePaginationActions.js
init_extends();
init_objectWithoutPropertiesLoose();
var React112 = __toESM(require_react());
var import_jsx_runtime74 = __toESM(require_jsx_runtime());
var import_jsx_runtime75 = __toESM(require_jsx_runtime());
var _excluded52 = ["count", "getItemAriaLabel", "onPageChange", "page", "rowsPerPage", "showFirstButton", "showLastButton", "direction", "ownerState", "slotProps", "slots"];
var _span;
var _span2;
var _span3;
var _span4;
function LastPageIconDefault() {
  return _span || (_span = (0, import_jsx_runtime74.jsx)("span", {
    children: "⇾|"
  }));
}
function FirstPageIconDefault() {
  return _span2 || (_span2 = (0, import_jsx_runtime74.jsx)("span", {
    children: "|⇽"
  }));
}
function NextPageIconDefault() {
  return _span3 || (_span3 = (0, import_jsx_runtime74.jsx)("span", {
    children: "⇾"
  }));
}
function BackPageIconDefault() {
  return _span4 || (_span4 = (0, import_jsx_runtime74.jsx)("span", {
    children: "⇽"
  }));
}
function defaultGetAriaLabel(type) {
  return `Go to ${type} page`;
}
var TablePaginationActions = React112.forwardRef(function TablePaginationActions2(props, forwardedRef) {
  var _slots$root, _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$backButton, _slots$lastPageIcon, _slots$firstPageIcon, _slots$nextPageIcon, _slots$backPageIcon;
  const {
    count,
    getItemAriaLabel = defaultGetAriaLabel,
    onPageChange,
    page,
    rowsPerPage,
    showFirstButton = false,
    showLastButton = false,
    direction,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded52);
  const ownerState = props;
  const handleFirstPageButtonClick = (event) => {
    onPageChange(event, 0);
  };
  const handleBackButtonClick = (event) => {
    onPageChange(event, page - 1);
  };
  const handleNextButtonClick = (event) => {
    onPageChange(event, page + 1);
  };
  const handleLastPageButtonClick = (event) => {
    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));
  };
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "div";
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState
  });
  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : "button";
  const firstButtonProps = useSlotProps({
    elementType: FirstButton,
    externalSlotProps: slotProps.firstButton,
    additionalProps: {
      onClick: handleFirstPageButtonClick,
      disabled: page === 0,
      "aria-label": getItemAriaLabel("first", page),
      title: getItemAriaLabel("first", page)
    },
    ownerState
  });
  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : "button";
  const lastButtonProps = useSlotProps({
    elementType: LastButton,
    externalSlotProps: slotProps.lastButton,
    additionalProps: {
      onClick: handleLastPageButtonClick,
      disabled: page >= Math.ceil(count / rowsPerPage) - 1,
      "aria-label": getItemAriaLabel("last", page),
      title: getItemAriaLabel("last", page)
    },
    ownerState
  });
  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : "button";
  const nextButtonProps = useSlotProps({
    elementType: NextButton,
    externalSlotProps: slotProps.nextButton,
    additionalProps: {
      onClick: handleNextButtonClick,
      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,
      "aria-label": getItemAriaLabel("next", page),
      title: getItemAriaLabel("next", page)
    },
    ownerState
  });
  const BackButton = (_slots$backButton = slots.backButton) != null ? _slots$backButton : "button";
  const backButtonProps = useSlotProps({
    elementType: BackButton,
    externalSlotProps: slotProps.backButton,
    additionalProps: {
      onClick: handleBackButtonClick,
      disabled: page === 0,
      "aria-label": getItemAriaLabel("previous", page),
      title: getItemAriaLabel("previous", page)
    },
    ownerState
  });
  const LastPageIcon = (_slots$lastPageIcon = slots.lastPageIcon) != null ? _slots$lastPageIcon : LastPageIconDefault;
  const FirstPageIcon = (_slots$firstPageIcon = slots.firstPageIcon) != null ? _slots$firstPageIcon : FirstPageIconDefault;
  const NextPageIcon = (_slots$nextPageIcon = slots.nextPageIcon) != null ? _slots$nextPageIcon : NextPageIconDefault;
  const BackPageIcon = (_slots$backPageIcon = slots.backPageIcon) != null ? _slots$backPageIcon : BackPageIconDefault;
  return (0, import_jsx_runtime75.jsxs)(Root42, _extends({}, rootProps, {
    children: [showFirstButton && (0, import_jsx_runtime74.jsx)(FirstButton, _extends({}, firstButtonProps, {
      children: direction === "rtl" ? (0, import_jsx_runtime74.jsx)(LastPageIcon, {}) : (0, import_jsx_runtime74.jsx)(FirstPageIcon, {})
    })), (0, import_jsx_runtime74.jsx)(BackButton, _extends({}, backButtonProps, {
      children: direction === "rtl" ? (0, import_jsx_runtime74.jsx)(NextPageIcon, {}) : (0, import_jsx_runtime74.jsx)(BackPageIcon, {})
    })), (0, import_jsx_runtime74.jsx)(NextButton, _extends({}, nextButtonProps, {
      children: direction === "rtl" ? (0, import_jsx_runtime74.jsx)(BackPageIcon, {}) : (0, import_jsx_runtime74.jsx)(NextPageIcon, {})
    })), showLastButton && (0, import_jsx_runtime74.jsx)(LastButton, _extends({}, lastButtonProps, {
      children: direction === "rtl" ? (0, import_jsx_runtime74.jsx)(FirstPageIcon, {}) : (0, import_jsx_runtime74.jsx)(LastPageIcon, {})
    }))]
  }));
});

// node_modules/@mui/base/TablePagination/tablePaginationClasses.js
function getTablePaginationUtilityClass(slot) {
  return generateUtilityClass("MuiTablePagination", slot);
}
var tablePaginationClasses = generateUtilityClasses("MuiTablePagination", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]);

// node_modules/@mui/base/TablePagination/TablePagination.js
var import_jsx_runtime76 = __toESM(require_jsx_runtime());
var import_react16 = __toESM(require_react());
var import_jsx_runtime77 = __toESM(require_jsx_runtime());
var _excluded53 = ["colSpan", "count", "getItemAriaLabel", "labelDisplayedRows", "labelId", "labelRowsPerPage", "onPageChange", "onRowsPerPageChange", "page", "rowsPerPage", "rowsPerPageOptions", "selectId", "slotProps", "slots"];
function defaultLabelDisplayedRows({
  from: from2,
  to,
  count
}) {
  return `${from2}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
}
function defaultGetAriaLabel2(type) {
  return `Go to ${type} page`;
}
var useUtilityClasses32 = () => {
  const slots = {
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  };
  return composeClasses(slots, useClassNamesOverride(getTablePaginationUtilityClass));
};
var TablePagination = React113.forwardRef(function TablePagination2(props, forwardedRef) {
  var _slots$root, _slots$select, _slots$actions, _slots$menuItem, _slots$selectLabel, _slots$displayedRows, _slots$toolbar, _slots$spacer;
  const {
    colSpan: colSpanProp,
    count,
    getItemAriaLabel = defaultGetAriaLabel2,
    labelDisplayedRows = defaultLabelDisplayedRows,
    labelId: labelIdProp,
    labelRowsPerPage = "Rows per page:",
    onPageChange,
    onRowsPerPageChange,
    page,
    rowsPerPage,
    rowsPerPageOptions = [10, 25, 50, 100],
    selectId: selectIdProp,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded53);
  const ownerState = props;
  const classes2 = useUtilityClasses32();
  let colSpan;
  const Root42 = (_slots$root = slots.root) != null ? _slots$root : "td";
  if (Root42 === "td" || !isHostComponent(Root42)) {
    colSpan = colSpanProp || 1e3;
  }
  const getLabelDisplayedRowsTo = () => {
    if (count === -1) {
      return (page + 1) * rowsPerPage;
    }
    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);
  };
  const selectId = useId(selectIdProp);
  const labelId = useId(labelIdProp);
  const rootProps = useSlotProps({
    elementType: Root42,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      colSpan,
      ref: forwardedRef
    },
    ownerState,
    className: classes2.root
  });
  const Select5 = (_slots$select = slots.select) != null ? _slots$select : "select";
  const selectProps = useSlotProps({
    elementType: Select5,
    externalSlotProps: slotProps.select,
    additionalProps: {
      value: rowsPerPage,
      id: selectId,
      onChange: (event) => onRowsPerPageChange && onRowsPerPageChange(event),
      "aria-label": rowsPerPage.toString(),
      "aria-labelledby": [labelId, selectId].filter(Boolean).join(" ") || void 0
    },
    ownerState,
    className: classes2.select
  });
  const Actions = (_slots$actions = slots.actions) != null ? _slots$actions : TablePaginationActions;
  const actionsProps = useSlotProps({
    elementType: Actions,
    externalSlotProps: slotProps.actions,
    additionalProps: {
      page,
      rowsPerPage,
      count,
      onPageChange,
      getItemAriaLabel
    },
    ownerState,
    className: classes2.actions
  });
  const MenuItem5 = (_slots$menuItem = slots.menuItem) != null ? _slots$menuItem : "option";
  const menuItemProps = useSlotProps({
    elementType: MenuItem5,
    externalSlotProps: slotProps.menuItem,
    additionalProps: {
      value: void 0
    },
    ownerState,
    className: classes2.menuItem
  });
  const SelectLabel = (_slots$selectLabel = slots.selectLabel) != null ? _slots$selectLabel : "p";
  const selectLabelProps = useSlotProps({
    elementType: SelectLabel,
    externalSlotProps: slotProps.selectLabel,
    additionalProps: {
      id: labelId
    },
    ownerState,
    className: classes2.selectLabel
  });
  const DisplayedRows = (_slots$displayedRows = slots.displayedRows) != null ? _slots$displayedRows : "p";
  const displayedRowsProps = useSlotProps({
    elementType: DisplayedRows,
    externalSlotProps: slotProps.displayedRows,
    ownerState,
    className: classes2.displayedRows
  });
  const Toolbar4 = (_slots$toolbar = slots.toolbar) != null ? _slots$toolbar : "div";
  const toolbarProps = useSlotProps({
    elementType: Toolbar4,
    externalSlotProps: slotProps.toolbar,
    ownerState,
    className: classes2.toolbar
  });
  const Spacer = (_slots$spacer = slots.spacer) != null ? _slots$spacer : "div";
  const spacerProps = useSlotProps({
    elementType: Spacer,
    externalSlotProps: slotProps.spacer,
    ownerState,
    className: classes2.spacer
  });
  return (0, import_jsx_runtime76.jsx)(Root42, _extends({}, rootProps, {
    children: (0, import_jsx_runtime77.jsxs)(Toolbar4, _extends({}, toolbarProps, {
      children: [(0, import_jsx_runtime76.jsx)(Spacer, _extends({}, spacerProps)), rowsPerPageOptions.length > 1 && (0, import_jsx_runtime76.jsx)(SelectLabel, _extends({}, selectLabelProps, {
        children: labelRowsPerPage
      })), rowsPerPageOptions.length > 1 && (0, import_jsx_runtime76.jsx)(Select5, _extends({}, selectProps, {
        children: rowsPerPageOptions.map((rowsPerPageOption) => (0, import_react16.createElement)(MenuItem5, _extends({}, menuItemProps, {
          key: typeof rowsPerPageOption !== "number" && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,
          value: typeof rowsPerPageOption !== "number" && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption
        }), typeof rowsPerPageOption !== "number" && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))
      })), (0, import_jsx_runtime76.jsx)(DisplayedRows, _extends({}, displayedRowsProps, {
        children: labelDisplayedRows({
          from: count === 0 ? 0 : page * rowsPerPage + 1,
          to: getLabelDisplayedRowsTo(),
          count: count === -1 ? -1 : count,
          page
        })
      })), (0, import_jsx_runtime76.jsx)(Actions, _extends({}, actionsProps))]
    }))
  }));
});
true ? TablePagination.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  colSpan: import_prop_types63.default.number,
  /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */
  count: import_prop_types63.default.number.isRequired,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
   * @returns {string}
   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {
   *   return `Go to ${type} page`;
   * }
   */
  getItemAriaLabel: import_prop_types63.default.func,
  /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {
   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
   * }
   */
  labelDisplayedRows: import_prop_types63.default.func,
  /**
   * Id of the label element within the pagination.
   */
  labelId: import_prop_types63.default.string,
  /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Rows per page:'
   */
  labelRowsPerPage: import_prop_types63.default.node,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: import_prop_types63.default.func.isRequired,
  /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   */
  onRowsPerPageChange: import_prop_types63.default.func,
  /**
   * The zero-based index of the current page.
   */
  page: chainPropTypes(integerPropType_default.isRequired, (props) => {
    const {
      count,
      page,
      rowsPerPage
    } = props;
    if (count === -1) {
      return null;
    }
    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);
    if (page < 0 || page > newLastPage) {
      return new Error(`MUI: The page prop of a TablePagination is out of range (0 to ${newLastPage}, but page is ${page}).`);
    }
    return null;
  }),
  /**
   * The number of rows per page.
   *
   * Set -1 to display all the rows.
   */
  rowsPerPage: integerPropType_default.isRequired,
  /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   * Use -1 for the value with a custom label to show all the rows.
   * @default [10, 25, 50, 100]
   */
  rowsPerPageOptions: import_prop_types63.default.arrayOf(import_prop_types63.default.oneOfType([import_prop_types63.default.number, import_prop_types63.default.shape({
    label: import_prop_types63.default.string.isRequired,
    value: import_prop_types63.default.number.isRequired
  })]).isRequired),
  /**
   * Id of the select element within the pagination.
   */
  selectId: import_prop_types63.default.string,
  /**
   * The props used for each slot inside the TablePagination.
   * @default {}
   */
  slotProps: import_prop_types63.default.shape({
    actions: import_prop_types63.default.oneOfType([import_prop_types63.default.func, import_prop_types63.default.object]),
    displayedRows: import_prop_types63.default.oneOfType([import_prop_types63.default.func, import_prop_types63.default.object]),
    menuItem: import_prop_types63.default.oneOfType([import_prop_types63.default.func, import_prop_types63.default.object]),
    root: import_prop_types63.default.oneOfType([import_prop_types63.default.func, import_prop_types63.default.object]),
    select: import_prop_types63.default.oneOfType([import_prop_types63.default.func, import_prop_types63.default.object]),
    selectLabel: import_prop_types63.default.oneOfType([import_prop_types63.default.func, import_prop_types63.default.object]),
    spacer: import_prop_types63.default.oneOfType([import_prop_types63.default.func, import_prop_types63.default.object]),
    toolbar: import_prop_types63.default.oneOfType([import_prop_types63.default.func, import_prop_types63.default.object])
  }),
  /**
   * The components used for each slot inside the TablePagination.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types63.default.shape({
    actions: import_prop_types63.default.elementType,
    displayedRows: import_prop_types63.default.elementType,
    menuItem: import_prop_types63.default.elementType,
    root: import_prop_types63.default.elementType,
    select: import_prop_types63.default.elementType,
    selectLabel: import_prop_types63.default.elementType,
    spacer: import_prop_types63.default.elementType,
    toolbar: import_prop_types63.default.elementType
  })
} : void 0;

// node_modules/@mui/base/TabPanel/TabPanel.js
init_extends();
init_objectWithoutPropertiesLoose();
var React119 = __toESM(require_react());
var import_prop_types65 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/base/TabPanel/tabPanelClasses.js
function getTabPanelUtilityClass(slot) {
  return generateUtilityClass("MuiTabPanel", slot);
}
var tabPanelClasses = generateUtilityClasses("MuiTabPanel", ["root", "hidden"]);

// node_modules/@mui/base/useTabPanel/useTabPanel.js
var React118 = __toESM(require_react());
init_esm();

// node_modules/@mui/base/Tabs/Tabs.js
init_extends();
init_objectWithoutPropertiesLoose();
var React117 = __toESM(require_react());
var import_prop_types64 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/base/Tabs/tabsClasses.js
function getTabsUtilityClass(slot) {
  return generateUtilityClass("MuiTabs", slot);
}
var tabsClasses = generateUtilityClasses("MuiTabs", ["root", "horizontal", "vertical"]);

// node_modules/@mui/base/useTabs/useTabs.js
init_extends();
var React114 = __toESM(require_react());
init_esm();
function useTabs(parameters) {
  const {
    value: valueProp,
    defaultValue,
    onChange,
    orientation,
    direction,
    selectionFollowsFocus
  } = parameters;
  const [value, setValue] = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: "Tabs",
    state: "value"
  });
  const onSelected = React114.useCallback((event, newValue) => {
    setValue(newValue);
    onChange == null ? void 0 : onChange(event, newValue);
  }, [onChange, setValue]);
  const {
    subitems: tabPanels,
    contextValue: compoundComponentContextValue
  } = useCompoundParent();
  const tabIdLookup = React114.useRef(() => void 0);
  const getTabPanelId = React114.useCallback((tabValue) => {
    var _tabPanels$get;
    return (_tabPanels$get = tabPanels.get(tabValue)) == null ? void 0 : _tabPanels$get.id;
  }, [tabPanels]);
  const getTabId = React114.useCallback((tabPanelId) => {
    return tabIdLookup.current(tabPanelId);
  }, []);
  const registerTabIdLookup = React114.useCallback((lookupFunction) => {
    tabIdLookup.current = lookupFunction;
  }, []);
  return {
    contextValue: _extends({
      direction,
      getTabId,
      getTabPanelId,
      onSelected,
      orientation,
      registerTabIdLookup,
      selectionFollowsFocus,
      value
    }, compoundComponentContextValue)
  };
}

// node_modules/@mui/base/useTabs/TabsProvider.js
var React116 = __toESM(require_react());

// node_modules/@mui/base/Tabs/TabsContext.js
var React115 = __toESM(require_react());
var TabsContext = React115.createContext(null);
if (true) {
  TabsContext.displayName = "TabsContext";
}
function useTabsContext() {
  const context = React115.useContext(TabsContext);
  if (context == null) {
    throw new Error("No TabsContext provided");
  }
  return context;
}

// node_modules/@mui/base/useTabs/TabsProvider.js
var import_jsx_runtime78 = __toESM(require_jsx_runtime());
function TabsProvider(props) {
  const {
    value: valueProp,
    children: children2
  } = props;
  const {
    direction,
    getItemIndex,
    onSelected,
    orientation,
    registerItem,
    registerTabIdLookup,
    selectionFollowsFocus,
    totalSubitemCount,
    value,
    getTabId,
    getTabPanelId
  } = valueProp;
  const compoundComponentContextValue = React116.useMemo(() => ({
    getItemIndex,
    registerItem,
    totalSubitemCount
  }), [registerItem, getItemIndex, totalSubitemCount]);
  const tabsContextValue = React116.useMemo(() => ({
    direction,
    getTabId,
    getTabPanelId,
    onSelected,
    orientation,
    registerTabIdLookup,
    selectionFollowsFocus,
    value
  }), [direction, getTabId, getTabPanelId, onSelected, orientation, registerTabIdLookup, selectionFollowsFocus, value]);
  return (0, import_jsx_runtime78.jsx)(CompoundComponentContext.Provider, {
    value: compoundComponentContextValue,
    children: (0, import_jsx_runtime78.jsx)(TabsContext.Provider, {
      value: tabsContextValue,
      children: children2
    })
  });
}

// node_modules/@mui/base/Tabs/Tabs.js
var import_jsx_runtime79 = __toESM(require_jsx_runtime());
var _excluded54 = ["children", "value", "defaultValue", "orientation", "direction", "onChange", "selectionFollowsFocus", "slotProps", "slots"];
var useUtilityClasses33 = (ownerState) => {
  const {
    orientation
  } = ownerState;
  const slots = {
    root: ["root", orientation]
  };
  return composeClasses(slots, useClassNamesOverride(getTabsUtilityClass));
};
var Tabs = React117.forwardRef(function Tabs2(props, forwardedRef) {
  var _slots$root;
  const {
    children: children2,
    orientation = "horizontal",
    direction = "ltr",
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded54);
  const {
    contextValue
  } = useTabs(props);
  const ownerState = _extends({}, props, {
    orientation,
    direction
  });
  const classes2 = useUtilityClasses33(ownerState);
  const TabsRoot2 = (_slots$root = slots.root) != null ? _slots$root : "div";
  const tabsRootProps = useSlotProps({
    elementType: TabsRoot2,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: classes2.root
  });
  return (0, import_jsx_runtime79.jsx)(TabsRoot2, _extends({}, tabsRootProps, {
    children: (0, import_jsx_runtime79.jsx)(TabsProvider, {
      value: contextValue,
      children: children2
    })
  }));
});
true ? Tabs.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types64.default.node,
  /**
   * @ignore
   */
  className: import_prop_types64.default.string,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types64.default.oneOfType([import_prop_types64.default.number, import_prop_types64.default.string]),
  /**
   * The direction of the text.
   * @default 'ltr'
   */
  direction: import_prop_types64.default.oneOf(["ltr", "rtl"]),
  /**
   * Callback invoked when new value is being set.
   */
  onChange: import_prop_types64.default.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: import_prop_types64.default.oneOf(["horizontal", "vertical"]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: import_prop_types64.default.bool,
  /**
   * The props used for each slot inside the Tabs.
   * @default {}
   */
  slotProps: import_prop_types64.default.shape({
    root: import_prop_types64.default.oneOfType([import_prop_types64.default.func, import_prop_types64.default.object])
  }),
  /**
   * The components used for each slot inside the Tabs.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types64.default.shape({
    root: import_prop_types64.default.elementType
  }),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `null`.
   */
  value: import_prop_types64.default.oneOfType([import_prop_types64.default.number, import_prop_types64.default.string])
} : void 0;

// node_modules/@mui/base/useTabPanel/useTabPanel.js
function tabPanelValueGenerator(otherTabPanelValues) {
  return otherTabPanelValues.size;
}
function useTabPanel(parameters) {
  const {
    value: valueParam,
    id: idParam,
    rootRef: externalRef
  } = parameters;
  const context = useTabsContext();
  if (context === null) {
    throw new Error("No TabContext provided");
  }
  const {
    value: selectedTabValue,
    getTabId
  } = context;
  const id = useId(idParam);
  const ref = React118.useRef(null);
  const handleRef = useForkRef(ref, externalRef);
  const metadata = React118.useMemo(() => ({
    id,
    ref
  }), [id]);
  const {
    id: value
  } = useCompoundItem(valueParam != null ? valueParam : tabPanelValueGenerator, metadata);
  const hidden = value !== selectedTabValue;
  const correspondingTabId = value !== void 0 ? getTabId(value) : void 0;
  const getRootProps = () => {
    return {
      "aria-labelledby": correspondingTabId != null ? correspondingTabId : void 0,
      hidden,
      id: id != null ? id : void 0,
      ref: handleRef
    };
  };
  return {
    hidden,
    getRootProps,
    rootRef: handleRef
  };
}

// node_modules/@mui/base/TabPanel/TabPanel.js
var import_jsx_runtime80 = __toESM(require_jsx_runtime());
var _excluded55 = ["children", "value", "slotProps", "slots"];
var useUtilityClasses34 = (ownerState) => {
  const {
    hidden
  } = ownerState;
  const slots = {
    root: ["root", hidden && "hidden"]
  };
  return composeClasses(slots, useClassNamesOverride(getTabPanelUtilityClass));
};
var TabPanel = React119.forwardRef(function TabPanel2(props, forwardedRef) {
  var _slots$root;
  const {
    children: children2,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded55);
  const {
    hidden,
    getRootProps
  } = useTabPanel(props);
  const ownerState = _extends({}, props, {
    hidden
  });
  const classes2 = useUtilityClasses34(ownerState);
  const TabPanelRoot = (_slots$root = slots.root) != null ? _slots$root : "div";
  const tabPanelRootProps = useSlotProps({
    elementType: TabPanelRoot,
    getSlotProps: getRootProps,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      role: "tabpanel",
      ref: forwardedRef
    },
    ownerState,
    className: classes2.root
  });
  return (0, import_jsx_runtime80.jsx)(TabPanelRoot, _extends({}, tabPanelRootProps, {
    children: !hidden && children2
  }));
});
true ? TabPanel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types65.default.node,
  /**
   * @ignore
   */
  className: import_prop_types65.default.string,
  /**
   * The props used for each slot inside the TabPanel.
   * @default {}
   */
  slotProps: import_prop_types65.default.shape({
    root: import_prop_types65.default.oneOfType([import_prop_types65.default.func, import_prop_types65.default.object])
  }),
  /**
   * The components used for each slot inside the TabPanel.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types65.default.shape({
    root: import_prop_types65.default.elementType
  }),
  /**
   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.
   * If not provided, it will fall back to the index of the panel.
   * It is recommended to explicitly provide it, as it's required for the tab panel to be rendered on the server.
   */
  value: import_prop_types65.default.oneOfType([import_prop_types65.default.number, import_prop_types65.default.string])
} : void 0;

// node_modules/@mui/base/TabsList/TabsList.js
init_extends();
init_objectWithoutPropertiesLoose();
var React122 = __toESM(require_react());
var import_prop_types66 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/base/TabsList/tabsListClasses.js
function getTabsListUtilityClass(slot) {
  return generateUtilityClass("MuiTabsList", slot);
}
var tabsListClasses = generateUtilityClasses("MuiTabsList", ["root", "horizontal", "vertical"]);

// node_modules/@mui/base/useTabsList/useTabsList.js
init_extends();
var React120 = __toESM(require_react());

// node_modules/@mui/base/useTabsList/useTabsList.types.js
var TabsListActionTypes = {
  valueChange: "valueChange"
};

// node_modules/@mui/base/useTabsList/tabsListReducer.js
init_extends();
function tabsListReducer(state, action) {
  if (action.type === TabsListActionTypes.valueChange) {
    return _extends({}, state, {
      highlightedValue: action.value
    });
  }
  const newState = listReducer(state, action);
  const {
    context: {
      selectionFollowsFocus
    }
  } = action;
  if (action.type === ListActionTypes.itemsChange) {
    if (newState.selectedValues.length > 0) {
      return _extends({}, newState, {
        highlightedValue: newState.selectedValues[0]
      });
    }
    moveHighlight(null, "reset", action.context);
  }
  if (selectionFollowsFocus && newState.highlightedValue != null) {
    return _extends({}, newState, {
      selectedValues: [newState.highlightedValue]
    });
  }
  return newState;
}

// node_modules/@mui/base/useTabsList/useTabsList.js
function useTabsList(parameters) {
  var _selectedValues$;
  const {
    rootRef: externalRef
  } = parameters;
  const {
    direction = "ltr",
    onSelected,
    orientation = "horizontal",
    value,
    registerTabIdLookup,
    selectionFollowsFocus
  } = useTabsContext();
  const {
    subitems,
    contextValue: compoundComponentContextValue
  } = useCompoundParent();
  const tabIdLookup = React120.useCallback((tabValue) => {
    var _subitems$get;
    return (_subitems$get = subitems.get(tabValue)) == null ? void 0 : _subitems$get.id;
  }, [subitems]);
  registerTabIdLookup(tabIdLookup);
  const subitemKeys = React120.useMemo(() => Array.from(subitems.keys()), [subitems]);
  const getTabElement = React120.useCallback((tabValue) => {
    var _subitems$get$ref$cur, _subitems$get2;
    if (tabValue == null) {
      return null;
    }
    return (_subitems$get$ref$cur = (_subitems$get2 = subitems.get(tabValue)) == null ? void 0 : _subitems$get2.ref.current) != null ? _subitems$get$ref$cur : null;
  }, [subitems]);
  const isRtl = direction === "rtl";
  let listOrientation;
  if (orientation === "vertical") {
    listOrientation = "vertical";
  } else {
    listOrientation = isRtl ? "horizontal-rtl" : "horizontal-ltr";
  }
  const handleChange = React120.useCallback((event, newValue) => {
    var _newValue$;
    onSelected(event, (_newValue$ = newValue[0]) != null ? _newValue$ : null);
  }, [onSelected]);
  const controlledProps = React120.useMemo(() => {
    if (value === void 0) {
      return {};
    }
    return value != null ? {
      selectedValues: [value]
    } : {
      selectedValues: []
    };
  }, [value]);
  const isItemDisabled = React120.useCallback((item) => {
    var _subitems$get$disable, _subitems$get3;
    return (_subitems$get$disable = (_subitems$get3 = subitems.get(item)) == null ? void 0 : _subitems$get3.disabled) != null ? _subitems$get$disable : false;
  }, [subitems]);
  const {
    contextValue: listContextValue,
    dispatch,
    getRootProps: getListboxRootProps,
    state: {
      highlightedValue,
      selectedValues
    },
    rootRef: mergedRootRef
  } = useList2({
    controlledProps,
    disabledItemsFocusable: !selectionFollowsFocus,
    focusManagement: "DOM",
    getItemDomElement: getTabElement,
    isItemDisabled,
    items: subitemKeys,
    rootRef: externalRef,
    onChange: handleChange,
    orientation: listOrientation,
    reducerActionContext: React120.useMemo(() => ({
      selectionFollowsFocus: selectionFollowsFocus || false
    }), [selectionFollowsFocus]),
    selectionMode: "single",
    stateReducer: tabsListReducer
  });
  React120.useEffect(() => {
    if (value === void 0) {
      return;
    }
    if (value != null) {
      dispatch({
        type: TabsListActionTypes.valueChange,
        value
      });
    }
  }, [dispatch, value]);
  const getRootProps = (otherHandlers = {}) => {
    return _extends({}, otherHandlers, getListboxRootProps(otherHandlers), {
      "aria-orientation": orientation === "vertical" ? "vertical" : void 0,
      role: "tablist"
    });
  };
  const contextValue = React120.useMemo(() => _extends({}, compoundComponentContextValue, listContextValue), [compoundComponentContextValue, listContextValue]);
  return {
    contextValue,
    dispatch,
    getRootProps,
    highlightedValue,
    isRtl,
    orientation,
    rootRef: mergedRootRef,
    selectedValue: (_selectedValues$ = selectedValues[0]) != null ? _selectedValues$ : null
  };
}

// node_modules/@mui/base/useTabsList/TabsListProvider.js
var React121 = __toESM(require_react());
var import_jsx_runtime81 = __toESM(require_jsx_runtime());
function TabsListProvider(props) {
  const {
    value,
    children: children2
  } = props;
  const {
    dispatch,
    getItemIndex,
    getItemState,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler,
    registerItem,
    totalSubitemCount
  } = value;
  const listContextValue = React121.useMemo(() => ({
    dispatch,
    getItemState,
    getItemIndex,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler
  }), [dispatch, getItemIndex, getItemState, registerHighlightChangeHandler, registerSelectionChangeHandler]);
  const compoundComponentContextValue = React121.useMemo(() => ({
    getItemIndex,
    registerItem,
    totalSubitemCount
  }), [registerItem, getItemIndex, totalSubitemCount]);
  return (0, import_jsx_runtime81.jsx)(CompoundComponentContext.Provider, {
    value: compoundComponentContextValue,
    children: (0, import_jsx_runtime81.jsx)(ListContext2.Provider, {
      value: listContextValue,
      children: children2
    })
  });
}

// node_modules/@mui/base/TabsList/TabsList.js
var import_jsx_runtime82 = __toESM(require_jsx_runtime());
var _excluded56 = ["children", "slotProps", "slots"];
var useUtilityClasses35 = (ownerState) => {
  const {
    orientation
  } = ownerState;
  const slots = {
    root: ["root", orientation]
  };
  return composeClasses(slots, useClassNamesOverride(getTabsListUtilityClass));
};
var TabsList = React122.forwardRef(function TabsList2(props, forwardedRef) {
  var _slots$root;
  const {
    children: children2,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded56);
  const {
    isRtl,
    orientation,
    getRootProps,
    contextValue
  } = useTabsList({
    rootRef: forwardedRef
  });
  const ownerState = _extends({}, props, {
    isRtl,
    orientation
  });
  const classes2 = useUtilityClasses35(ownerState);
  const TabsListRoot = (_slots$root = slots.root) != null ? _slots$root : "div";
  const tabsListRootProps = useSlotProps({
    elementType: TabsListRoot,
    getSlotProps: getRootProps,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    ownerState,
    className: classes2.root
  });
  return (0, import_jsx_runtime82.jsx)(TabsListProvider, {
    value: contextValue,
    children: (0, import_jsx_runtime82.jsx)(TabsListRoot, _extends({}, tabsListRootProps, {
      children: children2
    }))
  });
});
true ? TabsList.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types66.default.node,
  /**
   * @ignore
   */
  className: import_prop_types66.default.string,
  /**
   * The props used for each slot inside the TabsList.
   * @default {}
   */
  slotProps: import_prop_types66.default.shape({
    root: import_prop_types66.default.oneOfType([import_prop_types66.default.func, import_prop_types66.default.object])
  }),
  /**
   * The components used for each slot inside the TabsList.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types66.default.shape({
    root: import_prop_types66.default.elementType
  })
} : void 0;

// node_modules/@mui/base/Tab/Tab.js
init_extends();
init_objectWithoutPropertiesLoose();
var React124 = __toESM(require_react());
var import_prop_types67 = __toESM(require_prop_types());
init_esm();
init_composeClasses3();

// node_modules/@mui/base/Tab/tabClasses.js
function getTabUtilityClass(slot) {
  return generateUtilityClass("MuiTab", slot);
}
var tabClasses = generateUtilityClasses("MuiTab", ["root", "selected", "disabled"]);

// node_modules/@mui/base/useTab/useTab.js
init_extends();
var React123 = __toESM(require_react());
init_esm();
function tabValueGenerator(otherTabValues) {
  return otherTabValues.size;
}
function useTab(parameters) {
  const {
    value: valueParam,
    rootRef: externalRef,
    disabled = false,
    id: idParam
  } = parameters;
  const tabRef = React123.useRef(null);
  const id = useId(idParam);
  const {
    value: selectedValue,
    selectionFollowsFocus,
    getTabPanelId
  } = useTabsContext();
  const tabMetadata = React123.useMemo(() => ({
    disabled,
    ref: tabRef,
    id
  }), [disabled, tabRef, id]);
  const {
    id: value,
    index: index2,
    totalItemCount: totalTabsCount
  } = useCompoundItem(valueParam != null ? valueParam : tabValueGenerator, tabMetadata);
  const {
    getRootProps: getTabProps,
    rootRef: listItemRefHandler,
    highlighted,
    selected
  } = useListItem({
    item: value
  });
  const {
    getRootProps: getButtonProps,
    rootRef: buttonRefHandler,
    active,
    focusVisible,
    setFocusVisible
  } = useButton({
    disabled,
    focusableWhenDisabled: !selectionFollowsFocus,
    type: "button"
  });
  const handleRef = useForkRef(tabRef, externalRef, listItemRefHandler, buttonRefHandler);
  const tabPanelId = value !== void 0 ? getTabPanelId(value) : void 0;
  const getRootProps = (otherHandlers = {}) => {
    const resolvedTabProps = _extends({}, otherHandlers, getTabProps(otherHandlers));
    const resolvedButtonProps = _extends({}, resolvedTabProps, getButtonProps(resolvedTabProps));
    return _extends({}, resolvedButtonProps, {
      role: "tab",
      "aria-controls": tabPanelId,
      "aria-selected": selected,
      id,
      ref: handleRef
    });
  };
  return {
    getRootProps,
    active,
    focusVisible,
    highlighted,
    index: index2,
    rootRef: handleRef,
    // the `selected` state isn't set on the server (it relies on effects to be calculated),
    // so we fall back to checking the `value` prop with the selectedValue from the TabsContext
    selected: selected || value === selectedValue,
    setFocusVisible,
    totalTabsCount
  };
}

// node_modules/@mui/base/Tab/Tab.js
var import_jsx_runtime83 = __toESM(require_jsx_runtime());
var _excluded57 = ["action", "children", "value", "disabled", "onChange", "onClick", "onFocus", "slotProps", "slots"];
var useUtilityClasses36 = (ownerState) => {
  const {
    selected,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", selected && "selected", disabled && "disabled"]
  };
  return composeClasses(slots, useClassNamesOverride(getTabUtilityClass));
};
var Tab = React124.forwardRef(function Tab2(props, forwardedRef) {
  var _slots$root;
  const {
    children: children2,
    disabled = false,
    slotProps = {},
    slots = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded57);
  const tabRef = React124.useRef();
  const handleRef = useForkRef(tabRef, forwardedRef);
  const {
    active,
    highlighted,
    selected,
    getRootProps
  } = useTab(_extends({}, props, {
    rootRef: handleRef
  }));
  const ownerState = _extends({}, props, {
    active,
    disabled,
    highlighted,
    selected
  });
  const classes2 = useUtilityClasses36(ownerState);
  const TabRoot2 = (_slots$root = slots.root) != null ? _slots$root : "button";
  const tabRootProps = useSlotProps({
    elementType: TabRoot2,
    getSlotProps: getRootProps,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: classes2.root
  });
  return (0, import_jsx_runtime83.jsx)(TabRoot2, _extends({}, tabRootProps, {
    children: children2
  }));
});
true ? Tab.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A ref for imperative actions. It currently only supports `focusVisible()` action.
   */
  action: import_prop_types67.default.oneOfType([import_prop_types67.default.func, import_prop_types67.default.shape({
    current: import_prop_types67.default.shape({
      focusVisible: import_prop_types67.default.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  children: import_prop_types67.default.node,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types67.default.bool,
  /**
   * Callback invoked when new value is being set.
   */
  onChange: import_prop_types67.default.func,
  /**
   * The props used for each slot inside the Tab.
   * @default {}
   */
  slotProps: import_prop_types67.default.shape({
    root: import_prop_types67.default.oneOfType([import_prop_types67.default.func, import_prop_types67.default.object])
  }),
  /**
   * The components used for each slot inside the Tab.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types67.default.shape({
    root: import_prop_types67.default.elementType
  }),
  /**
   * You can provide your own value. Otherwise, it falls back to the child position index.
   */
  value: import_prop_types67.default.oneOfType([import_prop_types67.default.number, import_prop_types67.default.string])
} : void 0;

// node_modules/@mui/base/TextareaAutosize/TextareaAutosize.js
init_extends();
init_objectWithoutPropertiesLoose();
var React125 = __toESM(require_react());
var import_prop_types68 = __toESM(require_prop_types());
var ReactDOM5 = __toESM(require_react_dom());
init_esm();
var import_jsx_runtime84 = __toESM(require_jsx_runtime());
var import_jsx_runtime85 = __toESM(require_jsx_runtime());
var _excluded58 = ["onChange", "maxRows", "minRows", "style", "value"];
function getStyleValue2(value) {
  return parseInt(value, 10) || 0;
}
var styles = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function isEmpty4(obj) {
  return obj === void 0 || obj === null || Object.keys(obj).length === 0 || obj.outerHeightStyle === 0 && !obj.overflow;
}
var TextareaAutosize = React125.forwardRef(function TextareaAutosize2(props, forwardedRef) {
  const {
    onChange,
    maxRows,
    minRows = 1,
    style: style4,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded58);
  const {
    current: isControlled
  } = React125.useRef(value != null);
  const inputRef = React125.useRef(null);
  const handleRef = useForkRef(forwardedRef, inputRef);
  const shadowRef = React125.useRef(null);
  const renders = React125.useRef(0);
  const [state, setState] = React125.useState({
    outerHeightStyle: 0
  });
  const getUpdatedState = React125.useCallback(() => {
    const input = inputRef.current;
    const containerWindow = ownerWindow(input);
    const computedStyle = containerWindow.getComputedStyle(input);
    if (computedStyle.width === "0px") {
      return {
        outerHeightStyle: 0
      };
    }
    const inputShallow = shadowRef.current;
    inputShallow.style.width = computedStyle.width;
    inputShallow.value = input.value || props.placeholder || "x";
    if (inputShallow.value.slice(-1) === "\n") {
      inputShallow.value += " ";
    }
    const boxSizing2 = computedStyle.boxSizing;
    const padding2 = getStyleValue2(computedStyle.paddingBottom) + getStyleValue2(computedStyle.paddingTop);
    const border2 = getStyleValue2(computedStyle.borderBottomWidth) + getStyleValue2(computedStyle.borderTopWidth);
    const innerHeight = inputShallow.scrollHeight;
    inputShallow.value = "x";
    const singleRowHeight = inputShallow.scrollHeight;
    let outerHeight = innerHeight;
    if (minRows) {
      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
    }
    if (maxRows) {
      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
    }
    outerHeight = Math.max(outerHeight, singleRowHeight);
    const outerHeightStyle = outerHeight + (boxSizing2 === "border-box" ? padding2 + border2 : 0);
    const overflow2 = Math.abs(outerHeight - innerHeight) <= 1;
    return {
      outerHeightStyle,
      overflow: overflow2
    };
  }, [maxRows, minRows, props.placeholder]);
  const updateState = (prevState, newState) => {
    const {
      outerHeightStyle,
      overflow: overflow2
    } = newState;
    if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow2)) {
      renders.current += 1;
      return {
        overflow: overflow2,
        outerHeightStyle
      };
    }
    if (true) {
      if (renders.current === 20) {
        console.error(["MUI: Too many re-renders. The layout is unstable.", "TextareaAutosize limits the number of renders to prevent an infinite loop."].join("\n"));
      }
    }
    return prevState;
  };
  const syncHeight = React125.useCallback(() => {
    const newState = getUpdatedState();
    if (isEmpty4(newState)) {
      return;
    }
    setState((prevState) => {
      return updateState(prevState, newState);
    });
  }, [getUpdatedState]);
  const syncHeightWithFlushSync = () => {
    const newState = getUpdatedState();
    if (isEmpty4(newState)) {
      return;
    }
    ReactDOM5.flushSync(() => {
      setState((prevState) => {
        return updateState(prevState, newState);
      });
    });
  };
  React125.useEffect(() => {
    const handleResize = debounce(() => {
      renders.current = 0;
      if (inputRef.current) {
        syncHeightWithFlushSync();
      }
    });
    let resizeObserver;
    const input = inputRef.current;
    const containerWindow = ownerWindow(input);
    containerWindow.addEventListener("resize", handleResize);
    if (typeof ResizeObserver !== "undefined") {
      resizeObserver = new ResizeObserver(handleResize);
      resizeObserver.observe(input);
    }
    return () => {
      handleResize.clear();
      containerWindow.removeEventListener("resize", handleResize);
      if (resizeObserver) {
        resizeObserver.disconnect();
      }
    };
  });
  useEnhancedEffect_default(() => {
    syncHeight();
  });
  React125.useEffect(() => {
    renders.current = 0;
  }, [value]);
  const handleChange = (event) => {
    renders.current = 0;
    if (!isControlled) {
      syncHeight();
    }
    if (onChange) {
      onChange(event);
    }
  };
  return (0, import_jsx_runtime85.jsxs)(React125.Fragment, {
    children: [(0, import_jsx_runtime84.jsx)("textarea", _extends({
      value,
      onChange: handleChange,
      ref: handleRef,
      rows: minRows,
      style: _extends({
        height: state.outerHeightStyle,
        // Need a large enough difference to allow scrolling.
        // This prevents infinite rendering loop.
        overflow: state.overflow ? "hidden" : void 0
      }, style4)
    }, other)), (0, import_jsx_runtime84.jsx)("textarea", {
      "aria-hidden": true,
      className: props.className,
      readOnly: true,
      ref: shadowRef,
      tabIndex: -1,
      style: _extends({}, styles.shadow, style4, {
        paddingTop: 0,
        paddingBottom: 0
      })
    })]
  });
});
true ? TextareaAutosize.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  className: import_prop_types68.default.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: import_prop_types68.default.oneOfType([import_prop_types68.default.number, import_prop_types68.default.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: import_prop_types68.default.oneOfType([import_prop_types68.default.number, import_prop_types68.default.string]),
  /**
   * @ignore
   */
  onChange: import_prop_types68.default.func,
  /**
   * @ignore
   */
  placeholder: import_prop_types68.default.string,
  /**
   * @ignore
   */
  style: import_prop_types68.default.object,
  /**
   * @ignore
   */
  value: import_prop_types68.default.oneOfType([import_prop_types68.default.arrayOf(import_prop_types68.default.string), import_prop_types68.default.number, import_prop_types68.default.string])
} : void 0;

// node_modules/@mui/base/useAutocomplete/useAutocomplete.js
init_extends();
var React126 = __toESM(require_react());
init_esm();
function stripDiacritics(string) {
  return typeof string.normalize !== "undefined" ? string.normalize("NFD").replace(/[\u0300-\u036f]/g, "") : string;
}
function createFilterOptions(config = {}) {
  const {
    ignoreAccents = true,
    ignoreCase = true,
    limit,
    matchFrom = "any",
    stringify: stringify5,
    trim: trim2 = false
  } = config;
  return (options, {
    inputValue,
    getOptionLabel
  }) => {
    let input = trim2 ? inputValue.trim() : inputValue;
    if (ignoreCase) {
      input = input.toLowerCase();
    }
    if (ignoreAccents) {
      input = stripDiacritics(input);
    }
    const filteredOptions = !input ? options : options.filter((option) => {
      let candidate = (stringify5 || getOptionLabel)(option);
      if (ignoreCase) {
        candidate = candidate.toLowerCase();
      }
      if (ignoreAccents) {
        candidate = stripDiacritics(candidate);
      }
      return matchFrom === "start" ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;
    });
    return typeof limit === "number" ? filteredOptions.slice(0, limit) : filteredOptions;
  };
}
function findIndex(array, comp) {
  for (let i = 0; i < array.length; i += 1) {
    if (comp(array[i])) {
      return i;
    }
  }
  return -1;
}
var defaultFilterOptions = createFilterOptions();
var pageSize = 5;
var defaultIsActiveElementInListbox = (listboxRef) => {
  var _listboxRef$current$p;
  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));
};
function useAutocomplete(props) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix = "Mui",
    autoComplete = false,
    autoHighlight = false,
    autoSelect = false,
    blurOnSelect = false,
    clearOnBlur = !props.freeSolo,
    clearOnEscape = false,
    componentName = "useAutocomplete",
    defaultValue = props.multiple ? [] : null,
    disableClearable = false,
    disableCloseOnSelect = false,
    disabled: disabledProp,
    disabledItemsFocusable = false,
    disableListWrap = false,
    filterOptions = defaultFilterOptions,
    filterSelectedOptions = false,
    freeSolo = false,
    getOptionDisabled,
    getOptionLabel: getOptionLabelProp = (option) => {
      var _option$label;
      return (_option$label = option.label) != null ? _option$label : option;
    },
    groupBy,
    handleHomeEndKeys = !props.freeSolo,
    id: idProp,
    includeInputInList = false,
    inputValue: inputValueProp,
    isOptionEqualToValue = (option, value2) => option === value2,
    multiple = false,
    onChange,
    onClose,
    onHighlightChange,
    onInputChange,
    onOpen,
    open: openProp,
    openOnFocus = false,
    options,
    readOnly = false,
    selectOnFocus = !props.freeSolo,
    value: valueProp
  } = props;
  const id = useId(idProp);
  let getOptionLabel = getOptionLabelProp;
  getOptionLabel = (option) => {
    const optionLabel = getOptionLabelProp(option);
    if (typeof optionLabel !== "string") {
      if (true) {
        const erroneousReturn = optionLabel === void 0 ? "undefined" : `${typeof optionLabel} (${optionLabel})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);
      }
      return String(optionLabel);
    }
    return optionLabel;
  };
  const ignoreFocus = React126.useRef(false);
  const firstFocus = React126.useRef(true);
  const inputRef = React126.useRef(null);
  const listboxRef = React126.useRef(null);
  const [anchorEl, setAnchorEl] = React126.useState(null);
  const [focusedTag, setFocusedTag] = React126.useState(-1);
  const defaultHighlighted = autoHighlight ? 0 : -1;
  const highlightedIndexRef = React126.useRef(defaultHighlighted);
  const [value, setValueState] = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: componentName
  });
  const [inputValue, setInputValueState] = useControlled({
    controlled: inputValueProp,
    default: "",
    name: componentName,
    state: "inputValue"
  });
  const [focused, setFocused] = React126.useState(false);
  const resetInputValue = React126.useCallback((event, newValue) => {
    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;
    if (!isOptionSelected && !clearOnBlur) {
      return;
    }
    let newInputValue;
    if (multiple) {
      newInputValue = "";
    } else if (newValue == null) {
      newInputValue = "";
    } else {
      const optionLabel = getOptionLabel(newValue);
      newInputValue = typeof optionLabel === "string" ? optionLabel : "";
    }
    if (inputValue === newInputValue) {
      return;
    }
    setInputValueState(newInputValue);
    if (onInputChange) {
      onInputChange(event, newInputValue, "reset");
    }
  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);
  const [open, setOpenState] = useControlled({
    controlled: openProp,
    default: false,
    name: componentName,
    state: "open"
  });
  const [inputPristine, setInputPristine] = React126.useState(true);
  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);
  const popupOpen = open && !readOnly;
  const filteredOptions = popupOpen ? filterOptions(
    options.filter((option) => {
      if (filterSelectedOptions && (multiple ? value : [value]).some((value2) => value2 !== null && isOptionEqualToValue(option, value2))) {
        return false;
      }
      return true;
    }),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: inputValueIsSelectedValue && inputPristine ? "" : inputValue,
      getOptionLabel
    }
  ) : [];
  const previousProps = usePreviousProps_default({
    filteredOptions,
    value,
    inputValue
  });
  React126.useEffect(() => {
    const valueChange = value !== previousProps.value;
    if (focused && !valueChange) {
      return;
    }
    if (freeSolo && !valueChange) {
      return;
    }
    resetInputValue(null, value);
  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);
  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;
  if (true) {
    if (value !== null && !freeSolo && options.length > 0) {
      const missingValue = (multiple ? value : [value]).filter((value2) => !options.some((option) => isOptionEqualToValue(option, value2)));
      if (missingValue.length > 0) {
        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\`.`, "You can use the `isOptionEqualToValue` prop to customize the equality test."].join("\n"));
      }
    }
  }
  const focusTag = useEventCallback_default((tagToFocus) => {
    if (tagToFocus === -1) {
      inputRef.current.focus();
    } else {
      anchorEl.querySelector(`[data-tag-index="${tagToFocus}"]`).focus();
    }
  });
  React126.useEffect(() => {
    if (multiple && focusedTag > value.length - 1) {
      setFocusedTag(-1);
      focusTag(-1);
    }
  }, [value, multiple, focusedTag, focusTag]);
  function validOptionIndex(index2, direction) {
    if (!listboxRef.current || index2 === -1) {
      return -1;
    }
    let nextFocus = index2;
    while (true) {
      if (direction === "next" && nextFocus === filteredOptions.length || direction === "previous" && nextFocus === -1) {
        return -1;
      }
      const option = listboxRef.current.querySelector(`[data-option-index="${nextFocus}"]`);
      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute("aria-disabled") === "true";
      if (option && !option.hasAttribute("tabindex") || nextFocusDisabled) {
        nextFocus += direction === "next" ? 1 : -1;
      } else {
        return nextFocus;
      }
    }
  }
  const setHighlightedIndex = useEventCallback_default(({
    event,
    index: index2,
    reason = "auto"
  }) => {
    highlightedIndexRef.current = index2;
    if (index2 === -1) {
      inputRef.current.removeAttribute("aria-activedescendant");
    } else {
      inputRef.current.setAttribute("aria-activedescendant", `${id}-option-${index2}`);
    }
    if (onHighlightChange) {
      onHighlightChange(event, index2 === -1 ? null : filteredOptions[index2], reason);
    }
    if (!listboxRef.current) {
      return;
    }
    const prev2 = listboxRef.current.querySelector(`[role="option"].${unstable_classNamePrefix}-focused`);
    if (prev2) {
      prev2.classList.remove(`${unstable_classNamePrefix}-focused`);
      prev2.classList.remove(`${unstable_classNamePrefix}-focusVisible`);
    }
    let listboxNode = listboxRef.current;
    if (listboxRef.current.getAttribute("role") !== "listbox") {
      listboxNode = listboxRef.current.parentElement.querySelector('[role="listbox"]');
    }
    if (!listboxNode) {
      return;
    }
    if (index2 === -1) {
      listboxNode.scrollTop = 0;
      return;
    }
    const option = listboxRef.current.querySelector(`[data-option-index="${index2}"]`);
    if (!option) {
      return;
    }
    option.classList.add(`${unstable_classNamePrefix}-focused`);
    if (reason === "keyboard") {
      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);
    }
    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== "mouse" && reason !== "touch") {
      const element = option;
      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;
      const elementBottom = element.offsetTop + element.offsetHeight;
      if (elementBottom > scrollBottom) {
        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;
      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {
        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);
      }
    }
  });
  const changeHighlightedIndex = useEventCallback_default(({
    event,
    diff,
    direction = "next",
    reason = "auto"
  }) => {
    if (!popupOpen) {
      return;
    }
    const getNextIndex = () => {
      const maxIndex = filteredOptions.length - 1;
      if (diff === "reset") {
        return defaultHighlighted;
      }
      if (diff === "start") {
        return 0;
      }
      if (diff === "end") {
        return maxIndex;
      }
      const newIndex = highlightedIndexRef.current + diff;
      if (newIndex < 0) {
        if (newIndex === -1 && includeInputInList) {
          return -1;
        }
        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {
          return 0;
        }
        return maxIndex;
      }
      if (newIndex > maxIndex) {
        if (newIndex === maxIndex + 1 && includeInputInList) {
          return -1;
        }
        if (disableListWrap || Math.abs(diff) > 1) {
          return maxIndex;
        }
        return 0;
      }
      return newIndex;
    };
    const nextIndex = validOptionIndex(getNextIndex(), direction);
    setHighlightedIndex({
      index: nextIndex,
      reason,
      event
    });
    if (autoComplete && diff !== "reset") {
      if (nextIndex === -1) {
        inputRef.current.value = inputValue;
      } else {
        const option = getOptionLabel(filteredOptions[nextIndex]);
        inputRef.current.value = option;
        const index2 = option.toLowerCase().indexOf(inputValue.toLowerCase());
        if (index2 === 0 && inputValue.length > 0) {
          inputRef.current.setSelectionRange(inputValue.length, option.length);
        }
      }
    }
  });
  const checkHighlightedOptionExists = () => {
    const isSameValue = (value1, value2) => {
      const label1 = value1 ? getOptionLabel(value1) : "";
      const label2 = value2 ? getOptionLabel(value2) : "";
      return label1 === label2;
    };
    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && previousProps.inputValue === inputValue && (multiple ? value.length === previousProps.value.length && previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : isSameValue(previousProps.value, value))) {
      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];
      if (previousHighlightedOption) {
        const previousHighlightedOptionExists = filteredOptions.some((option) => {
          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);
        });
        if (previousHighlightedOptionExists) {
          return true;
        }
      }
    }
    return false;
  };
  const syncHighlightedIndex = React126.useCallback(() => {
    if (!popupOpen) {
      return;
    }
    if (checkHighlightedOptionExists()) {
      return;
    }
    const valueItem = multiple ? value[0] : value;
    if (filteredOptions.length === 0 || valueItem == null) {
      changeHighlightedIndex({
        diff: "reset"
      });
      return;
    }
    if (!listboxRef.current) {
      return;
    }
    if (valueItem != null) {
      const currentOption = filteredOptions[highlightedIndexRef.current];
      if (multiple && currentOption && findIndex(value, (val) => isOptionEqualToValue(currentOption, val)) !== -1) {
        return;
      }
      const itemIndex = findIndex(filteredOptions, (optionItem) => isOptionEqualToValue(optionItem, valueItem));
      if (itemIndex === -1) {
        changeHighlightedIndex({
          diff: "reset"
        });
      } else {
        setHighlightedIndex({
          index: itemIndex
        });
      }
      return;
    }
    if (highlightedIndexRef.current >= filteredOptions.length - 1) {
      setHighlightedIndex({
        index: filteredOptions.length - 1
      });
      return;
    }
    setHighlightedIndex({
      index: highlightedIndexRef.current
    });
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    filteredOptions.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    multiple ? false : value,
    filterSelectedOptions,
    changeHighlightedIndex,
    setHighlightedIndex,
    popupOpen,
    inputValue,
    multiple
  ]);
  const handleListboxRef = useEventCallback_default((node2) => {
    setRef(listboxRef, node2);
    if (!node2) {
      return;
    }
    syncHighlightedIndex();
  });
  if (true) {
    React126.useEffect(() => {
      if (!inputRef.current || inputRef.current.nodeName !== "INPUT") {
        if (inputRef.current && inputRef.current.nodeName === "TEXTAREA") {
          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join("\n"));
        } else {
          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, "", componentName === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join("\n"));
        }
      }
    }, [componentName]);
  }
  React126.useEffect(() => {
    syncHighlightedIndex();
  }, [syncHighlightedIndex]);
  const handleOpen = (event) => {
    if (open) {
      return;
    }
    setOpenState(true);
    setInputPristine(true);
    if (onOpen) {
      onOpen(event);
    }
  };
  const handleClose = (event, reason) => {
    if (!open) {
      return;
    }
    setOpenState(false);
    if (onClose) {
      onClose(event, reason);
    }
  };
  const handleValue = (event, newValue, reason, details) => {
    if (multiple) {
      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {
        return;
      }
    } else if (value === newValue) {
      return;
    }
    if (onChange) {
      onChange(event, newValue, reason, details);
    }
    setValueState(newValue);
  };
  const isTouch = React126.useRef(false);
  const selectNewValue = (event, option, reasonProp = "selectOption", origin = "options") => {
    let reason = reasonProp;
    let newValue = option;
    if (multiple) {
      newValue = Array.isArray(value) ? value.slice() : [];
      if (true) {
        const matches2 = newValue.filter((val) => isOptionEqualToValue(option, val));
        if (matches2.length > 1) {
          console.error([`MUI: The \`isOptionEqualToValue\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches2.length} matches.`].join("\n"));
        }
      }
      const itemIndex = findIndex(newValue, (valueItem) => isOptionEqualToValue(option, valueItem));
      if (itemIndex === -1) {
        newValue.push(option);
      } else if (origin !== "freeSolo") {
        newValue.splice(itemIndex, 1);
        reason = "removeOption";
      }
    }
    resetInputValue(event, newValue);
    handleValue(event, newValue, reason, {
      option
    });
    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {
      handleClose(event, reason);
    }
    if (blurOnSelect === true || blurOnSelect === "touch" && isTouch.current || blurOnSelect === "mouse" && !isTouch.current) {
      inputRef.current.blur();
    }
  };
  function validTagIndex(index2, direction) {
    if (index2 === -1) {
      return -1;
    }
    let nextFocus = index2;
    while (true) {
      if (direction === "next" && nextFocus === value.length || direction === "previous" && nextFocus === -1) {
        return -1;
      }
      const option = anchorEl.querySelector(`[data-tag-index="${nextFocus}"]`);
      if (!option || !option.hasAttribute("tabindex") || option.disabled || option.getAttribute("aria-disabled") === "true") {
        nextFocus += direction === "next" ? 1 : -1;
      } else {
        return nextFocus;
      }
    }
  }
  const handleFocusTag = (event, direction) => {
    if (!multiple) {
      return;
    }
    if (inputValue === "") {
      handleClose(event, "toggleInput");
    }
    let nextTag = focusedTag;
    if (focusedTag === -1) {
      if (inputValue === "" && direction === "previous") {
        nextTag = value.length - 1;
      }
    } else {
      nextTag += direction === "next" ? 1 : -1;
      if (nextTag < 0) {
        nextTag = 0;
      }
      if (nextTag === value.length) {
        nextTag = -1;
      }
    }
    nextTag = validTagIndex(nextTag, direction);
    setFocusedTag(nextTag);
    focusTag(nextTag);
  };
  const handleClear = (event) => {
    ignoreFocus.current = true;
    setInputValueState("");
    if (onInputChange) {
      onInputChange(event, "", "clear");
    }
    handleValue(event, multiple ? [] : null, "clear");
  };
  const handleKeyDown3 = (other) => (event) => {
    if (other.onKeyDown) {
      other.onKeyDown(event);
    }
    if (event.defaultMuiPrevented) {
      return;
    }
    if (focusedTag !== -1 && ["ArrowLeft", "ArrowRight"].indexOf(event.key) === -1) {
      setFocusedTag(-1);
      focusTag(-1);
    }
    if (event.which !== 229) {
      switch (event.key) {
        case "Home":
          if (popupOpen && handleHomeEndKeys) {
            event.preventDefault();
            changeHighlightedIndex({
              diff: "start",
              direction: "next",
              reason: "keyboard",
              event
            });
          }
          break;
        case "End":
          if (popupOpen && handleHomeEndKeys) {
            event.preventDefault();
            changeHighlightedIndex({
              diff: "end",
              direction: "previous",
              reason: "keyboard",
              event
            });
          }
          break;
        case "PageUp":
          event.preventDefault();
          changeHighlightedIndex({
            diff: -pageSize,
            direction: "previous",
            reason: "keyboard",
            event
          });
          handleOpen(event);
          break;
        case "PageDown":
          event.preventDefault();
          changeHighlightedIndex({
            diff: pageSize,
            direction: "next",
            reason: "keyboard",
            event
          });
          handleOpen(event);
          break;
        case "ArrowDown":
          event.preventDefault();
          changeHighlightedIndex({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event
          });
          handleOpen(event);
          break;
        case "ArrowUp":
          event.preventDefault();
          changeHighlightedIndex({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event
          });
          handleOpen(event);
          break;
        case "ArrowLeft":
          handleFocusTag(event, "previous");
          break;
        case "ArrowRight":
          handleFocusTag(event, "next");
          break;
        case "Enter":
          if (highlightedIndexRef.current !== -1 && popupOpen) {
            const option = filteredOptions[highlightedIndexRef.current];
            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;
            event.preventDefault();
            if (disabled) {
              return;
            }
            selectNewValue(event, option, "selectOption");
            if (autoComplete) {
              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);
            }
          } else if (freeSolo && inputValue !== "" && inputValueIsSelectedValue === false) {
            if (multiple) {
              event.preventDefault();
            }
            selectNewValue(event, inputValue, "createOption", "freeSolo");
          }
          break;
        case "Escape":
          if (popupOpen) {
            event.preventDefault();
            event.stopPropagation();
            handleClose(event, "escape");
          } else if (clearOnEscape && (inputValue !== "" || multiple && value.length > 0)) {
            event.preventDefault();
            event.stopPropagation();
            handleClear(event);
          }
          break;
        case "Backspace":
          if (multiple && !readOnly && inputValue === "" && value.length > 0) {
            const index2 = focusedTag === -1 ? value.length - 1 : focusedTag;
            const newValue = value.slice();
            newValue.splice(index2, 1);
            handleValue(event, newValue, "removeOption", {
              option: value[index2]
            });
          }
          break;
        case "Delete":
          if (multiple && !readOnly && inputValue === "" && value.length > 0 && focusedTag !== -1) {
            const index2 = focusedTag;
            const newValue = value.slice();
            newValue.splice(index2, 1);
            handleValue(event, newValue, "removeOption", {
              option: value[index2]
            });
          }
          break;
        default:
      }
    }
  };
  const handleFocus = (event) => {
    setFocused(true);
    if (openOnFocus && !ignoreFocus.current) {
      handleOpen(event);
    }
  };
  const handleBlur2 = (event) => {
    if (unstable_isActiveElementInListbox(listboxRef)) {
      inputRef.current.focus();
      return;
    }
    setFocused(false);
    firstFocus.current = true;
    ignoreFocus.current = false;
    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {
      selectNewValue(event, filteredOptions[highlightedIndexRef.current], "blur");
    } else if (autoSelect && freeSolo && inputValue !== "") {
      selectNewValue(event, inputValue, "blur", "freeSolo");
    } else if (clearOnBlur) {
      resetInputValue(event, value);
    }
    handleClose(event, "blur");
  };
  const handleInputChange = (event) => {
    const newValue = event.target.value;
    if (inputValue !== newValue) {
      setInputValueState(newValue);
      setInputPristine(false);
      if (onInputChange) {
        onInputChange(event, newValue, "input");
      }
    }
    if (newValue === "") {
      if (!disableClearable && !multiple) {
        handleValue(event, null, "clear");
      }
    } else {
      handleOpen(event);
    }
  };
  const handleOptionMouseMove = (event) => {
    const index2 = Number(event.currentTarget.getAttribute("data-option-index"));
    if (highlightedIndexRef.current !== index2) {
      setHighlightedIndex({
        event,
        index: index2,
        reason: "mouse"
      });
    }
  };
  const handleOptionTouchStart = (event) => {
    setHighlightedIndex({
      event,
      index: Number(event.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    });
    isTouch.current = true;
  };
  const handleOptionClick = (event) => {
    const index2 = Number(event.currentTarget.getAttribute("data-option-index"));
    selectNewValue(event, filteredOptions[index2], "selectOption");
    isTouch.current = false;
  };
  const handleTagDelete = (index2) => (event) => {
    const newValue = value.slice();
    newValue.splice(index2, 1);
    handleValue(event, newValue, "removeOption", {
      option: value[index2]
    });
  };
  const handlePopupIndicator = (event) => {
    if (open) {
      handleClose(event, "toggleInput");
    } else {
      handleOpen(event);
    }
  };
  const handleMouseDown = (event) => {
    if (!event.currentTarget.contains(event.target)) {
      return;
    }
    if (event.target.getAttribute("id") !== id) {
      event.preventDefault();
    }
  };
  const handleClick2 = (event) => {
    if (!event.currentTarget.contains(event.target)) {
      return;
    }
    inputRef.current.focus();
    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {
      inputRef.current.select();
    }
    firstFocus.current = false;
  };
  const handleInputMouseDown = (event) => {
    if (!disabledProp && (inputValue === "" || !open)) {
      handlePopupIndicator(event);
    }
  };
  let dirty = freeSolo && inputValue.length > 0;
  dirty = dirty || (multiple ? value.length > 0 : value !== null);
  let groupedOptions = filteredOptions;
  if (groupBy) {
    const indexBy = /* @__PURE__ */ new Map();
    let warn = false;
    groupedOptions = filteredOptions.reduce((acc, option, index2) => {
      const group = groupBy(option);
      if (acc.length > 0 && acc[acc.length - 1].group === group) {
        acc[acc.length - 1].options.push(option);
      } else {
        if (true) {
          if (indexBy.get(group) && !warn) {
            console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${componentName} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`.");
            warn = true;
          }
          indexBy.set(group, true);
        }
        acc.push({
          key: index2,
          index: index2,
          group,
          options: [option]
        });
      }
      return acc;
    }, []);
  }
  if (disabledProp && focused) {
    handleBlur2();
  }
  return {
    getRootProps: (other = {}) => _extends({
      "aria-owns": listboxAvailable ? `${id}-listbox` : null
    }, other, {
      onKeyDown: handleKeyDown3(other),
      onMouseDown: handleMouseDown,
      onClick: handleClick2
    }),
    getInputLabelProps: () => ({
      id: `${id}-label`,
      htmlFor: id
    }),
    getInputProps: () => ({
      id,
      value: inputValue,
      onBlur: handleBlur2,
      onFocus: handleFocus,
      onChange: handleInputChange,
      onMouseDown: handleInputMouseDown,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": popupOpen ? "" : null,
      "aria-autocomplete": autoComplete ? "both" : "list",
      "aria-controls": listboxAvailable ? `${id}-listbox` : void 0,
      "aria-expanded": listboxAvailable,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: inputRef,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: disabledProp
    }),
    getClearProps: () => ({
      tabIndex: -1,
      onClick: handleClear
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      onClick: handlePopupIndicator
    }),
    getTagProps: ({
      index: index2
    }) => _extends({
      key: index2,
      "data-tag-index": index2,
      tabIndex: -1
    }, !readOnly && {
      onDelete: handleTagDelete(index2)
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${id}-listbox`,
      "aria-labelledby": `${id}-label`,
      ref: handleListboxRef,
      onMouseDown: (event) => {
        event.preventDefault();
      }
    }),
    getOptionProps: ({
      index: index2,
      option
    }) => {
      const selected = (multiple ? value : [value]).some((value2) => value2 != null && isOptionEqualToValue(option, value2));
      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;
      return {
        key: getOptionLabel(option),
        tabIndex: -1,
        role: "option",
        id: `${id}-option-${index2}`,
        onMouseMove: handleOptionMouseMove,
        onClick: handleOptionClick,
        onTouchStart: handleOptionTouchStart,
        "data-option-index": index2,
        "aria-disabled": disabled,
        "aria-selected": selected
      };
    },
    id,
    inputValue,
    value,
    dirty,
    expanded: popupOpen && anchorEl,
    popupOpen,
    focused: focused || focusedTag !== -1,
    anchorEl,
    setAnchorEl,
    focusedTag,
    groupedOptions
  };
}

// node_modules/@mui/material/Autocomplete/Autocomplete.js
init_esm2();

// node_modules/@mui/material/Popper/Popper.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm2();
init_esm();
var import_prop_types69 = __toESM(require_prop_types());
var React127 = __toESM(require_react());
var import_jsx_runtime86 = __toESM(require_jsx_runtime());
var _excluded59 = ["anchorEl", "component", "components", "componentsProps", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "transition", "slots", "slotProps"];
var PopperRoot = styled_default2(Popper, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({});
var Popper3 = React127.forwardRef(function Popper4(inProps, ref) {
  var _slots$root;
  const theme = useThemeWithoutDefault_default();
  const props = useThemeProps2({
    props: inProps,
    name: "MuiPopper"
  });
  const {
    anchorEl,
    component,
    components,
    componentsProps,
    container,
    disablePortal,
    keepMounted,
    modifiers,
    open,
    placement,
    popperOptions,
    popperRef,
    transition,
    slots,
    slotProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded59);
  const RootComponent = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components == null ? void 0 : components.Root;
  const otherProps = _extends({
    anchorEl,
    container,
    disablePortal,
    keepMounted,
    modifiers,
    open,
    placement,
    popperOptions,
    popperRef,
    transition
  }, other);
  return (0, import_jsx_runtime86.jsx)(PopperRoot, _extends({
    as: component,
    direction: theme == null ? void 0 : theme.direction,
    slots: {
      root: RootComponent
    },
    slotProps: slotProps != null ? slotProps : componentsProps
  }, otherProps, {
    ref
  }));
});
true ? Popper3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: import_prop_types69.default.oneOfType([HTMLElementType, import_prop_types69.default.object, import_prop_types69.default.func]),
  /**
   * Popper render function or node.
   */
  children: import_prop_types69.default.oneOfType([import_prop_types69.default.node, import_prop_types69.default.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types69.default.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  components: import_prop_types69.default.shape({
    Root: import_prop_types69.default.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  componentsProps: import_prop_types69.default.shape({
    root: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: import_prop_types69.default.oneOfType([HTMLElementType, import_prop_types69.default.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: import_prop_types69.default.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: import_prop_types69.default.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: import_prop_types69.default.arrayOf(import_prop_types69.default.shape({
    data: import_prop_types69.default.object,
    effect: import_prop_types69.default.func,
    enabled: import_prop_types69.default.bool,
    fn: import_prop_types69.default.func,
    name: import_prop_types69.default.any,
    options: import_prop_types69.default.object,
    phase: import_prop_types69.default.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: import_prop_types69.default.arrayOf(import_prop_types69.default.string),
    requiresIfExists: import_prop_types69.default.arrayOf(import_prop_types69.default.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types69.default.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: import_prop_types69.default.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: import_prop_types69.default.shape({
    modifiers: import_prop_types69.default.array,
    onFirstUpdate: import_prop_types69.default.func,
    placement: import_prop_types69.default.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: import_prop_types69.default.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: refType_default,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: import_prop_types69.default.shape({
    root: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types69.default.shape({
    root: import_prop_types69.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types69.default.oneOfType([import_prop_types69.default.arrayOf(import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object, import_prop_types69.default.bool])), import_prop_types69.default.func, import_prop_types69.default.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: import_prop_types69.default.bool
} : void 0;
var Popper_default = Popper3;

// node_modules/@mui/material/ListSubheader/ListSubheader.js
init_objectWithoutPropertiesLoose();
init_extends();
var React128 = __toESM(require_react());
var import_prop_types70 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/ListSubheader/listSubheaderClasses.js
init_esm();
init_generateUtilityClass3();
function getListSubheaderUtilityClass(slot) {
  return generateUtilityClass("MuiListSubheader", slot);
}
var listSubheaderClasses = generateUtilityClasses("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]);

// node_modules/@mui/material/ListSubheader/ListSubheader.js
var import_jsx_runtime87 = __toESM(require_jsx_runtime());
var _excluded60 = ["className", "color", "component", "disableGutters", "disableSticky", "inset"];
var useUtilityClasses37 = (ownerState) => {
  const {
    classes: classes2,
    color: color2,
    disableGutters,
    inset,
    disableSticky
  } = ownerState;
  const slots = {
    root: ["root", color2 !== "default" && `color${capitalize_default(color2)}`, !disableGutters && "gutters", inset && "inset", !disableSticky && "sticky"]
  };
  return composeClasses(slots, getListSubheaderUtilityClass, classes2);
};
var ListSubheaderRoot = styled_default2("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.color !== "default" && styles7[`color${capitalize_default(ownerState.color)}`], !ownerState.disableGutters && styles7.gutters, ownerState.inset && styles7.inset, !ownerState.disableSticky && styles7.sticky];
  }
})(({
  theme,
  ownerState
}) => _extends({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (theme.vars || theme).palette.text.secondary,
  fontFamily: theme.typography.fontFamily,
  fontWeight: theme.typography.fontWeightMedium,
  fontSize: theme.typography.pxToRem(14)
}, ownerState.color === "primary" && {
  color: (theme.vars || theme).palette.primary.main
}, ownerState.color === "inherit" && {
  color: "inherit"
}, !ownerState.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, ownerState.inset && {
  paddingLeft: 72
}, !ownerState.disableSticky && {
  position: "sticky",
  top: 0,
  zIndex: 1,
  backgroundColor: (theme.vars || theme).palette.background.paper
}));
var ListSubheader = React128.forwardRef(function ListSubheader2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListSubheader"
  });
  const {
    className,
    color: color2 = "default",
    component = "li",
    disableGutters = false,
    disableSticky = false,
    inset = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded60);
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    disableGutters,
    disableSticky,
    inset
  });
  const classes2 = useUtilityClasses37(ownerState);
  return (0, import_jsx_runtime87.jsx)(ListSubheaderRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other));
});
ListSubheader.muiSkipListHighlight = true;
true ? ListSubheader.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types70.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types70.default.object,
  /**
   * @ignore
   */
  className: import_prop_types70.default.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: import_prop_types70.default.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types70.default.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: import_prop_types70.default.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: import_prop_types70.default.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: import_prop_types70.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types70.default.oneOfType([import_prop_types70.default.arrayOf(import_prop_types70.default.oneOfType([import_prop_types70.default.func, import_prop_types70.default.object, import_prop_types70.default.bool])), import_prop_types70.default.func, import_prop_types70.default.object])
} : void 0;
var ListSubheader_default = ListSubheader;

// node_modules/@mui/material/Chip/Chip.js
init_objectWithoutPropertiesLoose();
init_extends();
var React130 = __toESM(require_react());
var import_prop_types71 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();

// node_modules/@mui/material/internal/svg-icons/Cancel.js
var React129 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime88 = __toESM(require_jsx_runtime());
var Cancel_default = createSvgIcon((0, import_jsx_runtime88.jsx)("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");

// node_modules/@mui/material/Chip/Chip.js
init_useForkRef3();
init_unsupportedProp2();
init_capitalize3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Chip/chipClasses.js
init_esm();
init_generateUtilityClass3();
function getChipUtilityClass(slot) {
  return generateUtilityClass("MuiChip", slot);
}
var chipClasses = generateUtilityClasses("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]);
var chipClasses_default = chipClasses;

// node_modules/@mui/material/Chip/Chip.js
var import_jsx_runtime89 = __toESM(require_jsx_runtime());
var import_jsx_runtime90 = __toESM(require_jsx_runtime());
var _excluded61 = ["avatar", "className", "clickable", "color", "component", "deleteIcon", "disabled", "icon", "label", "onClick", "onDelete", "onKeyDown", "onKeyUp", "size", "variant", "tabIndex", "skipFocusWhenDisabled"];
var useUtilityClasses38 = (ownerState) => {
  const {
    classes: classes2,
    disabled,
    size: size2,
    color: color2,
    iconColor,
    onDelete,
    clickable,
    variant
  } = ownerState;
  const slots = {
    root: ["root", variant, disabled && "disabled", `size${capitalize_default(size2)}`, `color${capitalize_default(color2)}`, clickable && "clickable", clickable && `clickableColor${capitalize_default(color2)}`, onDelete && "deletable", onDelete && `deletableColor${capitalize_default(color2)}`, `${variant}${capitalize_default(color2)}`],
    label: ["label", `label${capitalize_default(size2)}`],
    avatar: ["avatar", `avatar${capitalize_default(size2)}`, `avatarColor${capitalize_default(color2)}`],
    icon: ["icon", `icon${capitalize_default(size2)}`, `iconColor${capitalize_default(iconColor)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${capitalize_default(size2)}`, `deleteIconColor${capitalize_default(color2)}`, `deleteIcon${capitalize_default(variant)}Color${capitalize_default(color2)}`]
  };
  return composeClasses(slots, getChipUtilityClass, classes2);
};
var ChipRoot = styled_default2("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    const {
      color: color2,
      iconColor,
      clickable,
      onDelete,
      size: size2,
      variant
    } = ownerState;
    return [{
      [`& .${chipClasses_default.avatar}`]: styles7.avatar
    }, {
      [`& .${chipClasses_default.avatar}`]: styles7[`avatar${capitalize_default(size2)}`]
    }, {
      [`& .${chipClasses_default.avatar}`]: styles7[`avatarColor${capitalize_default(color2)}`]
    }, {
      [`& .${chipClasses_default.icon}`]: styles7.icon
    }, {
      [`& .${chipClasses_default.icon}`]: styles7[`icon${capitalize_default(size2)}`]
    }, {
      [`& .${chipClasses_default.icon}`]: styles7[`iconColor${capitalize_default(iconColor)}`]
    }, {
      [`& .${chipClasses_default.deleteIcon}`]: styles7.deleteIcon
    }, {
      [`& .${chipClasses_default.deleteIcon}`]: styles7[`deleteIcon${capitalize_default(size2)}`]
    }, {
      [`& .${chipClasses_default.deleteIcon}`]: styles7[`deleteIconColor${capitalize_default(color2)}`]
    }, {
      [`& .${chipClasses_default.deleteIcon}`]: styles7[`deleteIcon${capitalize_default(variant)}Color${capitalize_default(color2)}`]
    }, styles7.root, styles7[`size${capitalize_default(size2)}`], styles7[`color${capitalize_default(color2)}`], clickable && styles7.clickable, clickable && color2 !== "default" && styles7[`clickableColor${capitalize_default(color2)})`], onDelete && styles7.deletable, onDelete && color2 !== "default" && styles7[`deletableColor${capitalize_default(color2)}`], styles7[variant], styles7[`${variant}${capitalize_default(color2)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  const textColor = theme.palette.mode === "light" ? theme.palette.grey[700] : theme.palette.grey[300];
  return _extends({
    maxWidth: "100%",
    fontFamily: theme.typography.fontFamily,
    fontSize: theme.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (theme.vars || theme).palette.text.primary,
    backgroundColor: (theme.vars || theme).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: theme.transitions.create(["background-color", "box-shadow"]),
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${chipClasses_default.disabled}`]: {
      opacity: (theme.vars || theme).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${chipClasses_default.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: theme.vars ? theme.vars.palette.Chip.defaultAvatarColor : textColor,
      fontSize: theme.typography.pxToRem(12)
    },
    [`& .${chipClasses_default.avatarColorPrimary}`]: {
      color: (theme.vars || theme).palette.primary.contrastText,
      backgroundColor: (theme.vars || theme).palette.primary.dark
    },
    [`& .${chipClasses_default.avatarColorSecondary}`]: {
      color: (theme.vars || theme).palette.secondary.contrastText,
      backgroundColor: (theme.vars || theme).palette.secondary.dark
    },
    [`& .${chipClasses_default.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: theme.typography.pxToRem(10)
    },
    [`& .${chipClasses_default.icon}`]: _extends({
      marginLeft: 5,
      marginRight: -6
    }, ownerState.size === "small" && {
      fontSize: 18,
      marginLeft: 4,
      marginRight: -4
    }, ownerState.iconColor === ownerState.color && _extends({
      color: theme.vars ? theme.vars.palette.Chip.defaultIconColor : textColor
    }, ownerState.color !== "default" && {
      color: "inherit"
    })),
    [`& .${chipClasses_default.deleteIcon}`]: _extends({
      WebkitTapHighlightColor: "transparent",
      color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.26)` : alpha(theme.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(theme.palette.text.primary, 0.4)
      }
    }, ownerState.size === "small" && {
      fontSize: 16,
      marginRight: 4,
      marginLeft: -4
    }, ownerState.color !== "default" && {
      color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].contrastTextChannel} / 0.7)` : alpha(theme.palette[ownerState.color].contrastText, 0.7),
      "&:hover, &:active": {
        color: (theme.vars || theme).palette[ownerState.color].contrastText
      }
    })
  }, ownerState.size === "small" && {
    height: 24
  }, ownerState.color !== "default" && {
    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,
    color: (theme.vars || theme).palette[ownerState.color].contrastText
  }, ownerState.onDelete && {
    [`&.${chipClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    }
  }, ownerState.onDelete && ownerState.color !== "default" && {
    [`&.${chipClasses_default.focusVisible}`]: {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark
    }
  });
}, ({
  theme,
  ownerState
}) => _extends({}, ownerState.clickable && {
  userSelect: "none",
  WebkitTapHighlightColor: "transparent",
  cursor: "pointer",
  "&:hover": {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)
  },
  [`&.${chipClasses_default.focusVisible}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
  },
  "&:active": {
    boxShadow: (theme.vars || theme).shadows[1]
  }
}, ownerState.clickable && ownerState.color !== "default" && {
  [`&:hover, &.${chipClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark
  }
}), ({
  theme,
  ownerState
}) => _extends({}, ownerState.variant === "outlined" && {
  backgroundColor: "transparent",
  border: theme.vars ? `1px solid ${theme.vars.palette.Chip.defaultBorder}` : `1px solid ${theme.palette.mode === "light" ? theme.palette.grey[400] : theme.palette.grey[700]}`,
  [`&.${chipClasses_default.clickable}:hover`]: {
    backgroundColor: (theme.vars || theme).palette.action.hover
  },
  [`&.${chipClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`& .${chipClasses_default.avatar}`]: {
    marginLeft: 4
  },
  [`& .${chipClasses_default.avatarSmall}`]: {
    marginLeft: 2
  },
  [`& .${chipClasses_default.icon}`]: {
    marginLeft: 4
  },
  [`& .${chipClasses_default.iconSmall}`]: {
    marginLeft: 2
  },
  [`& .${chipClasses_default.deleteIcon}`]: {
    marginRight: 5
  },
  [`& .${chipClasses_default.deleteIconSmall}`]: {
    marginRight: 3
  }
}, ownerState.variant === "outlined" && ownerState.color !== "default" && {
  color: (theme.vars || theme).palette[ownerState.color].main,
  border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7)}`,
  [`&.${chipClasses_default.clickable}:hover`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)
  },
  [`&.${chipClasses_default.focusVisible}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.focusOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)
  },
  [`& .${chipClasses_default.deleteIcon}`]: {
    color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7),
    "&:hover, &:active": {
      color: (theme.vars || theme).palette[ownerState.color].main
    }
  }
}));
var ChipLabel = styled_default2("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    const {
      size: size2
    } = ownerState;
    return [styles7.label, styles7[`label${capitalize_default(size2)}`]];
  }
})(({
  ownerState
}) => _extends({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap"
}, ownerState.size === "small" && {
  paddingLeft: 8,
  paddingRight: 8
}));
function isDeleteKeyboardEvent(keyboardEvent) {
  return keyboardEvent.key === "Backspace" || keyboardEvent.key === "Delete";
}
var Chip = React130.forwardRef(function Chip2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiChip"
  });
  const {
    avatar: avatarProp,
    className,
    clickable: clickableProp,
    color: color2 = "default",
    component: ComponentProp,
    deleteIcon: deleteIconProp,
    disabled = false,
    icon: iconProp,
    label,
    onClick,
    onDelete,
    onKeyDown,
    onKeyUp,
    size: size2 = "medium",
    variant = "filled",
    tabIndex,
    skipFocusWhenDisabled = false
    // TODO v6: Rename to `focusableWhenDisabled`.
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded61);
  const chipRef = React130.useRef(null);
  const handleRef = useForkRef_default(chipRef, ref);
  const handleDeleteIconClick = (event) => {
    event.stopPropagation();
    if (onDelete) {
      onDelete(event);
    }
  };
  const handleKeyDown3 = (event) => {
    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {
      event.preventDefault();
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
  };
  const handleKeyUp = (event) => {
    if (event.currentTarget === event.target) {
      if (onDelete && isDeleteKeyboardEvent(event)) {
        onDelete(event);
      } else if (event.key === "Escape" && chipRef.current) {
        chipRef.current.blur();
      }
    }
    if (onKeyUp) {
      onKeyUp(event);
    }
  };
  const clickable = clickableProp !== false && onClick ? true : clickableProp;
  const component = clickable || onDelete ? ButtonBase_default : ComponentProp || "div";
  const ownerState = _extends({}, props, {
    component,
    disabled,
    size: size2,
    color: color2,
    iconColor: React130.isValidElement(iconProp) ? iconProp.props.color || color2 : color2,
    onDelete: !!onDelete,
    clickable,
    variant
  });
  const classes2 = useUtilityClasses38(ownerState);
  const moreProps = component === ButtonBase_default ? _extends({
    component: ComponentProp || "div",
    focusVisibleClassName: classes2.focusVisible
  }, onDelete && {
    disableRipple: true
  }) : {};
  let deleteIcon = null;
  if (onDelete) {
    deleteIcon = deleteIconProp && React130.isValidElement(deleteIconProp) ? React130.cloneElement(deleteIconProp, {
      className: clsx_default2(deleteIconProp.props.className, classes2.deleteIcon),
      onClick: handleDeleteIconClick
    }) : (0, import_jsx_runtime89.jsx)(Cancel_default, {
      className: clsx_default2(classes2.deleteIcon),
      onClick: handleDeleteIconClick
    });
  }
  let avatar = null;
  if (avatarProp && React130.isValidElement(avatarProp)) {
    avatar = React130.cloneElement(avatarProp, {
      className: clsx_default2(classes2.avatar, avatarProp.props.className)
    });
  }
  let icon = null;
  if (iconProp && React130.isValidElement(iconProp)) {
    icon = React130.cloneElement(iconProp, {
      className: clsx_default2(classes2.icon, iconProp.props.className)
    });
  }
  if (true) {
    if (avatar && icon) {
      console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one.");
    }
  }
  return (0, import_jsx_runtime90.jsxs)(ChipRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, className),
    disabled: clickable && disabled ? true : void 0,
    onClick,
    onKeyDown: handleKeyDown3,
    onKeyUp: handleKeyUp,
    ref: handleRef,
    tabIndex: skipFocusWhenDisabled && disabled ? -1 : tabIndex,
    ownerState
  }, moreProps, other, {
    children: [avatar || icon, (0, import_jsx_runtime89.jsx)(ChipLabel, {
      className: clsx_default2(classes2.label),
      ownerState,
      children: label
    }), deleteIcon]
  }));
});
true ? Chip.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The Avatar element to display.
   */
  avatar: import_prop_types71.default.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: unsupportedProp_default,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types71.default.object,
  /**
   * @ignore
   */
  className: import_prop_types71.default.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: import_prop_types71.default.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'default'
   */
  color: import_prop_types71.default.oneOfType([import_prop_types71.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types71.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types71.default.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: import_prop_types71.default.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types71.default.bool,
  /**
   * Icon element.
   */
  icon: import_prop_types71.default.element,
  /**
   * The content of the component.
   */
  label: import_prop_types71.default.node,
  /**
   * @ignore
   */
  onClick: import_prop_types71.default.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: import_prop_types71.default.func,
  /**
   * @ignore
   */
  onKeyDown: import_prop_types71.default.func,
  /**
   * @ignore
   */
  onKeyUp: import_prop_types71.default.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types71.default.oneOfType([import_prop_types71.default.oneOf(["medium", "small"]), import_prop_types71.default.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: import_prop_types71.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types71.default.oneOfType([import_prop_types71.default.arrayOf(import_prop_types71.default.oneOfType([import_prop_types71.default.func, import_prop_types71.default.object, import_prop_types71.default.bool])), import_prop_types71.default.func, import_prop_types71.default.object]),
  /**
   * @ignore
   */
  tabIndex: import_prop_types71.default.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: import_prop_types71.default.oneOfType([import_prop_types71.default.oneOf(["filled", "outlined"]), import_prop_types71.default.string])
} : void 0;
var Chip_default = Chip;

// node_modules/@mui/material/Input/inputClasses.js
init_extends();
init_esm();
init_generateUtilityClass3();

// node_modules/@mui/material/InputBase/InputBase.js
init_objectWithoutPropertiesLoose();
init_extends();
init_esm();
var React134 = __toESM(require_react());
var import_prop_types73 = __toESM(require_prop_types());
init_clsx2();
init_esm();

// node_modules/@mui/material/FormControl/formControlState.js
function formControlState({
  props,
  states,
  muiFormControl
}) {
  return states.reduce((acc, state) => {
    acc[state] = props[state];
    if (muiFormControl) {
      if (typeof props[state] === "undefined") {
        acc[state] = muiFormControl[state];
      }
    }
    return acc;
  }, {});
}

// node_modules/@mui/material/FormControl/FormControlContext.js
var React131 = __toESM(require_react());
var FormControlContext2 = React131.createContext(void 0);
if (true) {
  FormControlContext2.displayName = "FormControlContext";
}
var FormControlContext_default = FormControlContext2;

// node_modules/@mui/material/FormControl/useFormControl.js
var React132 = __toESM(require_react());
function useFormControl() {
  return React132.useContext(FormControlContext_default);
}

// node_modules/@mui/material/InputBase/InputBase.js
init_styled2();
init_useThemeProps3();
init_capitalize3();
init_useForkRef3();
init_useEnhancedEffect3();

// node_modules/@mui/material/GlobalStyles/GlobalStyles.js
init_extends();
var React133 = __toESM(require_react());
var import_prop_types72 = __toESM(require_prop_types());
init_esm2();
init_defaultTheme();
init_identifier();
var import_jsx_runtime91 = __toESM(require_jsx_runtime());
function GlobalStyles3(props) {
  return (0, import_jsx_runtime91.jsx)(GlobalStyles_default, _extends({}, props, {
    defaultTheme: defaultTheme_default,
    themeId: identifier_default
  }));
}
true ? GlobalStyles3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The styles you want to apply globally.
   */
  styles: import_prop_types72.default.oneOfType([import_prop_types72.default.array, import_prop_types72.default.func, import_prop_types72.default.number, import_prop_types72.default.object, import_prop_types72.default.string, import_prop_types72.default.bool])
} : void 0;
var GlobalStyles_default2 = GlobalStyles3;

// node_modules/@mui/material/InputBase/utils.js
function hasValue2(value) {
  return value != null && !(Array.isArray(value) && value.length === 0);
}
function isFilled(obj, SSR = false) {
  return obj && (hasValue2(obj.value) && obj.value !== "" || SSR && hasValue2(obj.defaultValue) && obj.defaultValue !== "");
}
function isAdornedStart(obj) {
  return obj.startAdornment;
}

// node_modules/@mui/material/InputBase/inputBaseClasses.js
init_esm();
init_generateUtilityClass3();
function getInputBaseUtilityClass(slot) {
  return generateUtilityClass("MuiInputBase", slot);
}
var inputBaseClasses = generateUtilityClasses("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var inputBaseClasses_default = inputBaseClasses;

// node_modules/@mui/material/InputBase/InputBase.js
var import_jsx_runtime92 = __toESM(require_jsx_runtime());
var import_jsx_runtime93 = __toESM(require_jsx_runtime());
var _excluded62 = ["aria-describedby", "autoComplete", "autoFocus", "className", "color", "components", "componentsProps", "defaultValue", "disabled", "disableInjectingGlobalStyles", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "size", "slotProps", "slots", "startAdornment", "type", "value"];
var rootOverridesResolver = (props, styles7) => {
  const {
    ownerState
  } = props;
  return [styles7.root, ownerState.formControl && styles7.formControl, ownerState.startAdornment && styles7.adornedStart, ownerState.endAdornment && styles7.adornedEnd, ownerState.error && styles7.error, ownerState.size === "small" && styles7.sizeSmall, ownerState.multiline && styles7.multiline, ownerState.color && styles7[`color${capitalize_default(ownerState.color)}`], ownerState.fullWidth && styles7.fullWidth, ownerState.hiddenLabel && styles7.hiddenLabel];
};
var inputOverridesResolver = (props, styles7) => {
  const {
    ownerState
  } = props;
  return [styles7.input, ownerState.size === "small" && styles7.inputSizeSmall, ownerState.multiline && styles7.inputMultiline, ownerState.type === "search" && styles7.inputTypeSearch, ownerState.startAdornment && styles7.inputAdornedStart, ownerState.endAdornment && styles7.inputAdornedEnd, ownerState.hiddenLabel && styles7.inputHiddenLabel];
};
var useUtilityClasses39 = (ownerState) => {
  const {
    classes: classes2,
    color: color2,
    disabled,
    error,
    endAdornment,
    focused,
    formControl,
    fullWidth,
    hiddenLabel,
    multiline,
    readOnly,
    size: size2,
    startAdornment,
    type
  } = ownerState;
  const slots = {
    root: ["root", `color${capitalize_default(color2)}`, disabled && "disabled", error && "error", fullWidth && "fullWidth", focused && "focused", formControl && "formControl", size2 === "small" && "sizeSmall", multiline && "multiline", startAdornment && "adornedStart", endAdornment && "adornedEnd", hiddenLabel && "hiddenLabel", readOnly && "readOnly"],
    input: ["input", disabled && "disabled", type === "search" && "inputTypeSearch", multiline && "inputMultiline", size2 === "small" && "inputSizeSmall", hiddenLabel && "inputHiddenLabel", startAdornment && "inputAdornedStart", endAdornment && "inputAdornedEnd", readOnly && "readOnly"]
  };
  return composeClasses(slots, getInputBaseUtilityClass, classes2);
};
var InputBaseRoot = styled_default2("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: rootOverridesResolver
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.body1, {
  color: (theme.vars || theme).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${inputBaseClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.text.disabled,
    cursor: "default"
  }
}, ownerState.multiline && _extends({
  padding: "4px 0 5px"
}, ownerState.size === "small" && {
  paddingTop: 1
}), ownerState.fullWidth && {
  width: "100%"
}));
var InputBaseComponent = styled_default2("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: inputOverridesResolver
})(({
  theme,
  ownerState
}) => {
  const light2 = theme.palette.mode === "light";
  const placeholder = _extends({
    color: "currentColor"
  }, theme.vars ? {
    opacity: theme.vars.opacity.inputPlaceholder
  } : {
    opacity: light2 ? 0.42 : 0.5
  }, {
    transition: theme.transitions.create("opacity", {
      duration: theme.transitions.duration.shorter
    })
  });
  const placeholderHidden = {
    opacity: "0 !important"
  };
  const placeholderVisible = theme.vars ? {
    opacity: theme.vars.opacity.inputPlaceholder
  } : {
    opacity: light2 ? 0.42 : 0.5
  };
  return _extends({
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    // Fix IE11 width issue
    animationName: "mui-auto-fill-cancel",
    animationDuration: "10ms",
    "&::-webkit-input-placeholder": placeholder,
    "&::-moz-placeholder": placeholder,
    // Firefox 19+
    "&:-ms-input-placeholder": placeholder,
    // IE11
    "&::-ms-input-placeholder": placeholder,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${inputBaseClasses_default.formControl} &`]: {
      "&::-webkit-input-placeholder": placeholderHidden,
      "&::-moz-placeholder": placeholderHidden,
      // Firefox 19+
      "&:-ms-input-placeholder": placeholderHidden,
      // IE11
      "&::-ms-input-placeholder": placeholderHidden,
      // Edge
      "&:focus::-webkit-input-placeholder": placeholderVisible,
      "&:focus::-moz-placeholder": placeholderVisible,
      // Firefox 19+
      "&:focus:-ms-input-placeholder": placeholderVisible,
      // IE11
      "&:focus::-ms-input-placeholder": placeholderVisible
      // Edge
    },
    [`&.${inputBaseClasses_default.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (theme.vars || theme).palette.text.disabled
      // Fix opacity Safari bug
    },
    "&:-webkit-autofill": {
      animationDuration: "5000s",
      animationName: "mui-auto-fill"
    }
  }, ownerState.size === "small" && {
    paddingTop: 1
  }, ownerState.multiline && {
    height: "auto",
    resize: "none",
    padding: 0,
    paddingTop: 0
  }, ownerState.type === "search" && {
    // Improve type search style.
    MozAppearance: "textfield"
  });
});
var inputGlobalStyles = (0, import_jsx_runtime92.jsx)(GlobalStyles_default2, {
  styles: {
    "@keyframes mui-auto-fill": {
      from: {
        display: "block"
      }
    },
    "@keyframes mui-auto-fill-cancel": {
      from: {
        display: "block"
      }
    }
  }
});
var InputBase = React134.forwardRef(function InputBase2(inProps, ref) {
  var _slotProps$input;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiInputBase"
  });
  const {
    "aria-describedby": ariaDescribedby,
    autoComplete,
    autoFocus,
    className,
    components = {},
    componentsProps = {},
    defaultValue,
    disabled,
    disableInjectingGlobalStyles,
    endAdornment,
    fullWidth = false,
    id,
    inputComponent = "input",
    inputProps: inputPropsProp = {},
    inputRef: inputRefProp,
    maxRows,
    minRows,
    multiline = false,
    name,
    onBlur,
    onChange,
    onClick,
    onFocus,
    onKeyDown,
    onKeyUp,
    placeholder,
    readOnly,
    renderSuffix,
    rows,
    slotProps = {},
    slots = {},
    startAdornment,
    type = "text",
    value: valueProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded62);
  const value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;
  const {
    current: isControlled
  } = React134.useRef(value != null);
  const inputRef = React134.useRef();
  const handleInputRefWarning = React134.useCallback((instance) => {
    if (true) {
      if (instance && instance.nodeName !== "INPUT" && !instance.focus) {
        console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join("\n"));
      }
    }
  }, []);
  const handleInputRef = useForkRef_default(inputRef, inputRefProp, inputPropsProp.ref, handleInputRefWarning);
  const [focused, setFocused] = React134.useState(false);
  const muiFormControl = useFormControl();
  if (true) {
    React134.useEffect(() => {
      if (muiFormControl) {
        return muiFormControl.registerEffect();
      }
      return void 0;
    }, [muiFormControl]);
  }
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  fcs.focused = muiFormControl ? muiFormControl.focused : focused;
  React134.useEffect(() => {
    if (!muiFormControl && disabled && focused) {
      setFocused(false);
      if (onBlur) {
        onBlur();
      }
    }
  }, [muiFormControl, disabled, focused, onBlur]);
  const onFilled = muiFormControl && muiFormControl.onFilled;
  const onEmpty = muiFormControl && muiFormControl.onEmpty;
  const checkDirty = React134.useCallback((obj) => {
    if (isFilled(obj)) {
      if (onFilled) {
        onFilled();
      }
    } else if (onEmpty) {
      onEmpty();
    }
  }, [onFilled, onEmpty]);
  useEnhancedEffect_default2(() => {
    if (isControlled) {
      checkDirty({
        value
      });
    }
  }, [value, checkDirty, isControlled]);
  const handleFocus = (event) => {
    if (fcs.disabled) {
      event.stopPropagation();
      return;
    }
    if (onFocus) {
      onFocus(event);
    }
    if (inputPropsProp.onFocus) {
      inputPropsProp.onFocus(event);
    }
    if (muiFormControl && muiFormControl.onFocus) {
      muiFormControl.onFocus(event);
    } else {
      setFocused(true);
    }
  };
  const handleBlur2 = (event) => {
    if (onBlur) {
      onBlur(event);
    }
    if (inputPropsProp.onBlur) {
      inputPropsProp.onBlur(event);
    }
    if (muiFormControl && muiFormControl.onBlur) {
      muiFormControl.onBlur(event);
    } else {
      setFocused(false);
    }
  };
  const handleChange = (event, ...args) => {
    if (!isControlled) {
      const element = event.target || inputRef.current;
      if (element == null) {
        throw new Error(true ? `MUI: Expected valid input target. Did you use a custom \`inputComponent\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : formatMuiErrorMessage(1));
      }
      checkDirty({
        value: element.value
      });
    }
    if (inputPropsProp.onChange) {
      inputPropsProp.onChange(event, ...args);
    }
    if (onChange) {
      onChange(event, ...args);
    }
  };
  React134.useEffect(() => {
    checkDirty(inputRef.current);
  }, []);
  const handleClick2 = (event) => {
    if (inputRef.current && event.currentTarget === event.target) {
      inputRef.current.focus();
    }
    if (onClick) {
      onClick(event);
    }
  };
  let InputComponent = inputComponent;
  let inputProps = inputPropsProp;
  if (multiline && InputComponent === "input") {
    if (rows) {
      if (true) {
        if (minRows || maxRows) {
          console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.");
        }
      }
      inputProps = _extends({
        type: void 0,
        minRows: rows,
        maxRows: rows
      }, inputProps);
    } else {
      inputProps = _extends({
        type: void 0,
        maxRows,
        minRows
      }, inputProps);
    }
    InputComponent = TextareaAutosize;
  }
  const handleAutoFill = (event) => {
    checkDirty(event.animationName === "mui-auto-fill-cancel" ? inputRef.current : {
      value: "x"
    });
  };
  React134.useEffect(() => {
    if (muiFormControl) {
      muiFormControl.setAdornedStart(Boolean(startAdornment));
    }
  }, [muiFormControl, startAdornment]);
  const ownerState = _extends({}, props, {
    color: fcs.color || "primary",
    disabled: fcs.disabled,
    endAdornment,
    error: fcs.error,
    focused: fcs.focused,
    formControl: muiFormControl,
    fullWidth,
    hiddenLabel: fcs.hiddenLabel,
    multiline,
    size: fcs.size,
    startAdornment,
    type
  });
  const classes2 = useUtilityClasses39(ownerState);
  const Root42 = slots.root || components.Root || InputBaseRoot;
  const rootProps = slotProps.root || componentsProps.root || {};
  const Input5 = slots.input || components.Input || InputBaseComponent;
  inputProps = _extends({}, inputProps, (_slotProps$input = slotProps.input) != null ? _slotProps$input : componentsProps.input);
  return (0, import_jsx_runtime93.jsxs)(React134.Fragment, {
    children: [!disableInjectingGlobalStyles && inputGlobalStyles, (0, import_jsx_runtime93.jsxs)(Root42, _extends({}, rootProps, !isHostComponent(Root42) && {
      ownerState: _extends({}, ownerState, rootProps.ownerState)
    }, {
      ref,
      onClick: handleClick2
    }, other, {
      className: clsx_default2(classes2.root, rootProps.className, className, readOnly && "MuiInputBase-readOnly"),
      children: [startAdornment, (0, import_jsx_runtime92.jsx)(FormControlContext_default.Provider, {
        value: null,
        children: (0, import_jsx_runtime92.jsx)(Input5, _extends({
          ownerState,
          "aria-invalid": fcs.error,
          "aria-describedby": ariaDescribedby,
          autoComplete,
          autoFocus,
          defaultValue,
          disabled: fcs.disabled,
          id,
          onAnimationStart: handleAutoFill,
          name,
          placeholder,
          readOnly,
          required: fcs.required,
          rows,
          value,
          onKeyDown,
          onKeyUp,
          type
        }, inputProps, !isHostComponent(Input5) && {
          as: InputComponent,
          ownerState: _extends({}, ownerState, inputProps.ownerState)
        }, {
          ref: handleInputRef,
          className: clsx_default2(classes2.input, inputProps.className, readOnly && "MuiInputBase-readOnly"),
          onBlur: handleBlur2,
          onChange: handleChange,
          onFocus: handleFocus
        }))
      }), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {
        startAdornment
      })) : null]
    }))]
  });
});
true ? InputBase.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  "aria-describedby": import_prop_types73.default.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: import_prop_types73.default.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: import_prop_types73.default.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types73.default.object,
  /**
   * @ignore
   */
  className: import_prop_types73.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: import_prop_types73.default.oneOfType([import_prop_types73.default.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), import_prop_types73.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types73.default.shape({
    Input: import_prop_types73.default.elementType,
    Root: import_prop_types73.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types73.default.shape({
    input: import_prop_types73.default.object,
    root: import_prop_types73.default.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types73.default.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: import_prop_types73.default.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: import_prop_types73.default.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: import_prop_types73.default.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: import_prop_types73.default.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types73.default.bool,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types73.default.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: elementTypeAcceptingRef_default,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: import_prop_types73.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: import_prop_types73.default.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: import_prop_types73.default.oneOfType([import_prop_types73.default.number, import_prop_types73.default.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: import_prop_types73.default.oneOfType([import_prop_types73.default.number, import_prop_types73.default.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: import_prop_types73.default.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: import_prop_types73.default.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: import_prop_types73.default.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types73.default.func,
  /**
   * @ignore
   */
  onClick: import_prop_types73.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types73.default.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: import_prop_types73.default.func,
  /**
   * @ignore
   */
  onKeyDown: import_prop_types73.default.func,
  /**
   * @ignore
   */
  onKeyUp: import_prop_types73.default.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: import_prop_types73.default.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: import_prop_types73.default.bool,
  /**
   * @ignore
   */
  renderSuffix: import_prop_types73.default.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: import_prop_types73.default.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: import_prop_types73.default.oneOfType([import_prop_types73.default.number, import_prop_types73.default.string]),
  /**
   * The size of the component.
   */
  size: import_prop_types73.default.oneOfType([import_prop_types73.default.oneOf(["medium", "small"]), import_prop_types73.default.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types73.default.shape({
    input: import_prop_types73.default.object,
    root: import_prop_types73.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types73.default.shape({
    input: import_prop_types73.default.elementType,
    root: import_prop_types73.default.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: import_prop_types73.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types73.default.oneOfType([import_prop_types73.default.arrayOf(import_prop_types73.default.oneOfType([import_prop_types73.default.func, import_prop_types73.default.object, import_prop_types73.default.bool])), import_prop_types73.default.func, import_prop_types73.default.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: import_prop_types73.default.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: import_prop_types73.default.any
} : void 0;
var InputBase_default = InputBase;

// node_modules/@mui/material/Input/inputClasses.js
function getInputUtilityClass2(slot) {
  return generateUtilityClass("MuiInput", slot);
}
var inputClasses2 = _extends({}, inputBaseClasses_default, generateUtilityClasses("MuiInput", ["root", "underline", "input"]));
var inputClasses_default = inputClasses2;

// node_modules/@mui/material/OutlinedInput/outlinedInputClasses.js
init_extends();
init_esm();
init_generateUtilityClass3();
function getOutlinedInputUtilityClass(slot) {
  return generateUtilityClass("MuiOutlinedInput", slot);
}
var outlinedInputClasses = _extends({}, inputBaseClasses_default, generateUtilityClasses("MuiOutlinedInput", ["root", "notchedOutline", "input"]));
var outlinedInputClasses_default = outlinedInputClasses;

// node_modules/@mui/material/FilledInput/filledInputClasses.js
init_extends();
init_esm();
init_generateUtilityClass3();
function getFilledInputUtilityClass(slot) {
  return generateUtilityClass("MuiFilledInput", slot);
}
var filledInputClasses = _extends({}, inputBaseClasses_default, generateUtilityClasses("MuiFilledInput", ["root", "underline", "input"]));
var filledInputClasses_default = filledInputClasses;

// node_modules/@mui/material/internal/svg-icons/ArrowDropDown.js
var React135 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime94 = __toESM(require_jsx_runtime());
var ArrowDropDown_default = createSvgIcon((0, import_jsx_runtime94.jsx)("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");

// node_modules/@mui/material/Autocomplete/Autocomplete.js
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Autocomplete/autocompleteClasses.js
init_esm();
init_generateUtilityClass3();
function getAutocompleteUtilityClass(slot) {
  return generateUtilityClass("MuiAutocomplete", slot);
}
var autocompleteClasses = generateUtilityClasses("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]);
var autocompleteClasses_default = autocompleteClasses;

// node_modules/@mui/material/Autocomplete/Autocomplete.js
init_capitalize3();
init_useForkRef3();
var import_jsx_runtime95 = __toESM(require_jsx_runtime());
var import_jsx_runtime96 = __toESM(require_jsx_runtime());
var _ClearIcon;
var _ArrowDropDownIcon;
var _excluded63 = ["autoComplete", "autoHighlight", "autoSelect", "blurOnSelect", "ChipProps", "className", "clearIcon", "clearOnBlur", "clearOnEscape", "clearText", "closeText", "componentsProps", "defaultValue", "disableClearable", "disableCloseOnSelect", "disabled", "disabledItemsFocusable", "disableListWrap", "disablePortal", "filterOptions", "filterSelectedOptions", "forcePopupIcon", "freeSolo", "fullWidth", "getLimitTagsText", "getOptionDisabled", "getOptionLabel", "isOptionEqualToValue", "groupBy", "handleHomeEndKeys", "id", "includeInputInList", "inputValue", "limitTags", "ListboxComponent", "ListboxProps", "loading", "loadingText", "multiple", "noOptionsText", "onChange", "onClose", "onHighlightChange", "onInputChange", "onOpen", "open", "openOnFocus", "openText", "options", "PaperComponent", "PopperComponent", "popupIcon", "readOnly", "renderGroup", "renderInput", "renderOption", "renderTags", "selectOnFocus", "size", "slotProps", "value"];
var _excluded211 = ["ref"];
var useUtilityClasses40 = (ownerState) => {
  const {
    classes: classes2,
    disablePortal,
    expanded,
    focused,
    fullWidth,
    hasClearIcon,
    hasPopupIcon,
    inputFocused,
    popupOpen,
    size: size2
  } = ownerState;
  const slots = {
    root: ["root", expanded && "expanded", focused && "focused", fullWidth && "fullWidth", hasClearIcon && "hasClearIcon", hasPopupIcon && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", inputFocused && "inputFocused"],
    tag: ["tag", `tagSize${capitalize_default(size2)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", popupOpen && "popupIndicatorOpen"],
    popper: ["popper", disablePortal && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return composeClasses(slots, getAutocompleteUtilityClass, classes2);
};
var AutocompleteRoot = styled_default2("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    const {
      fullWidth,
      hasClearIcon,
      hasPopupIcon,
      inputFocused,
      size: size2
    } = ownerState;
    return [{
      [`& .${autocompleteClasses_default.tag}`]: styles7.tag
    }, {
      [`& .${autocompleteClasses_default.tag}`]: styles7[`tagSize${capitalize_default(size2)}`]
    }, {
      [`& .${autocompleteClasses_default.inputRoot}`]: styles7.inputRoot
    }, {
      [`& .${autocompleteClasses_default.input}`]: styles7.input
    }, {
      [`& .${autocompleteClasses_default.input}`]: inputFocused && styles7.inputFocused
    }, styles7.root, fullWidth && styles7.fullWidth, hasPopupIcon && styles7.hasPopupIcon, hasClearIcon && styles7.hasClearIcon];
  }
})(({
  ownerState
}) => _extends({
  [`&.${autocompleteClasses_default.focused} .${autocompleteClasses_default.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${autocompleteClasses_default.clearIndicator}`]: {
      visibility: "visible"
    }
  }
}, ownerState.fullWidth && {
  width: "100%"
}, {
  [`& .${autocompleteClasses_default.tag}`]: _extends({
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  }, ownerState.size === "small" && {
    margin: 2,
    maxWidth: "calc(100% - 4px)"
  }),
  [`& .${autocompleteClasses_default.inputRoot}`]: {
    flexWrap: "wrap",
    [`.${autocompleteClasses_default.hasPopupIcon}&, .${autocompleteClasses_default.hasClearIcon}&`]: {
      paddingRight: 26 + 4
    },
    [`.${autocompleteClasses_default.hasPopupIcon}.${autocompleteClasses_default.hasClearIcon}&`]: {
      paddingRight: 52 + 4
    },
    [`& .${autocompleteClasses_default.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${inputClasses_default.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${inputClasses_default.root}.${inputBaseClasses_default.sizeSmall}`]: {
    [`& .${inputClasses_default.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${outlinedInputClasses_default.root}`]: {
    padding: 9,
    [`.${autocompleteClasses_default.hasPopupIcon}&, .${autocompleteClasses_default.hasClearIcon}&`]: {
      paddingRight: 26 + 4 + 9
    },
    [`.${autocompleteClasses_default.hasPopupIcon}.${autocompleteClasses_default.hasClearIcon}&`]: {
      paddingRight: 52 + 4 + 9
    },
    [`& .${autocompleteClasses_default.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${autocompleteClasses_default.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${outlinedInputClasses_default.root}.${inputBaseClasses_default.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${autocompleteClasses_default.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${filledInputClasses_default.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${autocompleteClasses_default.hasPopupIcon}&, .${autocompleteClasses_default.hasClearIcon}&`]: {
      paddingRight: 26 + 4 + 9
    },
    [`.${autocompleteClasses_default.hasPopupIcon}.${autocompleteClasses_default.hasClearIcon}&`]: {
      paddingRight: 52 + 4 + 9
    },
    [`& .${filledInputClasses_default.input}`]: {
      padding: "7px 4px"
    },
    [`& .${autocompleteClasses_default.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${filledInputClasses_default.root}.${inputBaseClasses_default.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${filledInputClasses_default.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${inputBaseClasses_default.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${filledInputClasses_default.root}.${inputBaseClasses_default.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${autocompleteClasses_default.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${filledInputClasses_default.root}.${inputBaseClasses_default.hiddenLabel}.${inputBaseClasses_default.sizeSmall}`]: {
    [`& .${autocompleteClasses_default.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${autocompleteClasses_default.input}`]: _extends({
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  }, ownerState.inputFocused && {
    opacity: 1
  })
}));
var AutocompleteEndAdornment = styled_default2("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (props, styles7) => styles7.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "calc(50% - 14px)"
  // Center vertically
});
var AutocompleteClearIndicator = styled_default2(IconButton_default, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (props, styles7) => styles7.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
});
var AutocompletePopupIndicator = styled_default2(IconButton_default, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: ({
    ownerState
  }, styles7) => _extends({}, styles7.popupIndicator, ownerState.popupOpen && styles7.popupIndicatorOpen)
})(({
  ownerState
}) => _extends({
  padding: 2,
  marginRight: -2
}, ownerState.popupOpen && {
  transform: "rotate(180deg)"
}));
var AutocompletePopper = styled_default2(Popper_default, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${autocompleteClasses_default.option}`]: styles7.option
    }, styles7.popper, ownerState.disablePortal && styles7.popperDisablePortal];
  }
})(({
  theme,
  ownerState
}) => _extends({
  zIndex: (theme.vars || theme).zIndex.modal
}, ownerState.disablePortal && {
  position: "absolute"
}));
var AutocompletePaper = styled_default2(Paper_default, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (props, styles7) => styles7.paper
})(({
  theme
}) => _extends({}, theme.typography.body1, {
  overflow: "auto"
}));
var AutocompleteLoading = styled_default2("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (props, styles7) => styles7.loading
})(({
  theme
}) => ({
  color: (theme.vars || theme).palette.text.secondary,
  padding: "14px 16px"
}));
var AutocompleteNoOptions = styled_default2("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (props, styles7) => styles7.noOptions
})(({
  theme
}) => ({
  color: (theme.vars || theme).palette.text.secondary,
  padding: "14px 16px"
}));
var AutocompleteListbox = styled_default2("div", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (props, styles7) => styles7.listbox
})(({
  theme
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${autocompleteClasses_default.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [theme.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${autocompleteClasses_default.focused}`]: {
      backgroundColor: (theme.vars || theme).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (theme.vars || theme).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${autocompleteClasses_default.focusVisible}`]: {
      backgroundColor: (theme.vars || theme).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
      [`&.${autocompleteClasses_default.focused}`]: {
        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (theme.vars || theme).palette.action.selected
        }
      },
      [`&.${autocompleteClasses_default.focusVisible}`]: {
        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
      }
    }
  }
}));
var AutocompleteGroupLabel = styled_default2(ListSubheader_default, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (props, styles7) => styles7.groupLabel
})(({
  theme
}) => ({
  backgroundColor: (theme.vars || theme).palette.background.paper,
  top: -8
}));
var AutocompleteGroupUl = styled_default2("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (props, styles7) => styles7.groupUl
})({
  padding: 0,
  [`& .${autocompleteClasses_default.option}`]: {
    paddingLeft: 24
  }
});
var Autocomplete = React136.forwardRef(function Autocomplete2(inProps, ref) {
  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAutocomplete"
  });
  const {
    autoComplete = false,
    autoHighlight = false,
    autoSelect = false,
    blurOnSelect = false,
    ChipProps,
    className,
    clearIcon = _ClearIcon || (_ClearIcon = (0, import_jsx_runtime95.jsx)(Close_default, {
      fontSize: "small"
    })),
    clearOnBlur = !props.freeSolo,
    clearOnEscape = false,
    clearText = "Clear",
    closeText = "Close",
    componentsProps = {},
    defaultValue = props.multiple ? [] : null,
    disableClearable = false,
    disableCloseOnSelect = false,
    disabled = false,
    disabledItemsFocusable = false,
    disableListWrap = false,
    disablePortal = false,
    filterSelectedOptions = false,
    forcePopupIcon = "auto",
    freeSolo = false,
    fullWidth = false,
    getLimitTagsText = (more) => `+${more}`,
    getOptionLabel: getOptionLabelProp,
    groupBy,
    handleHomeEndKeys = !props.freeSolo,
    includeInputInList = false,
    limitTags = -1,
    ListboxComponent = "ul",
    ListboxProps,
    loading = false,
    loadingText = "Loading…",
    multiple = false,
    noOptionsText = "No options",
    openOnFocus = false,
    openText = "Open",
    PaperComponent = Paper_default,
    PopperComponent = Popper_default,
    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = (0, import_jsx_runtime95.jsx)(ArrowDropDown_default, {})),
    readOnly = false,
    renderGroup: renderGroupProp,
    renderInput,
    renderOption: renderOptionProp,
    renderTags,
    selectOnFocus = !props.freeSolo,
    size: size2 = "medium",
    slotProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded63);
  const {
    getRootProps,
    getInputProps,
    getInputLabelProps,
    getPopupIndicatorProps,
    getClearProps,
    getTagProps,
    getListboxProps,
    getOptionProps,
    value,
    dirty,
    expanded,
    id,
    popupOpen,
    focused,
    focusedTag,
    anchorEl,
    setAnchorEl,
    inputValue,
    groupedOptions
  } = useAutocomplete(_extends({}, props, {
    componentName: "Autocomplete"
  }));
  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;
  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;
  const {
    onMouseDown: handleInputMouseDown
  } = getInputProps();
  const {
    ref: externalListboxRef
  } = ListboxProps != null ? ListboxProps : {};
  const _getListboxProps = getListboxProps(), {
    ref: listboxRef
  } = _getListboxProps, otherListboxProps = _objectWithoutPropertiesLoose(_getListboxProps, _excluded211);
  const combinedListboxRef = useForkRef_default(listboxRef, externalListboxRef);
  const defaultGetOptionLabel = (option) => {
    var _option$label;
    return (_option$label = option.label) != null ? _option$label : option;
  };
  const getOptionLabel = getOptionLabelProp || defaultGetOptionLabel;
  const ownerState = _extends({}, props, {
    disablePortal,
    expanded,
    focused,
    fullWidth,
    getOptionLabel,
    hasClearIcon,
    hasPopupIcon,
    inputFocused: focusedTag === -1,
    popupOpen,
    size: size2
  });
  const classes2 = useUtilityClasses40(ownerState);
  let startAdornment;
  if (multiple && value.length > 0) {
    const getCustomizedTagProps = (params) => _extends({
      className: classes2.tag,
      disabled
    }, getTagProps(params));
    if (renderTags) {
      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);
    } else {
      startAdornment = value.map((option, index2) => (0, import_jsx_runtime95.jsx)(Chip_default, _extends({
        label: getOptionLabel(option),
        size: size2
      }, getCustomizedTagProps({
        index: index2
      }), ChipProps)));
    }
  }
  if (limitTags > -1 && Array.isArray(startAdornment)) {
    const more = startAdornment.length - limitTags;
    if (!focused && more > 0) {
      startAdornment = startAdornment.splice(0, limitTags);
      startAdornment.push((0, import_jsx_runtime95.jsx)("span", {
        className: classes2.tag,
        children: getLimitTagsText(more)
      }, startAdornment.length));
    }
  }
  const defaultRenderGroup = (params) => (0, import_jsx_runtime96.jsxs)("li", {
    children: [(0, import_jsx_runtime95.jsx)(AutocompleteGroupLabel, {
      className: classes2.groupLabel,
      ownerState,
      component: "div",
      children: params.group
    }), (0, import_jsx_runtime95.jsx)(AutocompleteGroupUl, {
      className: classes2.groupUl,
      ownerState,
      children: params.children
    })]
  }, params.key);
  const renderGroup = renderGroupProp || defaultRenderGroup;
  const defaultRenderOption = (props2, option) => (0, import_jsx_runtime95.jsx)("li", _extends({}, props2, {
    children: getOptionLabel(option)
  }));
  const renderOption = renderOptionProp || defaultRenderOption;
  const renderListOption = (option, index2) => {
    const optionProps = getOptionProps({
      option,
      index: index2
    });
    return renderOption(_extends({}, optionProps, {
      className: classes2.option
    }), option, {
      selected: optionProps["aria-selected"],
      index: index2,
      inputValue
    }, ownerState);
  };
  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;
  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;
  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;
  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;
  return (0, import_jsx_runtime96.jsxs)(React136.Fragment, {
    children: [(0, import_jsx_runtime95.jsx)(AutocompleteRoot, _extends({
      ref,
      className: clsx_default2(classes2.root, className),
      ownerState
    }, getRootProps(other), {
      children: renderInput({
        id,
        disabled,
        fullWidth: true,
        size: size2 === "small" ? "small" : void 0,
        InputLabelProps: getInputLabelProps(),
        InputProps: _extends({
          ref: setAnchorEl,
          className: classes2.inputRoot,
          startAdornment,
          onClick: (event) => {
            if (event.target === event.currentTarget) {
              handleInputMouseDown(event);
            }
          }
        }, (hasClearIcon || hasPopupIcon) && {
          endAdornment: (0, import_jsx_runtime96.jsxs)(AutocompleteEndAdornment, {
            className: classes2.endAdornment,
            ownerState,
            children: [hasClearIcon ? (0, import_jsx_runtime95.jsx)(AutocompleteClearIndicator, _extends({}, getClearProps(), {
              "aria-label": clearText,
              title: clearText,
              ownerState
            }, clearIndicatorSlotProps, {
              className: clsx_default2(classes2.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),
              children: clearIcon
            })) : null, hasPopupIcon ? (0, import_jsx_runtime95.jsx)(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {
              disabled,
              "aria-label": popupOpen ? closeText : openText,
              title: popupOpen ? closeText : openText,
              ownerState
            }, popupIndicatorSlotProps, {
              className: clsx_default2(classes2.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),
              children: popupIcon
            })) : null]
          })
        }),
        inputProps: _extends({
          className: classes2.input,
          disabled,
          readOnly
        }, getInputProps())
      })
    })), anchorEl ? (0, import_jsx_runtime95.jsx)(AutocompletePopper, _extends({
      as: PopperComponent,
      disablePortal,
      style: {
        width: anchorEl ? anchorEl.clientWidth : null
      },
      ownerState,
      role: "presentation",
      anchorEl,
      open: popupOpen
    }, popperSlotProps, {
      className: clsx_default2(classes2.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),
      children: (0, import_jsx_runtime96.jsxs)(AutocompletePaper, _extends({
        ownerState,
        as: PaperComponent
      }, paperSlotProps, {
        className: clsx_default2(classes2.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),
        children: [loading && groupedOptions.length === 0 ? (0, import_jsx_runtime95.jsx)(AutocompleteLoading, {
          className: classes2.loading,
          ownerState,
          children: loadingText
        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? (0, import_jsx_runtime95.jsx)(AutocompleteNoOptions, {
          className: classes2.noOptions,
          ownerState,
          role: "presentation",
          onMouseDown: (event) => {
            event.preventDefault();
          },
          children: noOptionsText
        }) : null, groupedOptions.length > 0 ? (0, import_jsx_runtime95.jsx)(AutocompleteListbox, _extends({
          as: ListboxComponent,
          className: classes2.listbox,
          ownerState
        }, otherListboxProps, ListboxProps, {
          ref: combinedListboxRef,
          children: groupedOptions.map((option, index2) => {
            if (groupBy) {
              return renderGroup({
                key: option.key,
                group: option.group,
                children: option.options.map((option2, index22) => renderListOption(option2, option.index + index22))
              });
            }
            return renderListOption(option, index2);
          })
        })) : null]
      }))
    })) : null]
  });
});
true ? Autocomplete.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the portion of the selected suggestion that has not been typed by the user,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: import_prop_types74.default.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: import_prop_types74.default.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: import_prop_types74.default.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: import_prop_types74.default.oneOfType([import_prop_types74.default.oneOf(["mouse", "touch"]), import_prop_types74.default.bool]),
  /**
   * Props applied to the [`Chip`](/material-ui/api/chip/) element.
   */
  ChipProps: import_prop_types74.default.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types74.default.object,
  /**
   * @ignore
   */
  className: import_prop_types74.default.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: import_prop_types74.default.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set to `true` if you want to help the user enter a new value.
   * Set to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: import_prop_types74.default.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: import_prop_types74.default.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: import_prop_types74.default.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: import_prop_types74.default.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: import_prop_types74.default.shape({
    clearIndicator: import_prop_types74.default.object,
    paper: import_prop_types74.default.object,
    popper: import_prop_types74.default.object,
    popupIndicator: import_prop_types74.default.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: chainPropTypes(import_prop_types74.default.any, (props) => {
    if (props.multiple && props.defaultValue !== void 0 && !Array.isArray(props.defaultValue)) {
      return new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${props.defaultValue} was provided.`].join("\n"));
    }
    return null;
  }),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: import_prop_types74.default.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: import_prop_types74.default.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types74.default.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: import_prop_types74.default.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: import_prop_types74.default.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: import_prop_types74.default.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: import_prop_types74.default.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: import_prop_types74.default.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: import_prop_types74.default.oneOfType([import_prop_types74.default.oneOf(["auto"]), import_prop_types74.default.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: import_prop_types74.default.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types74.default.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: import_prop_types74.default.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: import_prop_types74.default.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: import_prop_types74.default.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} options The options to group.
   * @returns {string}
   */
  groupBy: import_prop_types74.default.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: import_prop_types74.default.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: import_prop_types74.default.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: import_prop_types74.default.bool,
  /**
   * The input value.
   */
  inputValue: import_prop_types74.default.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: import_prop_types74.default.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: integerPropType_default,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   */
  ListboxComponent: import_prop_types74.default.elementType,
  /**
   * Props applied to the Listbox element.
   */
  ListboxProps: import_prop_types74.default.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).
   * @default false
   */
  loading: import_prop_types74.default.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: import_prop_types74.default.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: import_prop_types74.default.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: import_prop_types74.default.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: import_prop_types74.default.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: import_prop_types74.default.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"auto"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: import_prop_types74.default.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`.
   */
  onInputChange: import_prop_types74.default.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: import_prop_types74.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types74.default.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: import_prop_types74.default.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: import_prop_types74.default.string,
  /**
   * Array of options.
   */
  options: import_prop_types74.default.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   */
  PaperComponent: import_prop_types74.default.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   */
  PopperComponent: import_prop_types74.default.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: import_prop_types74.default.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: import_prop_types74.default.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: import_prop_types74.default.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: import_prop_types74.default.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: import_prop_types74.default.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: import_prop_types74.default.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: import_prop_types74.default.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types74.default.oneOfType([import_prop_types74.default.oneOf(["small", "medium"]), import_prop_types74.default.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: import_prop_types74.default.shape({
    clearIndicator: import_prop_types74.default.object,
    paper: import_prop_types74.default.object,
    popper: import_prop_types74.default.object,
    popupIndicator: import_prop_types74.default.object
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types74.default.oneOfType([import_prop_types74.default.arrayOf(import_prop_types74.default.oneOfType([import_prop_types74.default.func, import_prop_types74.default.object, import_prop_types74.default.bool])), import_prop_types74.default.func, import_prop_types74.default.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: chainPropTypes(import_prop_types74.default.any, (props) => {
    if (props.multiple && props.value !== void 0 && !Array.isArray(props.value)) {
      return new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${props.value} was provided.`].join("\n"));
    }
    return null;
  })
} : void 0;
var Autocomplete_default = Autocomplete;

// node_modules/@mui/material/Avatar/Avatar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React138 = __toESM(require_react());
var import_prop_types75 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/internal/svg-icons/Person.js
var React137 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime97 = __toESM(require_jsx_runtime());
var Person_default = createSvgIcon((0, import_jsx_runtime97.jsx)("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");

// node_modules/@mui/material/Avatar/avatarClasses.js
init_esm();
init_generateUtilityClass3();
function getAvatarUtilityClass(slot) {
  return generateUtilityClass("MuiAvatar", slot);
}
var avatarClasses = generateUtilityClasses("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
var avatarClasses_default = avatarClasses;

// node_modules/@mui/material/Avatar/Avatar.js
var import_jsx_runtime98 = __toESM(require_jsx_runtime());
var _excluded64 = ["alt", "children", "className", "component", "imgProps", "sizes", "src", "srcSet", "variant"];
var useUtilityClasses41 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    colorDefault
  } = ownerState;
  const slots = {
    root: ["root", variant, colorDefault && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  };
  return composeClasses(slots, getAvatarUtilityClass, classes2);
};
var AvatarRoot = styled_default2("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant], ownerState.colorDefault && styles7.colorDefault];
  }
})(({
  theme,
  ownerState
}) => _extends({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: theme.typography.fontFamily,
  fontSize: theme.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none"
}, ownerState.variant === "rounded" && {
  borderRadius: (theme.vars || theme).shape.borderRadius
}, ownerState.variant === "square" && {
  borderRadius: 0
}, ownerState.colorDefault && _extends({
  color: (theme.vars || theme).palette.background.default
}, theme.vars ? {
  backgroundColor: theme.vars.palette.Avatar.defaultBg
} : {
  backgroundColor: theme.palette.mode === "light" ? theme.palette.grey[400] : theme.palette.grey[600]
})));
var AvatarImg = styled_default2("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (props, styles7) => styles7.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image. The property isn't supported by IE11.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
});
var AvatarFallback = styled_default2(Person_default, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (props, styles7) => styles7.fallback
})({
  width: "75%",
  height: "75%"
});
function useLoaded({
  crossOrigin,
  referrerPolicy,
  src,
  srcSet
}) {
  const [loaded, setLoaded] = React138.useState(false);
  React138.useEffect(() => {
    if (!src && !srcSet) {
      return void 0;
    }
    setLoaded(false);
    let active = true;
    const image = new Image();
    image.onload = () => {
      if (!active) {
        return;
      }
      setLoaded("loaded");
    };
    image.onerror = () => {
      if (!active) {
        return;
      }
      setLoaded("error");
    };
    image.crossOrigin = crossOrigin;
    image.referrerPolicy = referrerPolicy;
    image.src = src;
    if (srcSet) {
      image.srcset = srcSet;
    }
    return () => {
      active = false;
    };
  }, [crossOrigin, referrerPolicy, src, srcSet]);
  return loaded;
}
var Avatar = React138.forwardRef(function Avatar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAvatar"
  });
  const {
    alt,
    children: childrenProp,
    className,
    component = "div",
    imgProps,
    sizes,
    src,
    srcSet,
    variant = "circular"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded64);
  let children2 = null;
  const loaded = useLoaded(_extends({}, imgProps, {
    src,
    srcSet
  }));
  const hasImg = src || srcSet;
  const hasImgNotFailing = hasImg && loaded !== "error";
  const ownerState = _extends({}, props, {
    colorDefault: !hasImgNotFailing,
    component,
    variant
  });
  const classes2 = useUtilityClasses41(ownerState);
  if (hasImgNotFailing) {
    children2 = (0, import_jsx_runtime98.jsx)(AvatarImg, _extends({
      alt,
      src,
      srcSet,
      sizes,
      ownerState,
      className: classes2.img
    }, imgProps));
  } else if (childrenProp != null) {
    children2 = childrenProp;
  } else if (hasImg && alt) {
    children2 = alt[0];
  } else {
    children2 = (0, import_jsx_runtime98.jsx)(AvatarFallback, {
      ownerState,
      className: classes2.fallback
    });
  }
  return (0, import_jsx_runtime98.jsx)(AvatarRoot, _extends({
    as: component,
    ownerState,
    className: clsx_default2(classes2.root, className),
    ref
  }, other, {
    children: children2
  }));
});
true ? Avatar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: import_prop_types75.default.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: import_prop_types75.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types75.default.object,
  /**
   * @ignore
   */
  className: import_prop_types75.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types75.default.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   */
  imgProps: import_prop_types75.default.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: import_prop_types75.default.string,
  /**
   * The `src` attribute for the `img` element.
   */
  src: import_prop_types75.default.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: import_prop_types75.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types75.default.oneOfType([import_prop_types75.default.arrayOf(import_prop_types75.default.oneOfType([import_prop_types75.default.func, import_prop_types75.default.object, import_prop_types75.default.bool])), import_prop_types75.default.func, import_prop_types75.default.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: import_prop_types75.default.oneOfType([import_prop_types75.default.oneOf(["circular", "rounded", "square"]), import_prop_types75.default.string])
} : void 0;
var Avatar_default = Avatar;

// node_modules/@mui/material/AvatarGroup/AvatarGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React139 = __toESM(require_react());
var import_prop_types76 = __toESM(require_prop_types());
var import_react_is3 = __toESM(require_react_is3());
init_clsx2();
init_esm();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/AvatarGroup/avatarGroupClasses.js
init_esm();
init_generateUtilityClass3();
function getAvatarGroupUtilityClass(slot) {
  return generateUtilityClass("MuiAvatarGroup", slot);
}
var avatarGroupClasses = generateUtilityClasses("MuiAvatarGroup", ["root", "avatar"]);
var avatarGroupClasses_default = avatarGroupClasses;

// node_modules/@mui/material/AvatarGroup/AvatarGroup.js
var import_jsx_runtime99 = __toESM(require_jsx_runtime());
var _excluded65 = ["children", "className", "component", "componentsProps", "max", "slotProps", "spacing", "total", "variant"];
var SPACINGS2 = {
  small: -16,
  medium: null
};
var useUtilityClasses42 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    avatar: ["avatar"]
  };
  return composeClasses(slots, getAvatarGroupUtilityClass, classes2);
};
var AvatarGroupRoot = styled_default2("div", {
  name: "MuiAvatarGroup",
  slot: "Root",
  overridesResolver: (props, styles7) => _extends({
    [`& .${avatarGroupClasses_default.avatar}`]: styles7.avatar
  }, styles7.root)
})(({
  theme
}) => ({
  [`& .${avatarClasses_default.root}`]: {
    border: `2px solid ${(theme.vars || theme).palette.background.default}`,
    boxSizing: "content-box",
    marginLeft: -8,
    "&:last-child": {
      marginLeft: 0
    }
  },
  display: "flex",
  flexDirection: "row-reverse"
}));
var AvatarGroupAvatar = styled_default2(Avatar_default, {
  name: "MuiAvatarGroup",
  slot: "Avatar",
  overridesResolver: (props, styles7) => styles7.avatar
})(({
  theme
}) => ({
  border: `2px solid ${(theme.vars || theme).palette.background.default}`,
  boxSizing: "content-box",
  marginLeft: -8,
  "&:last-child": {
    marginLeft: 0
  }
}));
var AvatarGroup = React139.forwardRef(function AvatarGroup2(inProps, ref) {
  var _slotProps$additional;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAvatarGroup"
  });
  const {
    children: childrenProp,
    className,
    component = "div",
    componentsProps = {},
    max: max3 = 5,
    slotProps = {},
    spacing: spacing2 = "medium",
    total,
    variant = "circular"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded65);
  let clampedMax = max3 < 2 ? 2 : max3;
  const ownerState = _extends({}, props, {
    max: max3,
    spacing: spacing2,
    component,
    variant
  });
  const classes2 = useUtilityClasses42(ownerState);
  const children2 = React139.Children.toArray(childrenProp).filter((child) => {
    if (true) {
      if ((0, import_react_is3.isFragment)(child)) {
        console.error(["MUI: The AvatarGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return React139.isValidElement(child);
  });
  const totalAvatars = total || children2.length;
  if (totalAvatars === clampedMax) {
    clampedMax += 1;
  }
  clampedMax = Math.min(totalAvatars + 1, clampedMax);
  const maxAvatars = Math.min(children2.length, clampedMax - 1);
  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);
  const marginLeft = spacing2 && SPACINGS2[spacing2] !== void 0 ? SPACINGS2[spacing2] : -spacing2;
  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;
  return (0, import_jsx_runtime99.jsxs)(AvatarGroupRoot, _extends({
    as: component,
    ownerState,
    className: clsx_default2(classes2.root, className),
    ref
  }, other, {
    children: [extraAvatars ? (0, import_jsx_runtime99.jsxs)(AvatarGroupAvatar, _extends({
      ownerState,
      variant
    }, additionalAvatarSlotProps, {
      className: clsx_default2(classes2.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),
      style: _extends({
        marginLeft
      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),
      children: ["+", extraAvatars]
    })) : null, children2.slice(0, maxAvatars).reverse().map((child, index2) => {
      return React139.cloneElement(child, {
        className: clsx_default2(child.props.className, classes2.avatar),
        style: _extends({
          // Consistent with "&:last-child" styling for the default spacing,
          // we do not apply custom marginLeft spacing on the last child
          marginLeft: index2 === maxAvatars - 1 ? void 0 : marginLeft
        }, child.props.style),
        variant: child.props.variant || variant
      });
    })]
  }));
});
true ? AvatarGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The avatars to stack.
   */
  children: import_prop_types76.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types76.default.object,
  /**
   * @ignore
   */
  className: import_prop_types76.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types76.default.elementType,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types76.default.shape({
    additionalAvatar: import_prop_types76.default.object
  }),
  /**
   * Max avatars to show before +x.
   * @default 5
   */
  max: chainPropTypes(import_prop_types76.default.number, (props) => {
    if (props.max < 2) {
      return new Error(["MUI: The prop `max` should be equal to 2 or above.", "A value below is clamped to 2."].join("\n"));
    }
    return null;
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types76.default.shape({
    additionalAvatar: import_prop_types76.default.object
  }),
  /**
   * Spacing between avatars.
   * @default 'medium'
   */
  spacing: import_prop_types76.default.oneOfType([import_prop_types76.default.oneOf(["medium", "small"]), import_prop_types76.default.number]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types76.default.oneOfType([import_prop_types76.default.arrayOf(import_prop_types76.default.oneOfType([import_prop_types76.default.func, import_prop_types76.default.object, import_prop_types76.default.bool])), import_prop_types76.default.func, import_prop_types76.default.object]),
  /**
   * The total number of avatars. Used for calculating the number of extra avatars.
   * @default children.length
   */
  total: import_prop_types76.default.number,
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: import_prop_types76.default.oneOfType([import_prop_types76.default.oneOf(["circular", "rounded", "square"]), import_prop_types76.default.string])
} : void 0;

// node_modules/@mui/material/Backdrop/Backdrop.js
init_objectWithoutPropertiesLoose();
init_extends();
var React141 = __toESM(require_react());
var import_prop_types78 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Fade/Fade.js
init_extends();
init_objectWithoutPropertiesLoose();
var React140 = __toESM(require_react());
var import_prop_types77 = __toESM(require_prop_types());
init_esm();
init_useForkRef3();
var import_jsx_runtime100 = __toESM(require_jsx_runtime());
var _excluded66 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
var styles2 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
};
var Fade = React140.forwardRef(function Fade2(props, ref) {
  const theme = useTheme5();
  const defaultTimeout = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    addEndListener,
    appear = true,
    children: children2,
    easing: easing2,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style: style4,
    timeout: timeout2 = defaultTimeout,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded66);
  const enableStrictModeCompat = true;
  const nodeRef = React140.useRef(null);
  const handleRef = useForkRef_default(nodeRef, children2.ref, ref);
  const normalizedTransitionCallback = (callback) => (maybeIsAppearing) => {
    if (callback) {
      const node2 = nodeRef.current;
      if (maybeIsAppearing === void 0) {
        callback(node2);
      } else {
        callback(node2, maybeIsAppearing);
      }
    }
  };
  const handleEntering = normalizedTransitionCallback(onEntering);
  const handleEnter = normalizedTransitionCallback((node2, isAppearing) => {
    reflow(node2);
    const transitionProps = getTransitionProps({
      style: style4,
      timeout: timeout2,
      easing: easing2
    }, {
      mode: "enter"
    });
    node2.style.webkitTransition = theme.transitions.create("opacity", transitionProps);
    node2.style.transition = theme.transitions.create("opacity", transitionProps);
    if (onEnter) {
      onEnter(node2, isAppearing);
    }
  });
  const handleEntered = normalizedTransitionCallback(onEntered);
  const handleExiting = normalizedTransitionCallback(onExiting);
  const handleExit = normalizedTransitionCallback((node2) => {
    const transitionProps = getTransitionProps({
      style: style4,
      timeout: timeout2,
      easing: easing2
    }, {
      mode: "exit"
    });
    node2.style.webkitTransition = theme.transitions.create("opacity", transitionProps);
    node2.style.transition = theme.transitions.create("opacity", transitionProps);
    if (onExit) {
      onExit(node2);
    }
  });
  const handleExited = normalizedTransitionCallback(onExited);
  const handleAddEndListener = (next2) => {
    if (addEndListener) {
      addEndListener(nodeRef.current, next2);
    }
  };
  return (0, import_jsx_runtime100.jsx)(TransitionComponent, _extends({
    appear,
    in: inProp,
    nodeRef: enableStrictModeCompat ? nodeRef : void 0,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout: timeout2
  }, other, {
    children: (state, childProps) => {
      return React140.cloneElement(children2, _extends({
        style: _extends({
          opacity: 0,
          visibility: state === "exited" && !inProp ? "hidden" : void 0
        }, styles2[state], style4, children2.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
true ? Fade.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: import_prop_types77.default.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: import_prop_types77.default.bool,
  /**
   * A single child content element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: import_prop_types77.default.oneOfType([import_prop_types77.default.shape({
    enter: import_prop_types77.default.string,
    exit: import_prop_types77.default.string
  }), import_prop_types77.default.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: import_prop_types77.default.bool,
  /**
   * @ignore
   */
  onEnter: import_prop_types77.default.func,
  /**
   * @ignore
   */
  onEntered: import_prop_types77.default.func,
  /**
   * @ignore
   */
  onEntering: import_prop_types77.default.func,
  /**
   * @ignore
   */
  onExit: import_prop_types77.default.func,
  /**
   * @ignore
   */
  onExited: import_prop_types77.default.func,
  /**
   * @ignore
   */
  onExiting: import_prop_types77.default.func,
  /**
   * @ignore
   */
  style: import_prop_types77.default.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: import_prop_types77.default.oneOfType([import_prop_types77.default.number, import_prop_types77.default.shape({
    appear: import_prop_types77.default.number,
    enter: import_prop_types77.default.number,
    exit: import_prop_types77.default.number
  })])
} : void 0;
var Fade_default = Fade;

// node_modules/@mui/material/Backdrop/backdropClasses.js
init_esm();
init_generateUtilityClass3();
function getBackdropUtilityClass(slot) {
  return generateUtilityClass("MuiBackdrop", slot);
}
var backdropClasses = generateUtilityClasses("MuiBackdrop", ["root", "invisible"]);

// node_modules/@mui/material/Backdrop/Backdrop.js
var import_jsx_runtime101 = __toESM(require_jsx_runtime());
var _excluded67 = ["children", "className", "component", "components", "componentsProps", "invisible", "open", "slotProps", "slots", "TransitionComponent", "transitionDuration"];
var useUtilityClasses43 = (ownerState) => {
  const {
    classes: classes2,
    invisible
  } = ownerState;
  const slots = {
    root: ["root", invisible && "invisible"]
  };
  return composeClasses(slots, getBackdropUtilityClass, classes2);
};
var BackdropRoot = styled_default2("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.invisible && styles7.invisible];
  }
})(({
  ownerState
}) => _extends({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent"
}, ownerState.invisible && {
  backgroundColor: "transparent"
}));
var Backdrop = React141.forwardRef(function Backdrop2(inProps, ref) {
  var _slotProps$root, _ref2, _slots$root;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiBackdrop"
  });
  const {
    children: children2,
    className,
    component = "div",
    components = {},
    componentsProps = {},
    invisible = false,
    open,
    slotProps = {},
    slots = {},
    TransitionComponent = Fade_default,
    transitionDuration
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded67);
  const ownerState = _extends({}, props, {
    component,
    invisible
  });
  const classes2 = useUtilityClasses43(ownerState);
  const rootSlotProps = (_slotProps$root = slotProps.root) != null ? _slotProps$root : componentsProps.root;
  return (0, import_jsx_runtime101.jsx)(TransitionComponent, _extends({
    in: open,
    timeout: transitionDuration
  }, other, {
    children: (0, import_jsx_runtime101.jsx)(BackdropRoot, _extends({
      "aria-hidden": true
    }, rootSlotProps, {
      as: (_ref2 = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref2 : component,
      className: clsx_default2(classes2.root, className, rootSlotProps == null ? void 0 : rootSlotProps.className),
      ownerState: _extends({}, ownerState, rootSlotProps == null ? void 0 : rootSlotProps.ownerState),
      classes: classes2,
      ref,
      children: children2
    }))
  }));
});
true ? Backdrop.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types78.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types78.default.object,
  /**
   * @ignore
   */
  className: import_prop_types78.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types78.default.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types78.default.shape({
    Root: import_prop_types78.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types78.default.shape({
    root: import_prop_types78.default.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: import_prop_types78.default.bool,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types78.default.bool.isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types78.default.shape({
    root: import_prop_types78.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types78.default.shape({
    root: import_prop_types78.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types78.default.oneOfType([import_prop_types78.default.arrayOf(import_prop_types78.default.oneOfType([import_prop_types78.default.func, import_prop_types78.default.object, import_prop_types78.default.bool])), import_prop_types78.default.func, import_prop_types78.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: import_prop_types78.default.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: import_prop_types78.default.oneOfType([import_prop_types78.default.number, import_prop_types78.default.shape({
    appear: import_prop_types78.default.number,
    enter: import_prop_types78.default.number,
    exit: import_prop_types78.default.number
  })])
} : void 0;
var Backdrop_default = Backdrop;

// node_modules/@mui/material/Badge/Badge.js
init_objectWithoutPropertiesLoose();
init_extends();
var React142 = __toESM(require_react());
var import_prop_types79 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/Badge/badgeClasses.js
init_esm();
init_generateUtilityClass3();
function getBadgeUtilityClass2(slot) {
  return generateUtilityClass("MuiBadge", slot);
}
var badgeClasses2 = generateUtilityClasses("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]);
var badgeClasses_default = badgeClasses2;

// node_modules/@mui/material/Badge/Badge.js
var import_jsx_runtime102 = __toESM(require_jsx_runtime());
var import_jsx_runtime103 = __toESM(require_jsx_runtime());
var _excluded68 = ["anchorOrigin", "className", "classes", "component", "components", "componentsProps", "children", "overlap", "color", "invisible", "max", "badgeContent", "slots", "slotProps", "showZero", "variant"];
var RADIUS_STANDARD = 10;
var RADIUS_DOT = 4;
var useUtilityClasses44 = (ownerState) => {
  const {
    color: color2,
    anchorOrigin,
    invisible,
    overlap,
    variant,
    classes: classes2 = {}
  } = ownerState;
  const slots = {
    root: ["root"],
    badge: ["badge", variant, invisible && "invisible", `anchorOrigin${capitalize_default(anchorOrigin.vertical)}${capitalize_default(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize_default(anchorOrigin.vertical)}${capitalize_default(anchorOrigin.horizontal)}${capitalize_default(overlap)}`, `overlap${capitalize_default(overlap)}`, color2 !== "default" && `color${capitalize_default(color2)}`]
  };
  return composeClasses(slots, getBadgeUtilityClass2, classes2);
};
var BadgeRoot = styled_default2("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
});
var BadgeBadge = styled_default2("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.badge, styles7[ownerState.variant], styles7[`anchorOrigin${capitalize_default(ownerState.anchorOrigin.vertical)}${capitalize_default(ownerState.anchorOrigin.horizontal)}${capitalize_default(ownerState.overlap)}`], ownerState.color !== "default" && styles7[`color${capitalize_default(ownerState.color)}`], ownerState.invisible && styles7.invisible];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: theme.typography.fontFamily,
  fontWeight: theme.typography.fontWeightMedium,
  fontSize: theme.typography.pxToRem(12),
  minWidth: RADIUS_STANDARD * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: RADIUS_STANDARD * 2,
  borderRadius: RADIUS_STANDARD,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: theme.transitions.create("transform", {
    easing: theme.transitions.easing.easeInOut,
    duration: theme.transitions.duration.enteringScreen
  })
}, ownerState.color !== "default" && {
  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,
  color: (theme.vars || theme).palette[ownerState.color].contrastText
}, ownerState.variant === "dot" && {
  borderRadius: RADIUS_DOT,
  height: RADIUS_DOT * 2,
  minWidth: RADIUS_DOT * 2,
  padding: 0
}, ownerState.anchorOrigin.vertical === "top" && ownerState.anchorOrigin.horizontal === "right" && ownerState.overlap === "rectangular" && {
  top: 0,
  right: 0,
  transform: "scale(1) translate(50%, -50%)",
  transformOrigin: "100% 0%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(50%, -50%)"
  }
}, ownerState.anchorOrigin.vertical === "bottom" && ownerState.anchorOrigin.horizontal === "right" && ownerState.overlap === "rectangular" && {
  bottom: 0,
  right: 0,
  transform: "scale(1) translate(50%, 50%)",
  transformOrigin: "100% 100%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(50%, 50%)"
  }
}, ownerState.anchorOrigin.vertical === "top" && ownerState.anchorOrigin.horizontal === "left" && ownerState.overlap === "rectangular" && {
  top: 0,
  left: 0,
  transform: "scale(1) translate(-50%, -50%)",
  transformOrigin: "0% 0%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(-50%, -50%)"
  }
}, ownerState.anchorOrigin.vertical === "bottom" && ownerState.anchorOrigin.horizontal === "left" && ownerState.overlap === "rectangular" && {
  bottom: 0,
  left: 0,
  transform: "scale(1) translate(-50%, 50%)",
  transformOrigin: "0% 100%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(-50%, 50%)"
  }
}, ownerState.anchorOrigin.vertical === "top" && ownerState.anchorOrigin.horizontal === "right" && ownerState.overlap === "circular" && {
  top: "14%",
  right: "14%",
  transform: "scale(1) translate(50%, -50%)",
  transformOrigin: "100% 0%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(50%, -50%)"
  }
}, ownerState.anchorOrigin.vertical === "bottom" && ownerState.anchorOrigin.horizontal === "right" && ownerState.overlap === "circular" && {
  bottom: "14%",
  right: "14%",
  transform: "scale(1) translate(50%, 50%)",
  transformOrigin: "100% 100%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(50%, 50%)"
  }
}, ownerState.anchorOrigin.vertical === "top" && ownerState.anchorOrigin.horizontal === "left" && ownerState.overlap === "circular" && {
  top: "14%",
  left: "14%",
  transform: "scale(1) translate(-50%, -50%)",
  transformOrigin: "0% 0%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(-50%, -50%)"
  }
}, ownerState.anchorOrigin.vertical === "bottom" && ownerState.anchorOrigin.horizontal === "left" && ownerState.overlap === "circular" && {
  bottom: "14%",
  left: "14%",
  transform: "scale(1) translate(-50%, 50%)",
  transformOrigin: "0% 100%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(-50%, 50%)"
  }
}, ownerState.invisible && {
  transition: theme.transitions.create("transform", {
    easing: theme.transitions.easing.easeInOut,
    duration: theme.transitions.duration.leavingScreen
  })
}));
var Badge3 = React142.forwardRef(function Badge4(inProps, ref) {
  var _ref2, _slots$root, _ref22, _slots$badge, _slotProps$root, _slotProps$badge;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiBadge"
  });
  const {
    anchorOrigin: anchorOriginProp = {
      vertical: "top",
      horizontal: "right"
    },
    className,
    component,
    components = {},
    componentsProps = {},
    children: children2,
    overlap: overlapProp = "rectangular",
    color: colorProp = "default",
    invisible: invisibleProp = false,
    max: maxProp = 99,
    badgeContent: badgeContentProp,
    slots,
    slotProps,
    showZero = false,
    variant: variantProp = "standard"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded68);
  const {
    badgeContent,
    invisible: invisibleFromHook,
    max: max3,
    displayValue: displayValueFromHook
  } = useBadge({
    max: maxProp,
    invisible: invisibleProp,
    badgeContent: badgeContentProp,
    showZero
  });
  const prevProps = usePreviousProps_default({
    anchorOrigin: anchorOriginProp,
    color: colorProp,
    overlap: overlapProp,
    variant: variantProp,
    badgeContent: badgeContentProp
  });
  const invisible = invisibleFromHook || badgeContent == null && variantProp !== "dot";
  const {
    color: color2 = colorProp,
    overlap = overlapProp,
    anchorOrigin = anchorOriginProp,
    variant = variantProp
  } = invisible ? prevProps : props;
  const displayValue = variant !== "dot" ? displayValueFromHook : void 0;
  const ownerState = _extends({}, props, {
    badgeContent,
    invisible,
    max: max3,
    displayValue,
    showZero,
    anchorOrigin,
    color: color2,
    overlap,
    variant
  });
  const classes2 = useUtilityClasses44(ownerState);
  const RootSlot = (_ref2 = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref2 : BadgeRoot;
  const BadgeSlot = (_ref22 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref22 : BadgeBadge;
  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;
  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;
  const rootProps = useSlotProps({
    elementType: RootSlot,
    externalSlotProps: rootSlotProps,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: clsx_default2(rootSlotProps == null ? void 0 : rootSlotProps.className, classes2.root, className)
  });
  const badgeProps = useSlotProps({
    elementType: BadgeSlot,
    externalSlotProps: badgeSlotProps,
    ownerState,
    className: clsx_default2(classes2.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)
  });
  return (0, import_jsx_runtime103.jsxs)(RootSlot, _extends({}, rootProps, {
    children: [children2, (0, import_jsx_runtime102.jsx)(BadgeSlot, _extends({}, badgeProps, {
      children: displayValue
    }))]
  }));
});
true ? Badge3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: import_prop_types79.default.shape({
    horizontal: import_prop_types79.default.oneOf(["left", "right"]).isRequired,
    vertical: import_prop_types79.default.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: import_prop_types79.default.node,
  /**
   * The badge will be added relative to this node.
   */
  children: import_prop_types79.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types79.default.object,
  /**
   * @ignore
   */
  className: import_prop_types79.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'default'
   */
  color: import_prop_types79.default.oneOfType([import_prop_types79.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types79.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types79.default.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types79.default.shape({
    Badge: import_prop_types79.default.elementType,
    Root: import_prop_types79.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types79.default.shape({
    badge: import_prop_types79.default.oneOfType([import_prop_types79.default.func, import_prop_types79.default.object]),
    root: import_prop_types79.default.oneOfType([import_prop_types79.default.func, import_prop_types79.default.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: import_prop_types79.default.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: import_prop_types79.default.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: import_prop_types79.default.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: import_prop_types79.default.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: import_prop_types79.default.shape({
    badge: import_prop_types79.default.oneOfType([import_prop_types79.default.func, import_prop_types79.default.object]),
    root: import_prop_types79.default.oneOfType([import_prop_types79.default.func, import_prop_types79.default.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types79.default.shape({
    badge: import_prop_types79.default.elementType,
    root: import_prop_types79.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types79.default.oneOfType([import_prop_types79.default.arrayOf(import_prop_types79.default.oneOfType([import_prop_types79.default.func, import_prop_types79.default.object, import_prop_types79.default.bool])), import_prop_types79.default.func, import_prop_types79.default.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: import_prop_types79.default.oneOfType([import_prop_types79.default.oneOf(["dot", "standard"]), import_prop_types79.default.string])
} : void 0;

// node_modules/@mui/material/BottomNavigation/BottomNavigation.js
init_extends();
init_objectWithoutPropertiesLoose();
var React143 = __toESM(require_react());
var import_react_is4 = __toESM(require_react_is3());
var import_prop_types80 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/BottomNavigation/bottomNavigationClasses.js
init_esm();
init_generateUtilityClass3();
function getBottomNavigationUtilityClass(slot) {
  return generateUtilityClass("MuiBottomNavigation", slot);
}
var bottomNavigationClasses = generateUtilityClasses("MuiBottomNavigation", ["root"]);

// node_modules/@mui/material/BottomNavigation/BottomNavigation.js
var import_jsx_runtime104 = __toESM(require_jsx_runtime());
var _excluded69 = ["children", "className", "component", "onChange", "showLabels", "value"];
var useUtilityClasses45 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getBottomNavigationUtilityClass, classes2);
};
var BottomNavigationRoot = styled_default2("div", {
  name: "MuiBottomNavigation",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(({
  theme
}) => ({
  display: "flex",
  justifyContent: "center",
  height: 56,
  backgroundColor: (theme.vars || theme).palette.background.paper
}));
var BottomNavigation = React143.forwardRef(function BottomNavigation2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiBottomNavigation"
  });
  const {
    children: children2,
    className,
    component = "div",
    onChange,
    showLabels = false,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded69);
  const ownerState = _extends({}, props, {
    component,
    showLabels
  });
  const classes2 = useUtilityClasses45(ownerState);
  return (0, import_jsx_runtime104.jsx)(BottomNavigationRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: React143.Children.map(children2, (child, childIndex) => {
      if (!React143.isValidElement(child)) {
        return null;
      }
      if (true) {
        if ((0, import_react_is4.isFragment)(child)) {
          console.error(["MUI: The BottomNavigation component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
        }
      }
      const childValue = child.props.value === void 0 ? childIndex : child.props.value;
      return React143.cloneElement(child, {
        selected: childValue === value,
        showLabel: child.props.showLabel !== void 0 ? child.props.showLabel : showLabels,
        value: childValue,
        onChange
      });
    })
  }));
});
true ? BottomNavigation.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types80.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types80.default.object,
  /**
   * @ignore
   */
  className: import_prop_types80.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types80.default.elementType,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child.
   */
  onChange: import_prop_types80.default.func,
  /**
   * If `true`, all `BottomNavigationAction`s will show their labels.
   * By default, only the selected `BottomNavigationAction` will show its label.
   * @default false
   */
  showLabels: import_prop_types80.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types80.default.oneOfType([import_prop_types80.default.arrayOf(import_prop_types80.default.oneOfType([import_prop_types80.default.func, import_prop_types80.default.object, import_prop_types80.default.bool])), import_prop_types80.default.func, import_prop_types80.default.object]),
  /**
   * The value of the currently selected `BottomNavigationAction`.
   */
  value: import_prop_types80.default.any
} : void 0;

// node_modules/@mui/material/BottomNavigationAction/BottomNavigationAction.js
init_objectWithoutPropertiesLoose();
init_extends();
var React144 = __toESM(require_react());
var import_prop_types81 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
init_unsupportedProp2();

// node_modules/@mui/material/BottomNavigationAction/bottomNavigationActionClasses.js
init_esm();
init_generateUtilityClass3();
function getBottomNavigationActionUtilityClass(slot) {
  return generateUtilityClass("MuiBottomNavigationAction", slot);
}
var bottomNavigationActionClasses = generateUtilityClasses("MuiBottomNavigationAction", ["root", "iconOnly", "selected", "label"]);
var bottomNavigationActionClasses_default = bottomNavigationActionClasses;

// node_modules/@mui/material/BottomNavigationAction/BottomNavigationAction.js
var import_jsx_runtime105 = __toESM(require_jsx_runtime());
var import_jsx_runtime106 = __toESM(require_jsx_runtime());
var _excluded70 = ["className", "icon", "label", "onChange", "onClick", "selected", "showLabel", "value"];
var useUtilityClasses46 = (ownerState) => {
  const {
    classes: classes2,
    showLabel,
    selected
  } = ownerState;
  const slots = {
    root: ["root", !showLabel && !selected && "iconOnly", selected && "selected"],
    label: ["label", !showLabel && !selected && "iconOnly", selected && "selected"]
  };
  return composeClasses(slots, getBottomNavigationActionUtilityClass, classes2);
};
var BottomNavigationActionRoot = styled_default2(ButtonBase_default, {
  name: "MuiBottomNavigationAction",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, !ownerState.showLabel && !ownerState.selected && styles7.iconOnly];
  }
})(({
  theme,
  ownerState
}) => _extends({
  transition: theme.transitions.create(["color", "padding-top"], {
    duration: theme.transitions.duration.short
  }),
  padding: "0px 12px",
  minWidth: 80,
  maxWidth: 168,
  color: (theme.vars || theme).palette.text.secondary,
  flexDirection: "column",
  flex: "1"
}, !ownerState.showLabel && !ownerState.selected && {
  paddingTop: 14
}, !ownerState.showLabel && !ownerState.selected && !ownerState.label && {
  paddingTop: 0
}, {
  [`&.${bottomNavigationActionClasses_default.selected}`]: {
    color: (theme.vars || theme).palette.primary.main
  }
}));
var BottomNavigationActionLabel = styled_default2("span", {
  name: "MuiBottomNavigationAction",
  slot: "Label",
  overridesResolver: (props, styles7) => styles7.label
})(({
  theme,
  ownerState
}) => _extends({
  fontFamily: theme.typography.fontFamily,
  fontSize: theme.typography.pxToRem(12),
  opacity: 1,
  transition: "font-size 0.2s, opacity 0.2s",
  transitionDelay: "0.1s"
}, !ownerState.showLabel && !ownerState.selected && {
  opacity: 0,
  transitionDelay: "0s"
}, {
  [`&.${bottomNavigationActionClasses_default.selected}`]: {
    fontSize: theme.typography.pxToRem(14)
  }
}));
var BottomNavigationAction = React144.forwardRef(function BottomNavigationAction2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiBottomNavigationAction"
  });
  const {
    className,
    icon,
    label,
    onChange,
    onClick,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded70);
  const ownerState = props;
  const classes2 = useUtilityClasses46(ownerState);
  const handleChange = (event) => {
    if (onChange) {
      onChange(event, value);
    }
    if (onClick) {
      onClick(event);
    }
  };
  return (0, import_jsx_runtime106.jsxs)(BottomNavigationActionRoot, _extends({
    ref,
    className: clsx_default2(classes2.root, className),
    focusRipple: true,
    onClick: handleChange,
    ownerState
  }, other, {
    children: [icon, (0, import_jsx_runtime105.jsx)(BottomNavigationActionLabel, {
      className: classes2.label,
      ownerState,
      children: label
    })]
  }));
});
true ? BottomNavigationAction.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: unsupportedProp_default,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types81.default.object,
  /**
   * @ignore
   */
  className: import_prop_types81.default.string,
  /**
   * The icon to display.
   */
  icon: import_prop_types81.default.node,
  /**
   * The label element.
   */
  label: import_prop_types81.default.node,
  /**
   * @ignore
   */
  onChange: import_prop_types81.default.func,
  /**
   * @ignore
   */
  onClick: import_prop_types81.default.func,
  /**
   * If `true`, the `BottomNavigationAction` will show its label.
   * By default, only the selected `BottomNavigationAction`
   * inside `BottomNavigation` will show its label.
   *
   * The prop defaults to the value (`false`) inherited from the parent BottomNavigation component.
   */
  showLabel: import_prop_types81.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types81.default.oneOfType([import_prop_types81.default.arrayOf(import_prop_types81.default.oneOfType([import_prop_types81.default.func, import_prop_types81.default.object, import_prop_types81.default.bool])), import_prop_types81.default.func, import_prop_types81.default.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: import_prop_types81.default.any
} : void 0;

// node_modules/@mui/material/Box/Box.js
init_esm2();
var import_prop_types82 = __toESM(require_prop_types());

// node_modules/@mui/material/className/index.js
init_esm();

// node_modules/@mui/material/Box/Box.js
init_identifier();
var defaultTheme6 = createTheme_default2();
var Box2 = createBox({
  themeId: identifier_default,
  defaultTheme: defaultTheme6,
  defaultClassName: "MuiBox-root",
  generateClassName: ClassNameGenerator_default.generate
});
true ? Box2.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types82.default.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types82.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types82.default.oneOfType([import_prop_types82.default.arrayOf(import_prop_types82.default.oneOfType([import_prop_types82.default.func, import_prop_types82.default.object, import_prop_types82.default.bool])), import_prop_types82.default.func, import_prop_types82.default.object])
} : void 0;
var Box_default2 = Box2;

// node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js
init_extends();
init_objectWithoutPropertiesLoose();
var React147 = __toESM(require_react());
var import_react_is5 = __toESM(require_react_is3());
var import_prop_types84 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js
init_objectWithoutPropertiesLoose();
init_extends();
var React146 = __toESM(require_react());
var import_prop_types83 = __toESM(require_prop_types());
init_esm2();
init_styled2();

// node_modules/@mui/material/internal/svg-icons/MoreHoriz.js
var React145 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime107 = __toESM(require_jsx_runtime());
var MoreHoriz_default = createSvgIcon((0, import_jsx_runtime107.jsx)("path", {
  d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "MoreHoriz");

// node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js
var import_jsx_runtime108 = __toESM(require_jsx_runtime());
var _excluded71 = ["slots", "slotProps"];
var BreadcrumbCollapsedButton = styled_default2(ButtonBase_default)(({
  theme
}) => _extends({
  display: "flex",
  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,
  marginRight: `calc(${theme.spacing(1)} * 0.5)`
}, theme.palette.mode === "light" ? {
  backgroundColor: theme.palette.grey[100],
  color: theme.palette.grey[700]
} : {
  backgroundColor: theme.palette.grey[700],
  color: theme.palette.grey[100]
}, {
  borderRadius: 2,
  "&:hover, &:focus": _extends({}, theme.palette.mode === "light" ? {
    backgroundColor: theme.palette.grey[200]
  } : {
    backgroundColor: theme.palette.grey[600]
  }),
  "&:active": _extends({
    boxShadow: theme.shadows[0]
  }, theme.palette.mode === "light" ? {
    backgroundColor: emphasize(theme.palette.grey[200], 0.12)
  } : {
    backgroundColor: emphasize(theme.palette.grey[600], 0.12)
  })
}));
var BreadcrumbCollapsedIcon = styled_default2(MoreHoriz_default)({
  width: 24,
  height: 16
});
function BreadcrumbCollapsed(props) {
  const {
    slots = {},
    slotProps = {}
  } = props, otherProps = _objectWithoutPropertiesLoose(props, _excluded71);
  const ownerState = props;
  return (0, import_jsx_runtime108.jsx)("li", {
    children: (0, import_jsx_runtime108.jsx)(BreadcrumbCollapsedButton, _extends({
      focusRipple: true
    }, otherProps, {
      ownerState,
      children: (0, import_jsx_runtime108.jsx)(BreadcrumbCollapsedIcon, _extends({
        as: slots.CollapsedIcon,
        ownerState
      }, slotProps.collapsedIcon))
    }))
  });
}
true ? BreadcrumbCollapsed.propTypes = {
  /**
   * The props used for the CollapsedIcon slot.
   * @default {}
   */
  slotProps: import_prop_types83.default.shape({
    collapsedIcon: import_prop_types83.default.oneOfType([import_prop_types83.default.func, import_prop_types83.default.object])
  }),
  /**
   * The components used for each slot inside the BreadcumbCollapsed.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types83.default.shape({
    CollapsedIcon: import_prop_types83.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types83.default.object
} : void 0;
var BreadcrumbCollapsed_default = BreadcrumbCollapsed;

// node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js
init_esm();
init_generateUtilityClass3();
function getBreadcrumbsUtilityClass(slot) {
  return generateUtilityClass("MuiBreadcrumbs", slot);
}
var breadcrumbsClasses = generateUtilityClasses("MuiBreadcrumbs", ["root", "ol", "li", "separator"]);
var breadcrumbsClasses_default = breadcrumbsClasses;

// node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js
var import_jsx_runtime109 = __toESM(require_jsx_runtime());
var _excluded72 = ["children", "className", "component", "slots", "slotProps", "expandText", "itemsAfterCollapse", "itemsBeforeCollapse", "maxItems", "separator"];
var useUtilityClasses47 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    li: ["li"],
    ol: ["ol"],
    separator: ["separator"]
  };
  return composeClasses(slots, getBreadcrumbsUtilityClass, classes2);
};
var BreadcrumbsRoot = styled_default2(Typography_default, {
  name: "MuiBreadcrumbs",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    return [{
      [`& .${breadcrumbsClasses_default.li}`]: styles7.li
    }, styles7.root];
  }
})({});
var BreadcrumbsOl = styled_default2("ol", {
  name: "MuiBreadcrumbs",
  slot: "Ol",
  overridesResolver: (props, styles7) => styles7.ol
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
var BreadcrumbsSeparator = styled_default2("li", {
  name: "MuiBreadcrumbs",
  slot: "Separator",
  overridesResolver: (props, styles7) => styles7.separator
})({
  display: "flex",
  userSelect: "none",
  marginLeft: 8,
  marginRight: 8
});
function insertSeparators(items, className, separator, ownerState) {
  return items.reduce((acc, current, index2) => {
    if (index2 < items.length - 1) {
      acc = acc.concat(current, (0, import_jsx_runtime109.jsx)(BreadcrumbsSeparator, {
        "aria-hidden": true,
        className,
        ownerState,
        children: separator
      }, `separator-${index2}`));
    } else {
      acc.push(current);
    }
    return acc;
  }, []);
}
var Breadcrumbs = React147.forwardRef(function Breadcrumbs2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiBreadcrumbs"
  });
  const {
    children: children2,
    className,
    component = "nav",
    slots = {},
    slotProps = {},
    expandText = "Show path",
    itemsAfterCollapse = 1,
    itemsBeforeCollapse = 1,
    maxItems = 8,
    separator = "/"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded72);
  const [expanded, setExpanded] = React147.useState(false);
  const ownerState = _extends({}, props, {
    component,
    expanded,
    expandText,
    itemsAfterCollapse,
    itemsBeforeCollapse,
    maxItems,
    separator
  });
  const classes2 = useUtilityClasses47(ownerState);
  const collapsedIconSlotProps = useSlotProps({
    elementType: slots.CollapsedIcon,
    externalSlotProps: slotProps.collapsedIcon,
    ownerState
  });
  const listRef = React147.useRef(null);
  const renderItemsBeforeAndAfter = (allItems2) => {
    const handleClickExpand = () => {
      setExpanded(true);
      const focusable = listRef.current.querySelector("a[href],button,[tabindex]");
      if (focusable) {
        focusable.focus();
      }
    };
    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems2.length) {
      if (true) {
        console.error(["MUI: You have provided an invalid combination of props to the Breadcrumbs.", `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join("\n"));
      }
      return allItems2;
    }
    return [...allItems2.slice(0, itemsBeforeCollapse), (0, import_jsx_runtime109.jsx)(BreadcrumbCollapsed_default, {
      "aria-label": expandText,
      slots: {
        CollapsedIcon: slots.CollapsedIcon
      },
      slotProps: {
        collapsedIcon: collapsedIconSlotProps
      },
      onClick: handleClickExpand
    }, "ellipsis"), ...allItems2.slice(allItems2.length - itemsAfterCollapse, allItems2.length)];
  };
  const allItems = React147.Children.toArray(children2).filter((child) => {
    if (true) {
      if ((0, import_react_is5.isFragment)(child)) {
        console.error(["MUI: The Breadcrumbs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return React147.isValidElement(child);
  }).map((child, index2) => (0, import_jsx_runtime109.jsx)("li", {
    className: classes2.li,
    children: child
  }, `child-${index2}`));
  return (0, import_jsx_runtime109.jsx)(BreadcrumbsRoot, _extends({
    ref,
    component,
    color: "text.secondary",
    className: clsx_default2(classes2.root, className),
    ownerState
  }, other, {
    children: (0, import_jsx_runtime109.jsx)(BreadcrumbsOl, {
      className: classes2.ol,
      ref: listRef,
      ownerState,
      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes2.separator, separator, ownerState)
    })
  }));
});
true ? Breadcrumbs.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types84.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types84.default.object,
  /**
   * @ignore
   */
  className: import_prop_types84.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types84.default.elementType,
  /**
   * Override the default label for the expand button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Show path'
   */
  expandText: import_prop_types84.default.string,
  /**
   * If max items is exceeded, the number of items to show after the ellipsis.
   * @default 1
   */
  itemsAfterCollapse: integerPropType_default,
  /**
   * If max items is exceeded, the number of items to show before the ellipsis.
   * @default 1
   */
  itemsBeforeCollapse: integerPropType_default,
  /**
   * Specifies the maximum number of breadcrumbs to display. When there are more
   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`
   * will be shown, with an ellipsis in between.
   * @default 8
   */
  maxItems: integerPropType_default,
  /**
   * Custom separator node.
   * @default '/'
   */
  separator: import_prop_types84.default.node,
  /**
   * The props used for each slot inside the Breadcumb.
   * @default {}
   */
  slotProps: import_prop_types84.default.shape({
    collapsedIcon: import_prop_types84.default.oneOfType([import_prop_types84.default.func, import_prop_types84.default.object])
  }),
  /**
   * The components used for each slot inside the Breadcumb.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types84.default.shape({
    CollapsedIcon: import_prop_types84.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types84.default.oneOfType([import_prop_types84.default.arrayOf(import_prop_types84.default.oneOfType([import_prop_types84.default.func, import_prop_types84.default.object, import_prop_types84.default.bool])), import_prop_types84.default.func, import_prop_types84.default.object])
} : void 0;

// node_modules/@mui/material/Button/Button.js
init_objectWithoutPropertiesLoose();
init_extends();
var React149 = __toESM(require_react());
var import_prop_types85 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_esm2();
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/Button/buttonClasses.js
init_esm();
init_generateUtilityClass3();
function getButtonUtilityClass2(slot) {
  return generateUtilityClass("MuiButton", slot);
}
var buttonClasses2 = generateUtilityClasses("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]);
var buttonClasses_default = buttonClasses2;

// node_modules/@mui/material/ButtonGroup/ButtonGroupContext.js
var React148 = __toESM(require_react());
var ButtonGroupContext = React148.createContext({});
if (true) {
  ButtonGroupContext.displayName = "ButtonGroupContext";
}
var ButtonGroupContext_default = ButtonGroupContext;

// node_modules/@mui/material/Button/Button.js
var import_jsx_runtime110 = __toESM(require_jsx_runtime());
var import_jsx_runtime111 = __toESM(require_jsx_runtime());
var _excluded73 = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"];
var useUtilityClasses48 = (ownerState) => {
  const {
    color: color2,
    disableElevation,
    fullWidth,
    size: size2,
    variant,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", variant, `${variant}${capitalize_default(color2)}`, `size${capitalize_default(size2)}`, `${variant}Size${capitalize_default(size2)}`, color2 === "inherit" && "colorInherit", disableElevation && "disableElevation", fullWidth && "fullWidth"],
    label: ["label"],
    startIcon: ["startIcon", `iconSize${capitalize_default(size2)}`],
    endIcon: ["endIcon", `iconSize${capitalize_default(size2)}`]
  };
  const composedClasses = composeClasses(slots, getButtonUtilityClass2, classes2);
  return _extends({}, classes2, composedClasses);
};
var commonIconStyles = (ownerState) => _extends({}, ownerState.size === "small" && {
  "& > *:nth-of-type(1)": {
    fontSize: 18
  }
}, ownerState.size === "medium" && {
  "& > *:nth-of-type(1)": {
    fontSize: 20
  }
}, ownerState.size === "large" && {
  "& > *:nth-of-type(1)": {
    fontSize: 22
  }
});
var ButtonRoot = styled_default2(ButtonBase_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant], styles7[`${ownerState.variant}${capitalize_default(ownerState.color)}`], styles7[`size${capitalize_default(ownerState.size)}`], styles7[`${ownerState.variant}Size${capitalize_default(ownerState.size)}`], ownerState.color === "inherit" && styles7.colorInherit, ownerState.disableElevation && styles7.disableElevation, ownerState.fullWidth && styles7.fullWidth];
  }
})(({
  theme,
  ownerState
}) => {
  var _theme$palette$getCon, _theme$palette;
  const inheritContainedBackgroundColor = theme.palette.mode === "light" ? theme.palette.grey[300] : theme.palette.grey[800];
  const inheritContainedHoverBackgroundColor = theme.palette.mode === "light" ? theme.palette.grey.A100 : theme.palette.grey[700];
  return _extends({}, theme.typography.button, {
    minWidth: 64,
    padding: "6px 16px",
    borderRadius: (theme.vars || theme).shape.borderRadius,
    transition: theme.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: theme.transitions.duration.short
    }),
    "&:hover": _extends({
      textDecoration: "none",
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ownerState.variant === "text" && ownerState.color !== "inherit" && {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ownerState.variant === "outlined" && ownerState.color !== "inherit" && {
      border: `1px solid ${(theme.vars || theme).palette[ownerState.color].main}`,
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ownerState.variant === "contained" && {
      backgroundColor: theme.vars ? theme.vars.palette.Button.inheritContainedHoverBg : inheritContainedHoverBackgroundColor,
      boxShadow: (theme.vars || theme).shadows[4],
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        boxShadow: (theme.vars || theme).shadows[2],
        backgroundColor: (theme.vars || theme).palette.grey[300]
      }
    }, ownerState.variant === "contained" && ownerState.color !== "inherit" && {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (theme.vars || theme).palette[ownerState.color].main
      }
    }),
    "&:active": _extends({}, ownerState.variant === "contained" && {
      boxShadow: (theme.vars || theme).shadows[8]
    }),
    [`&.${buttonClasses_default.focusVisible}`]: _extends({}, ownerState.variant === "contained" && {
      boxShadow: (theme.vars || theme).shadows[6]
    }),
    [`&.${buttonClasses_default.disabled}`]: _extends({
      color: (theme.vars || theme).palette.action.disabled
    }, ownerState.variant === "outlined" && {
      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`
    }, ownerState.variant === "contained" && {
      color: (theme.vars || theme).palette.action.disabled,
      boxShadow: (theme.vars || theme).shadows[0],
      backgroundColor: (theme.vars || theme).palette.action.disabledBackground
    })
  }, ownerState.variant === "text" && {
    padding: "6px 8px"
  }, ownerState.variant === "text" && ownerState.color !== "inherit" && {
    color: (theme.vars || theme).palette[ownerState.color].main
  }, ownerState.variant === "outlined" && {
    padding: "5px 15px",
    border: "1px solid currentColor"
  }, ownerState.variant === "outlined" && ownerState.color !== "inherit" && {
    color: (theme.vars || theme).palette[ownerState.color].main,
    border: theme.vars ? `1px solid rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : `1px solid ${alpha(theme.palette[ownerState.color].main, 0.5)}`
  }, ownerState.variant === "contained" && {
    color: theme.vars ? (
      // this is safe because grey does not change between default light/dark mode
      theme.vars.palette.text.primary
    ) : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),
    backgroundColor: theme.vars ? theme.vars.palette.Button.inheritContainedBg : inheritContainedBackgroundColor,
    boxShadow: (theme.vars || theme).shadows[2]
  }, ownerState.variant === "contained" && ownerState.color !== "inherit" && {
    color: (theme.vars || theme).palette[ownerState.color].contrastText,
    backgroundColor: (theme.vars || theme).palette[ownerState.color].main
  }, ownerState.color === "inherit" && {
    color: "inherit",
    borderColor: "currentColor"
  }, ownerState.size === "small" && ownerState.variant === "text" && {
    padding: "4px 5px",
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === "large" && ownerState.variant === "text" && {
    padding: "8px 11px",
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.size === "small" && ownerState.variant === "outlined" && {
    padding: "3px 9px",
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === "large" && ownerState.variant === "outlined" && {
    padding: "7px 21px",
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.size === "small" && ownerState.variant === "contained" && {
    padding: "4px 10px",
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === "large" && ownerState.variant === "contained" && {
    padding: "8px 22px",
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.fullWidth && {
    width: "100%"
  });
}, ({
  ownerState
}) => ownerState.disableElevation && {
  boxShadow: "none",
  "&:hover": {
    boxShadow: "none"
  },
  [`&.${buttonClasses_default.focusVisible}`]: {
    boxShadow: "none"
  },
  "&:active": {
    boxShadow: "none"
  },
  [`&.${buttonClasses_default.disabled}`]: {
    boxShadow: "none"
  }
});
var ButtonStartIcon = styled_default2("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.startIcon, styles7[`iconSize${capitalize_default(ownerState.size)}`]];
  }
})(({
  ownerState
}) => _extends({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4
}, ownerState.size === "small" && {
  marginLeft: -2
}, commonIconStyles(ownerState)));
var ButtonEndIcon = styled_default2("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.endIcon, styles7[`iconSize${capitalize_default(ownerState.size)}`]];
  }
})(({
  ownerState
}) => _extends({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8
}, ownerState.size === "small" && {
  marginRight: -2
}, commonIconStyles(ownerState)));
var Button3 = React149.forwardRef(function Button4(inProps, ref) {
  const contextProps = React149.useContext(ButtonGroupContext_default);
  const resolvedProps = resolveProps(contextProps, inProps);
  const props = useThemeProps2({
    props: resolvedProps,
    name: "MuiButton"
  });
  const {
    children: children2,
    color: color2 = "primary",
    component = "button",
    className,
    disabled = false,
    disableElevation = false,
    disableFocusRipple = false,
    endIcon: endIconProp,
    focusVisibleClassName,
    fullWidth = false,
    size: size2 = "medium",
    startIcon: startIconProp,
    type,
    variant = "text"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded73);
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    disabled,
    disableElevation,
    disableFocusRipple,
    fullWidth,
    size: size2,
    type,
    variant
  });
  const classes2 = useUtilityClasses48(ownerState);
  const startIcon = startIconProp && (0, import_jsx_runtime110.jsx)(ButtonStartIcon, {
    className: classes2.startIcon,
    ownerState,
    children: startIconProp
  });
  const endIcon = endIconProp && (0, import_jsx_runtime110.jsx)(ButtonEndIcon, {
    className: classes2.endIcon,
    ownerState,
    children: endIconProp
  });
  return (0, import_jsx_runtime111.jsxs)(ButtonRoot, _extends({
    ownerState,
    className: clsx_default2(contextProps.className, classes2.root, className),
    component,
    disabled,
    focusRipple: !disableFocusRipple,
    focusVisibleClassName: clsx_default2(classes2.focusVisible, focusVisibleClassName),
    ref,
    type
  }, other, {
    classes: classes2,
    children: [startIcon, children2, endIcon]
  }));
});
true ? Button3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types85.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types85.default.object,
  /**
   * @ignore
   */
  className: import_prop_types85.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types85.default.oneOfType([import_prop_types85.default.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), import_prop_types85.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types85.default.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types85.default.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: import_prop_types85.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types85.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: import_prop_types85.default.bool,
  /**
   * Element placed after the children.
   */
  endIcon: import_prop_types85.default.node,
  /**
   * @ignore
   */
  focusVisibleClassName: import_prop_types85.default.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types85.default.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: import_prop_types85.default.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: import_prop_types85.default.oneOfType([import_prop_types85.default.oneOf(["small", "medium", "large"]), import_prop_types85.default.string]),
  /**
   * Element placed before the children.
   */
  startIcon: import_prop_types85.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types85.default.oneOfType([import_prop_types85.default.arrayOf(import_prop_types85.default.oneOfType([import_prop_types85.default.func, import_prop_types85.default.object, import_prop_types85.default.bool])), import_prop_types85.default.func, import_prop_types85.default.object]),
  /**
   * @ignore
   */
  type: import_prop_types85.default.oneOfType([import_prop_types85.default.oneOf(["button", "reset", "submit"]), import_prop_types85.default.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: import_prop_types85.default.oneOfType([import_prop_types85.default.oneOf(["contained", "outlined", "text"]), import_prop_types85.default.string])
} : void 0;
var Button_default = Button3;

// node_modules/@mui/material/ButtonGroup/ButtonGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React150 = __toESM(require_react());
var import_prop_types86 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_capitalize3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/ButtonGroup/buttonGroupClasses.js
init_esm();
init_generateUtilityClass3();
function getButtonGroupUtilityClass(slot) {
  return generateUtilityClass("MuiButtonGroup", slot);
}
var buttonGroupClasses = generateUtilityClasses("MuiButtonGroup", ["root", "contained", "outlined", "text", "disableElevation", "disabled", "fullWidth", "vertical", "grouped", "groupedHorizontal", "groupedVertical", "groupedText", "groupedTextHorizontal", "groupedTextVertical", "groupedTextPrimary", "groupedTextSecondary", "groupedOutlined", "groupedOutlinedHorizontal", "groupedOutlinedVertical", "groupedOutlinedPrimary", "groupedOutlinedSecondary", "groupedContained", "groupedContainedHorizontal", "groupedContainedVertical", "groupedContainedPrimary", "groupedContainedSecondary"]);
var buttonGroupClasses_default = buttonGroupClasses;

// node_modules/@mui/material/ButtonGroup/ButtonGroup.js
var import_jsx_runtime112 = __toESM(require_jsx_runtime());
var _excluded74 = ["children", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "disableRipple", "fullWidth", "orientation", "size", "variant"];
var overridesResolver = (props, styles7) => {
  const {
    ownerState
  } = props;
  return [{
    [`& .${buttonGroupClasses_default.grouped}`]: styles7.grouped
  }, {
    [`& .${buttonGroupClasses_default.grouped}`]: styles7[`grouped${capitalize_default(ownerState.orientation)}`]
  }, {
    [`& .${buttonGroupClasses_default.grouped}`]: styles7[`grouped${capitalize_default(ownerState.variant)}`]
  }, {
    [`& .${buttonGroupClasses_default.grouped}`]: styles7[`grouped${capitalize_default(ownerState.variant)}${capitalize_default(ownerState.orientation)}`]
  }, {
    [`& .${buttonGroupClasses_default.grouped}`]: styles7[`grouped${capitalize_default(ownerState.variant)}${capitalize_default(ownerState.color)}`]
  }, styles7.root, styles7[ownerState.variant], ownerState.disableElevation === true && styles7.disableElevation, ownerState.fullWidth && styles7.fullWidth, ownerState.orientation === "vertical" && styles7.vertical];
};
var useUtilityClasses49 = (ownerState) => {
  const {
    classes: classes2,
    color: color2,
    disabled,
    disableElevation,
    fullWidth,
    orientation,
    variant
  } = ownerState;
  const slots = {
    root: ["root", variant, orientation === "vertical" && "vertical", fullWidth && "fullWidth", disableElevation && "disableElevation"],
    grouped: ["grouped", `grouped${capitalize_default(orientation)}`, `grouped${capitalize_default(variant)}`, `grouped${capitalize_default(variant)}${capitalize_default(orientation)}`, `grouped${capitalize_default(variant)}${capitalize_default(color2)}`, disabled && "disabled"]
  };
  return composeClasses(slots, getButtonGroupUtilityClass, classes2);
};
var ButtonGroupRoot = styled_default2("div", {
  name: "MuiButtonGroup",
  slot: "Root",
  overridesResolver
})(({
  theme,
  ownerState
}) => _extends({
  display: "inline-flex",
  borderRadius: (theme.vars || theme).shape.borderRadius
}, ownerState.variant === "contained" && {
  boxShadow: (theme.vars || theme).shadows[2]
}, ownerState.disableElevation && {
  boxShadow: "none"
}, ownerState.fullWidth && {
  width: "100%"
}, ownerState.orientation === "vertical" && {
  flexDirection: "column"
}, {
  [`& .${buttonGroupClasses_default.grouped}`]: _extends({
    minWidth: 40,
    "&:not(:first-of-type)": _extends({}, ownerState.orientation === "horizontal" && {
      borderTopLeftRadius: 0,
      borderBottomLeftRadius: 0
    }, ownerState.orientation === "vertical" && {
      borderTopRightRadius: 0,
      borderTopLeftRadius: 0
    }, ownerState.variant === "outlined" && ownerState.orientation === "horizontal" && {
      marginLeft: -1
    }, ownerState.variant === "outlined" && ownerState.orientation === "vertical" && {
      marginTop: -1
    }),
    "&:not(:last-of-type)": _extends({}, ownerState.orientation === "horizontal" && {
      borderTopRightRadius: 0,
      borderBottomRightRadius: 0
    }, ownerState.orientation === "vertical" && {
      borderBottomRightRadius: 0,
      borderBottomLeftRadius: 0
    }, ownerState.variant === "text" && ownerState.orientation === "horizontal" && {
      borderRight: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
      [`&.${buttonGroupClasses_default.disabled}`]: {
        borderRight: `1px solid ${(theme.vars || theme).palette.action.disabled}`
      }
    }, ownerState.variant === "text" && ownerState.orientation === "vertical" && {
      borderBottom: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
      [`&.${buttonGroupClasses_default.disabled}`]: {
        borderBottom: `1px solid ${(theme.vars || theme).palette.action.disabled}`
      }
    }, ownerState.variant === "text" && ownerState.color !== "inherit" && {
      borderColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : alpha(theme.palette[ownerState.color].main, 0.5)
    }, ownerState.variant === "outlined" && ownerState.orientation === "horizontal" && {
      borderRightColor: "transparent"
    }, ownerState.variant === "outlined" && ownerState.orientation === "vertical" && {
      borderBottomColor: "transparent"
    }, ownerState.variant === "contained" && ownerState.orientation === "horizontal" && {
      borderRight: `1px solid ${(theme.vars || theme).palette.grey[400]}`,
      [`&.${buttonGroupClasses_default.disabled}`]: {
        borderRight: `1px solid ${(theme.vars || theme).palette.action.disabled}`
      }
    }, ownerState.variant === "contained" && ownerState.orientation === "vertical" && {
      borderBottom: `1px solid ${(theme.vars || theme).palette.grey[400]}`,
      [`&.${buttonGroupClasses_default.disabled}`]: {
        borderBottom: `1px solid ${(theme.vars || theme).palette.action.disabled}`
      }
    }, ownerState.variant === "contained" && ownerState.color !== "inherit" && {
      borderColor: (theme.vars || theme).palette[ownerState.color].dark
    }, {
      "&:hover": _extends({}, ownerState.variant === "outlined" && ownerState.orientation === "horizontal" && {
        borderRightColor: "currentColor"
      }, ownerState.variant === "outlined" && ownerState.orientation === "vertical" && {
        borderBottomColor: "currentColor"
      })
    }),
    "&:hover": _extends({}, ownerState.variant === "contained" && {
      boxShadow: "none"
    })
  }, ownerState.variant === "contained" && {
    boxShadow: "none"
  })
}));
var ButtonGroup = React150.forwardRef(function ButtonGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiButtonGroup"
  });
  const {
    children: children2,
    className,
    color: color2 = "primary",
    component = "div",
    disabled = false,
    disableElevation = false,
    disableFocusRipple = false,
    disableRipple = false,
    fullWidth = false,
    orientation = "horizontal",
    size: size2 = "medium",
    variant = "outlined"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded74);
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    disabled,
    disableElevation,
    disableFocusRipple,
    disableRipple,
    fullWidth,
    orientation,
    size: size2,
    variant
  });
  const classes2 = useUtilityClasses49(ownerState);
  const context = React150.useMemo(() => ({
    className: classes2.grouped,
    color: color2,
    disabled,
    disableElevation,
    disableFocusRipple,
    disableRipple,
    fullWidth,
    size: size2,
    variant
  }), [color2, disabled, disableElevation, disableFocusRipple, disableRipple, fullWidth, size2, variant, classes2.grouped]);
  return (0, import_jsx_runtime112.jsx)(ButtonGroupRoot, _extends({
    as: component,
    role: "group",
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime112.jsx)(ButtonGroupContext_default.Provider, {
      value: context,
      children: children2
    })
  }));
});
true ? ButtonGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types86.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types86.default.object,
  /**
   * @ignore
   */
  className: import_prop_types86.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types86.default.oneOfType([import_prop_types86.default.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types86.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types86.default.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types86.default.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: import_prop_types86.default.bool,
  /**
   * If `true`, the button keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types86.default.bool,
  /**
   * If `true`, the button ripple effect is disabled.
   * @default false
   */
  disableRipple: import_prop_types86.default.bool,
  /**
   * If `true`, the buttons will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types86.default.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: import_prop_types86.default.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: import_prop_types86.default.oneOfType([import_prop_types86.default.oneOf(["small", "medium", "large"]), import_prop_types86.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types86.default.oneOfType([import_prop_types86.default.arrayOf(import_prop_types86.default.oneOfType([import_prop_types86.default.func, import_prop_types86.default.object, import_prop_types86.default.bool])), import_prop_types86.default.func, import_prop_types86.default.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: import_prop_types86.default.oneOfType([import_prop_types86.default.oneOf(["contained", "outlined", "text"]), import_prop_types86.default.string])
} : void 0;

// node_modules/@mui/material/Card/Card.js
init_extends();
init_objectWithoutPropertiesLoose();
var React151 = __toESM(require_react());
var import_prop_types87 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Card/cardClasses.js
init_esm();
init_generateUtilityClass3();
function getCardUtilityClass(slot) {
  return generateUtilityClass("MuiCard", slot);
}
var cardClasses = generateUtilityClasses("MuiCard", ["root"]);

// node_modules/@mui/material/Card/Card.js
var import_jsx_runtime113 = __toESM(require_jsx_runtime());
var _excluded75 = ["className", "raised"];
var useUtilityClasses50 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getCardUtilityClass, classes2);
};
var CardRoot = styled_default2(Paper_default, {
  name: "MuiCard",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(() => {
  return {
    overflow: "hidden"
  };
});
var Card = React151.forwardRef(function Card2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCard"
  });
  const {
    className,
    raised = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded75);
  const ownerState = _extends({}, props, {
    raised
  });
  const classes2 = useUtilityClasses50(ownerState);
  return (0, import_jsx_runtime113.jsx)(CardRoot, _extends({
    className: clsx_default2(classes2.root, className),
    elevation: raised ? 8 : void 0,
    ref,
    ownerState
  }, other));
});
true ? Card.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types87.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types87.default.object,
  /**
   * @ignore
   */
  className: import_prop_types87.default.string,
  /**
   * If `true`, the card will use raised styling.
   * @default false
   */
  raised: chainPropTypes(import_prop_types87.default.bool, (props) => {
    if (props.raised && props.variant === "outlined") {
      return new Error('MUI: Combining `raised={true}` with `variant="outlined"` has no effect.');
    }
    return null;
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types87.default.oneOfType([import_prop_types87.default.arrayOf(import_prop_types87.default.oneOfType([import_prop_types87.default.func, import_prop_types87.default.object, import_prop_types87.default.bool])), import_prop_types87.default.func, import_prop_types87.default.object])
} : void 0;
var Card_default = Card;

// node_modules/@mui/material/CardActionArea/CardActionArea.js
init_extends();
init_objectWithoutPropertiesLoose();
var React152 = __toESM(require_react());
var import_prop_types88 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js
init_esm();
init_generateUtilityClass3();
function getCardActionAreaUtilityClass(slot) {
  return generateUtilityClass("MuiCardActionArea", slot);
}
var cardActionAreaClasses = generateUtilityClasses("MuiCardActionArea", ["root", "focusVisible", "focusHighlight"]);
var cardActionAreaClasses_default = cardActionAreaClasses;

// node_modules/@mui/material/CardActionArea/CardActionArea.js
var import_jsx_runtime114 = __toESM(require_jsx_runtime());
var import_jsx_runtime115 = __toESM(require_jsx_runtime());
var _excluded76 = ["children", "className", "focusVisibleClassName"];
var useUtilityClasses51 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    focusHighlight: ["focusHighlight"]
  };
  return composeClasses(slots, getCardActionAreaUtilityClass, classes2);
};
var CardActionAreaRoot = styled_default2(ButtonBase_default, {
  name: "MuiCardActionArea",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(({
  theme
}) => ({
  display: "block",
  textAlign: "inherit",
  borderRadius: "inherit",
  // for Safari to work https://github.com/mui/material-ui/issues/36285.
  width: "100%",
  [`&:hover .${cardActionAreaClasses_default.focusHighlight}`]: {
    opacity: (theme.vars || theme).palette.action.hoverOpacity,
    "@media (hover: none)": {
      opacity: 0
    }
  },
  [`&.${cardActionAreaClasses_default.focusVisible} .${cardActionAreaClasses_default.focusHighlight}`]: {
    opacity: (theme.vars || theme).palette.action.focusOpacity
  }
}));
var CardActionAreaFocusHighlight = styled_default2("span", {
  name: "MuiCardActionArea",
  slot: "FocusHighlight",
  overridesResolver: (props, styles7) => styles7.focusHighlight
})(({
  theme
}) => ({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit",
  opacity: 0,
  backgroundColor: "currentcolor",
  transition: theme.transitions.create("opacity", {
    duration: theme.transitions.duration.short
  })
}));
var CardActionArea = React152.forwardRef(function CardActionArea2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCardActionArea"
  });
  const {
    children: children2,
    className,
    focusVisibleClassName
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded76);
  const ownerState = props;
  const classes2 = useUtilityClasses51(ownerState);
  return (0, import_jsx_runtime115.jsxs)(CardActionAreaRoot, _extends({
    className: clsx_default2(classes2.root, className),
    focusVisibleClassName: clsx_default2(focusVisibleClassName, classes2.focusVisible),
    ref,
    ownerState
  }, other, {
    children: [children2, (0, import_jsx_runtime114.jsx)(CardActionAreaFocusHighlight, {
      className: classes2.focusHighlight,
      ownerState
    })]
  }));
});
true ? CardActionArea.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types88.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types88.default.object,
  /**
   * @ignore
   */
  className: import_prop_types88.default.string,
  /**
   * @ignore
   */
  focusVisibleClassName: import_prop_types88.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types88.default.oneOfType([import_prop_types88.default.arrayOf(import_prop_types88.default.oneOfType([import_prop_types88.default.func, import_prop_types88.default.object, import_prop_types88.default.bool])), import_prop_types88.default.func, import_prop_types88.default.object])
} : void 0;

// node_modules/@mui/material/CardActions/CardActions.js
init_objectWithoutPropertiesLoose();
init_extends();
var React153 = __toESM(require_react());
var import_prop_types89 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/CardActions/cardActionsClasses.js
init_esm();
init_generateUtilityClass3();
function getCardActionsUtilityClass(slot) {
  return generateUtilityClass("MuiCardActions", slot);
}
var cardActionsClasses = generateUtilityClasses("MuiCardActions", ["root", "spacing"]);

// node_modules/@mui/material/CardActions/CardActions.js
var import_jsx_runtime116 = __toESM(require_jsx_runtime());
var _excluded77 = ["disableSpacing", "className"];
var useUtilityClasses52 = (ownerState) => {
  const {
    classes: classes2,
    disableSpacing
  } = ownerState;
  const slots = {
    root: ["root", !disableSpacing && "spacing"]
  };
  return composeClasses(slots, getCardActionsUtilityClass, classes2);
};
var CardActionsRoot = styled_default2("div", {
  name: "MuiCardActions",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, !ownerState.disableSpacing && styles7.spacing];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  alignItems: "center",
  padding: 8
}, !ownerState.disableSpacing && {
  "& > :not(:first-of-type)": {
    marginLeft: 8
  }
}));
var CardActions = React153.forwardRef(function CardActions2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCardActions"
  });
  const {
    disableSpacing = false,
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded77);
  const ownerState = _extends({}, props, {
    disableSpacing
  });
  const classes2 = useUtilityClasses52(ownerState);
  return (0, import_jsx_runtime116.jsx)(CardActionsRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? CardActions.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types89.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types89.default.object,
  /**
   * @ignore
   */
  className: import_prop_types89.default.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: import_prop_types89.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types89.default.oneOfType([import_prop_types89.default.arrayOf(import_prop_types89.default.oneOfType([import_prop_types89.default.func, import_prop_types89.default.object, import_prop_types89.default.bool])), import_prop_types89.default.func, import_prop_types89.default.object])
} : void 0;

// node_modules/@mui/material/CardContent/CardContent.js
init_extends();
init_objectWithoutPropertiesLoose();
var React154 = __toESM(require_react());
var import_prop_types90 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/CardContent/cardContentClasses.js
init_esm();
init_generateUtilityClass3();
function getCardContentUtilityClass(slot) {
  return generateUtilityClass("MuiCardContent", slot);
}
var cardContentClasses = generateUtilityClasses("MuiCardContent", ["root"]);

// node_modules/@mui/material/CardContent/CardContent.js
var import_jsx_runtime117 = __toESM(require_jsx_runtime());
var _excluded78 = ["className", "component"];
var useUtilityClasses53 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getCardContentUtilityClass, classes2);
};
var CardContentRoot = styled_default2("div", {
  name: "MuiCardContent",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(() => {
  return {
    padding: 16,
    "&:last-child": {
      paddingBottom: 24
    }
  };
});
var CardContent = React154.forwardRef(function CardContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCardContent"
  });
  const {
    className,
    component = "div"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded78);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses53(ownerState);
  return (0, import_jsx_runtime117.jsx)(CardContentRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? CardContent.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types90.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types90.default.object,
  /**
   * @ignore
   */
  className: import_prop_types90.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types90.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types90.default.oneOfType([import_prop_types90.default.arrayOf(import_prop_types90.default.oneOfType([import_prop_types90.default.func, import_prop_types90.default.object, import_prop_types90.default.bool])), import_prop_types90.default.func, import_prop_types90.default.object])
} : void 0;
var CardContent_default = CardContent;

// node_modules/@mui/material/CardHeader/CardHeader.js
init_objectWithoutPropertiesLoose();
init_extends();
var React155 = __toESM(require_react());
var import_prop_types91 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/CardHeader/cardHeaderClasses.js
init_esm();
init_generateUtilityClass3();
function getCardHeaderUtilityClass(slot) {
  return generateUtilityClass("MuiCardHeader", slot);
}
var cardHeaderClasses = generateUtilityClasses("MuiCardHeader", ["root", "avatar", "action", "content", "title", "subheader"]);
var cardHeaderClasses_default = cardHeaderClasses;

// node_modules/@mui/material/CardHeader/CardHeader.js
var import_jsx_runtime118 = __toESM(require_jsx_runtime());
var import_jsx_runtime119 = __toESM(require_jsx_runtime());
var _excluded79 = ["action", "avatar", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"];
var useUtilityClasses54 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    avatar: ["avatar"],
    action: ["action"],
    content: ["content"],
    title: ["title"],
    subheader: ["subheader"]
  };
  return composeClasses(slots, getCardHeaderUtilityClass, classes2);
};
var CardHeaderRoot = styled_default2("div", {
  name: "MuiCardHeader",
  slot: "Root",
  overridesResolver: (props, styles7) => _extends({
    [`& .${cardHeaderClasses_default.title}`]: styles7.title,
    [`& .${cardHeaderClasses_default.subheader}`]: styles7.subheader
  }, styles7.root)
})({
  display: "flex",
  alignItems: "center",
  padding: 16
});
var CardHeaderAvatar = styled_default2("div", {
  name: "MuiCardHeader",
  slot: "Avatar",
  overridesResolver: (props, styles7) => styles7.avatar
})({
  display: "flex",
  flex: "0 0 auto",
  marginRight: 16
});
var CardHeaderAction = styled_default2("div", {
  name: "MuiCardHeader",
  slot: "Action",
  overridesResolver: (props, styles7) => styles7.action
})({
  flex: "0 0 auto",
  alignSelf: "flex-start",
  marginTop: -4,
  marginRight: -8,
  marginBottom: -4
});
var CardHeaderContent = styled_default2("div", {
  name: "MuiCardHeader",
  slot: "Content",
  overridesResolver: (props, styles7) => styles7.content
})({
  flex: "1 1 auto"
});
var CardHeader = React155.forwardRef(function CardHeader2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCardHeader"
  });
  const {
    action,
    avatar,
    className,
    component = "div",
    disableTypography = false,
    subheader: subheaderProp,
    subheaderTypographyProps,
    title: titleProp,
    titleTypographyProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded79);
  const ownerState = _extends({}, props, {
    component,
    disableTypography
  });
  const classes2 = useUtilityClasses54(ownerState);
  let title = titleProp;
  if (title != null && title.type !== Typography_default && !disableTypography) {
    title = (0, import_jsx_runtime118.jsx)(Typography_default, _extends({
      variant: avatar ? "body2" : "h5",
      className: classes2.title,
      component: "span",
      display: "block"
    }, titleTypographyProps, {
      children: title
    }));
  }
  let subheader = subheaderProp;
  if (subheader != null && subheader.type !== Typography_default && !disableTypography) {
    subheader = (0, import_jsx_runtime118.jsx)(Typography_default, _extends({
      variant: avatar ? "body2" : "body1",
      className: classes2.subheader,
      color: "text.secondary",
      component: "span",
      display: "block"
    }, subheaderTypographyProps, {
      children: subheader
    }));
  }
  return (0, import_jsx_runtime119.jsxs)(CardHeaderRoot, _extends({
    className: clsx_default2(classes2.root, className),
    as: component,
    ref,
    ownerState
  }, other, {
    children: [avatar && (0, import_jsx_runtime118.jsx)(CardHeaderAvatar, {
      className: classes2.avatar,
      ownerState,
      children: avatar
    }), (0, import_jsx_runtime119.jsxs)(CardHeaderContent, {
      className: classes2.content,
      ownerState,
      children: [title, subheader]
    }), action && (0, import_jsx_runtime118.jsx)(CardHeaderAction, {
      className: classes2.action,
      ownerState,
      children: action
    })]
  }));
});
true ? CardHeader.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The action to display in the card header.
   */
  action: import_prop_types91.default.node,
  /**
   * The Avatar element to display.
   */
  avatar: import_prop_types91.default.node,
  /**
   * @ignore
   */
  children: import_prop_types91.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types91.default.object,
  /**
   * @ignore
   */
  className: import_prop_types91.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types91.default.elementType,
  /**
   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `title` text, and optional `subheader` text
   * with the Typography component.
   * @default false
   */
  disableTypography: import_prop_types91.default.bool,
  /**
   * The content of the component.
   */
  subheader: import_prop_types91.default.node,
  /**
   * These props will be forwarded to the subheader
   * (as long as disableTypography is not `true`).
   */
  subheaderTypographyProps: import_prop_types91.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types91.default.oneOfType([import_prop_types91.default.arrayOf(import_prop_types91.default.oneOfType([import_prop_types91.default.func, import_prop_types91.default.object, import_prop_types91.default.bool])), import_prop_types91.default.func, import_prop_types91.default.object]),
  /**
   * The content of the component.
   */
  title: import_prop_types91.default.node,
  /**
   * These props will be forwarded to the title
   * (as long as disableTypography is not `true`).
   */
  titleTypographyProps: import_prop_types91.default.object
} : void 0;

// node_modules/@mui/material/CardMedia/CardMedia.js
init_objectWithoutPropertiesLoose();
init_extends();
var React156 = __toESM(require_react());
var import_prop_types92 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/CardMedia/cardMediaClasses.js
init_esm();
init_generateUtilityClass3();
function getCardMediaUtilityClass(slot) {
  return generateUtilityClass("MuiCardMedia", slot);
}
var cardMediaClasses = generateUtilityClasses("MuiCardMedia", ["root", "media", "img"]);

// node_modules/@mui/material/CardMedia/CardMedia.js
var import_jsx_runtime120 = __toESM(require_jsx_runtime());
var _excluded80 = ["children", "className", "component", "image", "src", "style"];
var useUtilityClasses55 = (ownerState) => {
  const {
    classes: classes2,
    isMediaComponent,
    isImageComponent
  } = ownerState;
  const slots = {
    root: ["root", isMediaComponent && "media", isImageComponent && "img"]
  };
  return composeClasses(slots, getCardMediaUtilityClass, classes2);
};
var CardMediaRoot = styled_default2("div", {
  name: "MuiCardMedia",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    const {
      isMediaComponent,
      isImageComponent
    } = ownerState;
    return [styles7.root, isMediaComponent && styles7.media, isImageComponent && styles7.img];
  }
})(({
  ownerState
}) => _extends({
  display: "block",
  backgroundSize: "cover",
  backgroundRepeat: "no-repeat",
  backgroundPosition: "center"
}, ownerState.isMediaComponent && {
  width: "100%"
}, ownerState.isImageComponent && {
  // ⚠️ object-fit is not supported by IE11.
  objectFit: "cover"
}));
var MEDIA_COMPONENTS = ["video", "audio", "picture", "iframe", "img"];
var IMAGE_COMPONENTS = ["picture", "img"];
var CardMedia = React156.forwardRef(function CardMedia2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCardMedia"
  });
  const {
    children: children2,
    className,
    component = "div",
    image,
    src,
    style: style4
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded80);
  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;
  const composedStyle = !isMediaComponent && image ? _extends({
    backgroundImage: `url("${image}")`
  }, style4) : style4;
  const ownerState = _extends({}, props, {
    component,
    isMediaComponent,
    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1
  });
  const classes2 = useUtilityClasses55(ownerState);
  return (0, import_jsx_runtime120.jsx)(CardMediaRoot, _extends({
    className: clsx_default2(classes2.root, className),
    as: component,
    role: !isMediaComponent && image ? "img" : void 0,
    ref,
    style: composedStyle,
    ownerState,
    src: isMediaComponent ? image || src : void 0
  }, other, {
    children: children2
  }));
});
true ? CardMedia.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: chainPropTypes(import_prop_types92.default.node, (props) => {
    if (!props.children && !props.image && !props.src && !props.component) {
      return new Error("MUI: Either `children`, `image`, `src` or `component` prop must be specified.");
    }
    return null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types92.default.object,
  /**
   * @ignore
   */
  className: import_prop_types92.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types92.default.elementType,
  /**
   * Image to be displayed as a background image.
   * Either `image` or `src` prop must be specified.
   * Note that caller must specify height otherwise the image will not be visible.
   */
  image: import_prop_types92.default.string,
  /**
   * An alias for `image` property.
   * Available only with media components.
   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.
   */
  src: import_prop_types92.default.string,
  /**
   * @ignore
   */
  style: import_prop_types92.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types92.default.oneOfType([import_prop_types92.default.arrayOf(import_prop_types92.default.oneOfType([import_prop_types92.default.func, import_prop_types92.default.object, import_prop_types92.default.bool])), import_prop_types92.default.func, import_prop_types92.default.object])
} : void 0;

// node_modules/@mui/material/Checkbox/Checkbox.js
init_objectWithoutPropertiesLoose();
init_extends();
var React161 = __toESM(require_react());
var import_prop_types94 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_esm2();

// node_modules/@mui/material/internal/SwitchBase.js
init_objectWithoutPropertiesLoose();
init_extends();
var React157 = __toESM(require_react());
var import_prop_types93 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_capitalize3();
init_styled2();
init_useControlled3();

// node_modules/@mui/material/internal/switchBaseClasses.js
init_esm();
init_generateUtilityClass3();
function getSwitchBaseUtilityClass(slot) {
  return generateUtilityClass("PrivateSwitchBase", slot);
}
var switchBaseClasses = generateUtilityClasses("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);

// node_modules/@mui/material/internal/SwitchBase.js
var import_jsx_runtime121 = __toESM(require_jsx_runtime());
var import_jsx_runtime122 = __toESM(require_jsx_runtime());
var _excluded81 = ["autoFocus", "checked", "checkedIcon", "className", "defaultChecked", "disabled", "disableFocusRipple", "edge", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"];
var useUtilityClasses56 = (ownerState) => {
  const {
    classes: classes2,
    checked,
    disabled,
    edge
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", edge && `edge${capitalize_default(edge)}`],
    input: ["input"]
  };
  return composeClasses(slots, getSwitchBaseUtilityClass, classes2);
};
var SwitchBaseRoot = styled_default2(ButtonBase_default)(({
  ownerState
}) => _extends({
  padding: 9,
  borderRadius: "50%"
}, ownerState.edge === "start" && {
  marginLeft: ownerState.size === "small" ? -3 : -12
}, ownerState.edge === "end" && {
  marginRight: ownerState.size === "small" ? -3 : -12
}));
var SwitchBaseInput = styled_default2("input")({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
});
var SwitchBase = React157.forwardRef(function SwitchBase2(props, ref) {
  const {
    autoFocus,
    checked: checkedProp,
    checkedIcon,
    className,
    defaultChecked,
    disabled: disabledProp,
    disableFocusRipple = false,
    edge = false,
    icon,
    id,
    inputProps,
    inputRef,
    name,
    onBlur,
    onChange,
    onFocus,
    readOnly,
    required: required2 = false,
    tabIndex,
    type,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded81);
  const [checked, setCheckedState] = useControlled_default({
    controlled: checkedProp,
    default: Boolean(defaultChecked),
    name: "SwitchBase",
    state: "checked"
  });
  const muiFormControl = useFormControl();
  const handleFocus = (event) => {
    if (onFocus) {
      onFocus(event);
    }
    if (muiFormControl && muiFormControl.onFocus) {
      muiFormControl.onFocus(event);
    }
  };
  const handleBlur2 = (event) => {
    if (onBlur) {
      onBlur(event);
    }
    if (muiFormControl && muiFormControl.onBlur) {
      muiFormControl.onBlur(event);
    }
  };
  const handleInputChange = (event) => {
    if (event.nativeEvent.defaultPrevented) {
      return;
    }
    const newChecked = event.target.checked;
    setCheckedState(newChecked);
    if (onChange) {
      onChange(event, newChecked);
    }
  };
  let disabled = disabledProp;
  if (muiFormControl) {
    if (typeof disabled === "undefined") {
      disabled = muiFormControl.disabled;
    }
  }
  const hasLabelFor = type === "checkbox" || type === "radio";
  const ownerState = _extends({}, props, {
    checked,
    disabled,
    disableFocusRipple,
    edge
  });
  const classes2 = useUtilityClasses56(ownerState);
  return (0, import_jsx_runtime122.jsxs)(SwitchBaseRoot, _extends({
    component: "span",
    className: clsx_default2(classes2.root, className),
    centerRipple: true,
    focusRipple: !disableFocusRipple,
    disabled,
    tabIndex: null,
    role: void 0,
    onFocus: handleFocus,
    onBlur: handleBlur2,
    ownerState,
    ref
  }, other, {
    children: [(0, import_jsx_runtime121.jsx)(SwitchBaseInput, _extends({
      autoFocus,
      checked: checkedProp,
      defaultChecked,
      className: classes2.input,
      disabled,
      id: hasLabelFor ? id : void 0,
      name,
      onChange: handleInputChange,
      readOnly,
      ref: inputRef,
      required: required2,
      ownerState,
      tabIndex,
      type
    }, type === "checkbox" && value === void 0 ? {} : {
      value
    }, inputProps)), checked ? checkedIcon : icon]
  }));
});
true ? SwitchBase.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: import_prop_types93.default.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types93.default.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: import_prop_types93.default.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types93.default.object,
  /**
   * @ignore
   */
  className: import_prop_types93.default.string,
  /**
   * @ignore
   */
  defaultChecked: import_prop_types93.default.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types93.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types93.default.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: import_prop_types93.default.oneOf(["end", "start", false]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: import_prop_types93.default.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types93.default.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: import_prop_types93.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /*
   * @ignore
   */
  name: import_prop_types93.default.string,
  /**
   * @ignore
   */
  onBlur: import_prop_types93.default.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types93.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types93.default.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: import_prop_types93.default.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: import_prop_types93.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types93.default.object,
  /**
   * @ignore
   */
  tabIndex: import_prop_types93.default.oneOfType([import_prop_types93.default.number, import_prop_types93.default.string]),
  /**
   * The input component prop `type`.
   */
  type: import_prop_types93.default.string.isRequired,
  /**
   * The value of the component.
   */
  value: import_prop_types93.default.any
} : void 0;
var SwitchBase_default = SwitchBase;

// node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js
var React158 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime123 = __toESM(require_jsx_runtime());
var CheckBoxOutlineBlank_default = createSvgIcon((0, import_jsx_runtime123.jsx)("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank");

// node_modules/@mui/material/internal/svg-icons/CheckBox.js
var React159 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime124 = __toESM(require_jsx_runtime());
var CheckBox_default = createSvgIcon((0, import_jsx_runtime124.jsx)("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox");

// node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js
var React160 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime125 = __toESM(require_jsx_runtime());
var IndeterminateCheckBox_default = createSvgIcon((0, import_jsx_runtime125.jsx)("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");

// node_modules/@mui/material/Checkbox/Checkbox.js
init_capitalize3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Checkbox/checkboxClasses.js
init_esm();
init_generateUtilityClass3();
function getCheckboxUtilityClass(slot) {
  return generateUtilityClass("MuiCheckbox", slot);
}
var checkboxClasses = generateUtilityClasses("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]);
var checkboxClasses_default = checkboxClasses;

// node_modules/@mui/material/Checkbox/Checkbox.js
var import_jsx_runtime126 = __toESM(require_jsx_runtime());
var _excluded82 = ["checkedIcon", "color", "icon", "indeterminate", "indeterminateIcon", "inputProps", "size", "className"];
var useUtilityClasses57 = (ownerState) => {
  const {
    classes: classes2,
    indeterminate,
    color: color2,
    size: size2
  } = ownerState;
  const slots = {
    root: ["root", indeterminate && "indeterminate", `color${capitalize_default(color2)}`, `size${capitalize_default(size2)}`]
  };
  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var CheckboxRoot = styled_default2(SwitchBase_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.indeterminate && styles7.indeterminate, ownerState.color !== "default" && styles7[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  color: (theme.vars || theme).palette.text.secondary
}, !ownerState.disableRipple && {
  "&:hover": {
    backgroundColor: theme.vars ? `rgba(${ownerState.color === "default" ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === "default" ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, ownerState.color !== "default" && {
  [`&.${checkboxClasses_default.checked}, &.${checkboxClasses_default.indeterminate}`]: {
    color: (theme.vars || theme).palette[ownerState.color].main
  },
  [`&.${checkboxClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.action.disabled
  }
}));
var defaultCheckedIcon = (0, import_jsx_runtime126.jsx)(CheckBox_default, {});
var defaultIcon = (0, import_jsx_runtime126.jsx)(CheckBoxOutlineBlank_default, {});
var defaultIndeterminateIcon = (0, import_jsx_runtime126.jsx)(IndeterminateCheckBox_default, {});
var Checkbox = React161.forwardRef(function Checkbox2(inProps, ref) {
  var _icon$props$fontSize, _indeterminateIcon$pr;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCheckbox"
  });
  const {
    checkedIcon = defaultCheckedIcon,
    color: color2 = "primary",
    icon: iconProp = defaultIcon,
    indeterminate = false,
    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,
    inputProps,
    size: size2 = "medium",
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded82);
  const icon = indeterminate ? indeterminateIconProp : iconProp;
  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;
  const ownerState = _extends({}, props, {
    color: color2,
    indeterminate,
    size: size2
  });
  const classes2 = useUtilityClasses57(ownerState);
  return (0, import_jsx_runtime126.jsx)(CheckboxRoot, _extends({
    type: "checkbox",
    inputProps: _extends({
      "data-indeterminate": indeterminate
    }, inputProps),
    icon: React161.cloneElement(icon, {
      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size2
    }),
    checkedIcon: React161.cloneElement(indeterminateIcon, {
      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size2
    }),
    ownerState,
    ref,
    className: clsx_default2(classes2.root, className)
  }, other, {
    classes: classes2
  }));
});
true ? Checkbox.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types94.default.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: import_prop_types94.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types94.default.object,
  /**
   * @ignore
   */
  className: import_prop_types94.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types94.default.oneOfType([import_prop_types94.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types94.default.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: import_prop_types94.default.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types94.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: import_prop_types94.default.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: import_prop_types94.default.node,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types94.default.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: import_prop_types94.default.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: import_prop_types94.default.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: import_prop_types94.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types94.default.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: import_prop_types94.default.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: import_prop_types94.default.oneOfType([import_prop_types94.default.oneOf(["medium", "small"]), import_prop_types94.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types94.default.oneOfType([import_prop_types94.default.arrayOf(import_prop_types94.default.oneOfType([import_prop_types94.default.func, import_prop_types94.default.object, import_prop_types94.default.bool])), import_prop_types94.default.func, import_prop_types94.default.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: import_prop_types94.default.any
} : void 0;
var Checkbox_default = Checkbox;

// node_modules/@mui/material/CircularProgress/CircularProgress.js
init_objectWithoutPropertiesLoose();
init_extends();
var React162 = __toESM(require_react());
var import_prop_types95 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_esm2();
init_capitalize3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/CircularProgress/circularProgressClasses.js
init_esm();
init_generateUtilityClass3();
function getCircularProgressUtilityClass(slot) {
  return generateUtilityClass("MuiCircularProgress", slot);
}
var circularProgressClasses = generateUtilityClasses("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);

// node_modules/@mui/material/CircularProgress/CircularProgress.js
var import_jsx_runtime127 = __toESM(require_jsx_runtime());
var _excluded83 = ["className", "color", "disableShrink", "size", "style", "thickness", "value", "variant"];
var _2 = (t) => t;
var _t5;
var _t22;
var _t32;
var _t42;
var SIZE = 44;
var circularRotateKeyframe = keyframes(_t5 || (_t5 = _2`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`));
var circularDashKeyframe = keyframes(_t22 || (_t22 = _2`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`));
var useUtilityClasses58 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    color: color2,
    disableShrink
  } = ownerState;
  const slots = {
    root: ["root", variant, `color${capitalize_default(color2)}`],
    svg: ["svg"],
    circle: ["circle", `circle${capitalize_default(variant)}`, disableShrink && "circleDisableShrink"]
  };
  return composeClasses(slots, getCircularProgressUtilityClass, classes2);
};
var CircularProgressRoot = styled_default2("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant], styles7[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  ownerState,
  theme
}) => _extends({
  display: "inline-block"
}, ownerState.variant === "determinate" && {
  transition: theme.transitions.create("transform")
}, ownerState.color !== "inherit" && {
  color: (theme.vars || theme).palette[ownerState.color].main
}), ({
  ownerState
}) => ownerState.variant === "indeterminate" && css(_t32 || (_t32 = _2`
      animation: ${0} 1.4s linear infinite;
    `), circularRotateKeyframe));
var CircularProgressSVG = styled_default2("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (props, styles7) => styles7.svg
})({
  display: "block"
  // Keeps the progress centered
});
var CircularProgressCircle = styled_default2("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.circle, styles7[`circle${capitalize_default(ownerState.variant)}`], ownerState.disableShrink && styles7.circleDisableShrink];
  }
})(({
  ownerState,
  theme
}) => _extends({
  stroke: "currentColor"
}, ownerState.variant === "determinate" && {
  transition: theme.transitions.create("stroke-dashoffset")
}, ownerState.variant === "indeterminate" && {
  // Some default value that looks fine waiting for the animation to kicks in.
  strokeDasharray: "80px, 200px",
  strokeDashoffset: 0
  // Add the unit to fix a Edge 16 and below bug.
}), ({
  ownerState
}) => ownerState.variant === "indeterminate" && !ownerState.disableShrink && css(_t42 || (_t42 = _2`
      animation: ${0} 1.4s ease-in-out infinite;
    `), circularDashKeyframe));
var CircularProgress = React162.forwardRef(function CircularProgress2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCircularProgress"
  });
  const {
    className,
    color: color2 = "primary",
    disableShrink = false,
    size: size2 = 40,
    style: style4,
    thickness = 3.6,
    value = 0,
    variant = "indeterminate"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded83);
  const ownerState = _extends({}, props, {
    color: color2,
    disableShrink,
    size: size2,
    thickness,
    value,
    variant
  });
  const classes2 = useUtilityClasses58(ownerState);
  const circleStyle = {};
  const rootStyle = {};
  const rootProps = {};
  if (variant === "determinate") {
    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);
    circleStyle.strokeDasharray = circumference.toFixed(3);
    rootProps["aria-valuenow"] = Math.round(value);
    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;
    rootStyle.transform = "rotate(-90deg)";
  }
  return (0, import_jsx_runtime127.jsx)(CircularProgressRoot, _extends({
    className: clsx_default2(classes2.root, className),
    style: _extends({
      width: size2,
      height: size2
    }, rootStyle, style4),
    ownerState,
    ref,
    role: "progressbar"
  }, rootProps, other, {
    children: (0, import_jsx_runtime127.jsx)(CircularProgressSVG, {
      className: classes2.svg,
      ownerState,
      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,
      children: (0, import_jsx_runtime127.jsx)(CircularProgressCircle, {
        className: classes2.circle,
        style: circleStyle,
        ownerState,
        cx: SIZE,
        cy: SIZE,
        r: (SIZE - thickness) / 2,
        fill: "none",
        strokeWidth: thickness
      })
    })
  }));
});
true ? CircularProgress.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types95.default.object,
  /**
   * @ignore
   */
  className: import_prop_types95.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types95.default.oneOfType([import_prop_types95.default.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types95.default.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: chainPropTypes(import_prop_types95.default.bool, (props) => {
    if (props.disableShrink && props.variant && props.variant !== "indeterminate") {
      return new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.");
    }
    return null;
  }),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, e.g '3rem'.
   * @default 40
   */
  size: import_prop_types95.default.oneOfType([import_prop_types95.default.number, import_prop_types95.default.string]),
  /**
   * @ignore
   */
  style: import_prop_types95.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types95.default.oneOfType([import_prop_types95.default.arrayOf(import_prop_types95.default.oneOfType([import_prop_types95.default.func, import_prop_types95.default.object, import_prop_types95.default.bool])), import_prop_types95.default.func, import_prop_types95.default.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: import_prop_types95.default.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: import_prop_types95.default.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: import_prop_types95.default.oneOf(["determinate", "indeterminate"])
} : void 0;
var CircularProgress_default = CircularProgress;

// node_modules/@mui/material/Container/Container.js
var import_prop_types96 = __toESM(require_prop_types());
init_esm2();
init_capitalize3();
init_styled2();
init_useThemeProps3();
var Container2 = createContainer({
  createStyledComponent: styled_default2("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (props, styles7) => {
      const {
        ownerState
      } = props;
      return [styles7.root, styles7[`maxWidth${capitalize_default(String(ownerState.maxWidth))}`], ownerState.fixed && styles7.fixed, ownerState.disableGutters && styles7.disableGutters];
    }
  }),
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "MuiContainer"
  })
});
true ? Container2.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types96.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types96.default.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types96.default.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: import_prop_types96.default.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: import_prop_types96.default.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: import_prop_types96.default.oneOfType([import_prop_types96.default.oneOf(["xs", "sm", "md", "lg", "xl", false]), import_prop_types96.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types96.default.oneOfType([import_prop_types96.default.arrayOf(import_prop_types96.default.oneOfType([import_prop_types96.default.func, import_prop_types96.default.object, import_prop_types96.default.bool])), import_prop_types96.default.func, import_prop_types96.default.object])
} : void 0;

// node_modules/@mui/material/Container/containerClasses.js
init_esm();
init_generateUtilityClass3();
var containerClasses2 = generateUtilityClasses("MuiContainer", ["root", "disableGutters", "fixed", "maxWidthXs", "maxWidthSm", "maxWidthMd", "maxWidthLg", "maxWidthXl"]);

// node_modules/@mui/material/CssBaseline/CssBaseline.js
init_extends();
var React163 = __toESM(require_react());
var import_prop_types97 = __toESM(require_prop_types());
init_useThemeProps3();
var import_jsx_runtime128 = __toESM(require_jsx_runtime());
var import_jsx_runtime129 = __toESM(require_jsx_runtime());
var html = (theme, enableColorScheme) => _extends({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%"
}, enableColorScheme && !theme.vars && {
  colorScheme: theme.palette.mode
});
var body = (theme) => _extends({
  color: (theme.vars || theme).palette.text.primary
}, theme.typography.body1, {
  backgroundColor: (theme.vars || theme).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (theme.vars || theme).palette.common.white
  }
});
var styles3 = (theme, enableColorScheme = false) => {
  var _theme$components;
  const colorSchemeStyles = {};
  if (enableColorScheme && theme.colorSchemes) {
    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {
      var _scheme$palette;
      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\s*&/, "")] = {
        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode
      };
    });
  }
  let defaultStyles = _extends({
    html: html(theme, enableColorScheme),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: theme.typography.fontWeightBold
    },
    body: _extends({
      margin: 0
    }, body(theme), {
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (theme.vars || theme).palette.background.default
      }
    })
  }, colorSchemeStyles);
  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;
  if (themeOverrides) {
    defaultStyles = [defaultStyles, themeOverrides];
  }
  return defaultStyles;
};
function CssBaseline(inProps) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCssBaseline"
  });
  const {
    children: children2,
    enableColorScheme = false
  } = props;
  return (0, import_jsx_runtime129.jsxs)(React163.Fragment, {
    children: [(0, import_jsx_runtime128.jsx)(GlobalStyles_default2, {
      styles: (theme) => styles3(theme, enableColorScheme)
    }), children2]
  });
}
true ? CssBaseline.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * You can wrap a node.
   */
  children: import_prop_types97.default.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: import_prop_types97.default.bool
} : void 0;

// node_modules/@mui/material/Dialog/Dialog.js
init_objectWithoutPropertiesLoose();
init_extends();
var React166 = __toESM(require_react());
var import_prop_types99 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm();
init_capitalize3();

// node_modules/@mui/material/Modal/Modal.js
init_objectWithoutPropertiesLoose();
init_extends();
var React164 = __toESM(require_react());
var import_prop_types98 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Modal/modalClasses.js
init_esm();
init_generateUtilityClass3();
function getModalUtilityClass2(slot) {
  return generateUtilityClass("MuiModal", slot);
}
var modalClasses2 = generateUtilityClasses("MuiModal", ["root", "hidden", "backdrop"]);

// node_modules/@mui/material/Modal/Modal.js
var import_jsx_runtime130 = __toESM(require_jsx_runtime());
var import_jsx_runtime131 = __toESM(require_jsx_runtime());
var _excluded84 = ["BackdropComponent", "BackdropProps", "classes", "className", "closeAfterTransition", "children", "container", "component", "components", "componentsProps", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "onBackdropClick", "onClose", "open", "slotProps", "slots", "theme"];
var useUtilityClasses59 = (ownerState) => {
  const {
    open,
    exited,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", !open && exited && "hidden"],
    backdrop: ["backdrop"]
  };
  return composeClasses(slots, getModalUtilityClass2, classes2);
};
var ModalRoot = styled_default2("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, !ownerState.open && ownerState.exited && styles7.hidden];
  }
})(({
  theme,
  ownerState
}) => _extends({
  position: "fixed",
  zIndex: (theme.vars || theme).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0
}, !ownerState.open && ownerState.exited && {
  visibility: "hidden"
}));
var ModalBackdrop = styled_default2(Backdrop_default, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (props, styles7) => {
    return styles7.backdrop;
  }
})({
  zIndex: -1
});
var Modal3 = React164.forwardRef(function Modal4(inProps, ref) {
  var _ref2, _slots$root, _ref22, _slots$backdrop, _slotProps$root, _slotProps$backdrop;
  const props = useThemeProps2({
    name: "MuiModal",
    props: inProps
  });
  const {
    BackdropComponent = ModalBackdrop,
    BackdropProps,
    className,
    closeAfterTransition = false,
    children: children2,
    container,
    component,
    components = {},
    componentsProps = {},
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableEscapeKeyDown = false,
    disablePortal = false,
    disableRestoreFocus = false,
    disableScrollLock = false,
    hideBackdrop = false,
    keepMounted = false,
    onBackdropClick,
    open,
    slotProps,
    slots
    // eslint-disable-next-line react/prop-types
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded84);
  const propsWithDefaults = _extends({}, props, {
    closeAfterTransition,
    disableAutoFocus,
    disableEnforceFocus,
    disableEscapeKeyDown,
    disablePortal,
    disableRestoreFocus,
    disableScrollLock,
    hideBackdrop,
    keepMounted
  });
  const {
    getRootProps,
    getBackdropProps,
    getTransitionProps: getTransitionProps2,
    portalRef,
    isTopModal,
    exited,
    hasTransition
  } = useModal(_extends({}, propsWithDefaults, {
    rootRef: ref
  }));
  const ownerState = _extends({}, propsWithDefaults, {
    exited
  });
  const classes2 = useUtilityClasses59(ownerState);
  const childProps = {};
  if (children2.props.tabIndex === void 0) {
    childProps.tabIndex = "-1";
  }
  if (hasTransition) {
    const {
      onEnter,
      onExited
    } = getTransitionProps2();
    childProps.onEnter = onEnter;
    childProps.onExited = onExited;
  }
  const RootSlot = (_ref2 = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref2 : ModalRoot;
  const BackdropSlot = (_ref22 = (_slots$backdrop = slots == null ? void 0 : slots.backdrop) != null ? _slots$backdrop : components.Backdrop) != null ? _ref22 : BackdropComponent;
  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;
  const backdropSlotProps = (_slotProps$backdrop = slotProps == null ? void 0 : slotProps.backdrop) != null ? _slotProps$backdrop : componentsProps.backdrop;
  const rootProps = useSlotProps({
    elementType: RootSlot,
    externalSlotProps: rootSlotProps,
    externalForwardedProps: other,
    getSlotProps: getRootProps,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: clsx_default2(className, rootSlotProps == null ? void 0 : rootSlotProps.className, classes2 == null ? void 0 : classes2.root, !ownerState.open && ownerState.exited && (classes2 == null ? void 0 : classes2.hidden))
  });
  const backdropProps = useSlotProps({
    elementType: BackdropSlot,
    externalSlotProps: backdropSlotProps,
    additionalProps: BackdropProps,
    getSlotProps: (otherHandlers) => {
      return getBackdropProps(_extends({}, otherHandlers, {
        onClick: (e) => {
          if (onBackdropClick) {
            onBackdropClick(e);
          }
          if (otherHandlers != null && otherHandlers.onClick) {
            otherHandlers.onClick(e);
          }
        }
      }));
    },
    className: clsx_default2(backdropSlotProps == null ? void 0 : backdropSlotProps.className, BackdropProps == null ? void 0 : BackdropProps.className, classes2 == null ? void 0 : classes2.backdrop),
    ownerState
  });
  if (!keepMounted && !open && (!hasTransition || exited)) {
    return null;
  }
  return (0, import_jsx_runtime130.jsx)(Portal, {
    ref: portalRef,
    container,
    disablePortal,
    children: (0, import_jsx_runtime131.jsxs)(RootSlot, _extends({}, rootProps, {
      children: [!hideBackdrop && BackdropComponent ? (0, import_jsx_runtime130.jsx)(BackdropSlot, _extends({}, backdropProps)) : null, (0, import_jsx_runtime130.jsx)(FocusTrap, {
        disableEnforceFocus,
        disableAutoFocus,
        disableRestoreFocus,
        isEnabled: isTopModal,
        open,
        children: React164.cloneElement(children2, childProps)
      })]
    }))
  });
});
true ? Modal3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: import_prop_types98.default.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: import_prop_types98.default.object,
  /**
   * A single child content element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types98.default.object,
  /**
   * @ignore
   */
  className: import_prop_types98.default.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: import_prop_types98.default.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types98.default.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types98.default.shape({
    Backdrop: import_prop_types98.default.elementType,
    Root: import_prop_types98.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types98.default.shape({
    backdrop: import_prop_types98.default.oneOfType([import_prop_types98.default.func, import_prop_types98.default.object]),
    root: import_prop_types98.default.oneOfType([import_prop_types98.default.func, import_prop_types98.default.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: import_prop_types98.default.oneOfType([HTMLElementType, import_prop_types98.default.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: import_prop_types98.default.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: import_prop_types98.default.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: import_prop_types98.default.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: import_prop_types98.default.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: import_prop_types98.default.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: import_prop_types98.default.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: import_prop_types98.default.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: import_prop_types98.default.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: import_prop_types98.default.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: import_prop_types98.default.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: import_prop_types98.default.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: import_prop_types98.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types98.default.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: import_prop_types98.default.shape({
    backdrop: import_prop_types98.default.oneOfType([import_prop_types98.default.func, import_prop_types98.default.object]),
    root: import_prop_types98.default.oneOfType([import_prop_types98.default.func, import_prop_types98.default.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types98.default.shape({
    backdrop: import_prop_types98.default.elementType,
    root: import_prop_types98.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types98.default.oneOfType([import_prop_types98.default.arrayOf(import_prop_types98.default.oneOfType([import_prop_types98.default.func, import_prop_types98.default.object, import_prop_types98.default.bool])), import_prop_types98.default.func, import_prop_types98.default.object])
} : void 0;
var Modal_default = Modal3;

// node_modules/@mui/material/Dialog/Dialog.js
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Dialog/dialogClasses.js
init_esm();
init_generateUtilityClass3();
function getDialogUtilityClass(slot) {
  return generateUtilityClass("MuiDialog", slot);
}
var dialogClasses = generateUtilityClasses("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]);
var dialogClasses_default = dialogClasses;

// node_modules/@mui/material/Dialog/DialogContext.js
var React165 = __toESM(require_react());
var DialogContext = React165.createContext({});
if (true) {
  DialogContext.displayName = "DialogContext";
}
var DialogContext_default = DialogContext;

// node_modules/@mui/material/Dialog/Dialog.js
var import_jsx_runtime132 = __toESM(require_jsx_runtime());
var _excluded85 = ["aria-describedby", "aria-labelledby", "BackdropComponent", "BackdropProps", "children", "className", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps"];
var DialogBackdrop = styled_default2(Backdrop_default, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (props, styles7) => styles7.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
});
var useUtilityClasses60 = (ownerState) => {
  const {
    classes: classes2,
    scroll,
    maxWidth: maxWidth2,
    fullWidth,
    fullScreen
  } = ownerState;
  const slots = {
    root: ["root"],
    container: ["container", `scroll${capitalize_default(scroll)}`],
    paper: ["paper", `paperScroll${capitalize_default(scroll)}`, `paperWidth${capitalize_default(String(maxWidth2))}`, fullWidth && "paperFullWidth", fullScreen && "paperFullScreen"]
  };
  return composeClasses(slots, getDialogUtilityClass, classes2);
};
var DialogRoot = styled_default2(Modal_default, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
});
var DialogContainer = styled_default2("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.container, styles7[`scroll${capitalize_default(ownerState.scroll)}`]];
  }
})(({
  ownerState
}) => _extends({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}, ownerState.scroll === "paper" && {
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
}, ownerState.scroll === "body" && {
  overflowY: "auto",
  overflowX: "hidden",
  textAlign: "center",
  "&:after": {
    content: '""',
    display: "inline-block",
    verticalAlign: "middle",
    height: "100%",
    width: "0"
  }
}));
var DialogPaper = styled_default2(Paper_default, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.paper, styles7[`scrollPaper${capitalize_default(ownerState.scroll)}`], styles7[`paperWidth${capitalize_default(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles7.paperFullWidth, ownerState.fullScreen && styles7.paperFullScreen];
  }
})(({
  theme,
  ownerState
}) => _extends({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  // Fix IE11 issue, to remove at some point.
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  }
}, ownerState.scroll === "paper" && {
  display: "flex",
  flexDirection: "column",
  maxHeight: "calc(100% - 64px)"
}, ownerState.scroll === "body" && {
  display: "inline-block",
  verticalAlign: "middle",
  textAlign: "left"
  // 'initial' doesn't work on IE11
}, !ownerState.maxWidth && {
  maxWidth: "calc(100% - 64px)"
}, ownerState.maxWidth === "xs" && {
  maxWidth: theme.breakpoints.unit === "px" ? Math.max(theme.breakpoints.values.xs, 444) : `max(${theme.breakpoints.values.xs}${theme.breakpoints.unit}, 444px)`,
  [`&.${dialogClasses_default.paperScrollBody}`]: {
    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, ownerState.maxWidth && ownerState.maxWidth !== "xs" && {
  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,
  [`&.${dialogClasses_default.paperScrollBody}`]: {
    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, ownerState.fullWidth && {
  width: "calc(100% - 64px)"
}, ownerState.fullScreen && {
  margin: 0,
  width: "100%",
  maxWidth: "100%",
  height: "100%",
  maxHeight: "none",
  borderRadius: 0,
  [`&.${dialogClasses_default.paperScrollBody}`]: {
    margin: 0,
    maxWidth: "100%"
  }
}));
var Dialog = React166.forwardRef(function Dialog2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialog"
  });
  const theme = useTheme5();
  const defaultTransitionDuration = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    "aria-describedby": ariaDescribedby,
    "aria-labelledby": ariaLabelledbyProp,
    BackdropComponent,
    BackdropProps,
    children: children2,
    className,
    disableEscapeKeyDown = false,
    fullScreen = false,
    fullWidth = false,
    maxWidth: maxWidth2 = "sm",
    onBackdropClick,
    onClose,
    open,
    PaperComponent = Paper_default,
    PaperProps = {},
    scroll = "paper",
    TransitionComponent = Fade_default,
    transitionDuration = defaultTransitionDuration,
    TransitionProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded85);
  const ownerState = _extends({}, props, {
    disableEscapeKeyDown,
    fullScreen,
    fullWidth,
    maxWidth: maxWidth2,
    scroll
  });
  const classes2 = useUtilityClasses60(ownerState);
  const backdropClick = React166.useRef();
  const handleMouseDown = (event) => {
    backdropClick.current = event.target === event.currentTarget;
  };
  const handleBackdropClick = (event) => {
    if (!backdropClick.current) {
      return;
    }
    backdropClick.current = null;
    if (onBackdropClick) {
      onBackdropClick(event);
    }
    if (onClose) {
      onClose(event, "backdropClick");
    }
  };
  const ariaLabelledby = useId(ariaLabelledbyProp);
  const dialogContextValue = React166.useMemo(() => {
    return {
      titleId: ariaLabelledby
    };
  }, [ariaLabelledby]);
  return (0, import_jsx_runtime132.jsx)(DialogRoot, _extends({
    className: clsx_default2(classes2.root, className),
    closeAfterTransition: true,
    components: {
      Backdrop: DialogBackdrop
    },
    componentsProps: {
      backdrop: _extends({
        transitionDuration,
        as: BackdropComponent
      }, BackdropProps)
    },
    disableEscapeKeyDown,
    onClose,
    open,
    ref,
    onClick: handleBackdropClick,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime132.jsx)(TransitionComponent, _extends({
      appear: true,
      in: open,
      timeout: transitionDuration,
      role: "presentation"
    }, TransitionProps, {
      children: (0, import_jsx_runtime132.jsx)(DialogContainer, {
        className: clsx_default2(classes2.container),
        onMouseDown: handleMouseDown,
        ownerState,
        children: (0, import_jsx_runtime132.jsx)(DialogPaper, _extends({
          as: PaperComponent,
          elevation: 24,
          role: "dialog",
          "aria-describedby": ariaDescribedby,
          "aria-labelledby": ariaLabelledby
        }, PaperProps, {
          className: clsx_default2(classes2.paper, PaperProps.className),
          ownerState,
          children: (0, import_jsx_runtime132.jsx)(DialogContext_default.Provider, {
            value: dialogContextValue,
            children: children2
          })
        }))
      })
    }))
  }));
});
true ? Dialog.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": import_prop_types99.default.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": import_prop_types99.default.string,
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: import_prop_types99.default.elementType,
  /**
   * @ignore
   */
  BackdropProps: import_prop_types99.default.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: import_prop_types99.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types99.default.object,
  /**
   * @ignore
   */
  className: import_prop_types99.default.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: import_prop_types99.default.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: import_prop_types99.default.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: import_prop_types99.default.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: import_prop_types99.default.oneOfType([import_prop_types99.default.oneOf(["xs", "sm", "md", "lg", "xl", false]), import_prop_types99.default.string]),
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: import_prop_types99.default.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: import_prop_types99.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types99.default.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: import_prop_types99.default.elementType,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: import_prop_types99.default.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: import_prop_types99.default.oneOf(["body", "paper"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types99.default.oneOfType([import_prop_types99.default.arrayOf(import_prop_types99.default.oneOfType([import_prop_types99.default.func, import_prop_types99.default.object, import_prop_types99.default.bool])), import_prop_types99.default.func, import_prop_types99.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: import_prop_types99.default.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types99.default.oneOfType([import_prop_types99.default.number, import_prop_types99.default.shape({
    appear: import_prop_types99.default.number,
    enter: import_prop_types99.default.number,
    exit: import_prop_types99.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types99.default.object
} : void 0;
var Dialog_default = Dialog;

// node_modules/@mui/material/DialogActions/DialogActions.js
init_objectWithoutPropertiesLoose();
init_extends();
var React167 = __toESM(require_react());
var import_prop_types100 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/DialogActions/dialogActionsClasses.js
init_esm();
init_generateUtilityClass3();
function getDialogActionsUtilityClass(slot) {
  return generateUtilityClass("MuiDialogActions", slot);
}
var dialogActionsClasses = generateUtilityClasses("MuiDialogActions", ["root", "spacing"]);

// node_modules/@mui/material/DialogActions/DialogActions.js
var import_jsx_runtime133 = __toESM(require_jsx_runtime());
var _excluded86 = ["className", "disableSpacing"];
var useUtilityClasses61 = (ownerState) => {
  const {
    classes: classes2,
    disableSpacing
  } = ownerState;
  const slots = {
    root: ["root", !disableSpacing && "spacing"]
  };
  return composeClasses(slots, getDialogActionsUtilityClass, classes2);
};
var DialogActionsRoot = styled_default2("div", {
  name: "MuiDialogActions",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, !ownerState.disableSpacing && styles7.spacing];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end",
  flex: "0 0 auto"
}, !ownerState.disableSpacing && {
  "& > :not(:first-of-type)": {
    marginLeft: 8
  }
}));
var DialogActions = React167.forwardRef(function DialogActions2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialogActions"
  });
  const {
    className,
    disableSpacing = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded86);
  const ownerState = _extends({}, props, {
    disableSpacing
  });
  const classes2 = useUtilityClasses61(ownerState);
  return (0, import_jsx_runtime133.jsx)(DialogActionsRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? DialogActions.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types100.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types100.default.object,
  /**
   * @ignore
   */
  className: import_prop_types100.default.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: import_prop_types100.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types100.default.oneOfType([import_prop_types100.default.arrayOf(import_prop_types100.default.oneOfType([import_prop_types100.default.func, import_prop_types100.default.object, import_prop_types100.default.bool])), import_prop_types100.default.func, import_prop_types100.default.object])
} : void 0;
var DialogActions_default = DialogActions;

// node_modules/@mui/material/DialogContent/DialogContent.js
init_objectWithoutPropertiesLoose();
init_extends();
var React168 = __toESM(require_react());
var import_prop_types101 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/DialogContent/dialogContentClasses.js
init_esm();
init_generateUtilityClass3();
function getDialogContentUtilityClass(slot) {
  return generateUtilityClass("MuiDialogContent", slot);
}
var dialogContentClasses = generateUtilityClasses("MuiDialogContent", ["root", "dividers"]);

// node_modules/@mui/material/DialogTitle/dialogTitleClasses.js
init_esm();
init_generateUtilityClass3();
function getDialogTitleUtilityClass(slot) {
  return generateUtilityClass("MuiDialogTitle", slot);
}
var dialogTitleClasses = generateUtilityClasses("MuiDialogTitle", ["root"]);
var dialogTitleClasses_default = dialogTitleClasses;

// node_modules/@mui/material/DialogContent/DialogContent.js
var import_jsx_runtime134 = __toESM(require_jsx_runtime());
var _excluded87 = ["className", "dividers"];
var useUtilityClasses62 = (ownerState) => {
  const {
    classes: classes2,
    dividers
  } = ownerState;
  const slots = {
    root: ["root", dividers && "dividers"]
  };
  return composeClasses(slots, getDialogContentUtilityClass, classes2);
};
var DialogContentRoot = styled_default2("div", {
  name: "MuiDialogContent",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.dividers && styles7.dividers];
  }
})(({
  theme,
  ownerState
}) => _extends({
  flex: "1 1 auto",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  overflowY: "auto",
  padding: "20px 24px"
}, ownerState.dividers ? {
  padding: "16px 24px",
  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`
} : {
  [`.${dialogTitleClasses_default.root} + &`]: {
    paddingTop: 0
  }
}));
var DialogContent = React168.forwardRef(function DialogContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialogContent"
  });
  const {
    className,
    dividers = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded87);
  const ownerState = _extends({}, props, {
    dividers
  });
  const classes2 = useUtilityClasses62(ownerState);
  return (0, import_jsx_runtime134.jsx)(DialogContentRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? DialogContent.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types101.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types101.default.object,
  /**
   * @ignore
   */
  className: import_prop_types101.default.string,
  /**
   * Display the top and bottom dividers.
   * @default false
   */
  dividers: import_prop_types101.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types101.default.oneOfType([import_prop_types101.default.arrayOf(import_prop_types101.default.oneOfType([import_prop_types101.default.func, import_prop_types101.default.object, import_prop_types101.default.bool])), import_prop_types101.default.func, import_prop_types101.default.object])
} : void 0;
var DialogContent_default = DialogContent;

// node_modules/@mui/material/DialogContentText/DialogContentText.js
init_objectWithoutPropertiesLoose();
init_extends();
var React169 = __toESM(require_react());
var import_prop_types102 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js
init_esm();
init_generateUtilityClass3();
function getDialogContentTextUtilityClass(slot) {
  return generateUtilityClass("MuiDialogContentText", slot);
}
var dialogContentTextClasses = generateUtilityClasses("MuiDialogContentText", ["root"]);

// node_modules/@mui/material/DialogContentText/DialogContentText.js
var import_jsx_runtime135 = __toESM(require_jsx_runtime());
var _excluded88 = ["children", "className"];
var useUtilityClasses63 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var DialogContentTextRoot = styled_default2(Typography_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiDialogContentText",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({});
var DialogContentText = React169.forwardRef(function DialogContentText2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialogContentText"
  });
  const {
    className
  } = props, ownerState = _objectWithoutPropertiesLoose(props, _excluded88);
  const classes2 = useUtilityClasses63(ownerState);
  return (0, import_jsx_runtime135.jsx)(DialogContentTextRoot, _extends({
    component: "p",
    variant: "body1",
    color: "text.secondary",
    ref,
    ownerState,
    className: clsx_default2(classes2.root, className)
  }, props, {
    classes: classes2
  }));
});
true ? DialogContentText.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types102.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types102.default.object,
  /**
   * @ignore
   */
  className: import_prop_types102.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types102.default.oneOfType([import_prop_types102.default.arrayOf(import_prop_types102.default.oneOfType([import_prop_types102.default.func, import_prop_types102.default.object, import_prop_types102.default.bool])), import_prop_types102.default.func, import_prop_types102.default.object])
} : void 0;
var DialogContentText_default = DialogContentText;

// node_modules/@mui/material/DialogTitle/DialogTitle.js
init_extends();
init_objectWithoutPropertiesLoose();
var React170 = __toESM(require_react());
var import_prop_types103 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
var import_jsx_runtime136 = __toESM(require_jsx_runtime());
var _excluded89 = ["className", "id"];
var useUtilityClasses64 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getDialogTitleUtilityClass, classes2);
};
var DialogTitleRoot = styled_default2(Typography_default, {
  name: "MuiDialogTitle",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({
  padding: "16px 24px",
  flex: "0 0 auto"
});
var DialogTitle = React170.forwardRef(function DialogTitle2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialogTitle"
  });
  const {
    className,
    id: idProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded89);
  const ownerState = props;
  const classes2 = useUtilityClasses64(ownerState);
  const {
    titleId = idProp
  } = React170.useContext(DialogContext_default);
  return (0, import_jsx_runtime136.jsx)(DialogTitleRoot, _extends({
    component: "h2",
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref,
    variant: "h6",
    id: idProp != null ? idProp : titleId
  }, other));
});
true ? DialogTitle.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types103.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types103.default.object,
  /**
   * @ignore
   */
  className: import_prop_types103.default.string,
  /**
   * @ignore
   */
  id: import_prop_types103.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types103.default.oneOfType([import_prop_types103.default.arrayOf(import_prop_types103.default.oneOfType([import_prop_types103.default.func, import_prop_types103.default.object, import_prop_types103.default.bool])), import_prop_types103.default.func, import_prop_types103.default.object])
} : void 0;
var DialogTitle_default = DialogTitle;

// node_modules/@mui/material/Divider/Divider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React171 = __toESM(require_react());
var import_prop_types104 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Divider/dividerClasses.js
init_esm();
init_generateUtilityClass3();
function getDividerUtilityClass(slot) {
  return generateUtilityClass("MuiDivider", slot);
}
var dividerClasses = generateUtilityClasses("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]);
var dividerClasses_default = dividerClasses;

// node_modules/@mui/material/Divider/Divider.js
var import_jsx_runtime137 = __toESM(require_jsx_runtime());
var _excluded90 = ["absolute", "children", "className", "component", "flexItem", "light", "orientation", "role", "textAlign", "variant"];
var useUtilityClasses65 = (ownerState) => {
  const {
    absolute,
    children: children2,
    classes: classes2,
    flexItem,
    light: light2,
    orientation,
    textAlign: textAlign2,
    variant
  } = ownerState;
  const slots = {
    root: ["root", absolute && "absolute", variant, light2 && "light", orientation === "vertical" && "vertical", flexItem && "flexItem", children2 && "withChildren", children2 && orientation === "vertical" && "withChildrenVertical", textAlign2 === "right" && orientation !== "vertical" && "textAlignRight", textAlign2 === "left" && orientation !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", orientation === "vertical" && "wrapperVertical"]
  };
  return composeClasses(slots, getDividerUtilityClass, classes2);
};
var DividerRoot = styled_default2("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.absolute && styles7.absolute, styles7[ownerState.variant], ownerState.light && styles7.light, ownerState.orientation === "vertical" && styles7.vertical, ownerState.flexItem && styles7.flexItem, ownerState.children && styles7.withChildren, ownerState.children && ownerState.orientation === "vertical" && styles7.withChildrenVertical, ownerState.textAlign === "right" && ownerState.orientation !== "vertical" && styles7.textAlignRight, ownerState.textAlign === "left" && ownerState.orientation !== "vertical" && styles7.textAlignLeft];
  }
})(({
  theme,
  ownerState
}) => _extends({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (theme.vars || theme).palette.divider,
  borderBottomWidth: "thin"
}, ownerState.absolute && {
  position: "absolute",
  bottom: 0,
  left: 0,
  width: "100%"
}, ownerState.light && {
  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)
}, ownerState.variant === "inset" && {
  marginLeft: 72
}, ownerState.variant === "middle" && ownerState.orientation === "horizontal" && {
  marginLeft: theme.spacing(2),
  marginRight: theme.spacing(2)
}, ownerState.variant === "middle" && ownerState.orientation === "vertical" && {
  marginTop: theme.spacing(1),
  marginBottom: theme.spacing(1)
}, ownerState.orientation === "vertical" && {
  height: "100%",
  borderBottomWidth: 0,
  borderRightWidth: "thin"
}, ownerState.flexItem && {
  alignSelf: "stretch",
  height: "auto"
}), ({
  ownerState
}) => _extends({}, ownerState.children && {
  display: "flex",
  whiteSpace: "nowrap",
  textAlign: "center",
  border: 0,
  "&::before, &::after": {
    content: '""',
    alignSelf: "center"
  }
}), ({
  theme,
  ownerState
}) => _extends({}, ownerState.children && ownerState.orientation !== "vertical" && {
  "&::before, &::after": {
    width: "100%",
    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`
  }
}), ({
  theme,
  ownerState
}) => _extends({}, ownerState.children && ownerState.orientation === "vertical" && {
  flexDirection: "column",
  "&::before, &::after": {
    height: "100%",
    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`
  }
}), ({
  ownerState
}) => _extends({}, ownerState.textAlign === "right" && ownerState.orientation !== "vertical" && {
  "&::before": {
    width: "90%"
  },
  "&::after": {
    width: "10%"
  }
}, ownerState.textAlign === "left" && ownerState.orientation !== "vertical" && {
  "&::before": {
    width: "10%"
  },
  "&::after": {
    width: "90%"
  }
}));
var DividerWrapper = styled_default2("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.wrapper, ownerState.orientation === "vertical" && styles7.wrapperVertical];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "inline-block",
  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,
  paddingRight: `calc(${theme.spacing(1)} * 1.2)`
}, ownerState.orientation === "vertical" && {
  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,
  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`
}));
var Divider = React171.forwardRef(function Divider2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDivider"
  });
  const {
    absolute = false,
    children: children2,
    className,
    component = children2 ? "div" : "hr",
    flexItem = false,
    light: light2 = false,
    orientation = "horizontal",
    role = component !== "hr" ? "separator" : void 0,
    textAlign: textAlign2 = "center",
    variant = "fullWidth"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded90);
  const ownerState = _extends({}, props, {
    absolute,
    component,
    flexItem,
    light: light2,
    orientation,
    role,
    textAlign: textAlign2,
    variant
  });
  const classes2 = useUtilityClasses65(ownerState);
  return (0, import_jsx_runtime137.jsx)(DividerRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, className),
    role,
    ref,
    ownerState
  }, other, {
    children: children2 ? (0, import_jsx_runtime137.jsx)(DividerWrapper, {
      className: classes2.wrapper,
      ownerState,
      children: children2
    }) : null
  }));
});
Divider.muiSkipListHighlight = true;
true ? Divider.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: import_prop_types104.default.bool,
  /**
   * The content of the component.
   */
  children: import_prop_types104.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types104.default.object,
  /**
   * @ignore
   */
  className: import_prop_types104.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types104.default.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: import_prop_types104.default.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   */
  light: import_prop_types104.default.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: import_prop_types104.default.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: import_prop_types104.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types104.default.oneOfType([import_prop_types104.default.arrayOf(import_prop_types104.default.oneOfType([import_prop_types104.default.func, import_prop_types104.default.object, import_prop_types104.default.bool])), import_prop_types104.default.func, import_prop_types104.default.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: import_prop_types104.default.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: import_prop_types104.default.oneOfType([import_prop_types104.default.oneOf(["fullWidth", "inset", "middle"]), import_prop_types104.default.string])
} : void 0;
var Divider_default = Divider;

// node_modules/@mui/material/Drawer/Drawer.js
init_objectWithoutPropertiesLoose();
init_extends();
var React173 = __toESM(require_react());
var import_prop_types106 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();

// node_modules/@mui/material/Slide/Slide.js
init_extends();
init_objectWithoutPropertiesLoose();
var React172 = __toESM(require_react());
var import_prop_types105 = __toESM(require_prop_types());
init_esm();
init_debounce3();
init_useForkRef3();
init_utils();
var import_jsx_runtime138 = __toESM(require_jsx_runtime());
var _excluded91 = ["addEndListener", "appear", "children", "container", "direction", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function getTranslateValue(direction, node2, resolvedContainer) {
  const rect = node2.getBoundingClientRect();
  const containerRect = resolvedContainer && resolvedContainer.getBoundingClientRect();
  const containerWindow = ownerWindow_default(node2);
  let transform;
  if (node2.fakeTransform) {
    transform = node2.fakeTransform;
  } else {
    const computedStyle = containerWindow.getComputedStyle(node2);
    transform = computedStyle.getPropertyValue("-webkit-transform") || computedStyle.getPropertyValue("transform");
  }
  let offsetX = 0;
  let offsetY = 0;
  if (transform && transform !== "none" && typeof transform === "string") {
    const transformValues = transform.split("(")[1].split(")")[0].split(",");
    offsetX = parseInt(transformValues[4], 10);
    offsetY = parseInt(transformValues[5], 10);
  }
  if (direction === "left") {
    if (containerRect) {
      return `translateX(${containerRect.right + offsetX - rect.left}px)`;
    }
    return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;
  }
  if (direction === "right") {
    if (containerRect) {
      return `translateX(-${rect.right - containerRect.left - offsetX}px)`;
    }
    return `translateX(-${rect.left + rect.width - offsetX}px)`;
  }
  if (direction === "up") {
    if (containerRect) {
      return `translateY(${containerRect.bottom + offsetY - rect.top}px)`;
    }
    return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;
  }
  if (containerRect) {
    return `translateY(-${rect.top - containerRect.top + rect.height - offsetY}px)`;
  }
  return `translateY(-${rect.top + rect.height - offsetY}px)`;
}
function resolveContainer(containerPropProp) {
  return typeof containerPropProp === "function" ? containerPropProp() : containerPropProp;
}
function setTranslateValue(direction, node2, containerProp) {
  const resolvedContainer = resolveContainer(containerProp);
  const transform = getTranslateValue(direction, node2, resolvedContainer);
  if (transform) {
    node2.style.webkitTransform = transform;
    node2.style.transform = transform;
  }
}
var Slide = React172.forwardRef(function Slide2(props, ref) {
  const theme = useTheme5();
  const defaultEasing = {
    enter: theme.transitions.easing.easeOut,
    exit: theme.transitions.easing.sharp
  };
  const defaultTimeout = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    addEndListener,
    appear = true,
    children: children2,
    container: containerProp,
    direction = "down",
    easing: easingProp = defaultEasing,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style: style4,
    timeout: timeout2 = defaultTimeout,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded91);
  const childrenRef = React172.useRef(null);
  const handleRef = useForkRef_default(children2.ref, childrenRef, ref);
  const normalizedTransitionCallback = (callback) => (isAppearing) => {
    if (callback) {
      if (isAppearing === void 0) {
        callback(childrenRef.current);
      } else {
        callback(childrenRef.current, isAppearing);
      }
    }
  };
  const handleEnter = normalizedTransitionCallback((node2, isAppearing) => {
    setTranslateValue(direction, node2, containerProp);
    reflow(node2);
    if (onEnter) {
      onEnter(node2, isAppearing);
    }
  });
  const handleEntering = normalizedTransitionCallback((node2, isAppearing) => {
    const transitionProps = getTransitionProps({
      timeout: timeout2,
      style: style4,
      easing: easingProp
    }, {
      mode: "enter"
    });
    node2.style.webkitTransition = theme.transitions.create("-webkit-transform", _extends({}, transitionProps));
    node2.style.transition = theme.transitions.create("transform", _extends({}, transitionProps));
    node2.style.webkitTransform = "none";
    node2.style.transform = "none";
    if (onEntering) {
      onEntering(node2, isAppearing);
    }
  });
  const handleEntered = normalizedTransitionCallback(onEntered);
  const handleExiting = normalizedTransitionCallback(onExiting);
  const handleExit = normalizedTransitionCallback((node2) => {
    const transitionProps = getTransitionProps({
      timeout: timeout2,
      style: style4,
      easing: easingProp
    }, {
      mode: "exit"
    });
    node2.style.webkitTransition = theme.transitions.create("-webkit-transform", transitionProps);
    node2.style.transition = theme.transitions.create("transform", transitionProps);
    setTranslateValue(direction, node2, containerProp);
    if (onExit) {
      onExit(node2);
    }
  });
  const handleExited = normalizedTransitionCallback((node2) => {
    node2.style.webkitTransition = "";
    node2.style.transition = "";
    if (onExited) {
      onExited(node2);
    }
  });
  const handleAddEndListener = (next2) => {
    if (addEndListener) {
      addEndListener(childrenRef.current, next2);
    }
  };
  const updatePosition = React172.useCallback(() => {
    if (childrenRef.current) {
      setTranslateValue(direction, childrenRef.current, containerProp);
    }
  }, [direction, containerProp]);
  React172.useEffect(() => {
    if (inProp || direction === "down" || direction === "right") {
      return void 0;
    }
    const handleResize = debounce_default(() => {
      if (childrenRef.current) {
        setTranslateValue(direction, childrenRef.current, containerProp);
      }
    });
    const containerWindow = ownerWindow_default(childrenRef.current);
    containerWindow.addEventListener("resize", handleResize);
    return () => {
      handleResize.clear();
      containerWindow.removeEventListener("resize", handleResize);
    };
  }, [direction, inProp, containerProp]);
  React172.useEffect(() => {
    if (!inProp) {
      updatePosition();
    }
  }, [inProp, updatePosition]);
  return (0, import_jsx_runtime138.jsx)(TransitionComponent, _extends({
    nodeRef: childrenRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    appear,
    in: inProp,
    timeout: timeout2
  }, other, {
    children: (state, childProps) => {
      return React172.cloneElement(children2, _extends({
        ref: handleRef,
        style: _extends({
          visibility: state === "exited" && !inProp ? "hidden" : void 0
        }, style4, children2.props.style)
      }, childProps));
    }
  }));
});
true ? Slide.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: import_prop_types105.default.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: import_prop_types105.default.bool,
  /**
   * A single child content element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: chainPropTypes(import_prop_types105.default.oneOfType([HTMLElementType, import_prop_types105.default.func]), (props) => {
    if (props.open) {
      const resolvedContainer = resolveContainer(props.container);
      if (resolvedContainer && resolvedContainer.nodeType === 1) {
        const box = resolvedContainer.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      } else if (!resolvedContainer || typeof resolvedContainer.getBoundingClientRect !== "function" || resolvedContainer.contextElement != null && resolvedContainer.contextElement.nodeType !== 1) {
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join("\n"));
      }
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: import_prop_types105.default.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: import_prop_types105.default.oneOfType([import_prop_types105.default.shape({
    enter: import_prop_types105.default.string,
    exit: import_prop_types105.default.string
  }), import_prop_types105.default.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: import_prop_types105.default.bool,
  /**
   * @ignore
   */
  onEnter: import_prop_types105.default.func,
  /**
   * @ignore
   */
  onEntered: import_prop_types105.default.func,
  /**
   * @ignore
   */
  onEntering: import_prop_types105.default.func,
  /**
   * @ignore
   */
  onExit: import_prop_types105.default.func,
  /**
   * @ignore
   */
  onExited: import_prop_types105.default.func,
  /**
   * @ignore
   */
  onExiting: import_prop_types105.default.func,
  /**
   * @ignore
   */
  style: import_prop_types105.default.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: import_prop_types105.default.oneOfType([import_prop_types105.default.number, import_prop_types105.default.shape({
    appear: import_prop_types105.default.number,
    enter: import_prop_types105.default.number,
    exit: import_prop_types105.default.number
  })])
} : void 0;
var Slide_default = Slide;

// node_modules/@mui/material/Drawer/Drawer.js
init_capitalize3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Drawer/drawerClasses.js
init_esm();
init_generateUtilityClass3();
function getDrawerUtilityClass(slot) {
  return generateUtilityClass("MuiDrawer", slot);
}
var drawerClasses = generateUtilityClasses("MuiDrawer", ["root", "docked", "paper", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);

// node_modules/@mui/material/Drawer/Drawer.js
var import_jsx_runtime139 = __toESM(require_jsx_runtime());
var _excluded92 = ["BackdropProps"];
var _excluded212 = ["anchor", "BackdropProps", "children", "className", "elevation", "hideBackdrop", "ModalProps", "onClose", "open", "PaperProps", "SlideProps", "TransitionComponent", "transitionDuration", "variant"];
var overridesResolver2 = (props, styles7) => {
  const {
    ownerState
  } = props;
  return [styles7.root, (ownerState.variant === "permanent" || ownerState.variant === "persistent") && styles7.docked, styles7.modal];
};
var useUtilityClasses66 = (ownerState) => {
  const {
    classes: classes2,
    anchor,
    variant
  } = ownerState;
  const slots = {
    root: ["root"],
    docked: [(variant === "permanent" || variant === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${capitalize_default(anchor)}`, variant !== "temporary" && `paperAnchorDocked${capitalize_default(anchor)}`]
  };
  return composeClasses(slots, getDrawerUtilityClass, classes2);
};
var DrawerRoot = styled_default2(Modal_default, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: overridesResolver2
})(({
  theme
}) => ({
  zIndex: (theme.vars || theme).zIndex.drawer
}));
var DrawerDockedRoot = styled_default2("div", {
  shouldForwardProp: rootShouldForwardProp,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: false,
  overridesResolver: overridesResolver2
})({
  flex: "0 0 auto"
});
var DrawerPaper = styled_default2(Paper_default, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.paper, styles7[`paperAnchor${capitalize_default(ownerState.anchor)}`], ownerState.variant !== "temporary" && styles7[`paperAnchorDocked${capitalize_default(ownerState.anchor)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (theme.vars || theme).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0
}, ownerState.anchor === "left" && {
  left: 0
}, ownerState.anchor === "top" && {
  top: 0,
  left: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, ownerState.anchor === "right" && {
  right: 0
}, ownerState.anchor === "bottom" && {
  top: "auto",
  left: 0,
  bottom: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, ownerState.anchor === "left" && ownerState.variant !== "temporary" && {
  borderRight: `1px solid ${(theme.vars || theme).palette.divider}`
}, ownerState.anchor === "top" && ownerState.variant !== "temporary" && {
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`
}, ownerState.anchor === "right" && ownerState.variant !== "temporary" && {
  borderLeft: `1px solid ${(theme.vars || theme).palette.divider}`
}, ownerState.anchor === "bottom" && ownerState.variant !== "temporary" && {
  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`
}));
var oppositeDirection = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function isHorizontal(anchor) {
  return ["left", "right"].indexOf(anchor) !== -1;
}
function getAnchor(theme, anchor) {
  return theme.direction === "rtl" && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;
}
var Drawer = React173.forwardRef(function Drawer2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDrawer"
  });
  const theme = useTheme5();
  const defaultTransitionDuration = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    anchor: anchorProp = "left",
    BackdropProps,
    children: children2,
    className,
    elevation = 16,
    hideBackdrop = false,
    ModalProps: {
      BackdropProps: BackdropPropsProp
    } = {},
    onClose,
    open = false,
    PaperProps = {},
    SlideProps,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Slide_default,
    transitionDuration = defaultTransitionDuration,
    variant = "temporary"
  } = props, ModalProps = _objectWithoutPropertiesLoose(props.ModalProps, _excluded92), other = _objectWithoutPropertiesLoose(props, _excluded212);
  const mounted = React173.useRef(false);
  React173.useEffect(() => {
    mounted.current = true;
  }, []);
  const anchorInvariant = getAnchor(theme, anchorProp);
  const anchor = anchorProp;
  const ownerState = _extends({}, props, {
    anchor,
    elevation,
    open,
    variant
  }, other);
  const classes2 = useUtilityClasses66(ownerState);
  const drawer = (0, import_jsx_runtime139.jsx)(DrawerPaper, _extends({
    elevation: variant === "temporary" ? elevation : 0,
    square: true
  }, PaperProps, {
    className: clsx_default2(classes2.paper, PaperProps.className),
    ownerState,
    children: children2
  }));
  if (variant === "permanent") {
    return (0, import_jsx_runtime139.jsx)(DrawerDockedRoot, _extends({
      className: clsx_default2(classes2.root, classes2.docked, className),
      ownerState,
      ref
    }, other, {
      children: drawer
    }));
  }
  const slidingDrawer = (0, import_jsx_runtime139.jsx)(TransitionComponent, _extends({
    in: open,
    direction: oppositeDirection[anchorInvariant],
    timeout: transitionDuration,
    appear: mounted.current
  }, SlideProps, {
    children: drawer
  }));
  if (variant === "persistent") {
    return (0, import_jsx_runtime139.jsx)(DrawerDockedRoot, _extends({
      className: clsx_default2(classes2.root, classes2.docked, className),
      ownerState,
      ref
    }, other, {
      children: slidingDrawer
    }));
  }
  return (0, import_jsx_runtime139.jsx)(DrawerRoot, _extends({
    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {
      transitionDuration
    }),
    className: clsx_default2(classes2.root, classes2.modal, className),
    open,
    ownerState,
    onClose,
    hideBackdrop,
    ref
  }, other, ModalProps, {
    children: slidingDrawer
  }));
});
true ? Drawer.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: import_prop_types106.default.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: import_prop_types106.default.object,
  /**
   * The content of the component.
   */
  children: import_prop_types106.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types106.default.object,
  /**
   * @ignore
   */
  className: import_prop_types106.default.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: integerPropType_default,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: import_prop_types106.default.bool,
  /**
   * Props applied to the [`Modal`](/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: import_prop_types106.default.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: import_prop_types106.default.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: import_prop_types106.default.bool,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: import_prop_types106.default.object,
  /**
   * Props applied to the [`Slide`](/material-ui/api/slide/) element.
   */
  SlideProps: import_prop_types106.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types106.default.oneOfType([import_prop_types106.default.arrayOf(import_prop_types106.default.oneOfType([import_prop_types106.default.func, import_prop_types106.default.object, import_prop_types106.default.bool])), import_prop_types106.default.func, import_prop_types106.default.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types106.default.oneOfType([import_prop_types106.default.number, import_prop_types106.default.shape({
    appear: import_prop_types106.default.number,
    enter: import_prop_types106.default.number,
    exit: import_prop_types106.default.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: import_prop_types106.default.oneOf(["permanent", "persistent", "temporary"])
} : void 0;
var Drawer_default = Drawer;

// node_modules/@mui/material/Fab/Fab.js
init_objectWithoutPropertiesLoose();
init_extends();
var React174 = __toESM(require_react());
var import_prop_types107 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_capitalize3();
init_useThemeProps3();

// node_modules/@mui/material/Fab/fabClasses.js
init_esm();
init_generateUtilityClass3();
function getFabUtilityClass(slot) {
  return generateUtilityClass("MuiFab", slot);
}
var fabClasses = generateUtilityClasses("MuiFab", ["root", "primary", "secondary", "extended", "circular", "focusVisible", "disabled", "colorInherit", "sizeSmall", "sizeMedium", "sizeLarge", "info", "error", "warning", "success"]);
var fabClasses_default = fabClasses;

// node_modules/@mui/material/Fab/Fab.js
init_styled2();
var import_jsx_runtime140 = __toESM(require_jsx_runtime());
var _excluded93 = ["children", "className", "color", "component", "disabled", "disableFocusRipple", "focusVisibleClassName", "size", "variant"];
var useUtilityClasses67 = (ownerState) => {
  const {
    color: color2,
    variant,
    classes: classes2,
    size: size2
  } = ownerState;
  const slots = {
    root: ["root", variant, `size${capitalize_default(size2)}`, color2 === "inherit" ? "colorInherit" : color2]
  };
  const composedClasses = composeClasses(slots, getFabUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var FabRoot = styled_default2(ButtonBase_default, {
  name: "MuiFab",
  slot: "Root",
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant], styles7[`size${capitalize_default(ownerState.size)}`], ownerState.color === "inherit" && styles7.colorInherit, styles7[capitalize_default(ownerState.size)], styles7[ownerState.color]];
  }
})(({
  theme,
  ownerState
}) => {
  var _theme$palette$getCon, _theme$palette;
  return _extends({}, theme.typography.button, {
    minHeight: 36,
    transition: theme.transitions.create(["background-color", "box-shadow", "border-color"], {
      duration: theme.transitions.duration.short
    }),
    borderRadius: "50%",
    padding: 0,
    minWidth: 0,
    width: 56,
    height: 56,
    zIndex: (theme.vars || theme).zIndex.fab,
    boxShadow: (theme.vars || theme).shadows[6],
    "&:active": {
      boxShadow: (theme.vars || theme).shadows[12]
    },
    color: theme.vars ? theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),
    backgroundColor: (theme.vars || theme).palette.grey[300],
    "&:hover": {
      backgroundColor: (theme.vars || theme).palette.grey.A100,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (theme.vars || theme).palette.grey[300]
      },
      textDecoration: "none"
    },
    [`&.${fabClasses_default.focusVisible}`]: {
      boxShadow: (theme.vars || theme).shadows[6]
    }
  }, ownerState.size === "small" && {
    width: 40,
    height: 40
  }, ownerState.size === "medium" && {
    width: 48,
    height: 48
  }, ownerState.variant === "extended" && {
    borderRadius: 48 / 2,
    padding: "0 16px",
    width: "auto",
    minHeight: "auto",
    minWidth: 48,
    height: 48
  }, ownerState.variant === "extended" && ownerState.size === "small" && {
    width: "auto",
    padding: "0 8px",
    borderRadius: 34 / 2,
    minWidth: 34,
    height: 34
  }, ownerState.variant === "extended" && ownerState.size === "medium" && {
    width: "auto",
    padding: "0 16px",
    borderRadius: 40 / 2,
    minWidth: 40,
    height: 40
  }, ownerState.color === "inherit" && {
    color: "inherit"
  });
}, ({
  theme,
  ownerState
}) => _extends({}, ownerState.color !== "inherit" && ownerState.color !== "default" && (theme.vars || theme).palette[ownerState.color] != null && {
  color: (theme.vars || theme).palette[ownerState.color].contrastText,
  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,
  "&:hover": {
    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].main
    }
  }
}), ({
  theme
}) => ({
  [`&.${fabClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.action.disabled,
    boxShadow: (theme.vars || theme).shadows[0],
    backgroundColor: (theme.vars || theme).palette.action.disabledBackground
  }
}));
var Fab = React174.forwardRef(function Fab2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFab"
  });
  const {
    children: children2,
    className,
    color: color2 = "default",
    component = "button",
    disabled = false,
    disableFocusRipple = false,
    focusVisibleClassName,
    size: size2 = "large",
    variant = "circular"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded93);
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    disabled,
    disableFocusRipple,
    size: size2,
    variant
  });
  const classes2 = useUtilityClasses67(ownerState);
  return (0, import_jsx_runtime140.jsx)(FabRoot, _extends({
    className: clsx_default2(classes2.root, className),
    component,
    disabled,
    focusRipple: !disableFocusRipple,
    focusVisibleClassName: clsx_default2(classes2.focusVisible, focusVisibleClassName),
    ownerState,
    ref
  }, other, {
    classes: classes2,
    children: children2
  }));
});
true ? Fab.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types107.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types107.default.object,
  /**
   * @ignore
   */
  className: import_prop_types107.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'default'
   */
  color: import_prop_types107.default.oneOfType([import_prop_types107.default.oneOf(["default", "error", "info", "inherit", "primary", "secondary", "success", "warning"]), import_prop_types107.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types107.default.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types107.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types107.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   */
  disableRipple: import_prop_types107.default.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: import_prop_types107.default.string,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: import_prop_types107.default.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'large'
   */
  size: import_prop_types107.default.oneOfType([import_prop_types107.default.oneOf(["small", "medium", "large"]), import_prop_types107.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types107.default.oneOfType([import_prop_types107.default.arrayOf(import_prop_types107.default.oneOfType([import_prop_types107.default.func, import_prop_types107.default.object, import_prop_types107.default.bool])), import_prop_types107.default.func, import_prop_types107.default.object]),
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: import_prop_types107.default.oneOfType([import_prop_types107.default.oneOf(["circular", "extended"]), import_prop_types107.default.string])
} : void 0;
var Fab_default = Fab;

// node_modules/@mui/material/FilledInput/FilledInput.js
init_objectWithoutPropertiesLoose();
init_extends();
var React175 = __toESM(require_react());
init_esm();
var import_prop_types108 = __toESM(require_prop_types());
init_composeClasses3();
init_styled2();
init_useThemeProps3();
var import_jsx_runtime141 = __toESM(require_jsx_runtime());
var _excluded94 = ["disableUnderline", "components", "componentsProps", "fullWidth", "hiddenLabel", "inputComponent", "multiline", "slotProps", "slots", "type"];
var useUtilityClasses68 = (ownerState) => {
  const {
    classes: classes2,
    disableUnderline
  } = ownerState;
  const slots = {
    root: ["root", !disableUnderline && "underline"],
    input: ["input"]
  };
  const composedClasses = composeClasses(slots, getFilledInputUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var FilledInputRoot = styled_default2(InputBaseRoot, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [...rootOverridesResolver(props, styles7), !ownerState.disableUnderline && styles7.underline];
  }
})(({
  theme,
  ownerState
}) => {
  var _palette;
  const light2 = theme.palette.mode === "light";
  const bottomLineColor = light2 ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  const backgroundColor2 = light2 ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)";
  const hoverBackground = light2 ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)";
  const disabledBackground = light2 ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return _extends({
    position: "relative",
    backgroundColor: theme.vars ? theme.vars.palette.FilledInput.bg : backgroundColor2,
    borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,
    borderTopRightRadius: (theme.vars || theme).shape.borderRadius,
    transition: theme.transitions.create("background-color", {
      duration: theme.transitions.duration.shorter,
      easing: theme.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: theme.vars ? theme.vars.palette.FilledInput.hoverBg : hoverBackground,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: theme.vars ? theme.vars.palette.FilledInput.bg : backgroundColor2
      }
    },
    [`&.${filledInputClasses_default.focused}`]: {
      backgroundColor: theme.vars ? theme.vars.palette.FilledInput.bg : backgroundColor2
    },
    [`&.${filledInputClasses_default.disabled}`]: {
      backgroundColor: theme.vars ? theme.vars.palette.FilledInput.disabledBg : disabledBackground
    }
  }, !ownerState.disableUnderline && {
    "&:after": {
      borderBottom: `2px solid ${(_palette = (theme.vars || theme).palette[ownerState.color || "primary"]) == null ? void 0 : _palette.main}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: "absolute",
      right: 0,
      transform: "scaleX(0)",
      transition: theme.transitions.create("transform", {
        duration: theme.transitions.duration.shorter,
        easing: theme.transitions.easing.easeOut
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&.${filledInputClasses_default.focused}:after`]: {
      // translateX(0) is a workaround for Safari transform scale bug
      // See https://github.com/mui/material-ui/issues/31766
      transform: "scaleX(1) translateX(0)"
    },
    [`&.${filledInputClasses_default.error}`]: {
      "&:before, &:after": {
        borderBottomColor: (theme.vars || theme).palette.error.main
      }
    },
    "&:before": {
      borderBottom: `1px solid ${theme.vars ? `rgba(${theme.vars.palette.common.onBackgroundChannel} / ${theme.vars.opacity.inputUnderline})` : bottomLineColor}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: "absolute",
      right: 0,
      transition: theme.transitions.create("border-bottom-color", {
        duration: theme.transitions.duration.shorter
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&:hover:not(.${filledInputClasses_default.disabled}, .${filledInputClasses_default.error}):before`]: {
      borderBottom: `1px solid ${(theme.vars || theme).palette.text.primary}`
    },
    [`&.${filledInputClasses_default.disabled}:before`]: {
      borderBottomStyle: "dotted"
    }
  }, ownerState.startAdornment && {
    paddingLeft: 12
  }, ownerState.endAdornment && {
    paddingRight: 12
  }, ownerState.multiline && _extends({
    padding: "25px 12px 8px"
  }, ownerState.size === "small" && {
    paddingTop: 21,
    paddingBottom: 4
  }, ownerState.hiddenLabel && {
    paddingTop: 16,
    paddingBottom: 17
  }));
});
var FilledInputInput = styled_default2(InputBaseComponent, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: inputOverridesResolver
})(({
  theme,
  ownerState
}) => _extends({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12
}, !theme.vars && {
  "&:-webkit-autofill": {
    WebkitBoxShadow: theme.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
    WebkitTextFillColor: theme.palette.mode === "light" ? null : "#fff",
    caretColor: theme.palette.mode === "light" ? null : "#fff",
    borderTopLeftRadius: "inherit",
    borderTopRightRadius: "inherit"
  }
}, theme.vars && {
  "&:-webkit-autofill": {
    borderTopLeftRadius: "inherit",
    borderTopRightRadius: "inherit"
  },
  [theme.getColorSchemeSelector("dark")]: {
    "&:-webkit-autofill": {
      WebkitBoxShadow: "0 0 0 100px #266798 inset",
      WebkitTextFillColor: "#fff",
      caretColor: "#fff"
    }
  }
}, ownerState.size === "small" && {
  paddingTop: 21,
  paddingBottom: 4
}, ownerState.hiddenLabel && {
  paddingTop: 16,
  paddingBottom: 17
}, ownerState.multiline && {
  paddingTop: 0,
  paddingBottom: 0,
  paddingLeft: 0,
  paddingRight: 0
}, ownerState.startAdornment && {
  paddingLeft: 0
}, ownerState.endAdornment && {
  paddingRight: 0
}, ownerState.hiddenLabel && ownerState.size === "small" && {
  paddingTop: 8,
  paddingBottom: 9
}));
var FilledInput = React175.forwardRef(function FilledInput2(inProps, ref) {
  var _ref2, _slots$root, _ref22, _slots$input;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFilledInput"
  });
  const {
    components = {},
    componentsProps: componentsPropsProp,
    fullWidth = false,
    // declare here to prevent spreading to DOM
    inputComponent = "input",
    multiline = false,
    slotProps,
    slots = {},
    type = "text"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded94);
  const ownerState = _extends({}, props, {
    fullWidth,
    inputComponent,
    multiline,
    type
  });
  const classes2 = useUtilityClasses68(props);
  const filledInputComponentsProps = {
    root: {
      ownerState
    },
    input: {
      ownerState
    }
  };
  const componentsProps = (slotProps != null ? slotProps : componentsPropsProp) ? deepmerge(slotProps != null ? slotProps : componentsPropsProp, filledInputComponentsProps) : filledInputComponentsProps;
  const RootSlot = (_ref2 = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref2 : FilledInputRoot;
  const InputSlot = (_ref22 = (_slots$input = slots.input) != null ? _slots$input : components.Input) != null ? _ref22 : FilledInputInput;
  return (0, import_jsx_runtime141.jsx)(InputBase_default, _extends({
    slots: {
      root: RootSlot,
      input: InputSlot
    },
    componentsProps,
    fullWidth,
    inputComponent,
    multiline,
    ref,
    type
  }, other, {
    classes: classes2
  }));
});
true ? FilledInput.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: import_prop_types108.default.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: import_prop_types108.default.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types108.default.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: import_prop_types108.default.oneOfType([import_prop_types108.default.oneOf(["primary", "secondary"]), import_prop_types108.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types108.default.shape({
    Input: import_prop_types108.default.elementType,
    Root: import_prop_types108.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types108.default.shape({
    input: import_prop_types108.default.object,
    root: import_prop_types108.default.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types108.default.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: import_prop_types108.default.bool,
  /**
   * If `true`, the input will not have an underline.
   */
  disableUnderline: import_prop_types108.default.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: import_prop_types108.default.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: import_prop_types108.default.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types108.default.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: import_prop_types108.default.bool,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types108.default.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: import_prop_types108.default.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: import_prop_types108.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: import_prop_types108.default.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: import_prop_types108.default.oneOfType([import_prop_types108.default.number, import_prop_types108.default.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: import_prop_types108.default.oneOfType([import_prop_types108.default.number, import_prop_types108.default.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: import_prop_types108.default.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: import_prop_types108.default.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types108.default.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: import_prop_types108.default.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: import_prop_types108.default.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: import_prop_types108.default.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: import_prop_types108.default.oneOfType([import_prop_types108.default.number, import_prop_types108.default.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types108.default.shape({
    input: import_prop_types108.default.object,
    root: import_prop_types108.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types108.default.shape({
    input: import_prop_types108.default.elementType,
    root: import_prop_types108.default.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: import_prop_types108.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types108.default.oneOfType([import_prop_types108.default.arrayOf(import_prop_types108.default.oneOfType([import_prop_types108.default.func, import_prop_types108.default.object, import_prop_types108.default.bool])), import_prop_types108.default.func, import_prop_types108.default.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: import_prop_types108.default.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: import_prop_types108.default.any
} : void 0;
FilledInput.muiName = "Input";
var FilledInput_default = FilledInput;

// node_modules/@mui/material/FormControl/FormControl.js
init_objectWithoutPropertiesLoose();
init_extends();
var React176 = __toESM(require_react());
var import_prop_types109 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_useThemeProps3();
init_styled2();
init_capitalize3();
init_isMuiElement2();

// node_modules/@mui/material/FormControl/formControlClasses.js
init_esm();
init_generateUtilityClass3();
function getFormControlUtilityClasses(slot) {
  return generateUtilityClass("MuiFormControl", slot);
}
var formControlClasses2 = generateUtilityClasses("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);

// node_modules/@mui/material/FormControl/FormControl.js
var import_jsx_runtime142 = __toESM(require_jsx_runtime());
var _excluded95 = ["children", "className", "color", "component", "disabled", "error", "focused", "fullWidth", "hiddenLabel", "margin", "required", "size", "variant"];
var useUtilityClasses69 = (ownerState) => {
  const {
    classes: classes2,
    margin: margin2,
    fullWidth
  } = ownerState;
  const slots = {
    root: ["root", margin2 !== "none" && `margin${capitalize_default(margin2)}`, fullWidth && "fullWidth"]
  };
  return composeClasses(slots, getFormControlUtilityClasses, classes2);
};
var FormControlRoot = styled_default2("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: ({
    ownerState
  }, styles7) => {
    return _extends({}, styles7.root, styles7[`margin${capitalize_default(ownerState.margin)}`], ownerState.fullWidth && styles7.fullWidth);
  }
})(({
  ownerState
}) => _extends({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top"
}, ownerState.margin === "normal" && {
  marginTop: 16,
  marginBottom: 8
}, ownerState.margin === "dense" && {
  marginTop: 8,
  marginBottom: 4
}, ownerState.fullWidth && {
  width: "100%"
}));
var FormControl3 = React176.forwardRef(function FormControl4(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFormControl"
  });
  const {
    children: children2,
    className,
    color: color2 = "primary",
    component = "div",
    disabled = false,
    error = false,
    focused: visuallyFocused,
    fullWidth = false,
    hiddenLabel = false,
    margin: margin2 = "none",
    required: required2 = false,
    size: size2 = "medium",
    variant = "outlined"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded95);
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    disabled,
    error,
    fullWidth,
    hiddenLabel,
    margin: margin2,
    required: required2,
    size: size2,
    variant
  });
  const classes2 = useUtilityClasses69(ownerState);
  const [adornedStart, setAdornedStart] = React176.useState(() => {
    let initialAdornedStart = false;
    if (children2) {
      React176.Children.forEach(children2, (child) => {
        if (!isMuiElement_default(child, ["Input", "Select"])) {
          return;
        }
        const input = isMuiElement_default(child, ["Select"]) ? child.props.input : child;
        if (input && isAdornedStart(input.props)) {
          initialAdornedStart = true;
        }
      });
    }
    return initialAdornedStart;
  });
  const [filled, setFilled] = React176.useState(() => {
    let initialFilled = false;
    if (children2) {
      React176.Children.forEach(children2, (child) => {
        if (!isMuiElement_default(child, ["Input", "Select"])) {
          return;
        }
        if (isFilled(child.props, true) || isFilled(child.props.inputProps, true)) {
          initialFilled = true;
        }
      });
    }
    return initialFilled;
  });
  const [focusedState, setFocused] = React176.useState(false);
  if (disabled && focusedState) {
    setFocused(false);
  }
  const focused = visuallyFocused !== void 0 && !disabled ? visuallyFocused : focusedState;
  let registerEffect;
  if (true) {
    const registeredInput = React176.useRef(false);
    registerEffect = () => {
      if (registeredInput.current) {
        console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join("\n"));
      }
      registeredInput.current = true;
      return () => {
        registeredInput.current = false;
      };
    };
  }
  const childContext = React176.useMemo(() => {
    return {
      adornedStart,
      setAdornedStart,
      color: color2,
      disabled,
      error,
      filled,
      focused,
      fullWidth,
      hiddenLabel,
      size: size2,
      onBlur: () => {
        setFocused(false);
      },
      onEmpty: () => {
        setFilled(false);
      },
      onFilled: () => {
        setFilled(true);
      },
      onFocus: () => {
        setFocused(true);
      },
      registerEffect,
      required: required2,
      variant
    };
  }, [adornedStart, color2, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required2, size2, variant]);
  return (0, import_jsx_runtime142.jsx)(FormControlContext_default.Provider, {
    value: childContext,
    children: (0, import_jsx_runtime142.jsx)(FormControlRoot, _extends({
      as: component,
      ownerState,
      className: clsx_default2(classes2.root, className),
      ref
    }, other, {
      children: children2
    }))
  });
});
true ? FormControl3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types109.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types109.default.object,
  /**
   * @ignore
   */
  className: import_prop_types109.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types109.default.oneOfType([import_prop_types109.default.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), import_prop_types109.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types109.default.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: import_prop_types109.default.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: import_prop_types109.default.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: import_prop_types109.default.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types109.default.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: import_prop_types109.default.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: import_prop_types109.default.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: import_prop_types109.default.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types109.default.oneOfType([import_prop_types109.default.oneOf(["medium", "small"]), import_prop_types109.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types109.default.oneOfType([import_prop_types109.default.arrayOf(import_prop_types109.default.oneOfType([import_prop_types109.default.func, import_prop_types109.default.object, import_prop_types109.default.bool])), import_prop_types109.default.func, import_prop_types109.default.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: import_prop_types109.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
var FormControl_default = FormControl3;

// node_modules/@mui/material/FormControlLabel/FormControlLabel.js
init_objectWithoutPropertiesLoose();
init_extends();
var React177 = __toESM(require_react());
var import_prop_types111 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();

// node_modules/@mui/material/Stack/Stack.js
var import_prop_types110 = __toESM(require_prop_types());
init_esm2();
init_styled2();
init_useThemeProps3();
var Stack2 = createStack({
  createStyledComponent: styled_default2("div", {
    name: "MuiStack",
    slot: "Root",
    overridesResolver: (props, styles7) => styles7.root
  }),
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "MuiStack"
  })
});
true ? Stack2.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types110.default.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types110.default.elementType,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */
  direction: import_prop_types110.default.oneOfType([import_prop_types110.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types110.default.arrayOf(import_prop_types110.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types110.default.object]),
  /**
   * Add an element between each child.
   */
  divider: import_prop_types110.default.node,
  /**
   * Defines the space between immediate children.
   * @default 0
   */
  spacing: import_prop_types110.default.oneOfType([import_prop_types110.default.arrayOf(import_prop_types110.default.oneOfType([import_prop_types110.default.number, import_prop_types110.default.string])), import_prop_types110.default.number, import_prop_types110.default.object, import_prop_types110.default.string]),
  /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types110.default.oneOfType([import_prop_types110.default.arrayOf(import_prop_types110.default.oneOfType([import_prop_types110.default.func, import_prop_types110.default.object, import_prop_types110.default.bool])), import_prop_types110.default.func, import_prop_types110.default.object]),
  /**
   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
   *
   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
   *
   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.
   * @default false
   */
  useFlexGap: import_prop_types110.default.bool
} : void 0;
var Stack_default2 = Stack2;

// node_modules/@mui/material/Stack/stackClasses.js
init_esm();
init_generateUtilityClass3();
var stackClasses2 = generateUtilityClasses("MuiStack", ["root"]);

// node_modules/@mui/material/FormControlLabel/FormControlLabel.js
init_capitalize3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js
init_esm();
init_generateUtilityClass3();
function getFormControlLabelUtilityClasses(slot) {
  return generateUtilityClass("MuiFormControlLabel", slot);
}
var formControlLabelClasses = generateUtilityClasses("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error", "required", "asterisk"]);
var formControlLabelClasses_default = formControlLabelClasses;

// node_modules/@mui/material/FormControlLabel/FormControlLabel.js
var import_jsx_runtime143 = __toESM(require_jsx_runtime());
var import_jsx_runtime144 = __toESM(require_jsx_runtime());
var _excluded96 = ["checked", "className", "componentsProps", "control", "disabled", "disableTypography", "inputRef", "label", "labelPlacement", "name", "onChange", "required", "slotProps", "value"];
var useUtilityClasses70 = (ownerState) => {
  const {
    classes: classes2,
    disabled,
    labelPlacement,
    error,
    required: required2
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", `labelPlacement${capitalize_default(labelPlacement)}`, error && "error", required2 && "required"],
    label: ["label", disabled && "disabled"],
    asterisk: ["asterisk", error && "error"]
  };
  return composeClasses(slots, getFormControlLabelUtilityClasses, classes2);
};
var FormControlLabelRoot = styled_default2("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${formControlLabelClasses_default.label}`]: styles7.label
    }, styles7.root, styles7[`labelPlacement${capitalize_default(ownerState.labelPlacement)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${formControlLabelClasses_default.disabled}`]: {
    cursor: "default"
  }
}, ownerState.labelPlacement === "start" && {
  flexDirection: "row-reverse",
  marginLeft: 16,
  // used for row presentation of radio/checkbox
  marginRight: -11
}, ownerState.labelPlacement === "top" && {
  flexDirection: "column-reverse",
  marginLeft: 16
}, ownerState.labelPlacement === "bottom" && {
  flexDirection: "column",
  marginLeft: 16
}, {
  [`& .${formControlLabelClasses_default.label}`]: {
    [`&.${formControlLabelClasses_default.disabled}`]: {
      color: (theme.vars || theme).palette.text.disabled
    }
  }
}));
var AsteriskComponent = styled_default2("span", {
  name: "MuiFormControlLabel",
  slot: "Asterisk",
  overridesResolver: (props, styles7) => styles7.asterisk
})(({
  theme
}) => ({
  [`&.${formControlLabelClasses_default.error}`]: {
    color: (theme.vars || theme).palette.error.main
  }
}));
var FormControlLabel = React177.forwardRef(function FormControlLabel2(inProps, ref) {
  var _ref2, _slotProps$typography;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFormControlLabel"
  });
  const {
    className,
    componentsProps = {},
    control,
    disabled: disabledProp,
    disableTypography,
    label: labelProp,
    labelPlacement = "end",
    required: requiredProp,
    slotProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded96);
  const muiFormControl = useFormControl();
  const disabled = (_ref2 = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref2 : muiFormControl == null ? void 0 : muiFormControl.disabled;
  const required2 = requiredProp != null ? requiredProp : control.props.required;
  const controlProps = {
    disabled,
    required: required2
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((key) => {
    if (typeof control.props[key] === "undefined" && typeof props[key] !== "undefined") {
      controlProps[key] = props[key];
    }
  });
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["error"]
  });
  const ownerState = _extends({}, props, {
    disabled,
    labelPlacement,
    required: required2,
    error: fcs.error
  });
  const classes2 = useUtilityClasses70(ownerState);
  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;
  let label = labelProp;
  if (label != null && label.type !== Typography_default && !disableTypography) {
    label = (0, import_jsx_runtime143.jsx)(Typography_default, _extends({
      component: "span"
    }, typographySlotProps, {
      className: clsx_default2(classes2.label, typographySlotProps == null ? void 0 : typographySlotProps.className),
      children: label
    }));
  }
  return (0, import_jsx_runtime144.jsxs)(FormControlLabelRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other, {
    children: [React177.cloneElement(control, controlProps), required2 ? (0, import_jsx_runtime144.jsxs)(Stack_default2, {
      direction: "row",
      alignItems: "center",
      children: [label, (0, import_jsx_runtime144.jsxs)(AsteriskComponent, {
        ownerState,
        "aria-hidden": true,
        className: classes2.asterisk,
        children: [" ", "*"]
      })]
    }) : label]
  }));
});
true ? FormControlLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the component appears selected.
   */
  checked: import_prop_types111.default.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types111.default.object,
  /**
   * @ignore
   */
  className: import_prop_types111.default.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: import_prop_types111.default.shape({
    typography: import_prop_types111.default.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: import_prop_types111.default.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: import_prop_types111.default.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: import_prop_types111.default.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: import_prop_types111.default.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: import_prop_types111.default.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: import_prop_types111.default.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types111.default.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: import_prop_types111.default.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: import_prop_types111.default.shape({
    typography: import_prop_types111.default.object
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types111.default.oneOfType([import_prop_types111.default.arrayOf(import_prop_types111.default.oneOfType([import_prop_types111.default.func, import_prop_types111.default.object, import_prop_types111.default.bool])), import_prop_types111.default.func, import_prop_types111.default.object]),
  /**
   * The value of the component.
   */
  value: import_prop_types111.default.any
} : void 0;
var FormControlLabel_default = FormControlLabel;

// node_modules/@mui/material/FormGroup/FormGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React178 = __toESM(require_react());
var import_prop_types112 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/FormGroup/formGroupClasses.js
init_esm();
init_generateUtilityClass3();
function getFormGroupUtilityClass(slot) {
  return generateUtilityClass("MuiFormGroup", slot);
}
var formGroupClasses = generateUtilityClasses("MuiFormGroup", ["root", "row", "error"]);

// node_modules/@mui/material/FormGroup/FormGroup.js
var import_jsx_runtime145 = __toESM(require_jsx_runtime());
var _excluded97 = ["className", "row"];
var useUtilityClasses71 = (ownerState) => {
  const {
    classes: classes2,
    row,
    error
  } = ownerState;
  const slots = {
    root: ["root", row && "row", error && "error"]
  };
  return composeClasses(slots, getFormGroupUtilityClass, classes2);
};
var FormGroupRoot = styled_default2("div", {
  name: "MuiFormGroup",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.row && styles7.row];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  flexDirection: "column",
  flexWrap: "wrap"
}, ownerState.row && {
  flexDirection: "row"
}));
var FormGroup = React178.forwardRef(function FormGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFormGroup"
  });
  const {
    className,
    row = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded97);
  const muiFormControl = useFormControl();
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["error"]
  });
  const ownerState = _extends({}, props, {
    row,
    error: fcs.error
  });
  const classes2 = useUtilityClasses71(ownerState);
  return (0, import_jsx_runtime145.jsx)(FormGroupRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? FormGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types112.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types112.default.object,
  /**
   * @ignore
   */
  className: import_prop_types112.default.string,
  /**
   * Display group of elements in a compact row.
   * @default false
   */
  row: import_prop_types112.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types112.default.oneOfType([import_prop_types112.default.arrayOf(import_prop_types112.default.oneOfType([import_prop_types112.default.func, import_prop_types112.default.object, import_prop_types112.default.bool])), import_prop_types112.default.func, import_prop_types112.default.object])
} : void 0;
var FormGroup_default = FormGroup;

// node_modules/@mui/material/FormHelperText/FormHelperText.js
init_objectWithoutPropertiesLoose();
init_extends();
var React179 = __toESM(require_react());
var import_prop_types113 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_capitalize3();

// node_modules/@mui/material/FormHelperText/formHelperTextClasses.js
init_esm();
init_generateUtilityClass3();
function getFormHelperTextUtilityClasses(slot) {
  return generateUtilityClass("MuiFormHelperText", slot);
}
var formHelperTextClasses = generateUtilityClasses("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var formHelperTextClasses_default = formHelperTextClasses;

// node_modules/@mui/material/FormHelperText/FormHelperText.js
init_useThemeProps3();
var import_jsx_runtime146 = __toESM(require_jsx_runtime());
var _span5;
var _excluded98 = ["children", "className", "component", "disabled", "error", "filled", "focused", "margin", "required", "variant"];
var useUtilityClasses72 = (ownerState) => {
  const {
    classes: classes2,
    contained,
    size: size2,
    disabled,
    error,
    filled,
    focused,
    required: required2
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", error && "error", size2 && `size${capitalize_default(size2)}`, contained && "contained", focused && "focused", filled && "filled", required2 && "required"]
  };
  return composeClasses(slots, getFormHelperTextUtilityClasses, classes2);
};
var FormHelperTextRoot = styled_default2("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.size && styles7[`size${capitalize_default(ownerState.size)}`], ownerState.contained && styles7.contained, ownerState.filled && styles7.filled];
  }
})(({
  theme,
  ownerState
}) => _extends({
  color: (theme.vars || theme).palette.text.secondary
}, theme.typography.caption, {
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${formHelperTextClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.text.disabled
  },
  [`&.${formHelperTextClasses_default.error}`]: {
    color: (theme.vars || theme).palette.error.main
  }
}, ownerState.size === "small" && {
  marginTop: 4
}, ownerState.contained && {
  marginLeft: 14,
  marginRight: 14
}));
var FormHelperText = React179.forwardRef(function FormHelperText2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFormHelperText"
  });
  const {
    children: children2,
    className,
    component = "p"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded98);
  const muiFormControl = useFormControl();
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  });
  const ownerState = _extends({}, props, {
    component,
    contained: fcs.variant === "filled" || fcs.variant === "outlined",
    variant: fcs.variant,
    size: fcs.size,
    disabled: fcs.disabled,
    error: fcs.error,
    filled: fcs.filled,
    focused: fcs.focused,
    required: fcs.required
  });
  const classes2 = useUtilityClasses72(ownerState);
  return (0, import_jsx_runtime146.jsx)(FormHelperTextRoot, _extends({
    as: component,
    ownerState,
    className: clsx_default2(classes2.root, className),
    ref
  }, other, {
    children: children2 === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      _span5 || (_span5 = (0, import_jsx_runtime146.jsx)("span", {
        className: "notranslate",
        children: "​"
      }))
    ) : children2
  }));
});
true ? FormHelperText.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: import_prop_types113.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types113.default.object,
  /**
   * @ignore
   */
  className: import_prop_types113.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types113.default.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: import_prop_types113.default.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: import_prop_types113.default.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: import_prop_types113.default.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: import_prop_types113.default.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: import_prop_types113.default.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: import_prop_types113.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types113.default.oneOfType([import_prop_types113.default.arrayOf(import_prop_types113.default.oneOfType([import_prop_types113.default.func, import_prop_types113.default.object, import_prop_types113.default.bool])), import_prop_types113.default.func, import_prop_types113.default.object]),
  /**
   * The variant to use.
   */
  variant: import_prop_types113.default.oneOfType([import_prop_types113.default.oneOf(["filled", "outlined", "standard"]), import_prop_types113.default.string])
} : void 0;
var FormHelperText_default = FormHelperText;

// node_modules/@mui/material/FormLabel/FormLabel.js
init_objectWithoutPropertiesLoose();
init_extends();
var React180 = __toESM(require_react());
var import_prop_types114 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_capitalize3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/FormLabel/formLabelClasses.js
init_esm();
init_generateUtilityClass3();
function getFormLabelUtilityClasses(slot) {
  return generateUtilityClass("MuiFormLabel", slot);
}
var formLabelClasses = generateUtilityClasses("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]);
var formLabelClasses_default = formLabelClasses;

// node_modules/@mui/material/FormLabel/FormLabel.js
var import_jsx_runtime147 = __toESM(require_jsx_runtime());
var _excluded99 = ["children", "className", "color", "component", "disabled", "error", "filled", "focused", "required"];
var useUtilityClasses73 = (ownerState) => {
  const {
    classes: classes2,
    color: color2,
    focused,
    disabled,
    error,
    filled,
    required: required2
  } = ownerState;
  const slots = {
    root: ["root", `color${capitalize_default(color2)}`, disabled && "disabled", error && "error", filled && "filled", focused && "focused", required2 && "required"],
    asterisk: ["asterisk", error && "error"]
  };
  return composeClasses(slots, getFormLabelUtilityClasses, classes2);
};
var FormLabelRoot = styled_default2("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: ({
    ownerState
  }, styles7) => {
    return _extends({}, styles7.root, ownerState.color === "secondary" && styles7.colorSecondary, ownerState.filled && styles7.filled);
  }
})(({
  theme,
  ownerState
}) => _extends({
  color: (theme.vars || theme).palette.text.secondary
}, theme.typography.body1, {
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  [`&.${formLabelClasses_default.focused}`]: {
    color: (theme.vars || theme).palette[ownerState.color].main
  },
  [`&.${formLabelClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.text.disabled
  },
  [`&.${formLabelClasses_default.error}`]: {
    color: (theme.vars || theme).palette.error.main
  }
}));
var AsteriskComponent2 = styled_default2("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (props, styles7) => styles7.asterisk
})(({
  theme
}) => ({
  [`&.${formLabelClasses_default.error}`]: {
    color: (theme.vars || theme).palette.error.main
  }
}));
var FormLabel = React180.forwardRef(function FormLabel2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFormLabel"
  });
  const {
    children: children2,
    className,
    component = "label"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded99);
  const muiFormControl = useFormControl();
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  });
  const ownerState = _extends({}, props, {
    color: fcs.color || "primary",
    component,
    disabled: fcs.disabled,
    error: fcs.error,
    filled: fcs.filled,
    focused: fcs.focused,
    required: fcs.required
  });
  const classes2 = useUtilityClasses73(ownerState);
  return (0, import_jsx_runtime147.jsxs)(FormLabelRoot, _extends({
    as: component,
    ownerState,
    className: clsx_default2(classes2.root, className),
    ref
  }, other, {
    children: [children2, fcs.required && (0, import_jsx_runtime147.jsxs)(AsteriskComponent2, {
      ownerState,
      "aria-hidden": true,
      className: classes2.asterisk,
      children: [" ", "*"]
    })]
  }));
});
true ? FormLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types114.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types114.default.object,
  /**
   * @ignore
   */
  className: import_prop_types114.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   */
  color: import_prop_types114.default.oneOfType([import_prop_types114.default.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), import_prop_types114.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types114.default.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: import_prop_types114.default.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: import_prop_types114.default.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: import_prop_types114.default.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: import_prop_types114.default.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: import_prop_types114.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types114.default.oneOfType([import_prop_types114.default.arrayOf(import_prop_types114.default.oneOfType([import_prop_types114.default.func, import_prop_types114.default.object, import_prop_types114.default.bool])), import_prop_types114.default.func, import_prop_types114.default.object])
} : void 0;
var FormLabel_default = FormLabel;

// node_modules/@mui/material/Grid/Grid.js
init_objectWithoutPropertiesLoose();
init_extends();
var React182 = __toESM(require_react());
var import_prop_types115 = __toESM(require_prop_types());
init_clsx2();
init_esm2();
init_composeClasses3();
init_requirePropFactory2();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Grid/GridContext.js
var React181 = __toESM(require_react());
var GridContext = React181.createContext();
if (true) {
  GridContext.displayName = "GridContext";
}
var GridContext_default = GridContext;

// node_modules/@mui/material/Grid/gridClasses.js
init_esm();
init_generateUtilityClass3();
function getGridUtilityClass(slot) {
  return generateUtilityClass("MuiGrid", slot);
}
var SPACINGS3 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var DIRECTIONS2 = ["column-reverse", "column", "row-reverse", "row"];
var WRAPS2 = ["nowrap", "wrap-reverse", "wrap"];
var GRID_SIZES2 = ["auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var gridClasses2 = generateUtilityClasses("MuiGrid", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...SPACINGS3.map((spacing2) => `spacing-xs-${spacing2}`),
  // direction values
  ...DIRECTIONS2.map((direction) => `direction-xs-${direction}`),
  // wrap values
  ...WRAPS2.map((wrap) => `wrap-xs-${wrap}`),
  // grid sizes for all breakpoints
  ...GRID_SIZES2.map((size2) => `grid-xs-${size2}`),
  ...GRID_SIZES2.map((size2) => `grid-sm-${size2}`),
  ...GRID_SIZES2.map((size2) => `grid-md-${size2}`),
  ...GRID_SIZES2.map((size2) => `grid-lg-${size2}`),
  ...GRID_SIZES2.map((size2) => `grid-xl-${size2}`)
]);
var gridClasses_default2 = gridClasses2;

// node_modules/@mui/material/Grid/Grid.js
var import_jsx_runtime148 = __toESM(require_jsx_runtime());
var _excluded100 = ["className", "columns", "columnSpacing", "component", "container", "direction", "item", "rowSpacing", "spacing", "wrap", "zeroMinWidth"];
function getOffset(val) {
  const parse2 = parseFloat(val);
  return `${parse2}${String(val).replace(String(parse2), "") || "px"}`;
}
function generateGrid({
  theme,
  ownerState
}) {
  let size2;
  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {
    let styles7 = {};
    if (ownerState[breakpoint]) {
      size2 = ownerState[breakpoint];
    }
    if (!size2) {
      return globalStyles;
    }
    if (size2 === true) {
      styles7 = {
        flexBasis: 0,
        flexGrow: 1,
        maxWidth: "100%"
      };
    } else if (size2 === "auto") {
      styles7 = {
        flexBasis: "auto",
        flexGrow: 0,
        flexShrink: 0,
        maxWidth: "none",
        width: "auto"
      };
    } else {
      const columnsBreakpointValues = resolveBreakpointValues({
        values: ownerState.columns,
        breakpoints: theme.breakpoints.values
      });
      const columnValue = typeof columnsBreakpointValues === "object" ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;
      if (columnValue === void 0 || columnValue === null) {
        return globalStyles;
      }
      const width2 = `${Math.round(size2 / columnValue * 1e8) / 1e6}%`;
      let more = {};
      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {
        const themeSpacing = theme.spacing(ownerState.columnSpacing);
        if (themeSpacing !== "0px") {
          const fullWidth = `calc(${width2} + ${getOffset(themeSpacing)})`;
          more = {
            flexBasis: fullWidth,
            maxWidth: fullWidth
          };
        }
      }
      styles7 = _extends({
        flexBasis: width2,
        flexGrow: 0,
        maxWidth: width2
      }, more);
    }
    if (theme.breakpoints.values[breakpoint] === 0) {
      Object.assign(globalStyles, styles7);
    } else {
      globalStyles[theme.breakpoints.up(breakpoint)] = styles7;
    }
    return globalStyles;
  }, {});
}
function generateDirection({
  theme,
  ownerState
}) {
  const directionValues = resolveBreakpointValues({
    values: ownerState.direction,
    breakpoints: theme.breakpoints.values
  });
  return handleBreakpoints({
    theme
  }, directionValues, (propValue) => {
    const output = {
      flexDirection: propValue
    };
    if (propValue.indexOf("column") === 0) {
      output[`& > .${gridClasses_default2.item}`] = {
        maxWidth: "none"
      };
    }
    return output;
  });
}
function extractZeroValueBreakpointKeys({
  breakpoints,
  values: values3
}) {
  let nonZeroKey = "";
  Object.keys(values3).forEach((key) => {
    if (nonZeroKey !== "") {
      return;
    }
    if (values3[key] !== 0) {
      nonZeroKey = key;
    }
  });
  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {
    return breakpoints[a] - breakpoints[b];
  });
  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));
}
function generateRowGap({
  theme,
  ownerState
}) {
  const {
    container,
    rowSpacing
  } = ownerState;
  let styles7 = {};
  if (container && rowSpacing !== 0) {
    const rowSpacingValues = resolveBreakpointValues({
      values: rowSpacing,
      breakpoints: theme.breakpoints.values
    });
    let zeroValueBreakpointKeys;
    if (typeof rowSpacingValues === "object") {
      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({
        breakpoints: theme.breakpoints.values,
        values: rowSpacingValues
      });
    }
    styles7 = handleBreakpoints({
      theme
    }, rowSpacingValues, (propValue, breakpoint) => {
      var _zeroValueBreakpointK;
      const themeSpacing = theme.spacing(propValue);
      if (themeSpacing !== "0px") {
        return {
          marginTop: `-${getOffset(themeSpacing)}`,
          [`& > .${gridClasses_default2.item}`]: {
            paddingTop: getOffset(themeSpacing)
          }
        };
      }
      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {
        return {};
      }
      return {
        marginTop: 0,
        [`& > .${gridClasses_default2.item}`]: {
          paddingTop: 0
        }
      };
    });
  }
  return styles7;
}
function generateColumnGap({
  theme,
  ownerState
}) {
  const {
    container,
    columnSpacing
  } = ownerState;
  let styles7 = {};
  if (container && columnSpacing !== 0) {
    const columnSpacingValues = resolveBreakpointValues({
      values: columnSpacing,
      breakpoints: theme.breakpoints.values
    });
    let zeroValueBreakpointKeys;
    if (typeof columnSpacingValues === "object") {
      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({
        breakpoints: theme.breakpoints.values,
        values: columnSpacingValues
      });
    }
    styles7 = handleBreakpoints({
      theme
    }, columnSpacingValues, (propValue, breakpoint) => {
      var _zeroValueBreakpointK2;
      const themeSpacing = theme.spacing(propValue);
      if (themeSpacing !== "0px") {
        return {
          width: `calc(100% + ${getOffset(themeSpacing)})`,
          marginLeft: `-${getOffset(themeSpacing)}`,
          [`& > .${gridClasses_default2.item}`]: {
            paddingLeft: getOffset(themeSpacing)
          }
        };
      }
      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {
        return {};
      }
      return {
        width: "100%",
        marginLeft: 0,
        [`& > .${gridClasses_default2.item}`]: {
          paddingLeft: 0
        }
      };
    });
  }
  return styles7;
}
function resolveSpacingStyles(spacing2, breakpoints, styles7 = {}) {
  if (!spacing2 || spacing2 <= 0) {
    return [];
  }
  if (typeof spacing2 === "string" && !Number.isNaN(Number(spacing2)) || typeof spacing2 === "number") {
    return [styles7[`spacing-xs-${String(spacing2)}`]];
  }
  const spacingStyles = [];
  breakpoints.forEach((breakpoint) => {
    const value = spacing2[breakpoint];
    if (Number(value) > 0) {
      spacingStyles.push(styles7[`spacing-${breakpoint}-${String(value)}`]);
    }
  });
  return spacingStyles;
}
var GridRoot = styled_default2("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    const {
      container,
      direction,
      item,
      spacing: spacing2,
      wrap,
      zeroMinWidth,
      breakpoints
    } = ownerState;
    let spacingStyles = [];
    if (container) {
      spacingStyles = resolveSpacingStyles(spacing2, breakpoints, styles7);
    }
    const breakpointsStyles = [];
    breakpoints.forEach((breakpoint) => {
      const value = ownerState[breakpoint];
      if (value) {
        breakpointsStyles.push(styles7[`grid-${breakpoint}-${String(value)}`]);
      }
    });
    return [styles7.root, container && styles7.container, item && styles7.item, zeroMinWidth && styles7.zeroMinWidth, ...spacingStyles, direction !== "row" && styles7[`direction-xs-${String(direction)}`], wrap !== "wrap" && styles7[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];
  }
})(({
  ownerState
}) => _extends({
  boxSizing: "border-box"
}, ownerState.container && {
  display: "flex",
  flexWrap: "wrap",
  width: "100%"
}, ownerState.item && {
  margin: 0
  // For instance, it's useful when used with a `figure` element.
}, ownerState.zeroMinWidth && {
  minWidth: 0
}, ownerState.wrap !== "wrap" && {
  flexWrap: ownerState.wrap
}), generateDirection, generateRowGap, generateColumnGap, generateGrid);
function resolveSpacingClasses(spacing2, breakpoints) {
  if (!spacing2 || spacing2 <= 0) {
    return [];
  }
  if (typeof spacing2 === "string" && !Number.isNaN(Number(spacing2)) || typeof spacing2 === "number") {
    return [`spacing-xs-${String(spacing2)}`];
  }
  const classes2 = [];
  breakpoints.forEach((breakpoint) => {
    const value = spacing2[breakpoint];
    if (Number(value) > 0) {
      const className = `spacing-${breakpoint}-${String(value)}`;
      classes2.push(className);
    }
  });
  return classes2;
}
var useUtilityClasses74 = (ownerState) => {
  const {
    classes: classes2,
    container,
    direction,
    item,
    spacing: spacing2,
    wrap,
    zeroMinWidth,
    breakpoints
  } = ownerState;
  let spacingClasses = [];
  if (container) {
    spacingClasses = resolveSpacingClasses(spacing2, breakpoints);
  }
  const breakpointsClasses = [];
  breakpoints.forEach((breakpoint) => {
    const value = ownerState[breakpoint];
    if (value) {
      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);
    }
  });
  const slots = {
    root: ["root", container && "container", item && "item", zeroMinWidth && "zeroMinWidth", ...spacingClasses, direction !== "row" && `direction-xs-${String(direction)}`, wrap !== "wrap" && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]
  };
  return composeClasses(slots, getGridUtilityClass, classes2);
};
var Grid2 = React182.forwardRef(function Grid3(inProps, ref) {
  const themeProps = useThemeProps2({
    props: inProps,
    name: "MuiGrid"
  });
  const {
    breakpoints
  } = useTheme5();
  const props = extendSxProp(themeProps);
  const {
    className,
    columns: columnsProp,
    columnSpacing: columnSpacingProp,
    component = "div",
    container = false,
    direction = "row",
    item = false,
    rowSpacing: rowSpacingProp,
    spacing: spacing2 = 0,
    wrap = "wrap",
    zeroMinWidth = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded100);
  const rowSpacing = rowSpacingProp || spacing2;
  const columnSpacing = columnSpacingProp || spacing2;
  const columnsContext = React182.useContext(GridContext_default);
  const columns = container ? columnsProp || 12 : columnsContext;
  const breakpointsValues = {};
  const otherFiltered = _extends({}, other);
  breakpoints.keys.forEach((breakpoint) => {
    if (other[breakpoint] != null) {
      breakpointsValues[breakpoint] = other[breakpoint];
      delete otherFiltered[breakpoint];
    }
  });
  const ownerState = _extends({}, props, {
    columns,
    container,
    direction,
    item,
    rowSpacing,
    columnSpacing,
    wrap,
    zeroMinWidth,
    spacing: spacing2
  }, breakpointsValues, {
    breakpoints: breakpoints.keys
  });
  const classes2 = useUtilityClasses74(ownerState);
  return (0, import_jsx_runtime148.jsx)(GridContext_default.Provider, {
    value: columns,
    children: (0, import_jsx_runtime148.jsx)(GridRoot, _extends({
      ownerState,
      className: clsx_default2(classes2.root, className),
      as: component,
      ref
    }, otherFiltered))
  });
});
true ? Grid2.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types115.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types115.default.object,
  /**
   * @ignore
   */
  className: import_prop_types115.default.string,
  /**
   * The number of columns.
   * @default 12
   */
  columns: import_prop_types115.default.oneOfType([import_prop_types115.default.arrayOf(import_prop_types115.default.number), import_prop_types115.default.number, import_prop_types115.default.object]),
  /**
   * Defines the horizontal space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  columnSpacing: import_prop_types115.default.oneOfType([import_prop_types115.default.arrayOf(import_prop_types115.default.oneOfType([import_prop_types115.default.number, import_prop_types115.default.string])), import_prop_types115.default.number, import_prop_types115.default.object, import_prop_types115.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types115.default.elementType,
  /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  container: import_prop_types115.default.bool,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'row'
   */
  direction: import_prop_types115.default.oneOfType([import_prop_types115.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types115.default.arrayOf(import_prop_types115.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types115.default.object]),
  /**
   * If `true`, the component will have the flex *item* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  item: import_prop_types115.default.bool,
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `lg` breakpoint and wider screens if not overridden.
   * @default false
   */
  lg: import_prop_types115.default.oneOfType([import_prop_types115.default.oneOf(["auto"]), import_prop_types115.default.number, import_prop_types115.default.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `md` breakpoint and wider screens if not overridden.
   * @default false
   */
  md: import_prop_types115.default.oneOfType([import_prop_types115.default.oneOf(["auto"]), import_prop_types115.default.number, import_prop_types115.default.bool]),
  /**
   * Defines the vertical space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  rowSpacing: import_prop_types115.default.oneOfType([import_prop_types115.default.arrayOf(import_prop_types115.default.oneOfType([import_prop_types115.default.number, import_prop_types115.default.string])), import_prop_types115.default.number, import_prop_types115.default.object, import_prop_types115.default.string]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `sm` breakpoint and wider screens if not overridden.
   * @default false
   */
  sm: import_prop_types115.default.oneOfType([import_prop_types115.default.oneOf(["auto"]), import_prop_types115.default.number, import_prop_types115.default.bool]),
  /**
   * Defines the space between the type `item` components.
   * It can only be used on a type `container` component.
   * @default 0
   */
  spacing: import_prop_types115.default.oneOfType([import_prop_types115.default.arrayOf(import_prop_types115.default.oneOfType([import_prop_types115.default.number, import_prop_types115.default.string])), import_prop_types115.default.number, import_prop_types115.default.object, import_prop_types115.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types115.default.oneOfType([import_prop_types115.default.arrayOf(import_prop_types115.default.oneOfType([import_prop_types115.default.func, import_prop_types115.default.object, import_prop_types115.default.bool])), import_prop_types115.default.func, import_prop_types115.default.object]),
  /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   * @default 'wrap'
   */
  wrap: import_prop_types115.default.oneOf(["nowrap", "wrap-reverse", "wrap"]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `xl` breakpoint and wider screens if not overridden.
   * @default false
   */
  xl: import_prop_types115.default.oneOfType([import_prop_types115.default.oneOf(["auto"]), import_prop_types115.default.number, import_prop_types115.default.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for all the screen sizes with the lowest priority.
   * @default false
   */
  xs: import_prop_types115.default.oneOfType([import_prop_types115.default.oneOf(["auto"]), import_prop_types115.default.number, import_prop_types115.default.bool]),
  /**
   * If `true`, it sets `min-width: 0` on the item.
   * Refer to the limitations section of the documentation to better understand the use case.
   * @default false
   */
  zeroMinWidth: import_prop_types115.default.bool
} : void 0;
if (true) {
  const requireProp = requirePropFactory_default("Grid", Grid2);
  Grid2["propTypes"] = _extends({}, Grid2.propTypes, {
    direction: requireProp("container"),
    lg: requireProp("item"),
    md: requireProp("item"),
    sm: requireProp("item"),
    spacing: requireProp("container"),
    wrap: requireProp("container"),
    xs: requireProp("item"),
    zeroMinWidth: requireProp("item")
  });
}

// node_modules/@mui/material/Unstable_Grid2/Grid2.js
var import_prop_types116 = __toESM(require_prop_types());
init_Unstable_Grid();
var Grid22 = createGrid({
  createStyledComponent: styled_default2("div", {
    name: "MuiGrid2",
    slot: "Root",
    overridesResolver: (props, styles7) => styles7.root
  }),
  componentName: "MuiGrid2",
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "MuiGrid2"
  })
});
true ? Grid22.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types116.default.node,
  /**
   * @ignore
   */
  sx: import_prop_types116.default.oneOfType([import_prop_types116.default.arrayOf(import_prop_types116.default.oneOfType([import_prop_types116.default.func, import_prop_types116.default.object, import_prop_types116.default.bool])), import_prop_types116.default.func, import_prop_types116.default.object])
} : void 0;

// node_modules/@mui/material/Unstable_Grid2/grid2Classes.js
init_esm();
init_generateUtilityClass3();
var SPACINGS4 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var DIRECTIONS3 = ["column-reverse", "column", "row-reverse", "row"];
var WRAPS3 = ["nowrap", "wrap-reverse", "wrap"];
var GRID_SIZES3 = ["auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var grid2Classes = generateUtilityClasses("MuiGrid2", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...SPACINGS4.map((spacing2) => `spacing-xs-${spacing2}`),
  // direction values
  ...DIRECTIONS3.map((direction) => `direction-xs-${direction}`),
  // wrap values
  ...WRAPS3.map((wrap) => `wrap-xs-${wrap}`),
  // grid sizes for all breakpoints
  ...GRID_SIZES3.map((size2) => `grid-xs-${size2}`),
  ...GRID_SIZES3.map((size2) => `grid-sm-${size2}`),
  ...GRID_SIZES3.map((size2) => `grid-md-${size2}`),
  ...GRID_SIZES3.map((size2) => `grid-lg-${size2}`),
  ...GRID_SIZES3.map((size2) => `grid-xl-${size2}`)
]);

// node_modules/@mui/material/Grow/Grow.js
init_extends();
init_objectWithoutPropertiesLoose();
var React183 = __toESM(require_react());
var import_prop_types117 = __toESM(require_prop_types());
init_esm();
init_useForkRef3();
var import_jsx_runtime149 = __toESM(require_jsx_runtime());
var _excluded101 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function getScale2(value) {
  return `scale(${value}, ${value ** 2})`;
}
var styles4 = {
  entering: {
    opacity: 1,
    transform: getScale2(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
};
var isWebKit154 = typeof navigator !== "undefined" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent);
var Grow = React183.forwardRef(function Grow2(props, ref) {
  const {
    addEndListener,
    appear = true,
    children: children2,
    easing: easing2,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style: style4,
    timeout: timeout2 = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded101);
  const timer = React183.useRef();
  const autoTimeout = React183.useRef();
  const theme = useTheme5();
  const nodeRef = React183.useRef(null);
  const handleRef = useForkRef_default(nodeRef, children2.ref, ref);
  const normalizedTransitionCallback = (callback) => (maybeIsAppearing) => {
    if (callback) {
      const node2 = nodeRef.current;
      if (maybeIsAppearing === void 0) {
        callback(node2);
      } else {
        callback(node2, maybeIsAppearing);
      }
    }
  };
  const handleEntering = normalizedTransitionCallback(onEntering);
  const handleEnter = normalizedTransitionCallback((node2, isAppearing) => {
    reflow(node2);
    const {
      duration: transitionDuration,
      delay,
      easing: transitionTimingFunction
    } = getTransitionProps({
      style: style4,
      timeout: timeout2,
      easing: easing2
    }, {
      mode: "enter"
    });
    let duration2;
    if (timeout2 === "auto") {
      duration2 = theme.transitions.getAutoHeightDuration(node2.clientHeight);
      autoTimeout.current = duration2;
    } else {
      duration2 = transitionDuration;
    }
    node2.style.transition = [theme.transitions.create("opacity", {
      duration: duration2,
      delay
    }), theme.transitions.create("transform", {
      duration: isWebKit154 ? duration2 : duration2 * 0.666,
      delay,
      easing: transitionTimingFunction
    })].join(",");
    if (onEnter) {
      onEnter(node2, isAppearing);
    }
  });
  const handleEntered = normalizedTransitionCallback(onEntered);
  const handleExiting = normalizedTransitionCallback(onExiting);
  const handleExit = normalizedTransitionCallback((node2) => {
    const {
      duration: transitionDuration,
      delay,
      easing: transitionTimingFunction
    } = getTransitionProps({
      style: style4,
      timeout: timeout2,
      easing: easing2
    }, {
      mode: "exit"
    });
    let duration2;
    if (timeout2 === "auto") {
      duration2 = theme.transitions.getAutoHeightDuration(node2.clientHeight);
      autoTimeout.current = duration2;
    } else {
      duration2 = transitionDuration;
    }
    node2.style.transition = [theme.transitions.create("opacity", {
      duration: duration2,
      delay
    }), theme.transitions.create("transform", {
      duration: isWebKit154 ? duration2 : duration2 * 0.666,
      delay: isWebKit154 ? delay : delay || duration2 * 0.333,
      easing: transitionTimingFunction
    })].join(",");
    node2.style.opacity = 0;
    node2.style.transform = getScale2(0.75);
    if (onExit) {
      onExit(node2);
    }
  });
  const handleExited = normalizedTransitionCallback(onExited);
  const handleAddEndListener = (next2) => {
    if (timeout2 === "auto") {
      timer.current = setTimeout(next2, autoTimeout.current || 0);
    }
    if (addEndListener) {
      addEndListener(nodeRef.current, next2);
    }
  };
  React183.useEffect(() => {
    return () => {
      clearTimeout(timer.current);
    };
  }, []);
  return (0, import_jsx_runtime149.jsx)(TransitionComponent, _extends({
    appear,
    in: inProp,
    nodeRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout: timeout2 === "auto" ? null : timeout2
  }, other, {
    children: (state, childProps) => {
      return React183.cloneElement(children2, _extends({
        style: _extends({
          opacity: 0,
          transform: getScale2(0.75),
          visibility: state === "exited" && !inProp ? "hidden" : void 0
        }, styles4[state], style4, children2.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
true ? Grow.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: import_prop_types117.default.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: import_prop_types117.default.bool,
  /**
   * A single child content element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: import_prop_types117.default.oneOfType([import_prop_types117.default.shape({
    enter: import_prop_types117.default.string,
    exit: import_prop_types117.default.string
  }), import_prop_types117.default.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: import_prop_types117.default.bool,
  /**
   * @ignore
   */
  onEnter: import_prop_types117.default.func,
  /**
   * @ignore
   */
  onEntered: import_prop_types117.default.func,
  /**
   * @ignore
   */
  onEntering: import_prop_types117.default.func,
  /**
   * @ignore
   */
  onExit: import_prop_types117.default.func,
  /**
   * @ignore
   */
  onExited: import_prop_types117.default.func,
  /**
   * @ignore
   */
  onExiting: import_prop_types117.default.func,
  /**
   * @ignore
   */
  style: import_prop_types117.default.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: import_prop_types117.default.oneOfType([import_prop_types117.default.oneOf(["auto"]), import_prop_types117.default.number, import_prop_types117.default.shape({
    appear: import_prop_types117.default.number,
    enter: import_prop_types117.default.number,
    exit: import_prop_types117.default.number
  })])
} : void 0;
Grow.muiSupportAuto = true;
var Grow_default = Grow;

// node_modules/@mui/material/Hidden/Hidden.js
init_extends();
init_objectWithoutPropertiesLoose();
var React188 = __toESM(require_react());
var import_prop_types121 = __toESM(require_prop_types());

// node_modules/@mui/material/Hidden/HiddenJs.js
var React186 = __toESM(require_react());
var import_prop_types119 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/material/Hidden/withWidth.js
init_extends();
init_objectWithoutPropertiesLoose();
var React185 = __toESM(require_react());
var import_prop_types118 = __toESM(require_prop_types());
init_esm();
init_esm2();
init_useEnhancedEffect3();

// node_modules/@mui/material/useMediaQuery/useMediaQuery.js
var React184 = __toESM(require_react());
init_esm2();
init_useEnhancedEffect3();
function useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {
  const [match2, setMatch] = React184.useState(() => {
    if (noSsr && matchMedia) {
      return matchMedia(query).matches;
    }
    if (ssrMatchMedia) {
      return ssrMatchMedia(query).matches;
    }
    return defaultMatches;
  });
  useEnhancedEffect_default2(() => {
    let active = true;
    if (!matchMedia) {
      return void 0;
    }
    const queryList = matchMedia(query);
    const updateMatch = () => {
      if (active) {
        setMatch(queryList.matches);
      }
    };
    updateMatch();
    queryList.addListener(updateMatch);
    return () => {
      active = false;
      queryList.removeListener(updateMatch);
    };
  }, [query, matchMedia]);
  return match2;
}
var maybeReactUseSyncExternalStore = React184["useSyncExternalStore"];
function useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {
  const getDefaultSnapshot = React184.useCallback(() => defaultMatches, [defaultMatches]);
  const getServerSnapshot = React184.useMemo(() => {
    if (noSsr && matchMedia) {
      return () => matchMedia(query).matches;
    }
    if (ssrMatchMedia !== null) {
      const {
        matches: matches2
      } = ssrMatchMedia(query);
      return () => matches2;
    }
    return getDefaultSnapshot;
  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);
  const [getSnapshot, subscribe] = React184.useMemo(() => {
    if (matchMedia === null) {
      return [getDefaultSnapshot, () => () => {
      }];
    }
    const mediaQueryList = matchMedia(query);
    return [() => mediaQueryList.matches, (notify) => {
      mediaQueryList.addListener(notify);
      return () => {
        mediaQueryList.removeListener(notify);
      };
    }];
  }, [getDefaultSnapshot, matchMedia, query]);
  const match2 = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
  return match2;
}
function useMediaQuery(queryInput, options = {}) {
  const theme = useThemeWithoutDefault_default();
  const supportMatchMedia = typeof window !== "undefined" && typeof window.matchMedia !== "undefined";
  const {
    defaultMatches = false,
    matchMedia = supportMatchMedia ? window.matchMedia : null,
    ssrMatchMedia = null,
    noSsr = false
  } = getThemeProps({
    name: "MuiUseMediaQuery",
    props: options,
    theme
  });
  if (true) {
    if (typeof queryInput === "function" && theme === null) {
      console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join("\n"));
    }
  }
  let query = typeof queryInput === "function" ? queryInput(theme) : queryInput;
  query = query.replace(/^@media( ?)/m, "");
  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== void 0 ? useMediaQueryNew : useMediaQueryOld;
  const match2 = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);
  if (true) {
    React184.useDebugValue({
      query,
      match: match2
    });
  }
  return match2;
}

// node_modules/@mui/material/Hidden/withWidth.js
var import_jsx_runtime150 = __toESM(require_jsx_runtime());
var _excluded102 = ["initialWidth", "width"];
var breakpointKeys = ["xs", "sm", "md", "lg", "xl"];
var isWidthUp = (breakpoint, width2, inclusive = true) => {
  if (inclusive) {
    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width2);
  }
  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width2);
};
var isWidthDown = (breakpoint, width2, inclusive = false) => {
  if (inclusive) {
    return breakpointKeys.indexOf(width2) <= breakpointKeys.indexOf(breakpoint);
  }
  return breakpointKeys.indexOf(width2) < breakpointKeys.indexOf(breakpoint);
};
var withWidth = (options = {}) => (Component2) => {
  const {
    withTheme: withThemeOption = false,
    noSSR = false,
    initialWidth: initialWidthOption
  } = options;
  function WithWidth(props) {
    const contextTheme = useTheme5();
    const theme = props.theme || contextTheme;
    const _getThemeProps = getThemeProps({
      theme,
      name: "MuiWithWidth",
      props
    }), {
      initialWidth,
      width: width2
    } = _getThemeProps, other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded102);
    const [mountedState, setMountedState] = React185.useState(false);
    useEnhancedEffect_default2(() => {
      setMountedState(true);
    }, []);
    const keys = theme.breakpoints.keys.slice().reverse();
    const widthComputed = keys.reduce((output, key) => {
      const matches2 = useMediaQuery(theme.breakpoints.up(key));
      return !output && matches2 ? key : output;
    }, null);
    const more = _extends({
      width: width2 || (mountedState || noSSR ? widthComputed : void 0) || initialWidth || initialWidthOption
    }, withThemeOption ? {
      theme
    } : {}, other);
    if (more.width === void 0) {
      return null;
    }
    return (0, import_jsx_runtime150.jsx)(Component2, _extends({}, more));
  }
  true ? WithWidth.propTypes = {
    /**
     * As `window.innerWidth` is unavailable on the server,
     * we default to rendering an empty component during the first mount.
     * You might want to use a heuristic to approximate
     * the screen width of the client browser screen width.
     *
     * For instance, you could be using the user-agent or the client-hints.
     * https://caniuse.com/#search=client%20hint
     */
    initialWidth: import_prop_types118.default.oneOf(["xs", "sm", "md", "lg", "xl"]),
    /**
     * @ignore
     */
    theme: import_prop_types118.default.object,
    /**
     * Bypass the width calculation logic.
     */
    width: import_prop_types118.default.oneOf(["xs", "sm", "md", "lg", "xl"])
  } : void 0;
  if (true) {
    WithWidth.displayName = `WithWidth(${getDisplayName(Component2)})`;
  }
  return WithWidth;
};
var withWidth_default = withWidth;

// node_modules/@mui/material/Hidden/HiddenJs.js
var import_jsx_runtime151 = __toESM(require_jsx_runtime());
function HiddenJs(props) {
  const {
    children: children2,
    only,
    width: width2
  } = props;
  const theme = useTheme5();
  let visible = true;
  if (only) {
    if (Array.isArray(only)) {
      for (let i = 0; i < only.length; i += 1) {
        const breakpoint = only[i];
        if (width2 === breakpoint) {
          visible = false;
          break;
        }
      }
    } else if (only && width2 === only) {
      visible = false;
    }
  }
  if (visible) {
    for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {
      const breakpoint = theme.breakpoints.keys[i];
      const breakpointUp = props[`${breakpoint}Up`];
      const breakpointDown = props[`${breakpoint}Down`];
      if (breakpointUp && isWidthUp(breakpoint, width2) || breakpointDown && isWidthDown(breakpoint, width2)) {
        visible = false;
        break;
      }
    }
  }
  if (!visible) {
    return null;
  }
  return (0, import_jsx_runtime151.jsx)(React186.Fragment, {
    children: children2
  });
}
true ? HiddenJs.propTypes = {
  /**
   * The content of the component.
   */
  children: import_prop_types119.default.node,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgDown: import_prop_types119.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgUp: import_prop_types119.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdDown: import_prop_types119.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdUp: import_prop_types119.default.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: import_prop_types119.default.oneOfType([import_prop_types119.default.oneOf(["xs", "sm", "md", "lg", "xl"]), import_prop_types119.default.arrayOf(import_prop_types119.default.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smDown: import_prop_types119.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smUp: import_prop_types119.default.bool,
  /**
   * @ignore
   * width prop provided by withWidth decorator.
   */
  width: import_prop_types119.default.string.isRequired,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlDown: import_prop_types119.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlUp: import_prop_types119.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsDown: import_prop_types119.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsUp: import_prop_types119.default.bool
} : void 0;
if (true) {
  true ? HiddenJs.propTypes = exactProp(HiddenJs.propTypes) : void 0;
}
var HiddenJs_default = withWidth_default()(HiddenJs);

// node_modules/@mui/material/Hidden/HiddenCss.js
init_objectWithoutPropertiesLoose();
init_extends();
var React187 = __toESM(require_react());
init_clsx2();
var import_prop_types120 = __toESM(require_prop_types());
init_composeClasses3();
init_capitalize3();
init_styled2();

// node_modules/@mui/material/Hidden/hiddenCssClasses.js
init_esm();
init_generateUtilityClass3();
function getHiddenCssUtilityClass(slot) {
  return generateUtilityClass("PrivateHiddenCss", slot);
}
var hiddenCssClasses = generateUtilityClasses("PrivateHiddenCss", ["root", "xlDown", "xlUp", "onlyXl", "lgDown", "lgUp", "onlyLg", "mdDown", "mdUp", "onlyMd", "smDown", "smUp", "onlySm", "xsDown", "xsUp", "onlyXs"]);

// node_modules/@mui/material/Hidden/HiddenCss.js
var import_jsx_runtime152 = __toESM(require_jsx_runtime());
var _excluded103 = ["children", "className", "only"];
var useUtilityClasses75 = (ownerState) => {
  const {
    classes: classes2,
    breakpoints
  } = ownerState;
  const slots = {
    root: ["root", ...breakpoints.map(({
      breakpoint,
      dir
    }) => {
      return dir === "only" ? `${dir}${capitalize_default(breakpoint)}` : `${breakpoint}${capitalize_default(dir)}`;
    })]
  };
  return composeClasses(slots, getHiddenCssUtilityClass, classes2);
};
var HiddenCssRoot = styled_default2("div", {
  name: "PrivateHiddenCss",
  slot: "Root"
})(({
  theme,
  ownerState
}) => {
  const hidden = {
    display: "none"
  };
  return _extends({}, ownerState.breakpoints.map(({
    breakpoint,
    dir
  }) => {
    if (dir === "only") {
      return {
        [theme.breakpoints.only(breakpoint)]: hidden
      };
    }
    return dir === "up" ? {
      [theme.breakpoints.up(breakpoint)]: hidden
    } : {
      [theme.breakpoints.down(breakpoint)]: hidden
    };
  }).reduce((r5, o) => {
    Object.keys(o).forEach((k) => {
      r5[k] = o[k];
    });
    return r5;
  }, {}));
});
function HiddenCss(props) {
  const {
    children: children2,
    className,
    only
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded103);
  const theme = useTheme5();
  if (true) {
    const unknownProps = Object.keys(other).filter((propName) => {
      const isUndeclaredBreakpoint = !theme.breakpoints.keys.some((breakpoint) => {
        return `${breakpoint}Up` === propName || `${breakpoint}Down` === propName;
      });
      return !["classes", "theme", "isRtl", "sx"].includes(propName) && isUndeclaredBreakpoint;
    });
    if (unknownProps.length > 0) {
      console.error(`MUI: Unsupported props received by \`<Hidden implementation="css" />\`: ${unknownProps.join(", ")}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`);
    }
  }
  const breakpoints = [];
  for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {
    const breakpoint = theme.breakpoints.keys[i];
    const breakpointUp = other[`${breakpoint}Up`];
    const breakpointDown = other[`${breakpoint}Down`];
    if (breakpointUp) {
      breakpoints.push({
        breakpoint,
        dir: "up"
      });
    }
    if (breakpointDown) {
      breakpoints.push({
        breakpoint,
        dir: "down"
      });
    }
  }
  if (only) {
    const onlyBreakpoints = Array.isArray(only) ? only : [only];
    onlyBreakpoints.forEach((breakpoint) => {
      breakpoints.push({
        breakpoint,
        dir: "only"
      });
    });
  }
  const ownerState = _extends({}, props, {
    breakpoints
  });
  const classes2 = useUtilityClasses75(ownerState);
  return (0, import_jsx_runtime152.jsx)(HiddenCssRoot, {
    className: clsx_default2(classes2.root, className),
    ownerState,
    children: children2
  });
}
true ? HiddenCss.propTypes = {
  /**
   * The content of the component.
   */
  children: import_prop_types120.default.node,
  /**
   * @ignore
   */
  className: import_prop_types120.default.string,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */
  implementation: import_prop_types120.default.oneOf(["js", "css"]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  lgDown: import_prop_types120.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  lgUp: import_prop_types120.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  mdDown: import_prop_types120.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  mdUp: import_prop_types120.default.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: import_prop_types120.default.oneOfType([import_prop_types120.default.oneOf(["xs", "sm", "md", "lg", "xl"]), import_prop_types120.default.arrayOf(import_prop_types120.default.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  smDown: import_prop_types120.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  smUp: import_prop_types120.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xlDown: import_prop_types120.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xlUp: import_prop_types120.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xsDown: import_prop_types120.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xsUp: import_prop_types120.default.bool
} : void 0;
var HiddenCss_default = HiddenCss;

// node_modules/@mui/material/Hidden/Hidden.js
var import_jsx_runtime153 = __toESM(require_jsx_runtime());
var _excluded104 = ["implementation", "lgDown", "lgUp", "mdDown", "mdUp", "smDown", "smUp", "xlDown", "xlUp", "xsDown", "xsUp"];
function Hidden(props) {
  const {
    implementation = "js",
    lgDown = false,
    lgUp = false,
    mdDown = false,
    mdUp = false,
    smDown = false,
    smUp = false,
    xlDown = false,
    xlUp = false,
    xsDown = false,
    xsUp = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded104);
  if (implementation === "js") {
    return (0, import_jsx_runtime153.jsx)(HiddenJs_default, _extends({
      lgDown,
      lgUp,
      mdDown,
      mdUp,
      smDown,
      smUp,
      xlDown,
      xlUp,
      xsDown,
      xsUp
    }, other));
  }
  return (0, import_jsx_runtime153.jsx)(HiddenCss_default, _extends({
    lgDown,
    lgUp,
    mdDown,
    mdUp,
    smDown,
    smUp,
    xlDown,
    xlUp,
    xsDown,
    xsUp
  }, other));
}
true ? Hidden.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types121.default.node,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   * @default 'js'
   */
  implementation: import_prop_types121.default.oneOf(["css", "js"]),
  /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use a heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */
  initialWidth: import_prop_types121.default.oneOf(["xs", "sm", "md", "lg", "xl"]),
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  lgDown: import_prop_types121.default.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  lgUp: import_prop_types121.default.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  mdDown: import_prop_types121.default.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  mdUp: import_prop_types121.default.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: import_prop_types121.default.oneOfType([import_prop_types121.default.oneOf(["xs", "sm", "md", "lg", "xl"]), import_prop_types121.default.arrayOf(import_prop_types121.default.oneOf(["xs", "sm", "md", "lg", "xl"]).isRequired)]),
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  smDown: import_prop_types121.default.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  smUp: import_prop_types121.default.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  xlDown: import_prop_types121.default.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  xlUp: import_prop_types121.default.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  xsDown: import_prop_types121.default.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  xsUp: import_prop_types121.default.bool
} : void 0;

// node_modules/@mui/material/Icon/Icon.js
init_extends();
init_objectWithoutPropertiesLoose();
var React189 = __toESM(require_react());
var import_prop_types122 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/Icon/iconClasses.js
init_esm();
init_generateUtilityClass3();
function getIconUtilityClass(slot) {
  return generateUtilityClass("MuiIcon", slot);
}
var iconClasses = generateUtilityClasses("MuiIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);

// node_modules/@mui/material/Icon/Icon.js
var import_jsx_runtime154 = __toESM(require_jsx_runtime());
var _excluded105 = ["baseClassName", "className", "color", "component", "fontSize"];
var useUtilityClasses76 = (ownerState) => {
  const {
    color: color2,
    fontSize: fontSize2,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", color2 !== "inherit" && `color${capitalize_default(color2)}`, `fontSize${capitalize_default(fontSize2)}`]
  };
  return composeClasses(slots, getIconUtilityClass, classes2);
};
var IconRoot = styled_default2("span", {
  name: "MuiIcon",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.color !== "inherit" && styles7[`color${capitalize_default(ownerState.color)}`], styles7[`fontSize${capitalize_default(ownerState.fontSize)}`]];
  }
})(({
  theme,
  ownerState
}) => ({
  userSelect: "none",
  width: "1em",
  height: "1em",
  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541
  // To remove at some point.
  overflow: "hidden",
  display: "inline-block",
  // allow overflow hidden to take action
  textAlign: "center",
  // support non-square icon
  flexShrink: 0,
  fontSize: {
    inherit: "inherit",
    small: theme.typography.pxToRem(20),
    medium: theme.typography.pxToRem(24),
    large: theme.typography.pxToRem(36)
  }[ownerState.fontSize],
  // TODO v5 deprecate, v6 remove for sx
  color: {
    primary: (theme.vars || theme).palette.primary.main,
    secondary: (theme.vars || theme).palette.secondary.main,
    info: (theme.vars || theme).palette.info.main,
    success: (theme.vars || theme).palette.success.main,
    warning: (theme.vars || theme).palette.warning.main,
    action: (theme.vars || theme).palette.action.active,
    error: (theme.vars || theme).palette.error.main,
    disabled: (theme.vars || theme).palette.action.disabled,
    inherit: void 0
  }[ownerState.color]
}));
var Icon = React189.forwardRef(function Icon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiIcon"
  });
  const {
    baseClassName = "material-icons",
    className,
    color: color2 = "inherit",
    component: Component2 = "span",
    fontSize: fontSize2 = "medium"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded105);
  const ownerState = _extends({}, props, {
    baseClassName,
    color: color2,
    component: Component2,
    fontSize: fontSize2
  });
  const classes2 = useUtilityClasses76(ownerState);
  return (0, import_jsx_runtime154.jsx)(IconRoot, _extends({
    as: Component2,
    className: clsx_default2(
      baseClassName,
      // Prevent the translation of the text content.
      // The font relies on the exact text content to render the icon.
      "notranslate",
      classes2.root,
      className
    ),
    ownerState,
    "aria-hidden": true,
    ref
  }, other));
});
true ? Icon.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any
   * other base class that suits the icon font you're using (e.g. material-icons-rounded, fas, etc).
   * @default 'material-icons'
   */
  baseClassName: import_prop_types122.default.string,
  /**
   * The name of the icon font ligature.
   */
  children: import_prop_types122.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types122.default.object,
  /**
   * @ignore
   */
  className: import_prop_types122.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'inherit'
   */
  color: import_prop_types122.default.oneOfType([import_prop_types122.default.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types122.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types122.default.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: import_prop_types122.default.oneOfType([import_prop_types122.default.oneOf(["inherit", "large", "medium", "small"]), import_prop_types122.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types122.default.oneOfType([import_prop_types122.default.arrayOf(import_prop_types122.default.oneOfType([import_prop_types122.default.func, import_prop_types122.default.object, import_prop_types122.default.bool])), import_prop_types122.default.func, import_prop_types122.default.object])
} : void 0;
Icon.muiName = "Icon";

// node_modules/@mui/material/ImageList/ImageList.js
init_objectWithoutPropertiesLoose();
init_extends();
init_composeClasses3();
init_esm();
init_clsx2();
var import_prop_types123 = __toESM(require_prop_types());
var React191 = __toESM(require_react());
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/ImageList/imageListClasses.js
init_esm();
init_generateUtilityClass3();
function getImageListUtilityClass(slot) {
  return generateUtilityClass("MuiImageList", slot);
}
var imageListClasses = generateUtilityClasses("MuiImageList", ["root", "masonry", "quilted", "standard", "woven"]);

// node_modules/@mui/material/ImageList/ImageListContext.js
var React190 = __toESM(require_react());
var ImageListContext = React190.createContext({});
if (true) {
  ImageListContext.displayName = "ImageListContext";
}
var ImageListContext_default = ImageListContext;

// node_modules/@mui/material/ImageList/ImageList.js
var import_jsx_runtime155 = __toESM(require_jsx_runtime());
var _excluded106 = ["children", "className", "cols", "component", "rowHeight", "gap", "style", "variant"];
var useUtilityClasses77 = (ownerState) => {
  const {
    classes: classes2,
    variant
  } = ownerState;
  const slots = {
    root: ["root", variant]
  };
  return composeClasses(slots, getImageListUtilityClass, classes2);
};
var ImageListRoot = styled_default2("ul", {
  name: "MuiImageList",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant]];
  }
})(({
  ownerState
}) => {
  return _extends({
    display: "grid",
    overflowY: "auto",
    listStyle: "none",
    padding: 0,
    // Add iOS momentum scrolling for iOS < 13.0
    WebkitOverflowScrolling: "touch"
  }, ownerState.variant === "masonry" && {
    display: "block"
  });
});
var ImageList = React191.forwardRef(function ImageList2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiImageList"
  });
  const {
    children: children2,
    className,
    cols = 2,
    component = "ul",
    rowHeight = "auto",
    gap: gap2 = 4,
    style: styleProp,
    variant = "standard"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded106);
  const contextValue = React191.useMemo(() => ({
    rowHeight,
    gap: gap2,
    variant
  }), [rowHeight, gap2, variant]);
  React191.useEffect(() => {
    if (true) {
      if (document !== void 0 && "objectFit" in document.documentElement.style === false) {
        console.error(["MUI: ImageList v5+ no longer natively supports Internet Explorer.", "Use v4 of this component instead, or polyfill CSS object-fit."].join("\n"));
      }
    }
  }, []);
  const style4 = variant === "masonry" ? _extends({
    columnCount: cols,
    columnGap: gap2
  }, styleProp) : _extends({
    gridTemplateColumns: `repeat(${cols}, 1fr)`,
    gap: gap2
  }, styleProp);
  const ownerState = _extends({}, props, {
    component,
    gap: gap2,
    rowHeight,
    variant
  });
  const classes2 = useUtilityClasses77(ownerState);
  return (0, import_jsx_runtime155.jsx)(ImageListRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, classes2[variant], className),
    ref,
    style: style4,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime155.jsx)(ImageListContext_default.Provider, {
      value: contextValue,
      children: children2
    })
  }));
});
true ? ImageList.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `ImageListItem`s.
   */
  children: import_prop_types123.default.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types123.default.object,
  /**
   * @ignore
   */
  className: import_prop_types123.default.string,
  /**
   * Number of columns.
   * @default 2
   */
  cols: integerPropType_default,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types123.default.elementType,
  /**
   * The gap between items in px.
   * @default 4
   */
  gap: import_prop_types123.default.number,
  /**
   * The height of one row in px.
   * @default 'auto'
   */
  rowHeight: import_prop_types123.default.oneOfType([import_prop_types123.default.oneOf(["auto"]), import_prop_types123.default.number]),
  /**
   * @ignore
   */
  style: import_prop_types123.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types123.default.oneOfType([import_prop_types123.default.arrayOf(import_prop_types123.default.oneOfType([import_prop_types123.default.func, import_prop_types123.default.object, import_prop_types123.default.bool])), import_prop_types123.default.func, import_prop_types123.default.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: import_prop_types123.default.oneOfType([import_prop_types123.default.oneOf(["masonry", "quilted", "standard", "woven"]), import_prop_types123.default.string])
} : void 0;

// node_modules/@mui/material/ImageListItem/ImageListItem.js
init_objectWithoutPropertiesLoose();
init_extends();
init_composeClasses3();
init_esm();
init_clsx2();
var import_prop_types124 = __toESM(require_prop_types());
var React192 = __toESM(require_react());
var import_react_is6 = __toESM(require_react_is3());
init_styled2();
init_useThemeProps3();
init_isMuiElement2();

// node_modules/@mui/material/ImageListItem/imageListItemClasses.js
init_esm();
init_generateUtilityClass3();
function getImageListItemUtilityClass(slot) {
  return generateUtilityClass("MuiImageListItem", slot);
}
var imageListItemClasses = generateUtilityClasses("MuiImageListItem", ["root", "img", "standard", "woven", "masonry", "quilted"]);
var imageListItemClasses_default = imageListItemClasses;

// node_modules/@mui/material/ImageListItem/ImageListItem.js
var import_jsx_runtime156 = __toESM(require_jsx_runtime());
var _excluded107 = ["children", "className", "cols", "component", "rows", "style"];
var useUtilityClasses78 = (ownerState) => {
  const {
    classes: classes2,
    variant
  } = ownerState;
  const slots = {
    root: ["root", variant],
    img: ["img"]
  };
  return composeClasses(slots, getImageListItemUtilityClass, classes2);
};
var ImageListItemRoot = styled_default2("li", {
  name: "MuiImageListItem",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${imageListItemClasses_default.img}`]: styles7.img
    }, styles7.root, styles7[ownerState.variant]];
  }
})(({
  ownerState
}) => _extends({
  display: "block",
  position: "relative"
}, ownerState.variant === "standard" && {
  // For titlebar under list item
  display: "flex",
  flexDirection: "column"
}, ownerState.variant === "woven" && {
  height: "100%",
  alignSelf: "center",
  "&:nth-of-type(even)": {
    height: "70%"
  }
}, {
  [`& .${imageListItemClasses_default.img}`]: _extends({
    objectFit: "cover",
    width: "100%",
    height: "100%",
    display: "block"
  }, ownerState.variant === "standard" && {
    height: "auto",
    flexGrow: 1
  })
}));
var ImageListItem = React192.forwardRef(function ImageListItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiImageListItem"
  });
  const {
    children: children2,
    className,
    cols = 1,
    component = "li",
    rows = 1,
    style: style4
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded107);
  const {
    rowHeight = "auto",
    gap: gap2,
    variant
  } = React192.useContext(ImageListContext_default);
  let height2 = "auto";
  if (variant === "woven") {
    height2 = void 0;
  } else if (rowHeight !== "auto") {
    height2 = rowHeight * rows + gap2 * (rows - 1);
  }
  const ownerState = _extends({}, props, {
    cols,
    component,
    gap: gap2,
    rowHeight,
    rows,
    variant
  });
  const classes2 = useUtilityClasses78(ownerState);
  return (0, import_jsx_runtime156.jsx)(ImageListItemRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, classes2[variant], className),
    ref,
    style: _extends({
      height: height2,
      gridColumnEnd: variant !== "masonry" ? `span ${cols}` : void 0,
      gridRowEnd: variant !== "masonry" ? `span ${rows}` : void 0,
      marginBottom: variant === "masonry" ? gap2 : void 0
    }, style4),
    ownerState
  }, other, {
    children: React192.Children.map(children2, (child) => {
      if (!React192.isValidElement(child)) {
        return null;
      }
      if (true) {
        if ((0, import_react_is6.isFragment)(child)) {
          console.error(["MUI: The ImageListItem component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
        }
      }
      if (child.type === "img" || isMuiElement_default(child, ["Image"])) {
        return React192.cloneElement(child, {
          className: clsx_default2(classes2.img, child.props.className)
        });
      }
      return child;
    })
  }));
});
true ? ImageListItem.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally an `<img>`.
   */
  children: import_prop_types124.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types124.default.object,
  /**
   * @ignore
   */
  className: import_prop_types124.default.string,
  /**
   * Width of the item in number of grid columns.
   * @default 1
   */
  cols: integerPropType_default,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types124.default.elementType,
  /**
   * Height of the item in number of grid rows.
   * @default 1
   */
  rows: integerPropType_default,
  /**
   * @ignore
   */
  style: import_prop_types124.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types124.default.oneOfType([import_prop_types124.default.arrayOf(import_prop_types124.default.oneOfType([import_prop_types124.default.func, import_prop_types124.default.object, import_prop_types124.default.bool])), import_prop_types124.default.func, import_prop_types124.default.object])
} : void 0;

// node_modules/@mui/material/ImageListItemBar/ImageListItemBar.js
init_objectWithoutPropertiesLoose();
init_extends();
init_composeClasses3();
init_clsx2();
var import_prop_types125 = __toESM(require_prop_types());
var React193 = __toESM(require_react());
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/ImageListItemBar/imageListItemBarClasses.js
init_esm();
init_generateUtilityClass3();
function getImageListItemBarUtilityClass(slot) {
  return generateUtilityClass("MuiImageListItemBar", slot);
}
var imageListItemBarClasses = generateUtilityClasses("MuiImageListItemBar", ["root", "positionBottom", "positionTop", "positionBelow", "titleWrap", "titleWrapBottom", "titleWrapTop", "titleWrapBelow", "titleWrapActionPosLeft", "titleWrapActionPosRight", "title", "subtitle", "actionIcon", "actionIconActionPosLeft", "actionIconActionPosRight"]);

// node_modules/@mui/material/ImageListItemBar/ImageListItemBar.js
var import_jsx_runtime157 = __toESM(require_jsx_runtime());
var import_jsx_runtime158 = __toESM(require_jsx_runtime());
var _excluded108 = ["actionIcon", "actionPosition", "className", "subtitle", "title", "position"];
var useUtilityClasses79 = (ownerState) => {
  const {
    classes: classes2,
    position: position3,
    actionIcon,
    actionPosition
  } = ownerState;
  const slots = {
    root: ["root", `position${capitalize_default(position3)}`],
    titleWrap: ["titleWrap", `titleWrap${capitalize_default(position3)}`, actionIcon && `titleWrapActionPos${capitalize_default(actionPosition)}`],
    title: ["title"],
    subtitle: ["subtitle"],
    actionIcon: ["actionIcon", `actionIconActionPos${capitalize_default(actionPosition)}`]
  };
  return composeClasses(slots, getImageListItemBarUtilityClass, classes2);
};
var ImageListItemBarRoot = styled_default2("div", {
  name: "MuiImageListItemBar",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`position${capitalize_default(ownerState.position)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  return _extends({
    position: "absolute",
    left: 0,
    right: 0,
    background: "rgba(0, 0, 0, 0.5)",
    display: "flex",
    alignItems: "center",
    fontFamily: theme.typography.fontFamily
  }, ownerState.position === "bottom" && {
    bottom: 0
  }, ownerState.position === "top" && {
    top: 0
  }, ownerState.position === "below" && {
    position: "relative",
    background: "transparent",
    alignItems: "normal"
  });
});
var ImageListItemBarTitleWrap = styled_default2("div", {
  name: "MuiImageListItemBar",
  slot: "TitleWrap",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.titleWrap, styles7[`titleWrap${capitalize_default(ownerState.position)}`], ownerState.actionIcon && styles7[`titleWrapActionPos${capitalize_default(ownerState.actionPosition)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  return _extends({
    flexGrow: 1,
    padding: "12px 16px",
    color: (theme.vars || theme).palette.common.white,
    overflow: "hidden"
  }, ownerState.position === "below" && {
    padding: "6px 0 12px",
    color: "inherit"
  }, ownerState.actionIcon && ownerState.actionPosition === "left" && {
    paddingLeft: 0
  }, ownerState.actionIcon && ownerState.actionPosition === "right" && {
    paddingRight: 0
  });
});
var ImageListItemBarTitle = styled_default2("div", {
  name: "MuiImageListItemBar",
  slot: "Title",
  overridesResolver: (props, styles7) => styles7.title
})(({
  theme
}) => {
  return {
    fontSize: theme.typography.pxToRem(16),
    lineHeight: "24px",
    textOverflow: "ellipsis",
    overflow: "hidden",
    whiteSpace: "nowrap"
  };
});
var ImageListItemBarSubtitle = styled_default2("div", {
  name: "MuiImageListItemBar",
  slot: "Subtitle",
  overridesResolver: (props, styles7) => styles7.subtitle
})(({
  theme
}) => {
  return {
    fontSize: theme.typography.pxToRem(12),
    lineHeight: 1,
    textOverflow: "ellipsis",
    overflow: "hidden",
    whiteSpace: "nowrap"
  };
});
var ImageListItemBarActionIcon = styled_default2("div", {
  name: "MuiImageListItemBar",
  slot: "ActionIcon",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.actionIcon, styles7[`actionIconActionPos${capitalize_default(ownerState.actionPosition)}`]];
  }
})(({
  ownerState
}) => {
  return _extends({}, ownerState.actionPosition === "left" && {
    order: -1
  });
});
var ImageListItemBar = React193.forwardRef(function ImageListItemBar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiImageListItemBar"
  });
  const {
    actionIcon,
    actionPosition = "right",
    className,
    subtitle,
    title,
    position: position3 = "bottom"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded108);
  const ownerState = _extends({}, props, {
    position: position3,
    actionPosition
  });
  const classes2 = useUtilityClasses79(ownerState);
  return (0, import_jsx_runtime158.jsxs)(ImageListItemBarRoot, _extends({
    ownerState,
    className: clsx_default2(classes2.root, className),
    ref
  }, other, {
    children: [(0, import_jsx_runtime158.jsxs)(ImageListItemBarTitleWrap, {
      ownerState,
      className: classes2.titleWrap,
      children: [(0, import_jsx_runtime157.jsx)(ImageListItemBarTitle, {
        className: classes2.title,
        children: title
      }), subtitle ? (0, import_jsx_runtime157.jsx)(ImageListItemBarSubtitle, {
        className: classes2.subtitle,
        children: subtitle
      }) : null]
    }), actionIcon ? (0, import_jsx_runtime157.jsx)(ImageListItemBarActionIcon, {
      ownerState,
      className: classes2.actionIcon,
      children: actionIcon
    }) : null]
  }));
});
true ? ImageListItemBar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * An IconButton element to be used as secondary action target
   * (primary action target is the item itself).
   */
  actionIcon: import_prop_types125.default.node,
  /**
   * Position of secondary action IconButton.
   * @default 'right'
   */
  actionPosition: import_prop_types125.default.oneOf(["left", "right"]),
  /**
   * @ignore
   */
  children: import_prop_types125.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types125.default.object,
  /**
   * @ignore
   */
  className: import_prop_types125.default.string,
  /**
   * Position of the title bar.
   * @default 'bottom'
   */
  position: import_prop_types125.default.oneOf(["below", "bottom", "top"]),
  /**
   * String or element serving as subtitle (support text).
   */
  subtitle: import_prop_types125.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types125.default.oneOfType([import_prop_types125.default.arrayOf(import_prop_types125.default.oneOfType([import_prop_types125.default.func, import_prop_types125.default.object, import_prop_types125.default.bool])), import_prop_types125.default.func, import_prop_types125.default.object]),
  /**
   * Title to be displayed.
   */
  title: import_prop_types125.default.node
} : void 0;

// node_modules/@mui/material/Input/Input.js
init_objectWithoutPropertiesLoose();
init_extends();
var React194 = __toESM(require_react());
var import_prop_types126 = __toESM(require_prop_types());
init_composeClasses3();
init_esm();
init_styled2();
init_useThemeProps3();
var import_jsx_runtime159 = __toESM(require_jsx_runtime());
var _excluded109 = ["disableUnderline", "components", "componentsProps", "fullWidth", "inputComponent", "multiline", "slotProps", "slots", "type"];
var useUtilityClasses80 = (ownerState) => {
  const {
    classes: classes2,
    disableUnderline
  } = ownerState;
  const slots = {
    root: ["root", !disableUnderline && "underline"],
    input: ["input"]
  };
  const composedClasses = composeClasses(slots, getInputUtilityClass2, classes2);
  return _extends({}, classes2, composedClasses);
};
var InputRoot = styled_default2(InputBaseRoot, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [...rootOverridesResolver(props, styles7), !ownerState.disableUnderline && styles7.underline];
  }
})(({
  theme,
  ownerState
}) => {
  const light2 = theme.palette.mode === "light";
  let bottomLineColor = light2 ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  if (theme.vars) {
    bottomLineColor = `rgba(${theme.vars.palette.common.onBackgroundChannel} / ${theme.vars.opacity.inputUnderline})`;
  }
  return _extends({
    position: "relative"
  }, ownerState.formControl && {
    "label + &": {
      marginTop: 16
    }
  }, !ownerState.disableUnderline && {
    "&:after": {
      borderBottom: `2px solid ${(theme.vars || theme).palette[ownerState.color].main}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: "absolute",
      right: 0,
      transform: "scaleX(0)",
      transition: theme.transitions.create("transform", {
        duration: theme.transitions.duration.shorter,
        easing: theme.transitions.easing.easeOut
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&.${inputClasses_default.focused}:after`]: {
      // translateX(0) is a workaround for Safari transform scale bug
      // See https://github.com/mui/material-ui/issues/31766
      transform: "scaleX(1) translateX(0)"
    },
    [`&.${inputClasses_default.error}`]: {
      "&:before, &:after": {
        borderBottomColor: (theme.vars || theme).palette.error.main
      }
    },
    "&:before": {
      borderBottom: `1px solid ${bottomLineColor}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: "absolute",
      right: 0,
      transition: theme.transitions.create("border-bottom-color", {
        duration: theme.transitions.duration.shorter
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&:hover:not(.${inputClasses_default.disabled}, .${inputClasses_default.error}):before`]: {
      borderBottom: `2px solid ${(theme.vars || theme).palette.text.primary}`,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        borderBottom: `1px solid ${bottomLineColor}`
      }
    },
    [`&.${inputClasses_default.disabled}:before`]: {
      borderBottomStyle: "dotted"
    }
  });
});
var InputInput = styled_default2(InputBaseComponent, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: inputOverridesResolver
})({});
var Input3 = React194.forwardRef(function Input4(inProps, ref) {
  var _ref2, _slots$root, _ref22, _slots$input;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiInput"
  });
  const {
    disableUnderline,
    components = {},
    componentsProps: componentsPropsProp,
    fullWidth = false,
    inputComponent = "input",
    multiline = false,
    slotProps,
    slots = {},
    type = "text"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded109);
  const classes2 = useUtilityClasses80(props);
  const ownerState = {
    disableUnderline
  };
  const inputComponentsProps = {
    root: {
      ownerState
    }
  };
  const componentsProps = (slotProps != null ? slotProps : componentsPropsProp) ? deepmerge(slotProps != null ? slotProps : componentsPropsProp, inputComponentsProps) : inputComponentsProps;
  const RootSlot = (_ref2 = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref2 : InputRoot;
  const InputSlot = (_ref22 = (_slots$input = slots.input) != null ? _slots$input : components.Input) != null ? _ref22 : InputInput;
  return (0, import_jsx_runtime159.jsx)(InputBase_default, _extends({
    slots: {
      root: RootSlot,
      input: InputSlot
    },
    slotProps: componentsProps,
    fullWidth,
    inputComponent,
    multiline,
    ref,
    type
  }, other, {
    classes: classes2
  }));
});
true ? Input3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: import_prop_types126.default.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: import_prop_types126.default.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types126.default.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: import_prop_types126.default.oneOfType([import_prop_types126.default.oneOf(["primary", "secondary"]), import_prop_types126.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types126.default.shape({
    Input: import_prop_types126.default.elementType,
    Root: import_prop_types126.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types126.default.shape({
    input: import_prop_types126.default.object,
    root: import_prop_types126.default.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types126.default.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: import_prop_types126.default.bool,
  /**
   * If `true`, the `input` will not have an underline.
   */
  disableUnderline: import_prop_types126.default.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: import_prop_types126.default.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: import_prop_types126.default.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types126.default.bool,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types126.default.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: import_prop_types126.default.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: import_prop_types126.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: import_prop_types126.default.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: import_prop_types126.default.oneOfType([import_prop_types126.default.number, import_prop_types126.default.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: import_prop_types126.default.oneOfType([import_prop_types126.default.number, import_prop_types126.default.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: import_prop_types126.default.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: import_prop_types126.default.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types126.default.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: import_prop_types126.default.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: import_prop_types126.default.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: import_prop_types126.default.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: import_prop_types126.default.oneOfType([import_prop_types126.default.number, import_prop_types126.default.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types126.default.shape({
    input: import_prop_types126.default.object,
    root: import_prop_types126.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types126.default.shape({
    input: import_prop_types126.default.elementType,
    root: import_prop_types126.default.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: import_prop_types126.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types126.default.oneOfType([import_prop_types126.default.arrayOf(import_prop_types126.default.oneOfType([import_prop_types126.default.func, import_prop_types126.default.object, import_prop_types126.default.bool])), import_prop_types126.default.func, import_prop_types126.default.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: import_prop_types126.default.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: import_prop_types126.default.any
} : void 0;
Input3.muiName = "Input";
var Input_default = Input3;

// node_modules/@mui/material/InputAdornment/InputAdornment.js
init_objectWithoutPropertiesLoose();
init_extends();
var React195 = __toESM(require_react());
var import_prop_types127 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_capitalize3();
init_styled2();

// node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js
init_esm();
init_generateUtilityClass3();
function getInputAdornmentUtilityClass(slot) {
  return generateUtilityClass("MuiInputAdornment", slot);
}
var inputAdornmentClasses = generateUtilityClasses("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]);
var inputAdornmentClasses_default = inputAdornmentClasses;

// node_modules/@mui/material/InputAdornment/InputAdornment.js
init_useThemeProps3();
var import_jsx_runtime160 = __toESM(require_jsx_runtime());
var import_jsx_runtime161 = __toESM(require_jsx_runtime());
var _span6;
var _excluded110 = ["children", "className", "component", "disablePointerEvents", "disableTypography", "position", "variant"];
var overridesResolver3 = (props, styles7) => {
  const {
    ownerState
  } = props;
  return [styles7.root, styles7[`position${capitalize_default(ownerState.position)}`], ownerState.disablePointerEvents === true && styles7.disablePointerEvents, styles7[ownerState.variant]];
};
var useUtilityClasses81 = (ownerState) => {
  const {
    classes: classes2,
    disablePointerEvents,
    hiddenLabel,
    position: position3,
    size: size2,
    variant
  } = ownerState;
  const slots = {
    root: ["root", disablePointerEvents && "disablePointerEvents", position3 && `position${capitalize_default(position3)}`, variant, hiddenLabel && "hiddenLabel", size2 && `size${capitalize_default(size2)}`]
  };
  return composeClasses(slots, getInputAdornmentUtilityClass, classes2);
};
var InputAdornmentRoot = styled_default2("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: overridesResolver3
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  height: "0.01em",
  // Fix IE11 flexbox alignment. To remove at some point.
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (theme.vars || theme).palette.action.active
}, ownerState.variant === "filled" && {
  // Styles applied to the root element if `variant="filled"`.
  [`&.${inputAdornmentClasses_default.positionStart}&:not(.${inputAdornmentClasses_default.hiddenLabel})`]: {
    marginTop: 16
  }
}, ownerState.position === "start" && {
  // Styles applied to the root element if `position="start"`.
  marginRight: 8
}, ownerState.position === "end" && {
  // Styles applied to the root element if `position="end"`.
  marginLeft: 8
}, ownerState.disablePointerEvents === true && {
  // Styles applied to the root element if `disablePointerEvents={true}`.
  pointerEvents: "none"
}));
var InputAdornment = React195.forwardRef(function InputAdornment2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiInputAdornment"
  });
  const {
    children: children2,
    className,
    component = "div",
    disablePointerEvents = false,
    disableTypography = false,
    position: position3,
    variant: variantProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded110);
  const muiFormControl = useFormControl() || {};
  let variant = variantProp;
  if (variantProp && muiFormControl.variant) {
    if (true) {
      if (variantProp === muiFormControl.variant) {
        console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one.");
      }
    }
  }
  if (muiFormControl && !variant) {
    variant = muiFormControl.variant;
  }
  const ownerState = _extends({}, props, {
    hiddenLabel: muiFormControl.hiddenLabel,
    size: muiFormControl.size,
    disablePointerEvents,
    position: position3,
    variant
  });
  const classes2 = useUtilityClasses81(ownerState);
  return (0, import_jsx_runtime160.jsx)(FormControlContext_default.Provider, {
    value: null,
    children: (0, import_jsx_runtime160.jsx)(InputAdornmentRoot, _extends({
      as: component,
      ownerState,
      className: clsx_default2(classes2.root, className),
      ref
    }, other, {
      children: typeof children2 === "string" && !disableTypography ? (0, import_jsx_runtime160.jsx)(Typography_default, {
        color: "text.secondary",
        children: children2
      }) : (0, import_jsx_runtime161.jsxs)(React195.Fragment, {
        children: [position3 === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          _span6 || (_span6 = (0, import_jsx_runtime160.jsx)("span", {
            className: "notranslate",
            children: "​"
          }))
        ) : null, children2]
      })
    }))
  });
});
true ? InputAdornment.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: import_prop_types127.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types127.default.object,
  /**
   * @ignore
   */
  className: import_prop_types127.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types127.default.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: import_prop_types127.default.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: import_prop_types127.default.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: import_prop_types127.default.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types127.default.oneOfType([import_prop_types127.default.arrayOf(import_prop_types127.default.oneOfType([import_prop_types127.default.func, import_prop_types127.default.object, import_prop_types127.default.bool])), import_prop_types127.default.func, import_prop_types127.default.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: import_prop_types127.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
var InputAdornment_default = InputAdornment;

// node_modules/@mui/material/InputLabel/InputLabel.js
init_objectWithoutPropertiesLoose();
init_extends();
var React196 = __toESM(require_react());
var import_prop_types128 = __toESM(require_prop_types());
init_composeClasses3();
init_clsx2();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/InputLabel/inputLabelClasses.js
init_esm();
init_generateUtilityClass3();
function getInputLabelUtilityClasses(slot) {
  return generateUtilityClass("MuiInputLabel", slot);
}
var inputLabelClasses = generateUtilityClasses("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);

// node_modules/@mui/material/InputLabel/InputLabel.js
var import_jsx_runtime162 = __toESM(require_jsx_runtime());
var _excluded111 = ["disableAnimation", "margin", "shrink", "variant", "className"];
var useUtilityClasses82 = (ownerState) => {
  const {
    classes: classes2,
    formControl,
    size: size2,
    shrink,
    disableAnimation,
    variant,
    required: required2
  } = ownerState;
  const slots = {
    root: ["root", formControl && "formControl", !disableAnimation && "animated", shrink && "shrink", size2 === "small" && "sizeSmall", variant],
    asterisk: [required2 && "asterisk"]
  };
  const composedClasses = composeClasses(slots, getInputLabelUtilityClasses, classes2);
  return _extends({}, classes2, composedClasses);
};
var InputLabelRoot = styled_default2(FormLabel_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${formLabelClasses_default.asterisk}`]: styles7.asterisk
    }, styles7.root, ownerState.formControl && styles7.formControl, ownerState.size === "small" && styles7.sizeSmall, ownerState.shrink && styles7.shrink, !ownerState.disableAnimation && styles7.animated, styles7[ownerState.variant]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%"
}, ownerState.formControl && {
  position: "absolute",
  left: 0,
  top: 0,
  // slight alteration to spec spacing to match visual spec result
  transform: "translate(0, 20px) scale(1)"
}, ownerState.size === "small" && {
  // Compensation for the `Input.inputSizeSmall` style.
  transform: "translate(0, 17px) scale(1)"
}, ownerState.shrink && {
  transform: "translate(0, -1.5px) scale(0.75)",
  transformOrigin: "top left",
  maxWidth: "133%"
}, !ownerState.disableAnimation && {
  transition: theme.transitions.create(["color", "transform", "max-width"], {
    duration: theme.transitions.duration.shorter,
    easing: theme.transitions.easing.easeOut
  })
}, ownerState.variant === "filled" && _extends({
  // Chrome's autofill feature gives the input field a yellow background.
  // Since the input field is behind the label in the HTML tree,
  // the input field is drawn last and hides the label with an opaque background color.
  // zIndex: 1 will raise the label above opaque background-colors of input.
  zIndex: 1,
  pointerEvents: "none",
  transform: "translate(12px, 16px) scale(1)",
  maxWidth: "calc(100% - 24px)"
}, ownerState.size === "small" && {
  transform: "translate(12px, 13px) scale(1)"
}, ownerState.shrink && _extends({
  userSelect: "none",
  pointerEvents: "auto",
  transform: "translate(12px, 7px) scale(0.75)",
  maxWidth: "calc(133% - 24px)"
}, ownerState.size === "small" && {
  transform: "translate(12px, 4px) scale(0.75)"
})), ownerState.variant === "outlined" && _extends({
  // see comment above on filled.zIndex
  zIndex: 1,
  pointerEvents: "none",
  transform: "translate(14px, 16px) scale(1)",
  maxWidth: "calc(100% - 24px)"
}, ownerState.size === "small" && {
  transform: "translate(14px, 9px) scale(1)"
}, ownerState.shrink && {
  userSelect: "none",
  pointerEvents: "auto",
  // Theoretically, we should have (8+5)*2/0.75 = 34px
  // but it feels a better when it bleeds a bit on the left, so 32px.
  maxWidth: "calc(133% - 32px)",
  transform: "translate(14px, -9px) scale(0.75)"
})));
var InputLabel = React196.forwardRef(function InputLabel2(inProps, ref) {
  const props = useThemeProps2({
    name: "MuiInputLabel",
    props: inProps
  });
  const {
    disableAnimation = false,
    shrink: shrinkProp,
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded111);
  const muiFormControl = useFormControl();
  let shrink = shrinkProp;
  if (typeof shrink === "undefined" && muiFormControl) {
    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;
  }
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["size", "variant", "required"]
  });
  const ownerState = _extends({}, props, {
    disableAnimation,
    formControl: muiFormControl,
    shrink,
    size: fcs.size,
    variant: fcs.variant,
    required: fcs.required
  });
  const classes2 = useUtilityClasses82(ownerState);
  return (0, import_jsx_runtime162.jsx)(InputLabelRoot, _extends({
    "data-shrink": shrink,
    ownerState,
    ref,
    className: clsx_default2(classes2.root, className)
  }, other, {
    classes: classes2
  }));
});
true ? InputLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types128.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types128.default.object,
  /**
   * @ignore
   */
  className: import_prop_types128.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   */
  color: import_prop_types128.default.oneOfType([import_prop_types128.default.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), import_prop_types128.default.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: import_prop_types128.default.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types128.default.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: import_prop_types128.default.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: import_prop_types128.default.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: import_prop_types128.default.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: import_prop_types128.default.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: import_prop_types128.default.bool,
  /**
   * The size of the component.
   * @default 'normal'
   */
  size: import_prop_types128.default.oneOfType([import_prop_types128.default.oneOf(["normal", "small"]), import_prop_types128.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types128.default.oneOfType([import_prop_types128.default.arrayOf(import_prop_types128.default.oneOfType([import_prop_types128.default.func, import_prop_types128.default.object, import_prop_types128.default.bool])), import_prop_types128.default.func, import_prop_types128.default.object]),
  /**
   * The variant to use.
   */
  variant: import_prop_types128.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
var InputLabel_default = InputLabel;

// node_modules/@mui/material/LinearProgress/LinearProgress.js
init_objectWithoutPropertiesLoose();
init_extends();
var React197 = __toESM(require_react());
var import_prop_types129 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_capitalize3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/LinearProgress/linearProgressClasses.js
init_esm();
init_generateUtilityClass3();
function getLinearProgressUtilityClass(slot) {
  return generateUtilityClass("MuiLinearProgress", slot);
}
var linearProgressClasses = generateUtilityClasses("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);

// node_modules/@mui/material/LinearProgress/LinearProgress.js
var import_jsx_runtime163 = __toESM(require_jsx_runtime());
var import_jsx_runtime164 = __toESM(require_jsx_runtime());
var _excluded112 = ["className", "color", "value", "valueBuffer", "variant"];
var _3 = (t) => t;
var _t6;
var _t23;
var _t33;
var _t43;
var _t52;
var _t62;
var TRANSITION_DURATION = 4;
var indeterminate1Keyframe = keyframes(_t6 || (_t6 = _3`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`));
var indeterminate2Keyframe = keyframes(_t23 || (_t23 = _3`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`));
var bufferKeyframe = keyframes(_t33 || (_t33 = _3`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`));
var useUtilityClasses83 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    color: color2
  } = ownerState;
  const slots = {
    root: ["root", `color${capitalize_default(color2)}`, variant],
    dashed: ["dashed", `dashedColor${capitalize_default(color2)}`],
    bar1: ["bar", `barColor${capitalize_default(color2)}`, (variant === "indeterminate" || variant === "query") && "bar1Indeterminate", variant === "determinate" && "bar1Determinate", variant === "buffer" && "bar1Buffer"],
    bar2: ["bar", variant !== "buffer" && `barColor${capitalize_default(color2)}`, variant === "buffer" && `color${capitalize_default(color2)}`, (variant === "indeterminate" || variant === "query") && "bar2Indeterminate", variant === "buffer" && "bar2Buffer"]
  };
  return composeClasses(slots, getLinearProgressUtilityClass, classes2);
};
var getColorShade = (theme, color2) => {
  if (color2 === "inherit") {
    return "currentColor";
  }
  if (theme.vars) {
    return theme.vars.palette.LinearProgress[`${color2}Bg`];
  }
  return theme.palette.mode === "light" ? lighten(theme.palette[color2].main, 0.62) : darken(theme.palette[color2].main, 0.5);
};
var LinearProgressRoot = styled_default2("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`color${capitalize_default(ownerState.color)}`], styles7[ownerState.variant]];
  }
})(({
  ownerState,
  theme
}) => _extends({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  zIndex: 0,
  // Fix Safari's bug during composition of different paint.
  "@media print": {
    colorAdjust: "exact"
  },
  backgroundColor: getColorShade(theme, ownerState.color)
}, ownerState.color === "inherit" && ownerState.variant !== "buffer" && {
  backgroundColor: "none",
  "&::before": {
    content: '""',
    position: "absolute",
    left: 0,
    top: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "currentColor",
    opacity: 0.3
  }
}, ownerState.variant === "buffer" && {
  backgroundColor: "transparent"
}, ownerState.variant === "query" && {
  transform: "rotate(180deg)"
}));
var LinearProgressDashed = styled_default2("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.dashed, styles7[`dashedColor${capitalize_default(ownerState.color)}`]];
  }
})(({
  ownerState,
  theme
}) => {
  const backgroundColor2 = getColorShade(theme, ownerState.color);
  return _extends({
    position: "absolute",
    marginTop: 0,
    height: "100%",
    width: "100%"
  }, ownerState.color === "inherit" && {
    opacity: 0.3
  }, {
    backgroundImage: `radial-gradient(${backgroundColor2} 0%, ${backgroundColor2} 16%, transparent 42%)`,
    backgroundSize: "10px 10px",
    backgroundPosition: "0 -23px"
  });
}, css(_t43 || (_t43 = _3`
    animation: ${0} 3s infinite linear;
  `), bufferKeyframe));
var LinearProgressBar1 = styled_default2("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.bar, styles7[`barColor${capitalize_default(ownerState.color)}`], (ownerState.variant === "indeterminate" || ownerState.variant === "query") && styles7.bar1Indeterminate, ownerState.variant === "determinate" && styles7.bar1Determinate, ownerState.variant === "buffer" && styles7.bar1Buffer];
  }
})(({
  ownerState,
  theme
}) => _extends({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  backgroundColor: ownerState.color === "inherit" ? "currentColor" : (theme.vars || theme).palette[ownerState.color].main
}, ownerState.variant === "determinate" && {
  transition: `transform .${TRANSITION_DURATION}s linear`
}, ownerState.variant === "buffer" && {
  zIndex: 1,
  transition: `transform .${TRANSITION_DURATION}s linear`
}), ({
  ownerState
}) => (ownerState.variant === "indeterminate" || ownerState.variant === "query") && css(_t52 || (_t52 = _3`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    `), indeterminate1Keyframe));
var LinearProgressBar2 = styled_default2("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.bar, styles7[`barColor${capitalize_default(ownerState.color)}`], (ownerState.variant === "indeterminate" || ownerState.variant === "query") && styles7.bar2Indeterminate, ownerState.variant === "buffer" && styles7.bar2Buffer];
  }
})(({
  ownerState,
  theme
}) => _extends({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left"
}, ownerState.variant !== "buffer" && {
  backgroundColor: ownerState.color === "inherit" ? "currentColor" : (theme.vars || theme).palette[ownerState.color].main
}, ownerState.color === "inherit" && {
  opacity: 0.3
}, ownerState.variant === "buffer" && {
  backgroundColor: getColorShade(theme, ownerState.color),
  transition: `transform .${TRANSITION_DURATION}s linear`
}), ({
  ownerState
}) => (ownerState.variant === "indeterminate" || ownerState.variant === "query") && css(_t62 || (_t62 = _3`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
    `), indeterminate2Keyframe));
var LinearProgress = React197.forwardRef(function LinearProgress2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiLinearProgress"
  });
  const {
    className,
    color: color2 = "primary",
    value,
    valueBuffer,
    variant = "indeterminate"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded112);
  const ownerState = _extends({}, props, {
    color: color2,
    variant
  });
  const classes2 = useUtilityClasses83(ownerState);
  const theme = useTheme5();
  const rootProps = {};
  const inlineStyles = {
    bar1: {},
    bar2: {}
  };
  if (variant === "determinate" || variant === "buffer") {
    if (value !== void 0) {
      rootProps["aria-valuenow"] = Math.round(value);
      rootProps["aria-valuemin"] = 0;
      rootProps["aria-valuemax"] = 100;
      let transform = value - 100;
      if (theme.direction === "rtl") {
        transform = -transform;
      }
      inlineStyles.bar1.transform = `translateX(${transform}%)`;
    } else if (true) {
      console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
    }
  }
  if (variant === "buffer") {
    if (valueBuffer !== void 0) {
      let transform = (valueBuffer || 0) - 100;
      if (theme.direction === "rtl") {
        transform = -transform;
      }
      inlineStyles.bar2.transform = `translateX(${transform}%)`;
    } else if (true) {
      console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
    }
  }
  return (0, import_jsx_runtime164.jsxs)(LinearProgressRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    role: "progressbar"
  }, rootProps, {
    ref
  }, other, {
    children: [variant === "buffer" ? (0, import_jsx_runtime163.jsx)(LinearProgressDashed, {
      className: classes2.dashed,
      ownerState
    }) : null, (0, import_jsx_runtime163.jsx)(LinearProgressBar1, {
      className: classes2.bar1,
      ownerState,
      style: inlineStyles.bar1
    }), variant === "determinate" ? null : (0, import_jsx_runtime163.jsx)(LinearProgressBar2, {
      className: classes2.bar2,
      ownerState,
      style: inlineStyles.bar2
    })]
  }));
});
true ? LinearProgress.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types129.default.object,
  /**
   * @ignore
   */
  className: import_prop_types129.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types129.default.oneOfType([import_prop_types129.default.oneOf(["inherit", "primary", "secondary"]), import_prop_types129.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types129.default.oneOfType([import_prop_types129.default.arrayOf(import_prop_types129.default.oneOfType([import_prop_types129.default.func, import_prop_types129.default.object, import_prop_types129.default.bool])), import_prop_types129.default.func, import_prop_types129.default.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: import_prop_types129.default.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: import_prop_types129.default.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: import_prop_types129.default.oneOf(["buffer", "determinate", "indeterminate", "query"])
} : void 0;
var LinearProgress_default = LinearProgress;

// node_modules/@mui/material/Link/Link.js
init_objectWithoutPropertiesLoose();
init_extends();
var React198 = __toESM(require_react());
var import_prop_types130 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_capitalize3();
init_styled2();
init_useThemeProps3();
init_useIsFocusVisible2();
init_useForkRef3();

// node_modules/@mui/material/Link/linkClasses.js
init_esm();
init_generateUtilityClass3();
function getLinkUtilityClass(slot) {
  return generateUtilityClass("MuiLink", slot);
}
var linkClasses = generateUtilityClasses("MuiLink", ["root", "underlineNone", "underlineHover", "underlineAlways", "button", "focusVisible"]);
var linkClasses_default = linkClasses;

// node_modules/@mui/material/Link/getTextDecoration.js
init_esm2();
var colorTransformations2 = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
};
var transformDeprecatedColors2 = (color2) => {
  return colorTransformations2[color2] || color2;
};
var getTextDecoration = ({
  theme,
  ownerState
}) => {
  const transformedColor = transformDeprecatedColors2(ownerState.color);
  const color2 = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;
  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);
  if ("vars" in theme && channelColor) {
    return `rgba(${channelColor} / 0.4)`;
  }
  return alpha(color2, 0.4);
};
var getTextDecoration_default = getTextDecoration;

// node_modules/@mui/material/Link/Link.js
var import_jsx_runtime165 = __toESM(require_jsx_runtime());
var _excluded113 = ["className", "color", "component", "onBlur", "onFocus", "TypographyClasses", "underline", "variant", "sx"];
var useUtilityClasses84 = (ownerState) => {
  const {
    classes: classes2,
    component,
    focusVisible,
    underline
  } = ownerState;
  const slots = {
    root: ["root", `underline${capitalize_default(underline)}`, component === "button" && "button", focusVisible && "focusVisible"]
  };
  return composeClasses(slots, getLinkUtilityClass, classes2);
};
var LinkRoot = styled_default2(Typography_default, {
  name: "MuiLink",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`underline${capitalize_default(ownerState.underline)}`], ownerState.component === "button" && styles7.button];
  }
})(({
  theme,
  ownerState
}) => {
  return _extends({}, ownerState.underline === "none" && {
    textDecoration: "none"
  }, ownerState.underline === "hover" && {
    textDecoration: "none",
    "&:hover": {
      textDecoration: "underline"
    }
  }, ownerState.underline === "always" && _extends({
    textDecoration: "underline"
  }, ownerState.color !== "inherit" && {
    textDecorationColor: getTextDecoration_default({
      theme,
      ownerState
    })
  }, {
    "&:hover": {
      textDecorationColor: "inherit"
    }
  }), ownerState.component === "button" && {
    position: "relative",
    WebkitTapHighlightColor: "transparent",
    backgroundColor: "transparent",
    // Reset default value
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    border: 0,
    margin: 0,
    // Remove the margin in Safari
    borderRadius: 0,
    padding: 0,
    // Remove the padding in Firefox
    cursor: "pointer",
    userSelect: "none",
    verticalAlign: "middle",
    MozAppearance: "none",
    // Reset
    WebkitAppearance: "none",
    // Reset
    "&::-moz-focus-inner": {
      borderStyle: "none"
      // Remove Firefox dotted outline.
    },
    [`&.${linkClasses_default.focusVisible}`]: {
      outline: "auto"
    }
  });
});
var Link2 = React198.forwardRef(function Link3(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiLink"
  });
  const {
    className,
    color: color2 = "primary",
    component = "a",
    onBlur,
    onFocus,
    TypographyClasses,
    underline = "always",
    variant = "inherit",
    sx
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded113);
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible_default();
  const [focusVisible, setFocusVisible] = React198.useState(false);
  const handlerRef = useForkRef_default(ref, focusVisibleRef);
  const handleBlur2 = (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event);
    }
  };
  const handleFocus = (event) => {
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    focusVisible,
    underline,
    variant
  });
  const classes2 = useUtilityClasses84(ownerState);
  return (0, import_jsx_runtime165.jsx)(LinkRoot, _extends({
    color: color2,
    className: clsx_default2(classes2.root, className),
    classes: TypographyClasses,
    component,
    onBlur: handleBlur2,
    onFocus: handleFocus,
    ref: handlerRef,
    ownerState,
    variant,
    sx: [...!Object.keys(colorTransformations2).includes(color2) ? [{
      color: color2
    }] : [], ...Array.isArray(sx) ? sx : [sx]]
  }, other));
});
true ? Link2.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types130.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types130.default.object,
  /**
   * @ignore
   */
  className: import_prop_types130.default.string,
  /**
   * The color of the link.
   * @default 'primary'
   */
  color: import_prop_types130.default.any,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: elementTypeAcceptingRef_default,
  /**
   * @ignore
   */
  onBlur: import_prop_types130.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types130.default.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types130.default.oneOfType([import_prop_types130.default.arrayOf(import_prop_types130.default.oneOfType([import_prop_types130.default.func, import_prop_types130.default.object, import_prop_types130.default.bool])), import_prop_types130.default.func, import_prop_types130.default.object]),
  /**
   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.
   */
  TypographyClasses: import_prop_types130.default.object,
  /**
   * Controls when the link should have an underline.
   * @default 'always'
   */
  underline: import_prop_types130.default.oneOf(["always", "hover", "none"]),
  /**
   * Applies the theme typography styles.
   * @default 'inherit'
   */
  variant: import_prop_types130.default.oneOfType([import_prop_types130.default.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), import_prop_types130.default.string])
} : void 0;
var Link_default = Link2;

// node_modules/@mui/material/List/List.js
init_objectWithoutPropertiesLoose();
init_extends();
var React200 = __toESM(require_react());
var import_prop_types131 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/List/ListContext.js
var React199 = __toESM(require_react());
var ListContext3 = React199.createContext({});
if (true) {
  ListContext3.displayName = "ListContext";
}
var ListContext_default = ListContext3;

// node_modules/@mui/material/List/listClasses.js
init_esm();
init_generateUtilityClass3();
function getListUtilityClass(slot) {
  return generateUtilityClass("MuiList", slot);
}
var listClasses = generateUtilityClasses("MuiList", ["root", "padding", "dense", "subheader"]);

// node_modules/@mui/material/List/List.js
var import_jsx_runtime166 = __toESM(require_jsx_runtime());
var import_jsx_runtime167 = __toESM(require_jsx_runtime());
var _excluded114 = ["children", "className", "component", "dense", "disablePadding", "subheader"];
var useUtilityClasses85 = (ownerState) => {
  const {
    classes: classes2,
    disablePadding,
    dense,
    subheader
  } = ownerState;
  const slots = {
    root: ["root", !disablePadding && "padding", dense && "dense", subheader && "subheader"]
  };
  return composeClasses(slots, getListUtilityClass, classes2);
};
var ListRoot = styled_default2("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, !ownerState.disablePadding && styles7.padding, ownerState.dense && styles7.dense, ownerState.subheader && styles7.subheader];
  }
})(({
  ownerState
}) => _extends({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative"
}, !ownerState.disablePadding && {
  paddingTop: 8,
  paddingBottom: 8
}, ownerState.subheader && {
  paddingTop: 0
}));
var List = React200.forwardRef(function List2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiList"
  });
  const {
    children: children2,
    className,
    component = "ul",
    dense = false,
    disablePadding = false,
    subheader
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded114);
  const context = React200.useMemo(() => ({
    dense
  }), [dense]);
  const ownerState = _extends({}, props, {
    component,
    dense,
    disablePadding
  });
  const classes2 = useUtilityClasses85(ownerState);
  return (0, import_jsx_runtime167.jsx)(ListContext_default.Provider, {
    value: context,
    children: (0, import_jsx_runtime166.jsxs)(ListRoot, _extends({
      as: component,
      className: clsx_default2(classes2.root, className),
      ref,
      ownerState
    }, other, {
      children: [subheader, children2]
    }))
  });
});
true ? List.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types131.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types131.default.object,
  /**
   * @ignore
   */
  className: import_prop_types131.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types131.default.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: import_prop_types131.default.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: import_prop_types131.default.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: import_prop_types131.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types131.default.oneOfType([import_prop_types131.default.arrayOf(import_prop_types131.default.oneOfType([import_prop_types131.default.func, import_prop_types131.default.object, import_prop_types131.default.bool])), import_prop_types131.default.func, import_prop_types131.default.object])
} : void 0;
var List_default = List;

// node_modules/@mui/material/ListItem/ListItem.js
init_objectWithoutPropertiesLoose();
init_extends();
var React203 = __toESM(require_react());
var import_prop_types134 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_esm2();
init_styled2();
init_useThemeProps3();
init_isMuiElement2();
init_useEnhancedEffect3();
init_useForkRef3();

// node_modules/@mui/material/ListItem/listItemClasses.js
init_esm();
init_generateUtilityClass3();
function getListItemUtilityClass(slot) {
  return generateUtilityClass("MuiListItem", slot);
}
var listItemClasses = generateUtilityClasses("MuiListItem", ["root", "container", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "padding", "button", "secondaryAction", "selected"]);
var listItemClasses_default = listItemClasses;

// node_modules/@mui/material/ListItemButton/ListItemButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React201 = __toESM(require_react());
var import_prop_types132 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_styled2();
init_useThemeProps3();
init_useEnhancedEffect3();
init_useForkRef3();

// node_modules/@mui/material/ListItemButton/listItemButtonClasses.js
init_esm();
init_generateUtilityClass3();
function getListItemButtonUtilityClass(slot) {
  return generateUtilityClass("MuiListItemButton", slot);
}
var listItemButtonClasses = generateUtilityClasses("MuiListItemButton", ["root", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "selected"]);
var listItemButtonClasses_default = listItemButtonClasses;

// node_modules/@mui/material/ListItemButton/ListItemButton.js
var import_jsx_runtime168 = __toESM(require_jsx_runtime());
var _excluded115 = ["alignItems", "autoFocus", "component", "children", "dense", "disableGutters", "divider", "focusVisibleClassName", "selected", "className"];
var overridesResolver4 = (props, styles7) => {
  const {
    ownerState
  } = props;
  return [styles7.root, ownerState.dense && styles7.dense, ownerState.alignItems === "flex-start" && styles7.alignItemsFlexStart, ownerState.divider && styles7.divider, !ownerState.disableGutters && styles7.gutters];
};
var useUtilityClasses86 = (ownerState) => {
  const {
    alignItems: alignItems2,
    classes: classes2,
    dense,
    disabled,
    disableGutters,
    divider,
    selected
  } = ownerState;
  const slots = {
    root: ["root", dense && "dense", !disableGutters && "gutters", divider && "divider", disabled && "disabled", alignItems2 === "flex-start" && "alignItemsFlexStart", selected && "selected"]
  };
  const composedClasses = composeClasses(slots, getListItemButtonUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var ListItemButtonRoot = styled_default2(ButtonBase_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiListItemButton",
  slot: "Root",
  overridesResolver: overridesResolver4
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  flexGrow: 1,
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minWidth: 0,
  boxSizing: "border-box",
  textAlign: "left",
  paddingTop: 8,
  paddingBottom: 8,
  transition: theme.transitions.create("background-color", {
    duration: theme.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (theme.vars || theme).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${listItemButtonClasses_default.selected}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
    [`&.${listItemButtonClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    }
  },
  [`&.${listItemButtonClasses_default.selected}:hover`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)
    }
  },
  [`&.${listItemButtonClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`&.${listItemButtonClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  }
}, ownerState.divider && {
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,
  backgroundClip: "padding-box"
}, ownerState.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, !ownerState.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, ownerState.dense && {
  paddingTop: 4,
  paddingBottom: 4
}));
var ListItemButton = React201.forwardRef(function ListItemButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemButton"
  });
  const {
    alignItems: alignItems2 = "center",
    autoFocus = false,
    component = "div",
    children: children2,
    dense = false,
    disableGutters = false,
    divider = false,
    focusVisibleClassName,
    selected = false,
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded115);
  const context = React201.useContext(ListContext_default);
  const childContext = React201.useMemo(() => ({
    dense: dense || context.dense || false,
    alignItems: alignItems2,
    disableGutters
  }), [alignItems2, context.dense, dense, disableGutters]);
  const listItemRef = React201.useRef(null);
  useEnhancedEffect_default2(() => {
    if (autoFocus) {
      if (listItemRef.current) {
        listItemRef.current.focus();
      } else if (true) {
        console.error("MUI: Unable to set focus to a ListItemButton whose component has not been rendered.");
      }
    }
  }, [autoFocus]);
  const ownerState = _extends({}, props, {
    alignItems: alignItems2,
    dense: childContext.dense,
    disableGutters,
    divider,
    selected
  });
  const classes2 = useUtilityClasses86(ownerState);
  const handleRef = useForkRef_default(listItemRef, ref);
  return (0, import_jsx_runtime168.jsx)(ListContext_default.Provider, {
    value: childContext,
    children: (0, import_jsx_runtime168.jsx)(ListItemButtonRoot, _extends({
      ref: handleRef,
      href: other.href || other.to,
      component: (other.href || other.to) && component === "div" ? "button" : component,
      focusVisibleClassName: clsx_default2(classes2.focusVisible, focusVisibleClassName),
      ownerState,
      className: clsx_default2(classes2.root, className)
    }, other, {
      classes: classes2,
      children: children2
    }))
  });
});
true ? ListItemButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: import_prop_types132.default.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: import_prop_types132.default.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: import_prop_types132.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types132.default.object,
  /**
   * @ignore
   */
  className: import_prop_types132.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types132.default.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: import_prop_types132.default.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types132.default.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: import_prop_types132.default.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: import_prop_types132.default.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: import_prop_types132.default.string,
  /**
   * @ignore
   */
  href: import_prop_types132.default.string,
  /**
   * Use to apply selected styling.
   * @default false
   */
  selected: import_prop_types132.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types132.default.oneOfType([import_prop_types132.default.arrayOf(import_prop_types132.default.oneOfType([import_prop_types132.default.func, import_prop_types132.default.object, import_prop_types132.default.bool])), import_prop_types132.default.func, import_prop_types132.default.object])
} : void 0;
var ListItemButton_default = ListItemButton;

// node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js
init_objectWithoutPropertiesLoose();
init_extends();
var React202 = __toESM(require_react());
var import_prop_types133 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js
init_esm();
init_generateUtilityClass3();
function getListItemSecondaryActionClassesUtilityClass(slot) {
  return generateUtilityClass("MuiListItemSecondaryAction", slot);
}
var listItemSecondaryActionClasses = generateUtilityClasses("MuiListItemSecondaryAction", ["root", "disableGutters"]);

// node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js
var import_jsx_runtime169 = __toESM(require_jsx_runtime());
var _excluded116 = ["className"];
var useUtilityClasses87 = (ownerState) => {
  const {
    disableGutters,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", disableGutters && "disableGutters"]
  };
  return composeClasses(slots, getListItemSecondaryActionClassesUtilityClass, classes2);
};
var ListItemSecondaryActionRoot = styled_default2("div", {
  name: "MuiListItemSecondaryAction",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.disableGutters && styles7.disableGutters];
  }
})(({
  ownerState
}) => _extends({
  position: "absolute",
  right: 16,
  top: "50%",
  transform: "translateY(-50%)"
}, ownerState.disableGutters && {
  right: 0
}));
var ListItemSecondaryAction = React202.forwardRef(function ListItemSecondaryAction2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemSecondaryAction"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded116);
  const context = React202.useContext(ListContext_default);
  const ownerState = _extends({}, props, {
    disableGutters: context.disableGutters
  });
  const classes2 = useUtilityClasses87(ownerState);
  return (0, import_jsx_runtime169.jsx)(ListItemSecondaryActionRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? ListItemSecondaryAction.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally an `IconButton` or selection control.
   */
  children: import_prop_types133.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types133.default.object,
  /**
   * @ignore
   */
  className: import_prop_types133.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types133.default.oneOfType([import_prop_types133.default.arrayOf(import_prop_types133.default.oneOfType([import_prop_types133.default.func, import_prop_types133.default.object, import_prop_types133.default.bool])), import_prop_types133.default.func, import_prop_types133.default.object])
} : void 0;
ListItemSecondaryAction.muiName = "ListItemSecondaryAction";
var ListItemSecondaryAction_default = ListItemSecondaryAction;

// node_modules/@mui/material/ListItem/ListItem.js
var import_jsx_runtime170 = __toESM(require_jsx_runtime());
var import_jsx_runtime171 = __toESM(require_jsx_runtime());
var _excluded117 = ["className"];
var _excluded213 = ["alignItems", "autoFocus", "button", "children", "className", "component", "components", "componentsProps", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "disablePadding", "divider", "focusVisibleClassName", "secondaryAction", "selected", "slotProps", "slots"];
var overridesResolver5 = (props, styles7) => {
  const {
    ownerState
  } = props;
  return [styles7.root, ownerState.dense && styles7.dense, ownerState.alignItems === "flex-start" && styles7.alignItemsFlexStart, ownerState.divider && styles7.divider, !ownerState.disableGutters && styles7.gutters, !ownerState.disablePadding && styles7.padding, ownerState.button && styles7.button, ownerState.hasSecondaryAction && styles7.secondaryAction];
};
var useUtilityClasses88 = (ownerState) => {
  const {
    alignItems: alignItems2,
    button,
    classes: classes2,
    dense,
    disabled,
    disableGutters,
    disablePadding,
    divider,
    hasSecondaryAction,
    selected
  } = ownerState;
  const slots = {
    root: ["root", dense && "dense", !disableGutters && "gutters", !disablePadding && "padding", divider && "divider", disabled && "disabled", button && "button", alignItems2 === "flex-start" && "alignItemsFlexStart", hasSecondaryAction && "secondaryAction", selected && "selected"],
    container: ["container"]
  };
  return composeClasses(slots, getListItemUtilityClass, classes2);
};
var ListItemRoot = styled_default2("div", {
  name: "MuiListItem",
  slot: "Root",
  overridesResolver: overridesResolver5
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  width: "100%",
  boxSizing: "border-box",
  textAlign: "left"
}, !ownerState.disablePadding && _extends({
  paddingTop: 8,
  paddingBottom: 8
}, ownerState.dense && {
  paddingTop: 4,
  paddingBottom: 4
}, !ownerState.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, !!ownerState.secondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
}), !!ownerState.secondaryAction && {
  [`& > .${listItemButtonClasses_default.root}`]: {
    paddingRight: 48
  }
}, {
  [`&.${listItemClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`&.${listItemClasses_default.selected}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
    [`&.${listItemClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    }
  },
  [`&.${listItemClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  }
}, ownerState.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, ownerState.divider && {
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,
  backgroundClip: "padding-box"
}, ownerState.button && {
  transition: theme.transitions.create("background-color", {
    duration: theme.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (theme.vars || theme).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${listItemClasses_default.selected}:hover`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)
    }
  }
}, ownerState.hasSecondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
}));
var ListItemContainer = styled_default2("li", {
  name: "MuiListItem",
  slot: "Container",
  overridesResolver: (props, styles7) => styles7.container
})({
  position: "relative"
});
var ListItem = React203.forwardRef(function ListItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItem"
  });
  const {
    alignItems: alignItems2 = "center",
    autoFocus = false,
    button = false,
    children: childrenProp,
    className,
    component: componentProp,
    components = {},
    componentsProps = {},
    ContainerComponent = "li",
    ContainerProps: {
      className: ContainerClassName
    } = {},
    dense = false,
    disabled = false,
    disableGutters = false,
    disablePadding = false,
    divider = false,
    focusVisibleClassName,
    secondaryAction,
    selected = false,
    slotProps = {},
    slots = {}
  } = props, ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, _excluded117), other = _objectWithoutPropertiesLoose(props, _excluded213);
  const context = React203.useContext(ListContext_default);
  const childContext = React203.useMemo(() => ({
    dense: dense || context.dense || false,
    alignItems: alignItems2,
    disableGutters
  }), [alignItems2, context.dense, dense, disableGutters]);
  const listItemRef = React203.useRef(null);
  useEnhancedEffect_default2(() => {
    if (autoFocus) {
      if (listItemRef.current) {
        listItemRef.current.focus();
      } else if (true) {
        console.error("MUI: Unable to set focus to a ListItem whose component has not been rendered.");
      }
    }
  }, [autoFocus]);
  const children2 = React203.Children.toArray(childrenProp);
  const hasSecondaryAction = children2.length && isMuiElement_default(children2[children2.length - 1], ["ListItemSecondaryAction"]);
  const ownerState = _extends({}, props, {
    alignItems: alignItems2,
    autoFocus,
    button,
    dense: childContext.dense,
    disabled,
    disableGutters,
    disablePadding,
    divider,
    hasSecondaryAction,
    selected
  });
  const classes2 = useUtilityClasses88(ownerState);
  const handleRef = useForkRef_default(listItemRef, ref);
  const Root42 = slots.root || components.Root || ListItemRoot;
  const rootProps = slotProps.root || componentsProps.root || {};
  const componentProps = _extends({
    className: clsx_default2(classes2.root, rootProps.className, className),
    disabled
  }, other);
  let Component2 = componentProp || "li";
  if (button) {
    componentProps.component = componentProp || "div";
    componentProps.focusVisibleClassName = clsx_default2(listItemClasses_default.focusVisible, focusVisibleClassName);
    Component2 = ButtonBase_default;
  }
  if (hasSecondaryAction) {
    Component2 = !componentProps.component && !componentProp ? "div" : Component2;
    if (ContainerComponent === "li") {
      if (Component2 === "li") {
        Component2 = "div";
      } else if (componentProps.component === "li") {
        componentProps.component = "div";
      }
    }
    return (0, import_jsx_runtime170.jsx)(ListContext_default.Provider, {
      value: childContext,
      children: (0, import_jsx_runtime171.jsxs)(ListItemContainer, _extends({
        as: ContainerComponent,
        className: clsx_default2(classes2.container, ContainerClassName),
        ref: handleRef,
        ownerState
      }, ContainerProps, {
        children: [(0, import_jsx_runtime170.jsx)(Root42, _extends({}, rootProps, !isHostComponent(Root42) && {
          as: Component2,
          ownerState: _extends({}, ownerState, rootProps.ownerState)
        }, componentProps, {
          children: children2
        })), children2.pop()]
      }))
    });
  }
  return (0, import_jsx_runtime170.jsx)(ListContext_default.Provider, {
    value: childContext,
    children: (0, import_jsx_runtime171.jsxs)(Root42, _extends({}, rootProps, {
      as: Component2,
      ref: handleRef
    }, !isHostComponent(Root42) && {
      ownerState: _extends({}, ownerState, rootProps.ownerState)
    }, componentProps, {
      children: [children2, secondaryAction && (0, import_jsx_runtime170.jsx)(ListItemSecondaryAction_default, {
        children: secondaryAction
      })]
    }))
  });
});
true ? ListItem.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: import_prop_types134.default.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  autoFocus: import_prop_types134.default.bool,
  /**
   * If `true`, the list item is a button (using `ButtonBase`). Props intended
   * for `ButtonBase` can then be applied to `ListItem`.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  button: import_prop_types134.default.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: chainPropTypes(import_prop_types134.default.node, (props) => {
    const children2 = React203.Children.toArray(props.children);
    let secondaryActionIndex = -1;
    for (let i = children2.length - 1; i >= 0; i -= 1) {
      const child = children2[i];
      if (isMuiElement_default(child, ["ListItemSecondaryAction"])) {
        secondaryActionIndex = i;
        break;
      }
    }
    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children2.length - 1) {
      return new Error("MUI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem.");
    }
    return null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types134.default.object,
  /**
   * @ignore
   */
  className: import_prop_types134.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types134.default.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types134.default.shape({
    Root: import_prop_types134.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types134.default.shape({
    root: import_prop_types134.default.object
  }),
  /**
   * The container component used when a `ListItemSecondaryAction` is the last child.
   * @default 'li'
   * @deprecated
   */
  ContainerComponent: elementTypeAcceptingRef_default,
  /**
   * Props applied to the container component if used.
   * @default {}
   * @deprecated
   */
  ContainerProps: import_prop_types134.default.object,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: import_prop_types134.default.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  disabled: import_prop_types134.default.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: import_prop_types134.default.bool,
  /**
   * If `true`, all padding is removed.
   * @default false
   */
  disablePadding: import_prop_types134.default.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: import_prop_types134.default.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: import_prop_types134.default.string,
  /**
   * The element to display at the end of ListItem.
   */
  secondaryAction: import_prop_types134.default.node,
  /**
   * Use to apply selected styling.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  selected: import_prop_types134.default.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types134.default.shape({
    root: import_prop_types134.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types134.default.shape({
    root: import_prop_types134.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types134.default.oneOfType([import_prop_types134.default.arrayOf(import_prop_types134.default.oneOfType([import_prop_types134.default.func, import_prop_types134.default.object, import_prop_types134.default.bool])), import_prop_types134.default.func, import_prop_types134.default.object])
} : void 0;
var ListItem_default = ListItem;

// node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React204 = __toESM(require_react());
var import_prop_types135 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js
init_esm();
init_generateUtilityClass3();
function getListItemAvatarUtilityClass(slot) {
  return generateUtilityClass("MuiListItemAvatar", slot);
}
var listItemAvatarClasses = generateUtilityClasses("MuiListItemAvatar", ["root", "alignItemsFlexStart"]);

// node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js
var import_jsx_runtime172 = __toESM(require_jsx_runtime());
var _excluded118 = ["className"];
var useUtilityClasses89 = (ownerState) => {
  const {
    alignItems: alignItems2,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", alignItems2 === "flex-start" && "alignItemsFlexStart"]
  };
  return composeClasses(slots, getListItemAvatarUtilityClass, classes2);
};
var ListItemAvatarRoot = styled_default2("div", {
  name: "MuiListItemAvatar",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.alignItems === "flex-start" && styles7.alignItemsFlexStart];
  }
})(({
  ownerState
}) => _extends({
  minWidth: 56,
  flexShrink: 0
}, ownerState.alignItems === "flex-start" && {
  marginTop: 8
}));
var ListItemAvatar = React204.forwardRef(function ListItemAvatar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemAvatar"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded118);
  const context = React204.useContext(ListContext_default);
  const ownerState = _extends({}, props, {
    alignItems: context.alignItems
  });
  const classes2 = useUtilityClasses89(ownerState);
  return (0, import_jsx_runtime172.jsx)(ListItemAvatarRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? ListItemAvatar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally an `Avatar`.
   */
  children: import_prop_types135.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types135.default.object,
  /**
   * @ignore
   */
  className: import_prop_types135.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types135.default.oneOfType([import_prop_types135.default.arrayOf(import_prop_types135.default.oneOfType([import_prop_types135.default.func, import_prop_types135.default.object, import_prop_types135.default.bool])), import_prop_types135.default.func, import_prop_types135.default.object])
} : void 0;
var ListItemAvatar_default = ListItemAvatar;

// node_modules/@mui/material/ListItemIcon/ListItemIcon.js
init_objectWithoutPropertiesLoose();
init_extends();
var React205 = __toESM(require_react());
var import_prop_types136 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/ListItemIcon/listItemIconClasses.js
init_esm();
init_generateUtilityClass3();
function getListItemIconUtilityClass(slot) {
  return generateUtilityClass("MuiListItemIcon", slot);
}
var listItemIconClasses = generateUtilityClasses("MuiListItemIcon", ["root", "alignItemsFlexStart"]);
var listItemIconClasses_default = listItemIconClasses;

// node_modules/@mui/material/ListItemIcon/ListItemIcon.js
var import_jsx_runtime173 = __toESM(require_jsx_runtime());
var _excluded119 = ["className"];
var useUtilityClasses90 = (ownerState) => {
  const {
    alignItems: alignItems2,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", alignItems2 === "flex-start" && "alignItemsFlexStart"]
  };
  return composeClasses(slots, getListItemIconUtilityClass, classes2);
};
var ListItemIconRoot = styled_default2("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.alignItems === "flex-start" && styles7.alignItemsFlexStart];
  }
})(({
  theme,
  ownerState
}) => _extends({
  minWidth: 56,
  color: (theme.vars || theme).palette.action.active,
  flexShrink: 0,
  display: "inline-flex"
}, ownerState.alignItems === "flex-start" && {
  marginTop: 8
}));
var ListItemIcon = React205.forwardRef(function ListItemIcon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemIcon"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded119);
  const context = React205.useContext(ListContext_default);
  const ownerState = _extends({}, props, {
    alignItems: context.alignItems
  });
  const classes2 = useUtilityClasses90(ownerState);
  return (0, import_jsx_runtime173.jsx)(ListItemIconRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? ListItemIcon.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: import_prop_types136.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types136.default.object,
  /**
   * @ignore
   */
  className: import_prop_types136.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types136.default.oneOfType([import_prop_types136.default.arrayOf(import_prop_types136.default.oneOfType([import_prop_types136.default.func, import_prop_types136.default.object, import_prop_types136.default.bool])), import_prop_types136.default.func, import_prop_types136.default.object])
} : void 0;
var ListItemIcon_default = ListItemIcon;

// node_modules/@mui/material/ListItemText/ListItemText.js
init_objectWithoutPropertiesLoose();
init_extends();
var React206 = __toESM(require_react());
var import_prop_types137 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/ListItemText/listItemTextClasses.js
init_esm();
init_generateUtilityClass3();
function getListItemTextUtilityClass(slot) {
  return generateUtilityClass("MuiListItemText", slot);
}
var listItemTextClasses = generateUtilityClasses("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]);
var listItemTextClasses_default = listItemTextClasses;

// node_modules/@mui/material/ListItemText/ListItemText.js
var import_jsx_runtime174 = __toESM(require_jsx_runtime());
var import_jsx_runtime175 = __toESM(require_jsx_runtime());
var _excluded120 = ["children", "className", "disableTypography", "inset", "primary", "primaryTypographyProps", "secondary", "secondaryTypographyProps"];
var useUtilityClasses91 = (ownerState) => {
  const {
    classes: classes2,
    inset,
    primary,
    secondary,
    dense
  } = ownerState;
  const slots = {
    root: ["root", inset && "inset", dense && "dense", primary && secondary && "multiline"],
    primary: ["primary"],
    secondary: ["secondary"]
  };
  return composeClasses(slots, getListItemTextUtilityClass, classes2);
};
var ListItemTextRoot = styled_default2("div", {
  name: "MuiListItemText",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${listItemTextClasses_default.primary}`]: styles7.primary
    }, {
      [`& .${listItemTextClasses_default.secondary}`]: styles7.secondary
    }, styles7.root, ownerState.inset && styles7.inset, ownerState.primary && ownerState.secondary && styles7.multiline, ownerState.dense && styles7.dense];
  }
})(({
  ownerState
}) => _extends({
  flex: "1 1 auto",
  minWidth: 0,
  marginTop: 4,
  marginBottom: 4
}, ownerState.primary && ownerState.secondary && {
  marginTop: 6,
  marginBottom: 6
}, ownerState.inset && {
  paddingLeft: 56
}));
var ListItemText = React206.forwardRef(function ListItemText2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemText"
  });
  const {
    children: children2,
    className,
    disableTypography = false,
    inset = false,
    primary: primaryProp,
    primaryTypographyProps,
    secondary: secondaryProp,
    secondaryTypographyProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded120);
  const {
    dense
  } = React206.useContext(ListContext_default);
  let primary = primaryProp != null ? primaryProp : children2;
  let secondary = secondaryProp;
  const ownerState = _extends({}, props, {
    disableTypography,
    inset,
    primary: !!primary,
    secondary: !!secondary,
    dense
  });
  const classes2 = useUtilityClasses91(ownerState);
  if (primary != null && primary.type !== Typography_default && !disableTypography) {
    primary = (0, import_jsx_runtime174.jsx)(Typography_default, _extends({
      variant: dense ? "body2" : "body1",
      className: classes2.primary,
      component: primaryTypographyProps != null && primaryTypographyProps.variant ? void 0 : "span",
      display: "block"
    }, primaryTypographyProps, {
      children: primary
    }));
  }
  if (secondary != null && secondary.type !== Typography_default && !disableTypography) {
    secondary = (0, import_jsx_runtime174.jsx)(Typography_default, _extends({
      variant: "body2",
      className: classes2.secondary,
      color: "text.secondary",
      display: "block"
    }, secondaryTypographyProps, {
      children: secondary
    }));
  }
  return (0, import_jsx_runtime175.jsxs)(ListItemTextRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other, {
    children: [primary, secondary]
  }));
});
true ? ListItemText.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Alias for the `primary` prop.
   */
  children: import_prop_types137.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types137.default.object,
  /**
   * @ignore
   */
  className: import_prop_types137.default.string,
  /**
   * If `true`, the children won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `children` (or `primary`) text, and optional `secondary` text
   * with the Typography component.
   * @default false
   */
  disableTypography: import_prop_types137.default.bool,
  /**
   * If `true`, the children are indented.
   * This should be used if there is no left avatar or left icon.
   * @default false
   */
  inset: import_prop_types137.default.bool,
  /**
   * The main content element.
   */
  primary: import_prop_types137.default.node,
  /**
   * These props will be forwarded to the primary typography component
   * (as long as disableTypography is not `true`).
   */
  primaryTypographyProps: import_prop_types137.default.object,
  /**
   * The secondary content element.
   */
  secondary: import_prop_types137.default.node,
  /**
   * These props will be forwarded to the secondary typography component
   * (as long as disableTypography is not `true`).
   */
  secondaryTypographyProps: import_prop_types137.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types137.default.oneOfType([import_prop_types137.default.arrayOf(import_prop_types137.default.oneOfType([import_prop_types137.default.func, import_prop_types137.default.object, import_prop_types137.default.bool])), import_prop_types137.default.func, import_prop_types137.default.object])
} : void 0;
var ListItemText_default = ListItemText;

// node_modules/@mui/material/Menu/Menu.js
init_extends();
init_objectWithoutPropertiesLoose();
var React209 = __toESM(require_react());
var import_react_is8 = __toESM(require_react_is3());
var import_prop_types140 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm();

// node_modules/@mui/material/MenuList/MenuList.js
init_extends();
init_objectWithoutPropertiesLoose();
var React207 = __toESM(require_react());
var import_react_is7 = __toESM(require_react_is3());
var import_prop_types138 = __toESM(require_prop_types());
init_ownerDocument3();

// node_modules/@mui/material/utils/getScrollbarSize.js
init_esm();
var getScrollbarSize_default = getScrollbarSize;

// node_modules/@mui/material/MenuList/MenuList.js
init_useForkRef3();
init_useEnhancedEffect3();
var import_jsx_runtime176 = __toESM(require_jsx_runtime());
var _excluded121 = ["actions", "autoFocus", "autoFocusItem", "children", "className", "disabledItemsFocusable", "disableListWrap", "onKeyDown", "variant"];
function nextItem(list, item, disableListWrap) {
  if (list === item) {
    return list.firstChild;
  }
  if (item && item.nextElementSibling) {
    return item.nextElementSibling;
  }
  return disableListWrap ? null : list.firstChild;
}
function previousItem(list, item, disableListWrap) {
  if (list === item) {
    return disableListWrap ? list.firstChild : list.lastChild;
  }
  if (item && item.previousElementSibling) {
    return item.previousElementSibling;
  }
  return disableListWrap ? null : list.lastChild;
}
function textCriteriaMatches2(nextFocus, textCriteria) {
  if (textCriteria === void 0) {
    return true;
  }
  let text2 = nextFocus.innerText;
  if (text2 === void 0) {
    text2 = nextFocus.textContent;
  }
  text2 = text2.trim().toLowerCase();
  if (text2.length === 0) {
    return false;
  }
  if (textCriteria.repeating) {
    return text2[0] === textCriteria.keys[0];
  }
  return text2.indexOf(textCriteria.keys.join("")) === 0;
}
function moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {
  let wrappedOnce = false;
  let nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);
  while (nextFocus) {
    if (nextFocus === list.firstChild) {
      if (wrappedOnce) {
        return false;
      }
      wrappedOnce = true;
    }
    const nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute("aria-disabled") === "true";
    if (!nextFocus.hasAttribute("tabindex") || !textCriteriaMatches2(nextFocus, textCriteria) || nextFocusDisabled) {
      nextFocus = traversalFunction(list, nextFocus, disableListWrap);
    } else {
      nextFocus.focus();
      return true;
    }
  }
  return false;
}
var MenuList = React207.forwardRef(function MenuList2(props, ref) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions,
    autoFocus = false,
    autoFocusItem = false,
    children: children2,
    className,
    disabledItemsFocusable = false,
    disableListWrap = false,
    onKeyDown,
    variant = "selectedMenu"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded121);
  const listRef = React207.useRef(null);
  const textCriteriaRef = React207.useRef({
    keys: [],
    repeating: true,
    previousKeyMatched: true,
    lastTime: null
  });
  useEnhancedEffect_default2(() => {
    if (autoFocus) {
      listRef.current.focus();
    }
  }, [autoFocus]);
  React207.useImperativeHandle(actions, () => ({
    adjustStyleForScrollbar: (containerElement, theme) => {
      const noExplicitWidth = !listRef.current.style.width;
      if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {
        const scrollbarSize = `${getScrollbarSize_default(ownerDocument_default(containerElement))}px`;
        listRef.current.style[theme.direction === "rtl" ? "paddingLeft" : "paddingRight"] = scrollbarSize;
        listRef.current.style.width = `calc(100% + ${scrollbarSize})`;
      }
      return listRef.current;
    }
  }), []);
  const handleKeyDown3 = (event) => {
    const list = listRef.current;
    const key = event.key;
    const currentFocus = ownerDocument_default(list).activeElement;
    if (key === "ArrowDown") {
      event.preventDefault();
      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);
    } else if (key === "ArrowUp") {
      event.preventDefault();
      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);
    } else if (key === "Home") {
      event.preventDefault();
      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);
    } else if (key === "End") {
      event.preventDefault();
      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);
    } else if (key.length === 1) {
      const criteria = textCriteriaRef.current;
      const lowerKey = key.toLowerCase();
      const currTime = performance.now();
      if (criteria.keys.length > 0) {
        if (currTime - criteria.lastTime > 500) {
          criteria.keys = [];
          criteria.repeating = true;
          criteria.previousKeyMatched = true;
        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {
          criteria.repeating = false;
        }
      }
      criteria.lastTime = currTime;
      criteria.keys.push(lowerKey);
      const keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches2(currentFocus, criteria);
      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {
        event.preventDefault();
      } else {
        criteria.previousKeyMatched = false;
      }
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
  };
  const handleRef = useForkRef_default(listRef, ref);
  let activeItemIndex = -1;
  React207.Children.forEach(children2, (child, index2) => {
    if (!React207.isValidElement(child)) {
      if (activeItemIndex === index2) {
        activeItemIndex += 1;
        if (activeItemIndex >= children2.length) {
          activeItemIndex = -1;
        }
      }
      return;
    }
    if (true) {
      if ((0, import_react_is7.isFragment)(child)) {
        console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    if (!child.props.disabled) {
      if (variant === "selectedMenu" && child.props.selected) {
        activeItemIndex = index2;
      } else if (activeItemIndex === -1) {
        activeItemIndex = index2;
      }
    }
    if (activeItemIndex === index2 && (child.props.disabled || child.props.muiSkipListHighlight || child.type.muiSkipListHighlight)) {
      activeItemIndex += 1;
      if (activeItemIndex >= children2.length) {
        activeItemIndex = -1;
      }
    }
  });
  const items = React207.Children.map(children2, (child, index2) => {
    if (index2 === activeItemIndex) {
      const newChildProps = {};
      if (autoFocusItem) {
        newChildProps.autoFocus = true;
      }
      if (child.props.tabIndex === void 0 && variant === "selectedMenu") {
        newChildProps.tabIndex = 0;
      }
      return React207.cloneElement(child, newChildProps);
    }
    return child;
  });
  return (0, import_jsx_runtime176.jsx)(List_default, _extends({
    role: "menu",
    ref: handleRef,
    className,
    onKeyDown: handleKeyDown3,
    tabIndex: autoFocus ? 0 : -1
  }, other, {
    children: items
  }));
});
true ? MenuList.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: import_prop_types138.default.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: import_prop_types138.default.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: import_prop_types138.default.node,
  /**
   * @ignore
   */
  className: import_prop_types138.default.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: import_prop_types138.default.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: import_prop_types138.default.bool,
  /**
   * @ignore
   */
  onKeyDown: import_prop_types138.default.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: import_prop_types138.default.oneOf(["menu", "selectedMenu"])
} : void 0;
var MenuList_default = MenuList;

// node_modules/@mui/material/Popover/Popover.js
init_extends();
init_objectWithoutPropertiesLoose();
var React208 = __toESM(require_react());
var import_prop_types139 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_styled2();
init_useThemeProps3();
init_debounce3();
init_ownerDocument3();
init_ownerWindow3();
init_useForkRef3();

// node_modules/@mui/material/Popover/popoverClasses.js
init_esm();
init_generateUtilityClass3();
function getPopoverUtilityClass(slot) {
  return generateUtilityClass("MuiPopover", slot);
}
var popoverClasses = generateUtilityClasses("MuiPopover", ["root", "paper"]);

// node_modules/@mui/material/Popover/Popover.js
var import_jsx_runtime177 = __toESM(require_jsx_runtime());
var _excluded122 = ["onEntering"];
var _excluded214 = ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "className", "container", "elevation", "marginThreshold", "open", "PaperProps", "slots", "slotProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps", "disableScrollLock"];
var _excluded310 = ["slotProps"];
function getOffsetTop(rect, vertical) {
  let offset3 = 0;
  if (typeof vertical === "number") {
    offset3 = vertical;
  } else if (vertical === "center") {
    offset3 = rect.height / 2;
  } else if (vertical === "bottom") {
    offset3 = rect.height;
  }
  return offset3;
}
function getOffsetLeft(rect, horizontal) {
  let offset3 = 0;
  if (typeof horizontal === "number") {
    offset3 = horizontal;
  } else if (horizontal === "center") {
    offset3 = rect.width / 2;
  } else if (horizontal === "right") {
    offset3 = rect.width;
  }
  return offset3;
}
function getTransformOriginValue(transformOrigin) {
  return [transformOrigin.horizontal, transformOrigin.vertical].map((n) => typeof n === "number" ? `${n}px` : n).join(" ");
}
function resolveAnchorEl2(anchorEl) {
  return typeof anchorEl === "function" ? anchorEl() : anchorEl;
}
var useUtilityClasses92 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    paper: ["paper"]
  };
  return composeClasses(slots, getPopoverUtilityClass, classes2);
};
var PopoverRoot = styled_default2(Modal_default, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({});
var PopoverPaper = styled_default2(Paper_default, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (props, styles7) => styles7.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
});
var Popover = React208.forwardRef(function Popover2(inProps, ref) {
  var _slotProps$paper, _slots$root, _slots$paper;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiPopover"
  });
  const {
    action,
    anchorEl,
    anchorOrigin = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition,
    anchorReference = "anchorEl",
    children: children2,
    className,
    container: containerProp,
    elevation = 8,
    marginThreshold = 16,
    open,
    PaperProps: PaperPropsProp = {},
    slots,
    slotProps,
    transformOrigin = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent = Grow_default,
    transitionDuration: transitionDurationProp = "auto",
    TransitionProps: {
      onEntering
    } = {},
    disableScrollLock = false
  } = props, TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded122), other = _objectWithoutPropertiesLoose(props, _excluded214);
  const externalPaperSlotProps = (_slotProps$paper = slotProps == null ? void 0 : slotProps.paper) != null ? _slotProps$paper : PaperPropsProp;
  const paperRef = React208.useRef();
  const handlePaperRef = useForkRef_default(paperRef, externalPaperSlotProps.ref);
  const ownerState = _extends({}, props, {
    anchorOrigin,
    anchorReference,
    elevation,
    marginThreshold,
    externalPaperSlotProps,
    transformOrigin,
    TransitionComponent,
    transitionDuration: transitionDurationProp,
    TransitionProps
  });
  const classes2 = useUtilityClasses92(ownerState);
  const getAnchorOffset = React208.useCallback(() => {
    if (anchorReference === "anchorPosition") {
      if (true) {
        if (!anchorPosition) {
          console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.');
        }
      }
      return anchorPosition;
    }
    const resolvedAnchorEl = resolveAnchorEl2(anchorEl);
    const anchorElement = resolvedAnchorEl && resolvedAnchorEl.nodeType === 1 ? resolvedAnchorEl : ownerDocument_default(paperRef.current).body;
    const anchorRect = anchorElement.getBoundingClientRect();
    if (true) {
      const box = anchorElement.getBoundingClientRect();
      if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
        console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
      }
    }
    return {
      top: anchorRect.top + getOffsetTop(anchorRect, anchorOrigin.vertical),
      left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)
    };
  }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]);
  const getTransformOrigin = React208.useCallback((elemRect) => {
    return {
      vertical: getOffsetTop(elemRect, transformOrigin.vertical),
      horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)
    };
  }, [transformOrigin.horizontal, transformOrigin.vertical]);
  const getPositioningStyle = React208.useCallback((element) => {
    const elemRect = {
      width: element.offsetWidth,
      height: element.offsetHeight
    };
    const elemTransformOrigin = getTransformOrigin(elemRect);
    if (anchorReference === "none") {
      return {
        top: null,
        left: null,
        transformOrigin: getTransformOriginValue(elemTransformOrigin)
      };
    }
    const anchorOffset = getAnchorOffset();
    let top3 = anchorOffset.top - elemTransformOrigin.vertical;
    let left3 = anchorOffset.left - elemTransformOrigin.horizontal;
    const bottom3 = top3 + elemRect.height;
    const right3 = left3 + elemRect.width;
    const containerWindow = ownerWindow_default(resolveAnchorEl2(anchorEl));
    const heightThreshold = containerWindow.innerHeight - marginThreshold;
    const widthThreshold = containerWindow.innerWidth - marginThreshold;
    if (marginThreshold !== null && top3 < marginThreshold) {
      const diff = top3 - marginThreshold;
      top3 -= diff;
      elemTransformOrigin.vertical += diff;
    } else if (marginThreshold !== null && bottom3 > heightThreshold) {
      const diff = bottom3 - heightThreshold;
      top3 -= diff;
      elemTransformOrigin.vertical += diff;
    }
    if (true) {
      if (elemRect.height > heightThreshold && elemRect.height && heightThreshold) {
        console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${elemRect.height - heightThreshold}px).`, "Please consider adding a `max-height` to improve the user-experience."].join("\n"));
      }
    }
    if (marginThreshold !== null && left3 < marginThreshold) {
      const diff = left3 - marginThreshold;
      left3 -= diff;
      elemTransformOrigin.horizontal += diff;
    } else if (right3 > widthThreshold) {
      const diff = right3 - widthThreshold;
      left3 -= diff;
      elemTransformOrigin.horizontal += diff;
    }
    return {
      top: `${Math.round(top3)}px`,
      left: `${Math.round(left3)}px`,
      transformOrigin: getTransformOriginValue(elemTransformOrigin)
    };
  }, [anchorEl, anchorReference, getAnchorOffset, getTransformOrigin, marginThreshold]);
  const [isPositioned, setIsPositioned] = React208.useState(open);
  const setPositioningStyles = React208.useCallback(() => {
    const element = paperRef.current;
    if (!element) {
      return;
    }
    const positioning = getPositioningStyle(element);
    if (positioning.top !== null) {
      element.style.top = positioning.top;
    }
    if (positioning.left !== null) {
      element.style.left = positioning.left;
    }
    element.style.transformOrigin = positioning.transformOrigin;
    setIsPositioned(true);
  }, [getPositioningStyle]);
  React208.useEffect(() => {
    if (disableScrollLock) {
      window.addEventListener("scroll", setPositioningStyles);
    }
    return () => window.removeEventListener("scroll", setPositioningStyles);
  }, [anchorEl, disableScrollLock, setPositioningStyles]);
  const handleEntering = (element, isAppearing) => {
    if (onEntering) {
      onEntering(element, isAppearing);
    }
    setPositioningStyles();
  };
  const handleExited = () => {
    setIsPositioned(false);
  };
  React208.useEffect(() => {
    if (open) {
      setPositioningStyles();
    }
  });
  React208.useImperativeHandle(action, () => open ? {
    updatePosition: () => {
      setPositioningStyles();
    }
  } : null, [open, setPositioningStyles]);
  React208.useEffect(() => {
    if (!open) {
      return void 0;
    }
    const handleResize = debounce_default(() => {
      setPositioningStyles();
    });
    const containerWindow = ownerWindow_default(anchorEl);
    containerWindow.addEventListener("resize", handleResize);
    return () => {
      handleResize.clear();
      containerWindow.removeEventListener("resize", handleResize);
    };
  }, [anchorEl, open, setPositioningStyles]);
  let transitionDuration = transitionDurationProp;
  if (transitionDurationProp === "auto" && !TransitionComponent.muiSupportAuto) {
    transitionDuration = void 0;
  }
  const container = containerProp || (anchorEl ? ownerDocument_default(resolveAnchorEl2(anchorEl)).body : void 0);
  const RootSlot = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : PopoverRoot;
  const PaperSlot = (_slots$paper = slots == null ? void 0 : slots.paper) != null ? _slots$paper : PopoverPaper;
  const paperProps = useSlotProps({
    elementType: PaperSlot,
    externalSlotProps: _extends({}, externalPaperSlotProps, {
      style: isPositioned ? externalPaperSlotProps.style : _extends({}, externalPaperSlotProps.style, {
        opacity: 0
      })
    }),
    additionalProps: {
      elevation,
      ref: handlePaperRef
    },
    ownerState,
    className: clsx_default2(classes2.paper, externalPaperSlotProps == null ? void 0 : externalPaperSlotProps.className)
  });
  const _useSlotProps = useSlotProps({
    elementType: RootSlot,
    externalSlotProps: (slotProps == null ? void 0 : slotProps.root) || {},
    externalForwardedProps: other,
    additionalProps: {
      ref,
      slotProps: {
        backdrop: {
          invisible: true
        }
      },
      container,
      open
    },
    ownerState,
    className: clsx_default2(classes2.root, className)
  }), {
    slotProps: rootSlotPropsProp
  } = _useSlotProps, rootProps = _objectWithoutPropertiesLoose(_useSlotProps, _excluded310);
  return (0, import_jsx_runtime177.jsx)(RootSlot, _extends({}, rootProps, !isHostComponent(RootSlot) && {
    slotProps: rootSlotPropsProp,
    disableScrollLock
  }, {
    children: (0, import_jsx_runtime177.jsx)(TransitionComponent, _extends({
      appear: true,
      in: open,
      onEntering: handleEntering,
      onExited: handleExited,
      timeout: transitionDuration
    }, TransitionProps, {
      children: (0, import_jsx_runtime177.jsx)(PaperSlot, _extends({}, paperProps, {
        children: children2
      }))
    }))
  }));
});
true ? Popover.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: refType_default,
  /**
   * An HTML element, [PopoverVirtualElement](/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: chainPropTypes(import_prop_types139.default.oneOfType([HTMLElementType, import_prop_types139.default.func]), (props) => {
    if (props.open && (!props.anchorReference || props.anchorReference === "anchorEl")) {
      const resolvedAnchorEl = resolveAnchorEl2(props.anchorEl);
      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
        const box = resolvedAnchorEl.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      } else {
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${resolvedAnchorEl}\` instead.`].join("\n"));
      }
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: import_prop_types139.default.shape({
    horizontal: import_prop_types139.default.oneOfType([import_prop_types139.default.oneOf(["center", "left", "right"]), import_prop_types139.default.number]).isRequired,
    vertical: import_prop_types139.default.oneOfType([import_prop_types139.default.oneOf(["bottom", "center", "top"]), import_prop_types139.default.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: import_prop_types139.default.shape({
    left: import_prop_types139.default.number.isRequired,
    top: import_prop_types139.default.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: import_prop_types139.default.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * The content of the component.
   */
  children: import_prop_types139.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types139.default.object,
  /**
   * @ignore
   */
  className: import_prop_types139.default.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: import_prop_types139.default.oneOfType([HTMLElementType, import_prop_types139.default.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: import_prop_types139.default.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: integerPropType_default,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: import_prop_types139.default.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: import_prop_types139.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types139.default.bool.isRequired,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: import_prop_types139.default.shape({
    component: elementTypeAcceptingRef_default
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: import_prop_types139.default.shape({
    paper: import_prop_types139.default.oneOfType([import_prop_types139.default.func, import_prop_types139.default.object]),
    root: import_prop_types139.default.oneOfType([import_prop_types139.default.func, import_prop_types139.default.object])
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: import_prop_types139.default.shape({
    paper: import_prop_types139.default.elementType,
    root: import_prop_types139.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types139.default.oneOfType([import_prop_types139.default.arrayOf(import_prop_types139.default.oneOfType([import_prop_types139.default.func, import_prop_types139.default.object, import_prop_types139.default.bool])), import_prop_types139.default.func, import_prop_types139.default.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: import_prop_types139.default.shape({
    horizontal: import_prop_types139.default.oneOfType([import_prop_types139.default.oneOf(["center", "left", "right"]), import_prop_types139.default.number]).isRequired,
    vertical: import_prop_types139.default.oneOfType([import_prop_types139.default.oneOf(["bottom", "center", "top"]), import_prop_types139.default.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: import_prop_types139.default.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: import_prop_types139.default.oneOfType([import_prop_types139.default.oneOf(["auto"]), import_prop_types139.default.number, import_prop_types139.default.shape({
    appear: import_prop_types139.default.number,
    enter: import_prop_types139.default.number,
    exit: import_prop_types139.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: import_prop_types139.default.object
} : void 0;
var Popover_default = Popover;

// node_modules/@mui/material/Menu/Menu.js
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Menu/menuClasses.js
init_esm();
init_generateUtilityClass3();
function getMenuUtilityClass2(slot) {
  return generateUtilityClass("MuiMenu", slot);
}
var menuClasses2 = generateUtilityClasses("MuiMenu", ["root", "paper", "list"]);

// node_modules/@mui/material/Menu/Menu.js
var import_jsx_runtime178 = __toESM(require_jsx_runtime());
var _excluded123 = ["onEntering"];
var _excluded215 = ["autoFocus", "children", "className", "disableAutoFocusItem", "MenuListProps", "onClose", "open", "PaperProps", "PopoverClasses", "transitionDuration", "TransitionProps", "variant", "slots", "slotProps"];
var RTL_ORIGIN = {
  vertical: "top",
  horizontal: "right"
};
var LTR_ORIGIN = {
  vertical: "top",
  horizontal: "left"
};
var useUtilityClasses93 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  };
  return composeClasses(slots, getMenuUtilityClass2, classes2);
};
var MenuRoot = styled_default2(Popover_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({});
var MenuPaper = styled_default2(PopoverPaper, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (props, styles7) => styles7.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
});
var MenuMenuList = styled_default2(MenuList_default, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (props, styles7) => styles7.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
});
var Menu3 = React209.forwardRef(function Menu4(inProps, ref) {
  var _slots$paper, _slotProps$paper;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiMenu"
  });
  const {
    autoFocus = true,
    children: children2,
    className,
    disableAutoFocusItem = false,
    MenuListProps = {},
    onClose,
    open,
    PaperProps = {},
    PopoverClasses,
    transitionDuration = "auto",
    TransitionProps: {
      onEntering
    } = {},
    variant = "selectedMenu",
    slots = {},
    slotProps = {}
  } = props, TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded123), other = _objectWithoutPropertiesLoose(props, _excluded215);
  const theme = useTheme5();
  const isRtl = theme.direction === "rtl";
  const ownerState = _extends({}, props, {
    autoFocus,
    disableAutoFocusItem,
    MenuListProps,
    onEntering,
    PaperProps,
    transitionDuration,
    TransitionProps,
    variant
  });
  const classes2 = useUtilityClasses93(ownerState);
  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;
  const menuListActionsRef = React209.useRef(null);
  const handleEntering = (element, isAppearing) => {
    if (menuListActionsRef.current) {
      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);
    }
    if (onEntering) {
      onEntering(element, isAppearing);
    }
  };
  const handleListKeyDown = (event) => {
    if (event.key === "Tab") {
      event.preventDefault();
      if (onClose) {
        onClose(event, "tabKeyDown");
      }
    }
  };
  let activeItemIndex = -1;
  React209.Children.map(children2, (child, index2) => {
    if (!React209.isValidElement(child)) {
      return;
    }
    if (true) {
      if ((0, import_react_is8.isFragment)(child)) {
        console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    if (!child.props.disabled) {
      if (variant === "selectedMenu" && child.props.selected) {
        activeItemIndex = index2;
      } else if (activeItemIndex === -1) {
        activeItemIndex = index2;
      }
    }
  });
  const PaperSlot = (_slots$paper = slots.paper) != null ? _slots$paper : MenuPaper;
  const paperExternalSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : PaperProps;
  const rootSlotProps = useSlotProps({
    elementType: slots.root,
    externalSlotProps: slotProps.root,
    ownerState,
    className: [classes2.root, className]
  });
  const paperSlotProps = useSlotProps({
    elementType: PaperSlot,
    externalSlotProps: paperExternalSlotProps,
    ownerState,
    className: classes2.paper
  });
  return (0, import_jsx_runtime178.jsx)(MenuRoot, _extends({
    onClose,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: isRtl ? "right" : "left"
    },
    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,
    slots: {
      paper: PaperSlot,
      root: slots.root
    },
    slotProps: {
      root: rootSlotProps,
      paper: paperSlotProps
    },
    open,
    ref,
    transitionDuration,
    TransitionProps: _extends({
      onEntering: handleEntering
    }, TransitionProps),
    ownerState
  }, other, {
    classes: PopoverClasses,
    children: (0, import_jsx_runtime178.jsx)(MenuMenuList, _extends({
      onKeyDown: handleListKeyDown,
      actions: menuListActionsRef,
      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),
      autoFocusItem,
      variant
    }, MenuListProps, {
      className: clsx_default2(classes2.list, MenuListProps.className),
      children: children2
    }))
  }));
});
true ? Menu3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: import_prop_types140.default.oneOfType([HTMLElementType, import_prop_types140.default.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: import_prop_types140.default.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: import_prop_types140.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types140.default.object,
  /**
   * @ignore
   */
  className: import_prop_types140.default.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: import_prop_types140.default.bool,
  /**
   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.
   * @default {}
   */
  MenuListProps: import_prop_types140.default.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: import_prop_types140.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types140.default.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: import_prop_types140.default.object,
  /**
   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.
   */
  PopoverClasses: import_prop_types140.default.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: import_prop_types140.default.shape({
    paper: import_prop_types140.default.oneOfType([import_prop_types140.default.func, import_prop_types140.default.object]),
    root: import_prop_types140.default.oneOfType([import_prop_types140.default.func, import_prop_types140.default.object])
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: import_prop_types140.default.shape({
    paper: import_prop_types140.default.elementType,
    root: import_prop_types140.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types140.default.oneOfType([import_prop_types140.default.arrayOf(import_prop_types140.default.oneOfType([import_prop_types140.default.func, import_prop_types140.default.object, import_prop_types140.default.bool])), import_prop_types140.default.func, import_prop_types140.default.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: import_prop_types140.default.oneOfType([import_prop_types140.default.oneOf(["auto"]), import_prop_types140.default.number, import_prop_types140.default.shape({
    appear: import_prop_types140.default.number,
    enter: import_prop_types140.default.number,
    exit: import_prop_types140.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: import_prop_types140.default.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: import_prop_types140.default.oneOf(["menu", "selectedMenu"])
} : void 0;
var Menu_default = Menu3;

// node_modules/@mui/material/MenuItem/MenuItem.js
init_objectWithoutPropertiesLoose();
init_extends();
var React210 = __toESM(require_react());
var import_prop_types141 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_styled2();
init_useThemeProps3();
init_useEnhancedEffect3();
init_useForkRef3();

// node_modules/@mui/material/MenuItem/menuItemClasses.js
init_esm();
init_generateUtilityClass3();
function getMenuItemUtilityClass2(slot) {
  return generateUtilityClass("MuiMenuItem", slot);
}
var menuItemClasses2 = generateUtilityClasses("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]);
var menuItemClasses_default = menuItemClasses2;

// node_modules/@mui/material/MenuItem/MenuItem.js
var import_jsx_runtime179 = __toESM(require_jsx_runtime());
var _excluded124 = ["autoFocus", "component", "dense", "divider", "disableGutters", "focusVisibleClassName", "role", "tabIndex", "className"];
var overridesResolver6 = (props, styles7) => {
  const {
    ownerState
  } = props;
  return [styles7.root, ownerState.dense && styles7.dense, ownerState.divider && styles7.divider, !ownerState.disableGutters && styles7.gutters];
};
var useUtilityClasses94 = (ownerState) => {
  const {
    disabled,
    dense,
    divider,
    disableGutters,
    selected,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", dense && "dense", disabled && "disabled", !disableGutters && "gutters", divider && "divider", selected && "selected"]
  };
  const composedClasses = composeClasses(slots, getMenuItemUtilityClass2, classes2);
  return _extends({}, classes2, composedClasses);
};
var MenuItemRoot = styled_default2(ButtonBase_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: overridesResolver6
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.body1, {
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap"
}, !ownerState.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, ownerState.divider && {
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,
  backgroundClip: "padding-box"
}, {
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (theme.vars || theme).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${menuItemClasses_default.selected}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
    [`&.${menuItemClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    }
  },
  [`&.${menuItemClasses_default.selected}:hover`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)
    }
  },
  [`&.${menuItemClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`&.${menuItemClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  },
  [`& + .${dividerClasses_default.root}`]: {
    marginTop: theme.spacing(1),
    marginBottom: theme.spacing(1)
  },
  [`& + .${dividerClasses_default.inset}`]: {
    marginLeft: 52
  },
  [`& .${listItemTextClasses_default.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${listItemTextClasses_default.inset}`]: {
    paddingLeft: 36
  },
  [`& .${listItemIconClasses_default.root}`]: {
    minWidth: 36
  }
}, !ownerState.dense && {
  [theme.breakpoints.up("sm")]: {
    minHeight: "auto"
  }
}, ownerState.dense && _extends({
  minHeight: 32,
  // https://m2.material.io/components/menus#specs > Dense
  paddingTop: 4,
  paddingBottom: 4
}, theme.typography.body2, {
  [`& .${listItemIconClasses_default.root} svg`]: {
    fontSize: "1.25rem"
  }
})));
var MenuItem3 = React210.forwardRef(function MenuItem4(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiMenuItem"
  });
  const {
    autoFocus = false,
    component = "li",
    dense = false,
    divider = false,
    disableGutters = false,
    focusVisibleClassName,
    role = "menuitem",
    tabIndex: tabIndexProp,
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded124);
  const context = React210.useContext(ListContext_default);
  const childContext = React210.useMemo(() => ({
    dense: dense || context.dense || false,
    disableGutters
  }), [context.dense, dense, disableGutters]);
  const menuItemRef = React210.useRef(null);
  useEnhancedEffect_default2(() => {
    if (autoFocus) {
      if (menuItemRef.current) {
        menuItemRef.current.focus();
      } else if (true) {
        console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered.");
      }
    }
  }, [autoFocus]);
  const ownerState = _extends({}, props, {
    dense: childContext.dense,
    divider,
    disableGutters
  });
  const classes2 = useUtilityClasses94(props);
  const handleRef = useForkRef_default(menuItemRef, ref);
  let tabIndex;
  if (!props.disabled) {
    tabIndex = tabIndexProp !== void 0 ? tabIndexProp : -1;
  }
  return (0, import_jsx_runtime179.jsx)(ListContext_default.Provider, {
    value: childContext,
    children: (0, import_jsx_runtime179.jsx)(MenuItemRoot, _extends({
      ref: handleRef,
      role,
      tabIndex,
      component,
      focusVisibleClassName: clsx_default2(classes2.focusVisible, focusVisibleClassName),
      className: clsx_default2(classes2.root, className)
    }, other, {
      ownerState,
      classes: classes2
    }))
  });
});
true ? MenuItem3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: import_prop_types141.default.bool,
  /**
   * The content of the component.
   */
  children: import_prop_types141.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types141.default.object,
  /**
   * @ignore
   */
  className: import_prop_types141.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types141.default.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: import_prop_types141.default.bool,
  /**
   * @ignore
   */
  disabled: import_prop_types141.default.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: import_prop_types141.default.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: import_prop_types141.default.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: import_prop_types141.default.string,
  /**
   * @ignore
   */
  role: import_prop_types141.default.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: import_prop_types141.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types141.default.oneOfType([import_prop_types141.default.arrayOf(import_prop_types141.default.oneOfType([import_prop_types141.default.func, import_prop_types141.default.object, import_prop_types141.default.bool])), import_prop_types141.default.func, import_prop_types141.default.object]),
  /**
   * @default 0
   */
  tabIndex: import_prop_types141.default.number
} : void 0;
var MenuItem_default = MenuItem3;

// node_modules/@mui/material/MobileStepper/MobileStepper.js
init_objectWithoutPropertiesLoose();
init_extends();
var React211 = __toESM(require_react());
var import_prop_types142 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_capitalize3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/MobileStepper/mobileStepperClasses.js
init_esm();
init_generateUtilityClass3();
function getMobileStepperUtilityClass(slot) {
  return generateUtilityClass("MuiMobileStepper", slot);
}
var mobileStepperClasses = generateUtilityClasses("MuiMobileStepper", ["root", "positionBottom", "positionTop", "positionStatic", "dots", "dot", "dotActive", "progress"]);

// node_modules/@mui/material/MobileStepper/MobileStepper.js
var import_jsx_runtime180 = __toESM(require_jsx_runtime());
var import_jsx_runtime181 = __toESM(require_jsx_runtime());
var _excluded125 = ["activeStep", "backButton", "className", "LinearProgressProps", "nextButton", "position", "steps", "variant"];
var useUtilityClasses95 = (ownerState) => {
  const {
    classes: classes2,
    position: position3
  } = ownerState;
  const slots = {
    root: ["root", `position${capitalize_default(position3)}`],
    dots: ["dots"],
    dot: ["dot"],
    dotActive: ["dotActive"],
    progress: ["progress"]
  };
  return composeClasses(slots, getMobileStepperUtilityClass, classes2);
};
var MobileStepperRoot = styled_default2(Paper_default, {
  name: "MuiMobileStepper",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`position${capitalize_default(ownerState.position)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  flexDirection: "row",
  justifyContent: "space-between",
  alignItems: "center",
  background: (theme.vars || theme).palette.background.default,
  padding: 8
}, ownerState.position === "bottom" && {
  position: "fixed",
  bottom: 0,
  left: 0,
  right: 0,
  zIndex: (theme.vars || theme).zIndex.mobileStepper
}, ownerState.position === "top" && {
  position: "fixed",
  top: 0,
  left: 0,
  right: 0,
  zIndex: (theme.vars || theme).zIndex.mobileStepper
}));
var MobileStepperDots = styled_default2("div", {
  name: "MuiMobileStepper",
  slot: "Dots",
  overridesResolver: (props, styles7) => styles7.dots
})(({
  ownerState
}) => _extends({}, ownerState.variant === "dots" && {
  display: "flex",
  flexDirection: "row"
}));
var MobileStepperDot = styled_default2("div", {
  name: "MuiMobileStepper",
  slot: "Dot",
  shouldForwardProp: (prop) => slotShouldForwardProp(prop) && prop !== "dotActive",
  overridesResolver: (props, styles7) => {
    const {
      dotActive
    } = props;
    return [styles7.dot, dotActive && styles7.dotActive];
  }
})(({
  theme,
  ownerState,
  dotActive
}) => _extends({}, ownerState.variant === "dots" && _extends({
  transition: theme.transitions.create("background-color", {
    duration: theme.transitions.duration.shortest
  }),
  backgroundColor: (theme.vars || theme).palette.action.disabled,
  borderRadius: "50%",
  width: 8,
  height: 8,
  margin: "0 2px"
}, dotActive && {
  backgroundColor: (theme.vars || theme).palette.primary.main
})));
var MobileStepperProgress = styled_default2(LinearProgress_default, {
  name: "MuiMobileStepper",
  slot: "Progress",
  overridesResolver: (props, styles7) => styles7.progress
})(({
  ownerState
}) => _extends({}, ownerState.variant === "progress" && {
  width: "50%"
}));
var MobileStepper = React211.forwardRef(function MobileStepper2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiMobileStepper"
  });
  const {
    activeStep = 0,
    backButton,
    className,
    LinearProgressProps,
    nextButton,
    position: position3 = "bottom",
    steps,
    variant = "dots"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded125);
  const ownerState = _extends({}, props, {
    activeStep,
    position: position3,
    variant
  });
  let value;
  if (variant === "progress") {
    if (steps === 1) {
      value = 100;
    } else {
      value = Math.ceil(activeStep / (steps - 1) * 100);
    }
  }
  const classes2 = useUtilityClasses95(ownerState);
  return (0, import_jsx_runtime180.jsxs)(MobileStepperRoot, _extends({
    square: true,
    elevation: 0,
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: [backButton, variant === "text" && (0, import_jsx_runtime180.jsxs)(React211.Fragment, {
      children: [activeStep + 1, " / ", steps]
    }), variant === "dots" && (0, import_jsx_runtime181.jsx)(MobileStepperDots, {
      ownerState,
      className: classes2.dots,
      children: [...new Array(steps)].map((_5, index2) => (0, import_jsx_runtime181.jsx)(MobileStepperDot, {
        className: clsx_default2(classes2.dot, index2 === activeStep && classes2.dotActive),
        ownerState,
        dotActive: index2 === activeStep
      }, index2))
    }), variant === "progress" && (0, import_jsx_runtime181.jsx)(MobileStepperProgress, _extends({
      ownerState,
      className: classes2.progress,
      variant: "determinate",
      value
    }, LinearProgressProps)), nextButton]
  }));
});
true ? MobileStepper.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Set the active step (zero based index).
   * Defines which dot is highlighted when the variant is 'dots'.
   * @default 0
   */
  activeStep: integerPropType_default,
  /**
   * A back button element. For instance, it can be a `Button` or an `IconButton`.
   */
  backButton: import_prop_types142.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types142.default.object,
  /**
   * @ignore
   */
  className: import_prop_types142.default.string,
  /**
   * Props applied to the `LinearProgress` element.
   */
  LinearProgressProps: import_prop_types142.default.object,
  /**
   * A next button element. For instance, it can be a `Button` or an `IconButton`.
   */
  nextButton: import_prop_types142.default.node,
  /**
   * Set the positioning type.
   * @default 'bottom'
   */
  position: import_prop_types142.default.oneOf(["bottom", "static", "top"]),
  /**
   * The total steps.
   */
  steps: integerPropType_default.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types142.default.oneOfType([import_prop_types142.default.arrayOf(import_prop_types142.default.oneOfType([import_prop_types142.default.func, import_prop_types142.default.object, import_prop_types142.default.bool])), import_prop_types142.default.func, import_prop_types142.default.object]),
  /**
   * The variant to use.
   * @default 'dots'
   */
  variant: import_prop_types142.default.oneOf(["dots", "progress", "text"])
} : void 0;

// node_modules/@mui/material/NativeSelect/NativeSelect.js
init_extends();
init_objectWithoutPropertiesLoose();
var React213 = __toESM(require_react());
init_clsx2();
var import_prop_types144 = __toESM(require_prop_types());
init_composeClasses3();

// node_modules/@mui/material/NativeSelect/NativeSelectInput.js
init_objectWithoutPropertiesLoose();
init_extends();
var React212 = __toESM(require_react());
var import_prop_types143 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_capitalize3();

// node_modules/@mui/material/NativeSelect/nativeSelectClasses.js
init_esm();
init_generateUtilityClass3();
function getNativeSelectUtilityClasses(slot) {
  return generateUtilityClass("MuiNativeSelect", slot);
}
var nativeSelectClasses = generateUtilityClasses("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var nativeSelectClasses_default = nativeSelectClasses;

// node_modules/@mui/material/NativeSelect/NativeSelectInput.js
init_styled2();
var import_jsx_runtime182 = __toESM(require_jsx_runtime());
var import_jsx_runtime183 = __toESM(require_jsx_runtime());
var _excluded126 = ["className", "disabled", "error", "IconComponent", "inputRef", "variant"];
var useUtilityClasses96 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    disabled,
    multiple,
    open,
    error
  } = ownerState;
  const slots = {
    select: ["select", variant, disabled && "disabled", multiple && "multiple", error && "error"],
    icon: ["icon", `icon${capitalize_default(variant)}`, open && "iconOpen", disabled && "disabled"]
  };
  return composeClasses(slots, getNativeSelectUtilityClasses, classes2);
};
var nativeSelectSelectStyles = ({
  ownerState,
  theme
}) => _extends({
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  borderRadius: 0,
  // Reset
  cursor: "pointer",
  "&:focus": _extends({}, theme.vars ? {
    backgroundColor: `rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.05)`
  } : {
    backgroundColor: theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.05)" : "rgba(255, 255, 255, 0.05)"
  }, {
    borderRadius: 0
    // Reset Chrome style
  }),
  // Remove IE11 arrow
  "&::-ms-expand": {
    display: "none"
  },
  [`&.${nativeSelectClasses_default.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (theme.vars || theme).palette.background.paper
  },
  // Bump specificity to allow extending custom inputs
  "&&&": {
    paddingRight: 24,
    minWidth: 16
    // So it doesn't collapse.
  }
}, ownerState.variant === "filled" && {
  "&&&": {
    paddingRight: 32
  }
}, ownerState.variant === "outlined" && {
  borderRadius: (theme.vars || theme).shape.borderRadius,
  "&:focus": {
    borderRadius: (theme.vars || theme).shape.borderRadius
    // Reset the reset for Chrome style
  },
  "&&&": {
    paddingRight: 32
  }
});
var NativeSelectSelect = styled_default2("select", {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: rootShouldForwardProp,
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.select, styles7[ownerState.variant], ownerState.error && styles7.error, {
      [`&.${nativeSelectClasses_default.multiple}`]: styles7.multiple
    }];
  }
})(nativeSelectSelectStyles);
var nativeSelectIconStyles = ({
  ownerState,
  theme
}) => _extends({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  top: "calc(50% - .5em)",
  // Center vertically, height is 1em
  pointerEvents: "none",
  // Don't block pointer events on the select under the icon.
  color: (theme.vars || theme).palette.action.active,
  [`&.${nativeSelectClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.action.disabled
  }
}, ownerState.open && {
  transform: "rotate(180deg)"
}, ownerState.variant === "filled" && {
  right: 7
}, ownerState.variant === "outlined" && {
  right: 7
});
var NativeSelectIcon = styled_default2("svg", {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.icon, ownerState.variant && styles7[`icon${capitalize_default(ownerState.variant)}`], ownerState.open && styles7.iconOpen];
  }
})(nativeSelectIconStyles);
var NativeSelectInput = React212.forwardRef(function NativeSelectInput2(props, ref) {
  const {
    className,
    disabled,
    error,
    IconComponent,
    inputRef,
    variant = "standard"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded126);
  const ownerState = _extends({}, props, {
    disabled,
    variant,
    error
  });
  const classes2 = useUtilityClasses96(ownerState);
  return (0, import_jsx_runtime183.jsxs)(React212.Fragment, {
    children: [(0, import_jsx_runtime182.jsx)(NativeSelectSelect, _extends({
      ownerState,
      className: clsx_default2(classes2.select, className),
      disabled,
      ref: inputRef || ref
    }, other)), props.multiple ? null : (0, import_jsx_runtime182.jsx)(NativeSelectIcon, {
      as: IconComponent,
      ownerState,
      className: classes2.icon
    })]
  });
});
true ? NativeSelectInput.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: import_prop_types143.default.node,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types143.default.object,
  /**
   * The CSS class name of the select element.
   */
  className: import_prop_types143.default.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: import_prop_types143.default.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: import_prop_types143.default.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: import_prop_types143.default.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: refType_default,
  /**
   * @ignore
   */
  multiple: import_prop_types143.default.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: import_prop_types143.default.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types143.default.func,
  /**
   * The input value.
   */
  value: import_prop_types143.default.any,
  /**
   * The variant to use.
   */
  variant: import_prop_types143.default.oneOf(["standard", "outlined", "filled"])
} : void 0;
var NativeSelectInput_default = NativeSelectInput;

// node_modules/@mui/material/NativeSelect/NativeSelect.js
init_useThemeProps3();
var import_jsx_runtime184 = __toESM(require_jsx_runtime());
var _excluded127 = ["className", "children", "classes", "IconComponent", "input", "inputProps", "variant"];
var _excluded216 = ["root"];
var useUtilityClasses97 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getNativeSelectUtilityClasses, classes2);
};
var defaultInput = (0, import_jsx_runtime184.jsx)(Input_default, {});
var NativeSelect = React213.forwardRef(function NativeSelect2(inProps, ref) {
  const props = useThemeProps2({
    name: "MuiNativeSelect",
    props: inProps
  });
  const {
    className,
    children: children2,
    classes: classesProp = {},
    IconComponent = ArrowDropDown_default,
    input = defaultInput,
    inputProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded127);
  const muiFormControl = useFormControl();
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["variant"]
  });
  const ownerState = _extends({}, props, {
    classes: classesProp
  });
  const classes2 = useUtilityClasses97(ownerState);
  const otherClasses = _objectWithoutPropertiesLoose(classesProp, _excluded216);
  return (0, import_jsx_runtime184.jsx)(React213.Fragment, {
    children: React213.cloneElement(input, _extends({
      // Most of the logic is implemented in `NativeSelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: NativeSelectInput_default,
      inputProps: _extends({
        children: children2,
        classes: otherClasses,
        IconComponent,
        variant: fcs.variant,
        type: void 0
      }, inputProps, input ? input.props.inputProps : {}),
      ref
    }, other, {
      className: clsx_default2(classes2.root, input.props.className, className)
    }))
  });
});
true ? NativeSelect.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: import_prop_types144.default.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: import_prop_types144.default.object,
  /**
   * @ignore
   */
  className: import_prop_types144.default.string,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: import_prop_types144.default.elementType,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   * @default <Input />
   */
  input: import_prop_types144.default.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.
   */
  inputProps: import_prop_types144.default.object,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types144.default.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types144.default.oneOfType([import_prop_types144.default.arrayOf(import_prop_types144.default.oneOfType([import_prop_types144.default.func, import_prop_types144.default.object, import_prop_types144.default.bool])), import_prop_types144.default.func, import_prop_types144.default.object]),
  /**
   * The `input` value. The DOM API casts this to a string.
   */
  value: import_prop_types144.default.any,
  /**
   * The variant to use.
   */
  variant: import_prop_types144.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
NativeSelect.muiName = "Select";

// node_modules/@mui/material/OutlinedInput/OutlinedInput.js
init_objectWithoutPropertiesLoose();
init_extends();
var React215 = __toESM(require_react());
var import_prop_types146 = __toESM(require_prop_types());
init_esm();
init_composeClasses3();

// node_modules/@mui/material/OutlinedInput/NotchedOutline.js
init_objectWithoutPropertiesLoose();
init_extends();
var React214 = __toESM(require_react());
var import_prop_types145 = __toESM(require_prop_types());
init_styled2();
var import_jsx_runtime185 = __toESM(require_jsx_runtime());
var _span7;
var _excluded128 = ["children", "classes", "className", "label", "notched"];
var NotchedOutlineRoot = styled_default2("fieldset")({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
});
var NotchedOutlineLegend = styled_default2("legend")(({
  ownerState,
  theme
}) => _extends({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden"
}, !ownerState.withLabel && {
  padding: 0,
  lineHeight: "11px",
  // sync with `height` in `legend` styles
  transition: theme.transitions.create("width", {
    duration: 150,
    easing: theme.transitions.easing.easeOut
  })
}, ownerState.withLabel && _extends({
  display: "block",
  // Fix conflict with normalize.css and sanitize.css
  padding: 0,
  height: 11,
  // sync with `lineHeight` in `legend` styles
  fontSize: "0.75em",
  visibility: "hidden",
  maxWidth: 0.01,
  transition: theme.transitions.create("max-width", {
    duration: 50,
    easing: theme.transitions.easing.easeOut
  }),
  whiteSpace: "nowrap",
  "& > span": {
    paddingLeft: 5,
    paddingRight: 5,
    display: "inline-block",
    opacity: 0,
    visibility: "visible"
  }
}, ownerState.notched && {
  maxWidth: "100%",
  transition: theme.transitions.create("max-width", {
    duration: 100,
    easing: theme.transitions.easing.easeOut,
    delay: 50
  })
})));
function NotchedOutline(props) {
  const {
    className,
    label,
    notched
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded128);
  const withLabel = label != null && label !== "";
  const ownerState = _extends({}, props, {
    notched,
    withLabel
  });
  return (0, import_jsx_runtime185.jsx)(NotchedOutlineRoot, _extends({
    "aria-hidden": true,
    className,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime185.jsx)(NotchedOutlineLegend, {
      ownerState,
      children: withLabel ? (0, import_jsx_runtime185.jsx)("span", {
        children: label
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        _span7 || (_span7 = (0, import_jsx_runtime185.jsx)("span", {
          className: "notranslate",
          children: "​"
        }))
      )
    })
  }));
}
true ? NotchedOutline.propTypes = {
  /**
   * The content of the component.
   */
  children: import_prop_types145.default.node,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types145.default.object,
  /**
   * @ignore
   */
  className: import_prop_types145.default.string,
  /**
   * The label.
   */
  label: import_prop_types145.default.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: import_prop_types145.default.bool.isRequired,
  /**
   * @ignore
   */
  style: import_prop_types145.default.object
} : void 0;

// node_modules/@mui/material/OutlinedInput/OutlinedInput.js
init_styled2();
init_useThemeProps3();
var import_jsx_runtime186 = __toESM(require_jsx_runtime());
var import_jsx_runtime187 = __toESM(require_jsx_runtime());
var _excluded129 = ["components", "fullWidth", "inputComponent", "label", "multiline", "notched", "slots", "type"];
var useUtilityClasses98 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  };
  const composedClasses = composeClasses(slots, getOutlinedInputUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var OutlinedInputRoot = styled_default2(InputBaseRoot, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: rootOverridesResolver
})(({
  theme,
  ownerState
}) => {
  const borderColor2 = theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return _extends({
    position: "relative",
    borderRadius: (theme.vars || theme).shape.borderRadius,
    [`&:hover .${outlinedInputClasses_default.notchedOutline}`]: {
      borderColor: (theme.vars || theme).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${outlinedInputClasses_default.notchedOutline}`]: {
        borderColor: theme.vars ? `rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : borderColor2
      }
    },
    [`&.${outlinedInputClasses_default.focused} .${outlinedInputClasses_default.notchedOutline}`]: {
      borderColor: (theme.vars || theme).palette[ownerState.color].main,
      borderWidth: 2
    },
    [`&.${outlinedInputClasses_default.error} .${outlinedInputClasses_default.notchedOutline}`]: {
      borderColor: (theme.vars || theme).palette.error.main
    },
    [`&.${outlinedInputClasses_default.disabled} .${outlinedInputClasses_default.notchedOutline}`]: {
      borderColor: (theme.vars || theme).palette.action.disabled
    }
  }, ownerState.startAdornment && {
    paddingLeft: 14
  }, ownerState.endAdornment && {
    paddingRight: 14
  }, ownerState.multiline && _extends({
    padding: "16.5px 14px"
  }, ownerState.size === "small" && {
    padding: "8.5px 14px"
  }));
});
var NotchedOutlineRoot2 = styled_default2(NotchedOutline, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (props, styles7) => styles7.notchedOutline
})(({
  theme
}) => {
  const borderColor2 = theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: theme.vars ? `rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : borderColor2
  };
});
var OutlinedInputInput = styled_default2(InputBaseComponent, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: inputOverridesResolver
})(({
  theme,
  ownerState
}) => _extends({
  padding: "16.5px 14px"
}, !theme.vars && {
  "&:-webkit-autofill": {
    WebkitBoxShadow: theme.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
    WebkitTextFillColor: theme.palette.mode === "light" ? null : "#fff",
    caretColor: theme.palette.mode === "light" ? null : "#fff",
    borderRadius: "inherit"
  }
}, theme.vars && {
  "&:-webkit-autofill": {
    borderRadius: "inherit"
  },
  [theme.getColorSchemeSelector("dark")]: {
    "&:-webkit-autofill": {
      WebkitBoxShadow: "0 0 0 100px #266798 inset",
      WebkitTextFillColor: "#fff",
      caretColor: "#fff"
    }
  }
}, ownerState.size === "small" && {
  padding: "8.5px 14px"
}, ownerState.multiline && {
  padding: 0
}, ownerState.startAdornment && {
  paddingLeft: 0
}, ownerState.endAdornment && {
  paddingRight: 0
}));
var OutlinedInput = React215.forwardRef(function OutlinedInput2(inProps, ref) {
  var _ref2, _slots$root, _ref22, _slots$input, _React$Fragment;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiOutlinedInput"
  });
  const {
    components = {},
    fullWidth = false,
    inputComponent = "input",
    label,
    multiline = false,
    notched,
    slots = {},
    type = "text"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded129);
  const classes2 = useUtilityClasses98(props);
  const muiFormControl = useFormControl();
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  });
  const ownerState = _extends({}, props, {
    color: fcs.color || "primary",
    disabled: fcs.disabled,
    error: fcs.error,
    focused: fcs.focused,
    formControl: muiFormControl,
    fullWidth,
    hiddenLabel: fcs.hiddenLabel,
    multiline,
    size: fcs.size,
    type
  });
  const RootSlot = (_ref2 = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref2 : OutlinedInputRoot;
  const InputSlot = (_ref22 = (_slots$input = slots.input) != null ? _slots$input : components.Input) != null ? _ref22 : OutlinedInputInput;
  return (0, import_jsx_runtime187.jsx)(InputBase_default, _extends({
    slots: {
      root: RootSlot,
      input: InputSlot
    },
    renderSuffix: (state) => (0, import_jsx_runtime187.jsx)(NotchedOutlineRoot2, {
      ownerState,
      className: classes2.notchedOutline,
      label: label != null && label !== "" && fcs.required ? _React$Fragment || (_React$Fragment = (0, import_jsx_runtime186.jsxs)(React215.Fragment, {
        children: [label, " ", "*"]
      })) : label,
      notched: typeof notched !== "undefined" ? notched : Boolean(state.startAdornment || state.filled || state.focused)
    }),
    fullWidth,
    inputComponent,
    multiline,
    ref,
    type
  }, other, {
    classes: _extends({}, classes2, {
      notchedOutline: null
    })
  }));
});
true ? OutlinedInput.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: import_prop_types146.default.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: import_prop_types146.default.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types146.default.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: import_prop_types146.default.oneOfType([import_prop_types146.default.oneOf(["primary", "secondary"]), import_prop_types146.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types146.default.shape({
    Input: import_prop_types146.default.elementType,
    Root: import_prop_types146.default.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types146.default.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: import_prop_types146.default.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: import_prop_types146.default.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: import_prop_types146.default.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types146.default.bool,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types146.default.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: import_prop_types146.default.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: import_prop_types146.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: import_prop_types146.default.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: import_prop_types146.default.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: import_prop_types146.default.oneOfType([import_prop_types146.default.number, import_prop_types146.default.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: import_prop_types146.default.oneOfType([import_prop_types146.default.number, import_prop_types146.default.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: import_prop_types146.default.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: import_prop_types146.default.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: import_prop_types146.default.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types146.default.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: import_prop_types146.default.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: import_prop_types146.default.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: import_prop_types146.default.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: import_prop_types146.default.oneOfType([import_prop_types146.default.number, import_prop_types146.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types146.default.shape({
    input: import_prop_types146.default.elementType,
    root: import_prop_types146.default.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: import_prop_types146.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types146.default.oneOfType([import_prop_types146.default.arrayOf(import_prop_types146.default.oneOfType([import_prop_types146.default.func, import_prop_types146.default.object, import_prop_types146.default.bool])), import_prop_types146.default.func, import_prop_types146.default.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: import_prop_types146.default.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: import_prop_types146.default.any
} : void 0;
OutlinedInput.muiName = "Input";
var OutlinedInput_default = OutlinedInput;

// node_modules/@mui/material/Pagination/Pagination.js
init_extends();
init_objectWithoutPropertiesLoose();
var React221 = __toESM(require_react());
var import_prop_types148 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm();
init_useThemeProps3();

// node_modules/@mui/material/Pagination/paginationClasses.js
init_esm();
init_generateUtilityClass3();
function getPaginationUtilityClass(slot) {
  return generateUtilityClass("MuiPagination", slot);
}
var paginationClasses = generateUtilityClasses("MuiPagination", ["root", "ul", "outlined", "text"]);

// node_modules/@mui/material/usePagination/usePagination.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();
var _excluded130 = ["boundaryCount", "componentName", "count", "defaultPage", "disabled", "hideNextButton", "hidePrevButton", "onChange", "page", "showFirstButton", "showLastButton", "siblingCount"];
function usePagination(props = {}) {
  const {
    boundaryCount = 1,
    componentName = "usePagination",
    count = 1,
    defaultPage = 1,
    disabled = false,
    hideNextButton = false,
    hidePrevButton = false,
    onChange: handleChange,
    page: pageProp,
    showFirstButton = false,
    showLastButton = false,
    siblingCount = 1
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded130);
  const [page, setPageState] = useControlled({
    controlled: pageProp,
    default: defaultPage,
    name: componentName,
    state: "page"
  });
  const handleClick2 = (event, value) => {
    if (!pageProp) {
      setPageState(value);
    }
    if (handleChange) {
      handleChange(event, value);
    }
  };
  const range = (start2, end2) => {
    const length2 = end2 - start2 + 1;
    return Array.from({
      length: length2
    }, (_5, i) => start2 + i);
  };
  const startPages = range(1, Math.min(boundaryCount, count));
  const endPages = range(Math.max(count - boundaryCount + 1, boundaryCount + 1), count);
  const siblingsStart = Math.max(
    Math.min(
      // Natural start
      page - siblingCount,
      // Lower boundary when page is high
      count - boundaryCount - siblingCount * 2 - 1
    ),
    // Greater than startPages
    boundaryCount + 2
  );
  const siblingsEnd = Math.min(
    Math.max(
      // Natural end
      page + siblingCount,
      // Upper boundary when page is low
      boundaryCount + siblingCount * 2 + 2
    ),
    // Less than endPages
    endPages.length > 0 ? endPages[0] - 2 : count - 1
  );
  const itemList = [
    ...showFirstButton ? ["first"] : [],
    ...hidePrevButton ? [] : ["previous"],
    ...startPages,
    // Start ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...siblingsStart > boundaryCount + 2 ? ["start-ellipsis"] : boundaryCount + 1 < count - boundaryCount ? [boundaryCount + 1] : [],
    // Sibling pages
    ...range(siblingsStart, siblingsEnd),
    // End ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...siblingsEnd < count - boundaryCount - 1 ? ["end-ellipsis"] : count - boundaryCount > boundaryCount ? [count - boundaryCount] : [],
    ...endPages,
    ...hideNextButton ? [] : ["next"],
    ...showLastButton ? ["last"] : []
  ];
  const buttonPage = (type) => {
    switch (type) {
      case "first":
        return 1;
      case "previous":
        return page - 1;
      case "next":
        return page + 1;
      case "last":
        return count;
      default:
        return null;
    }
  };
  const items = itemList.map((item) => {
    return typeof item === "number" ? {
      onClick: (event) => {
        handleClick2(event, item);
      },
      type: "page",
      page: item,
      selected: item === page,
      disabled,
      "aria-current": item === page ? "true" : void 0
    } : {
      onClick: (event) => {
        handleClick2(event, buttonPage(item));
      },
      type: item,
      page: buttonPage(item),
      selected: false,
      disabled: disabled || item.indexOf("ellipsis") === -1 && (item === "next" || item === "last" ? page >= count : page <= 1)
    };
  });
  return _extends({
    items
  }, other);
}

// node_modules/@mui/material/PaginationItem/PaginationItem.js
init_objectWithoutPropertiesLoose();
init_extends();
var React220 = __toESM(require_react());
var import_prop_types147 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_useThemeProps3();

// node_modules/@mui/material/PaginationItem/paginationItemClasses.js
init_esm();
init_generateUtilityClass3();
function getPaginationItemUtilityClass(slot) {
  return generateUtilityClass("MuiPaginationItem", slot);
}
var paginationItemClasses = generateUtilityClasses("MuiPaginationItem", ["root", "page", "sizeSmall", "sizeLarge", "text", "textPrimary", "textSecondary", "outlined", "outlinedPrimary", "outlinedSecondary", "rounded", "ellipsis", "firstLast", "previousNext", "focusVisible", "disabled", "selected", "icon"]);
var paginationItemClasses_default = paginationItemClasses;

// node_modules/@mui/material/PaginationItem/PaginationItem.js
init_capitalize3();

// node_modules/@mui/material/internal/svg-icons/FirstPage.js
var React216 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime188 = __toESM(require_jsx_runtime());
var FirstPage_default = createSvgIcon((0, import_jsx_runtime188.jsx)("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage");

// node_modules/@mui/material/internal/svg-icons/LastPage.js
var React217 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime189 = __toESM(require_jsx_runtime());
var LastPage_default = createSvgIcon((0, import_jsx_runtime189.jsx)("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage");

// node_modules/@mui/material/internal/svg-icons/NavigateBefore.js
var React218 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime190 = __toESM(require_jsx_runtime());
var NavigateBefore_default = createSvgIcon((0, import_jsx_runtime190.jsx)("path", {
  d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "NavigateBefore");

// node_modules/@mui/material/internal/svg-icons/NavigateNext.js
var React219 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime191 = __toESM(require_jsx_runtime());
var NavigateNext_default = createSvgIcon((0, import_jsx_runtime191.jsx)("path", {
  d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "NavigateNext");

// node_modules/@mui/material/PaginationItem/PaginationItem.js
init_styled2();
var import_jsx_runtime192 = __toESM(require_jsx_runtime());
var import_jsx_runtime193 = __toESM(require_jsx_runtime());
var _excluded131 = ["className", "color", "component", "components", "disabled", "page", "selected", "shape", "size", "slots", "type", "variant"];
var overridesResolver7 = (props, styles7) => {
  const {
    ownerState
  } = props;
  return [styles7.root, styles7[ownerState.variant], styles7[`size${capitalize_default(ownerState.size)}`], ownerState.variant === "text" && styles7[`text${capitalize_default(ownerState.color)}`], ownerState.variant === "outlined" && styles7[`outlined${capitalize_default(ownerState.color)}`], ownerState.shape === "rounded" && styles7.rounded, ownerState.type === "page" && styles7.page, (ownerState.type === "start-ellipsis" || ownerState.type === "end-ellipsis") && styles7.ellipsis, (ownerState.type === "previous" || ownerState.type === "next") && styles7.previousNext, (ownerState.type === "first" || ownerState.type === "last") && styles7.firstLast];
};
var useUtilityClasses99 = (ownerState) => {
  const {
    classes: classes2,
    color: color2,
    disabled,
    selected,
    size: size2,
    shape: shape2,
    type,
    variant
  } = ownerState;
  const slots = {
    root: ["root", `size${capitalize_default(size2)}`, variant, shape2, color2 !== "standard" && `${variant}${capitalize_default(color2)}`, disabled && "disabled", selected && "selected", {
      page: "page",
      first: "firstLast",
      last: "firstLast",
      "start-ellipsis": "ellipsis",
      "end-ellipsis": "ellipsis",
      previous: "previousNext",
      next: "previousNext"
    }[type]],
    icon: ["icon"]
  };
  return composeClasses(slots, getPaginationItemUtilityClass, classes2);
};
var PaginationItemEllipsis = styled_default2("div", {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: overridesResolver7
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (theme.vars || theme).palette.text.primary,
  height: "auto",
  [`&.${paginationItemClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  }
}, ownerState.size === "small" && {
  minWidth: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, ownerState.size === "large" && {
  minWidth: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: theme.typography.pxToRem(15)
}));
var PaginationItemPage = styled_default2(ButtonBase_default, {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: overridesResolver7
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  height: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (theme.vars || theme).palette.text.primary,
  [`&.${paginationItemClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`&.${paginationItemClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  },
  transition: theme.transitions.create(["color", "background-color"], {
    duration: theme.transitions.duration.short
  }),
  "&:hover": {
    backgroundColor: (theme.vars || theme).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${paginationItemClasses_default.selected}`]: {
    backgroundColor: (theme.vars || theme).palette.action.selected,
    "&:hover": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selected} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (theme.vars || theme).palette.action.selected
      }
    },
    [`&.${paginationItemClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selected} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    },
    [`&.${paginationItemClasses_default.disabled}`]: {
      opacity: 1,
      color: (theme.vars || theme).palette.action.disabled,
      backgroundColor: (theme.vars || theme).palette.action.selected
    }
  }
}, ownerState.size === "small" && {
  minWidth: 26,
  height: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, ownerState.size === "large" && {
  minWidth: 40,
  height: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: theme.typography.pxToRem(15)
}, ownerState.shape === "rounded" && {
  borderRadius: (theme.vars || theme).shape.borderRadius
}), ({
  theme,
  ownerState
}) => _extends({}, ownerState.variant === "text" && {
  [`&.${paginationItemClasses_default.selected}`]: _extends({}, ownerState.color !== "standard" && {
    color: (theme.vars || theme).palette[ownerState.color].contrastText,
    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,
    "&:hover": {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (theme.vars || theme).palette[ownerState.color].main
      }
    },
    [`&.${paginationItemClasses_default.focusVisible}`]: {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark
    }
  }, {
    [`&.${paginationItemClasses_default.disabled}`]: {
      color: (theme.vars || theme).palette.action.disabled
    }
  })
}, ownerState.variant === "outlined" && {
  border: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
  [`&.${paginationItemClasses_default.selected}`]: _extends({}, ownerState.color !== "standard" && {
    color: (theme.vars || theme).palette[ownerState.color].main,
    border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : alpha(theme.palette[ownerState.color].main, 0.5)}`,
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.activatedOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity),
    "&:hover": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / calc(${theme.vars.palette.action.activatedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity + theme.palette.action.focusOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${paginationItemClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / calc(${theme.vars.palette.action.activatedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity + theme.palette.action.focusOpacity)
    }
  }, {
    [`&.${paginationItemClasses_default.disabled}`]: {
      borderColor: (theme.vars || theme).palette.action.disabledBackground,
      color: (theme.vars || theme).palette.action.disabled
    }
  })
}));
var PaginationItemPageIcon = styled_default2("div", {
  name: "MuiPaginationItem",
  slot: "Icon",
  overridesResolver: (props, styles7) => styles7.icon
})(({
  theme,
  ownerState
}) => _extends({
  fontSize: theme.typography.pxToRem(20),
  margin: "0 -8px"
}, ownerState.size === "small" && {
  fontSize: theme.typography.pxToRem(18)
}, ownerState.size === "large" && {
  fontSize: theme.typography.pxToRem(22)
}));
var PaginationItem = React220.forwardRef(function PaginationItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiPaginationItem"
  });
  const {
    className,
    color: color2 = "standard",
    component,
    components = {},
    disabled = false,
    page,
    selected = false,
    shape: shape2 = "circular",
    size: size2 = "medium",
    slots = {},
    type = "page",
    variant = "text"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded131);
  const ownerState = _extends({}, props, {
    color: color2,
    disabled,
    selected,
    shape: shape2,
    size: size2,
    type,
    variant
  });
  const theme = useTheme5();
  const classes2 = useUtilityClasses99(ownerState);
  const normalizedIcons = theme.direction === "rtl" ? {
    previous: slots.next || components.next || NavigateNext_default,
    next: slots.previous || components.previous || NavigateBefore_default,
    last: slots.first || components.first || FirstPage_default,
    first: slots.last || components.last || LastPage_default
  } : {
    previous: slots.previous || components.previous || NavigateBefore_default,
    next: slots.next || components.next || NavigateNext_default,
    first: slots.first || components.first || FirstPage_default,
    last: slots.last || components.last || LastPage_default
  };
  const Icon3 = normalizedIcons[type];
  return type === "start-ellipsis" || type === "end-ellipsis" ? (0, import_jsx_runtime192.jsx)(PaginationItemEllipsis, {
    ref,
    ownerState,
    className: clsx_default2(classes2.root, className),
    children: "…"
  }) : (0, import_jsx_runtime193.jsxs)(PaginationItemPage, _extends({
    ref,
    ownerState,
    component,
    disabled,
    className: clsx_default2(classes2.root, className)
  }, other, {
    children: [type === "page" && page, Icon3 ? (0, import_jsx_runtime192.jsx)(PaginationItemPageIcon, {
      as: Icon3,
      ownerState,
      className: classes2.icon
    }) : null]
  }));
});
true ? PaginationItem.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types147.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types147.default.object,
  /**
   * @ignore
   */
  className: import_prop_types147.default.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'standard'
   */
  color: import_prop_types147.default.oneOfType([import_prop_types147.default.oneOf(["primary", "secondary", "standard"]), import_prop_types147.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types147.default.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types147.default.shape({
    first: import_prop_types147.default.elementType,
    last: import_prop_types147.default.elementType,
    next: import_prop_types147.default.elementType,
    previous: import_prop_types147.default.elementType
  }),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types147.default.bool,
  /**
   * The current page number.
   */
  page: import_prop_types147.default.node,
  /**
   * If `true` the pagination item is selected.
   * @default false
   */
  selected: import_prop_types147.default.bool,
  /**
   * The shape of the pagination item.
   * @default 'circular'
   */
  shape: import_prop_types147.default.oneOf(["circular", "rounded"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types147.default.oneOfType([import_prop_types147.default.oneOf(["small", "medium", "large"]), import_prop_types147.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types147.default.shape({
    first: import_prop_types147.default.elementType,
    last: import_prop_types147.default.elementType,
    next: import_prop_types147.default.elementType,
    previous: import_prop_types147.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types147.default.oneOfType([import_prop_types147.default.arrayOf(import_prop_types147.default.oneOfType([import_prop_types147.default.func, import_prop_types147.default.object, import_prop_types147.default.bool])), import_prop_types147.default.func, import_prop_types147.default.object]),
  /**
   * The type of pagination item.
   * @default 'page'
   */
  type: import_prop_types147.default.oneOf(["end-ellipsis", "first", "last", "next", "page", "previous", "start-ellipsis"]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: import_prop_types147.default.oneOfType([import_prop_types147.default.oneOf(["outlined", "text"]), import_prop_types147.default.string])
} : void 0;
var PaginationItem_default = PaginationItem;

// node_modules/@mui/material/Pagination/Pagination.js
init_styled2();
var import_jsx_runtime194 = __toESM(require_jsx_runtime());
var _excluded132 = ["boundaryCount", "className", "color", "count", "defaultPage", "disabled", "getItemAriaLabel", "hideNextButton", "hidePrevButton", "onChange", "page", "renderItem", "shape", "showFirstButton", "showLastButton", "siblingCount", "size", "variant"];
var useUtilityClasses100 = (ownerState) => {
  const {
    classes: classes2,
    variant
  } = ownerState;
  const slots = {
    root: ["root", variant],
    ul: ["ul"]
  };
  return composeClasses(slots, getPaginationUtilityClass, classes2);
};
var PaginationRoot = styled_default2("nav", {
  name: "MuiPagination",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant]];
  }
})({});
var PaginationUl = styled_default2("ul", {
  name: "MuiPagination",
  slot: "Ul",
  overridesResolver: (props, styles7) => styles7.ul
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
function defaultGetAriaLabel3(type, page, selected) {
  if (type === "page") {
    return `${selected ? "" : "Go to "}page ${page}`;
  }
  return `Go to ${type} page`;
}
var Pagination = React221.forwardRef(function Pagination2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiPagination"
  });
  const {
    boundaryCount = 1,
    className,
    color: color2 = "standard",
    count = 1,
    defaultPage = 1,
    disabled = false,
    getItemAriaLabel = defaultGetAriaLabel3,
    hideNextButton = false,
    hidePrevButton = false,
    renderItem = (item) => (0, import_jsx_runtime194.jsx)(PaginationItem_default, _extends({}, item)),
    shape: shape2 = "circular",
    showFirstButton = false,
    showLastButton = false,
    siblingCount = 1,
    size: size2 = "medium",
    variant = "text"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded132);
  const {
    items
  } = usePagination(_extends({}, props, {
    componentName: "Pagination"
  }));
  const ownerState = _extends({}, props, {
    boundaryCount,
    color: color2,
    count,
    defaultPage,
    disabled,
    getItemAriaLabel,
    hideNextButton,
    hidePrevButton,
    renderItem,
    shape: shape2,
    showFirstButton,
    showLastButton,
    siblingCount,
    size: size2,
    variant
  });
  const classes2 = useUtilityClasses100(ownerState);
  return (0, import_jsx_runtime194.jsx)(PaginationRoot, _extends({
    "aria-label": "pagination navigation",
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other, {
    children: (0, import_jsx_runtime194.jsx)(PaginationUl, {
      className: classes2.ul,
      ownerState,
      children: items.map((item, index2) => (0, import_jsx_runtime194.jsx)("li", {
        children: renderItem(_extends({}, item, {
          color: color2,
          "aria-label": getItemAriaLabel(item.type, item.page, item.selected),
          shape: shape2,
          size: size2,
          variant
        }))
      }, index2))
    })
  }));
});
true ? Pagination.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Number of always visible pages at the beginning and end.
   * @default 1
   */
  boundaryCount: integerPropType_default,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types148.default.object,
  /**
   * @ignore
   */
  className: import_prop_types148.default.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'standard'
   */
  color: import_prop_types148.default.oneOfType([import_prop_types148.default.oneOf(["primary", "secondary", "standard"]), import_prop_types148.default.string]),
  /**
   * The total number of pages.
   * @default 1
   */
  count: integerPropType_default,
  /**
   * The page selected by default when the component is uncontrolled.
   * @default 1
   */
  defaultPage: integerPropType_default,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types148.default.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @param {bool} selected If true, the current page is selected.
   * @returns {string}
   */
  getItemAriaLabel: import_prop_types148.default.func,
  /**
   * If `true`, hide the next-page button.
   * @default false
   */
  hideNextButton: import_prop_types148.default.bool,
  /**
   * If `true`, hide the previous-page button.
   * @default false
   */
  hidePrevButton: import_prop_types148.default.bool,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.ChangeEvent<unknown>} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onChange: import_prop_types148.default.func,
  /**
   * The current page.
   */
  page: integerPropType_default,
  /**
   * Render the item.
   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.
   * @returns {ReactNode}
   * @default (item) => <PaginationItem {...item} />
   */
  renderItem: import_prop_types148.default.func,
  /**
   * The shape of the pagination items.
   * @default 'circular'
   */
  shape: import_prop_types148.default.oneOf(["circular", "rounded"]),
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: import_prop_types148.default.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: import_prop_types148.default.bool,
  /**
   * Number of always visible pages before and after the current page.
   * @default 1
   */
  siblingCount: integerPropType_default,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types148.default.oneOfType([import_prop_types148.default.oneOf(["small", "medium", "large"]), import_prop_types148.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types148.default.oneOfType([import_prop_types148.default.arrayOf(import_prop_types148.default.oneOfType([import_prop_types148.default.func, import_prop_types148.default.object, import_prop_types148.default.bool])), import_prop_types148.default.func, import_prop_types148.default.object]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: import_prop_types148.default.oneOfType([import_prop_types148.default.oneOf(["outlined", "text"]), import_prop_types148.default.string])
} : void 0;
var Pagination_default = Pagination;

// node_modules/@mui/material/Radio/Radio.js
init_objectWithoutPropertiesLoose();
init_extends();
var React227 = __toESM(require_react());
var import_prop_types150 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_esm2();
init_useThemeProps3();

// node_modules/@mui/material/Radio/RadioButtonIcon.js
init_extends();
var React224 = __toESM(require_react());
var import_prop_types149 = __toESM(require_prop_types());

// node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js
var React222 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime195 = __toESM(require_jsx_runtime());
var RadioButtonUnchecked_default = createSvgIcon((0, import_jsx_runtime195.jsx)("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked");

// node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js
var React223 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime196 = __toESM(require_jsx_runtime());
var RadioButtonChecked_default = createSvgIcon((0, import_jsx_runtime196.jsx)("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked");

// node_modules/@mui/material/Radio/RadioButtonIcon.js
init_styled2();
var import_jsx_runtime197 = __toESM(require_jsx_runtime());
var import_jsx_runtime198 = __toESM(require_jsx_runtime());
var RadioButtonIconRoot = styled_default2("span")({
  position: "relative",
  display: "flex"
});
var RadioButtonIconBackground = styled_default2(RadioButtonUnchecked_default)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
});
var RadioButtonIconDot = styled_default2(RadioButtonChecked_default)(({
  theme,
  ownerState
}) => _extends({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: theme.transitions.create("transform", {
    easing: theme.transitions.easing.easeIn,
    duration: theme.transitions.duration.shortest
  })
}, ownerState.checked && {
  transform: "scale(1)",
  transition: theme.transitions.create("transform", {
    easing: theme.transitions.easing.easeOut,
    duration: theme.transitions.duration.shortest
  })
}));
function RadioButtonIcon(props) {
  const {
    checked = false,
    classes: classes2 = {},
    fontSize: fontSize2
  } = props;
  const ownerState = _extends({}, props, {
    checked
  });
  return (0, import_jsx_runtime198.jsxs)(RadioButtonIconRoot, {
    className: classes2.root,
    ownerState,
    children: [(0, import_jsx_runtime197.jsx)(RadioButtonIconBackground, {
      fontSize: fontSize2,
      className: classes2.background,
      ownerState
    }), (0, import_jsx_runtime197.jsx)(RadioButtonIconDot, {
      fontSize: fontSize2,
      className: classes2.dot,
      ownerState
    })]
  });
}
true ? RadioButtonIcon.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types149.default.bool,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types149.default.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: import_prop_types149.default.oneOf(["small", "medium"])
} : void 0;
var RadioButtonIcon_default = RadioButtonIcon;

// node_modules/@mui/material/Radio/Radio.js
init_capitalize3();
init_createChainedFunction2();

// node_modules/@mui/material/RadioGroup/useRadioGroup.js
var React226 = __toESM(require_react());

// node_modules/@mui/material/RadioGroup/RadioGroupContext.js
var React225 = __toESM(require_react());
var RadioGroupContext = React225.createContext(void 0);
if (true) {
  RadioGroupContext.displayName = "RadioGroupContext";
}
var RadioGroupContext_default = RadioGroupContext;

// node_modules/@mui/material/RadioGroup/useRadioGroup.js
function useRadioGroup() {
  return React226.useContext(RadioGroupContext_default);
}

// node_modules/@mui/material/Radio/radioClasses.js
init_esm();
init_generateUtilityClass3();
function getRadioUtilityClass(slot) {
  return generateUtilityClass("MuiRadio", slot);
}
var radioClasses = generateUtilityClasses("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary"]);
var radioClasses_default = radioClasses;

// node_modules/@mui/material/Radio/Radio.js
init_styled2();
var import_jsx_runtime199 = __toESM(require_jsx_runtime());
var _excluded133 = ["checked", "checkedIcon", "color", "icon", "name", "onChange", "size", "className"];
var useUtilityClasses101 = (ownerState) => {
  const {
    classes: classes2,
    color: color2
  } = ownerState;
  const slots = {
    root: ["root", `color${capitalize_default(color2)}`]
  };
  return _extends({}, classes2, composeClasses(slots, getRadioUtilityClass, classes2));
};
var RadioRoot = styled_default2(SwitchBase_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  color: (theme.vars || theme).palette.text.secondary
}, !ownerState.disableRipple && {
  "&:hover": {
    backgroundColor: theme.vars ? `rgba(${ownerState.color === "default" ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === "default" ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, ownerState.color !== "default" && {
  [`&.${radioClasses_default.checked}`]: {
    color: (theme.vars || theme).palette[ownerState.color].main
  }
}, {
  [`&.${radioClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.action.disabled
  }
}));
function areEqualValues(a, b) {
  if (typeof b === "object" && b !== null) {
    return a === b;
  }
  return String(a) === String(b);
}
var defaultCheckedIcon2 = (0, import_jsx_runtime199.jsx)(RadioButtonIcon_default, {
  checked: true
});
var defaultIcon2 = (0, import_jsx_runtime199.jsx)(RadioButtonIcon_default, {});
var Radio = React227.forwardRef(function Radio2(inProps, ref) {
  var _defaultIcon$props$fo, _defaultCheckedIcon$p;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiRadio"
  });
  const {
    checked: checkedProp,
    checkedIcon = defaultCheckedIcon2,
    color: color2 = "primary",
    icon = defaultIcon2,
    name: nameProp,
    onChange: onChangeProp,
    size: size2 = "medium",
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded133);
  const ownerState = _extends({}, props, {
    color: color2,
    size: size2
  });
  const classes2 = useUtilityClasses101(ownerState);
  const radioGroup = useRadioGroup();
  let checked = checkedProp;
  const onChange = createChainedFunction_default(onChangeProp, radioGroup && radioGroup.onChange);
  let name = nameProp;
  if (radioGroup) {
    if (typeof checked === "undefined") {
      checked = areEqualValues(radioGroup.value, props.value);
    }
    if (typeof name === "undefined") {
      name = radioGroup.name;
    }
  }
  return (0, import_jsx_runtime199.jsx)(RadioRoot, _extends({
    type: "radio",
    icon: React227.cloneElement(icon, {
      fontSize: (_defaultIcon$props$fo = defaultIcon2.props.fontSize) != null ? _defaultIcon$props$fo : size2
    }),
    checkedIcon: React227.cloneElement(checkedIcon, {
      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon2.props.fontSize) != null ? _defaultCheckedIcon$p : size2
    }),
    ownerState,
    classes: classes2,
    name,
    checked,
    onChange,
    ref,
    className: clsx_default2(classes2.root, className)
  }, other));
});
true ? Radio.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types150.default.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: import_prop_types150.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types150.default.object,
  /**
   * @ignore
   */
  className: import_prop_types150.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types150.default.oneOfType([import_prop_types150.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types150.default.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types150.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: import_prop_types150.default.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: import_prop_types150.default.node,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types150.default.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: import_prop_types150.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * Name attribute of the `input` element.
   */
  name: import_prop_types150.default.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types150.default.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: import_prop_types150.default.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: import_prop_types150.default.oneOfType([import_prop_types150.default.oneOf(["medium", "small"]), import_prop_types150.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types150.default.oneOfType([import_prop_types150.default.arrayOf(import_prop_types150.default.oneOfType([import_prop_types150.default.func, import_prop_types150.default.object, import_prop_types150.default.bool])), import_prop_types150.default.func, import_prop_types150.default.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: import_prop_types150.default.any
} : void 0;
var Radio_default = Radio;

// node_modules/@mui/material/RadioGroup/RadioGroup.js
init_extends();
init_objectWithoutPropertiesLoose();
var React228 = __toESM(require_react());
var import_prop_types151 = __toESM(require_prop_types());
init_useForkRef3();
init_useControlled3();
init_useId3();
var import_jsx_runtime200 = __toESM(require_jsx_runtime());
var _excluded134 = ["actions", "children", "defaultValue", "name", "onChange", "value"];
var RadioGroup = React228.forwardRef(function RadioGroup2(props, ref) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions,
    children: children2,
    defaultValue,
    name: nameProp,
    onChange,
    value: valueProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded134);
  const rootRef = React228.useRef(null);
  const [value, setValueState] = useControlled_default({
    controlled: valueProp,
    default: defaultValue,
    name: "RadioGroup"
  });
  React228.useImperativeHandle(actions, () => ({
    focus: () => {
      let input = rootRef.current.querySelector("input:not(:disabled):checked");
      if (!input) {
        input = rootRef.current.querySelector("input:not(:disabled)");
      }
      if (input) {
        input.focus();
      }
    }
  }), []);
  const handleRef = useForkRef_default(ref, rootRef);
  const name = useId_default(nameProp);
  const contextValue = React228.useMemo(() => ({
    name,
    onChange(event) {
      setValueState(event.target.value);
      if (onChange) {
        onChange(event, event.target.value);
      }
    },
    value
  }), [name, onChange, setValueState, value]);
  return (0, import_jsx_runtime200.jsx)(RadioGroupContext_default.Provider, {
    value: contextValue,
    children: (0, import_jsx_runtime200.jsx)(FormGroup_default, _extends({
      role: "radiogroup",
      ref: handleRef
    }, other, {
      children: children2
    }))
  });
});
true ? RadioGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types151.default.node,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types151.default.any,
  /**
   * The name used to reference the value of the control.
   * If you don't provide this prop, it falls back to a randomly generated name.
   */
  name: import_prop_types151.default.string,
  /**
   * Callback fired when a radio button is selected.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {string} value The value of the selected radio button.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types151.default.func,
  /**
   * Value of the selected radio button. The DOM API casts this to a string.
   */
  value: import_prop_types151.default.any
} : void 0;
var RadioGroup_default = RadioGroup;

// node_modules/@mui/material/Rating/Rating.js
init_objectWithoutPropertiesLoose();
init_extends();
var React231 = __toESM(require_react());
var import_prop_types152 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_utils();

// node_modules/@mui/material/internal/svg-icons/Star.js
var React229 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime201 = __toESM(require_jsx_runtime());
var Star_default = createSvgIcon((0, import_jsx_runtime201.jsx)("path", {
  d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
}), "Star");

// node_modules/@mui/material/internal/svg-icons/StarBorder.js
var React230 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime202 = __toESM(require_jsx_runtime());
var StarBorder_default = createSvgIcon((0, import_jsx_runtime202.jsx)("path", {
  d: "M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
}), "StarBorder");

// node_modules/@mui/material/Rating/Rating.js
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Rating/ratingClasses.js
init_esm();
init_generateUtilityClass3();
function getRatingUtilityClass(slot) {
  return generateUtilityClass("MuiRating", slot);
}
var ratingClasses = generateUtilityClasses("MuiRating", ["root", "sizeSmall", "sizeMedium", "sizeLarge", "readOnly", "disabled", "focusVisible", "visuallyHidden", "pristine", "label", "labelEmptyValueActive", "icon", "iconEmpty", "iconFilled", "iconHover", "iconFocus", "iconActive", "decimal"]);
var ratingClasses_default = ratingClasses;

// node_modules/@mui/material/Rating/Rating.js
var import_jsx_runtime203 = __toESM(require_jsx_runtime());
var import_jsx_runtime204 = __toESM(require_jsx_runtime());
var _excluded135 = ["value"];
var _excluded217 = ["className", "defaultValue", "disabled", "emptyIcon", "emptyLabelText", "getLabelText", "highlightSelectedOnly", "icon", "IconContainerComponent", "max", "name", "onChange", "onChangeActive", "onMouseLeave", "onMouseMove", "precision", "readOnly", "size", "value"];
function clamp5(value, min3, max3) {
  if (value < min3) {
    return min3;
  }
  if (value > max3) {
    return max3;
  }
  return value;
}
function getDecimalPrecision2(num) {
  const decimalPart = num.toString().split(".")[1];
  return decimalPart ? decimalPart.length : 0;
}
function roundValueToPrecision(value, precision) {
  if (value == null) {
    return value;
  }
  const nearest = Math.round(value / precision) * precision;
  return Number(nearest.toFixed(getDecimalPrecision2(precision)));
}
var useUtilityClasses102 = (ownerState) => {
  const {
    classes: classes2,
    size: size2,
    readOnly,
    disabled,
    emptyValueFocused,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", `size${capitalize_default(size2)}`, disabled && "disabled", focusVisible && "focusVisible", readOnly && "readOnly"],
    label: ["label", "pristine"],
    labelEmptyValue: [emptyValueFocused && "labelEmptyValueActive"],
    icon: ["icon"],
    iconEmpty: ["iconEmpty"],
    iconFilled: ["iconFilled"],
    iconHover: ["iconHover"],
    iconFocus: ["iconFocus"],
    iconActive: ["iconActive"],
    decimal: ["decimal"],
    visuallyHidden: ["visuallyHidden"]
  };
  return composeClasses(slots, getRatingUtilityClass, classes2);
};
var RatingRoot = styled_default2("span", {
  name: "MuiRating",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${ratingClasses_default.visuallyHidden}`]: styles7.visuallyHidden
    }, styles7.root, styles7[`size${capitalize_default(ownerState.size)}`], ownerState.readOnly && styles7.readOnly];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "inline-flex",
  // Required to position the pristine input absolutely
  position: "relative",
  fontSize: theme.typography.pxToRem(24),
  color: "#faaf00",
  cursor: "pointer",
  textAlign: "left",
  WebkitTapHighlightColor: "transparent",
  [`&.${ratingClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity,
    pointerEvents: "none"
  },
  [`&.${ratingClasses_default.focusVisible} .${ratingClasses_default.iconActive}`]: {
    outline: "1px solid #999"
  },
  [`& .${ratingClasses_default.visuallyHidden}`]: visuallyHidden_default
}, ownerState.size === "small" && {
  fontSize: theme.typography.pxToRem(18)
}, ownerState.size === "large" && {
  fontSize: theme.typography.pxToRem(30)
}, ownerState.readOnly && {
  pointerEvents: "none"
}));
var RatingLabel = styled_default2("label", {
  name: "MuiRating",
  slot: "Label",
  overridesResolver: ({
    ownerState
  }, styles7) => [styles7.label, ownerState.emptyValueFocused && styles7.labelEmptyValueActive]
})(({
  ownerState
}) => _extends({
  cursor: "inherit"
}, ownerState.emptyValueFocused && {
  top: 0,
  bottom: 0,
  position: "absolute",
  outline: "1px solid #999",
  width: "100%"
}));
var RatingIcon = styled_default2("span", {
  name: "MuiRating",
  slot: "Icon",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.icon, ownerState.iconEmpty && styles7.iconEmpty, ownerState.iconFilled && styles7.iconFilled, ownerState.iconHover && styles7.iconHover, ownerState.iconFocus && styles7.iconFocus, ownerState.iconActive && styles7.iconActive];
  }
})(({
  theme,
  ownerState
}) => _extends({
  // Fit wrapper to actual icon size.
  display: "flex",
  transition: theme.transitions.create("transform", {
    duration: theme.transitions.duration.shortest
  }),
  // Fix mouseLeave issue.
  // https://github.com/facebook/react/issues/4492
  pointerEvents: "none"
}, ownerState.iconActive && {
  transform: "scale(1.2)"
}, ownerState.iconEmpty && {
  color: (theme.vars || theme).palette.action.disabled
}));
var RatingDecimal = styled_default2("span", {
  name: "MuiRating",
  slot: "Decimal",
  shouldForwardProp: (prop) => slotShouldForwardProp(prop) && prop !== "iconActive",
  overridesResolver: (props, styles7) => {
    const {
      iconActive
    } = props;
    return [styles7.decimal, iconActive && styles7.iconActive];
  }
})(({
  iconActive
}) => _extends({
  position: "relative"
}, iconActive && {
  transform: "scale(1.2)"
}));
function IconContainer(props) {
  const other = _objectWithoutPropertiesLoose(props, _excluded135);
  return (0, import_jsx_runtime203.jsx)("span", _extends({}, other));
}
true ? IconContainer.propTypes = {
  value: import_prop_types152.default.number.isRequired
} : void 0;
function RatingItem(props) {
  const {
    classes: classes2,
    disabled,
    emptyIcon,
    focus,
    getLabelText,
    highlightSelectedOnly,
    hover,
    icon,
    IconContainerComponent,
    isActive,
    itemValue,
    labelProps,
    name,
    onBlur,
    onChange,
    onClick,
    onFocus,
    readOnly,
    ownerState,
    ratingValue,
    ratingValueRounded
  } = props;
  const isFilled2 = highlightSelectedOnly ? itemValue === ratingValue : itemValue <= ratingValue;
  const isHovered = itemValue <= hover;
  const isFocused = itemValue <= focus;
  const isChecked = itemValue === ratingValueRounded;
  const id = useId_default();
  const container = (0, import_jsx_runtime203.jsx)(RatingIcon, {
    as: IconContainerComponent,
    value: itemValue,
    className: clsx_default2(classes2.icon, isFilled2 ? classes2.iconFilled : classes2.iconEmpty, isHovered && classes2.iconHover, isFocused && classes2.iconFocus, isActive && classes2.iconActive),
    ownerState: _extends({}, ownerState, {
      iconEmpty: !isFilled2,
      iconFilled: isFilled2,
      iconHover: isHovered,
      iconFocus: isFocused,
      iconActive: isActive
    }),
    children: emptyIcon && !isFilled2 ? emptyIcon : icon
  });
  if (readOnly) {
    return (0, import_jsx_runtime203.jsx)("span", _extends({}, labelProps, {
      children: container
    }));
  }
  return (0, import_jsx_runtime204.jsxs)(React231.Fragment, {
    children: [(0, import_jsx_runtime204.jsxs)(RatingLabel, _extends({
      ownerState: _extends({}, ownerState, {
        emptyValueFocused: void 0
      }),
      htmlFor: id
    }, labelProps, {
      children: [container, (0, import_jsx_runtime203.jsx)("span", {
        className: classes2.visuallyHidden,
        children: getLabelText(itemValue)
      })]
    })), (0, import_jsx_runtime203.jsx)("input", {
      className: classes2.visuallyHidden,
      onFocus,
      onBlur,
      onChange,
      onClick,
      disabled,
      value: itemValue,
      id,
      type: "radio",
      name,
      checked: isChecked
    })]
  });
}
true ? RatingItem.propTypes = {
  classes: import_prop_types152.default.object.isRequired,
  disabled: import_prop_types152.default.bool.isRequired,
  emptyIcon: import_prop_types152.default.node,
  focus: import_prop_types152.default.number.isRequired,
  getLabelText: import_prop_types152.default.func.isRequired,
  highlightSelectedOnly: import_prop_types152.default.bool.isRequired,
  hover: import_prop_types152.default.number.isRequired,
  icon: import_prop_types152.default.node,
  IconContainerComponent: import_prop_types152.default.elementType.isRequired,
  isActive: import_prop_types152.default.bool.isRequired,
  itemValue: import_prop_types152.default.number.isRequired,
  labelProps: import_prop_types152.default.object,
  name: import_prop_types152.default.string,
  onBlur: import_prop_types152.default.func.isRequired,
  onChange: import_prop_types152.default.func.isRequired,
  onClick: import_prop_types152.default.func.isRequired,
  onFocus: import_prop_types152.default.func.isRequired,
  ownerState: import_prop_types152.default.object.isRequired,
  ratingValue: import_prop_types152.default.number,
  ratingValueRounded: import_prop_types152.default.number,
  readOnly: import_prop_types152.default.bool.isRequired
} : void 0;
var defaultIcon3 = (0, import_jsx_runtime203.jsx)(Star_default, {
  fontSize: "inherit"
});
var defaultEmptyIcon = (0, import_jsx_runtime203.jsx)(StarBorder_default, {
  fontSize: "inherit"
});
function defaultLabelText(value) {
  return `${value} Star${value !== 1 ? "s" : ""}`;
}
var Rating = React231.forwardRef(function Rating2(inProps, ref) {
  const props = useThemeProps2({
    name: "MuiRating",
    props: inProps
  });
  const {
    className,
    defaultValue = null,
    disabled = false,
    emptyIcon = defaultEmptyIcon,
    emptyLabelText = "Empty",
    getLabelText = defaultLabelText,
    highlightSelectedOnly = false,
    icon = defaultIcon3,
    IconContainerComponent = IconContainer,
    max: max3 = 5,
    name: nameProp,
    onChange,
    onChangeActive,
    onMouseLeave,
    onMouseMove,
    precision = 1,
    readOnly = false,
    size: size2 = "medium",
    value: valueProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded217);
  const name = useId_default(nameProp);
  const [valueDerived, setValueState] = useControlled_default({
    controlled: valueProp,
    default: defaultValue,
    name: "Rating"
  });
  const valueRounded = roundValueToPrecision(valueDerived, precision);
  const theme = useTheme5();
  const [{
    hover,
    focus
  }, setState] = React231.useState({
    hover: -1,
    focus: -1
  });
  let value = valueRounded;
  if (hover !== -1) {
    value = hover;
  }
  if (focus !== -1) {
    value = focus;
  }
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible_default();
  const [focusVisible, setFocusVisible] = React231.useState(false);
  const rootRef = React231.useRef();
  const handleRef = useForkRef_default(focusVisibleRef, rootRef, ref);
  const handleMouseMove = (event) => {
    if (onMouseMove) {
      onMouseMove(event);
    }
    const rootNode = rootRef.current;
    const {
      right: right3,
      left: left3
    } = rootNode.getBoundingClientRect();
    const {
      width: width2
    } = rootNode.firstChild.getBoundingClientRect();
    let percent;
    if (theme.direction === "rtl") {
      percent = (right3 - event.clientX) / (width2 * max3);
    } else {
      percent = (event.clientX - left3) / (width2 * max3);
    }
    let newHover = roundValueToPrecision(max3 * percent + precision / 2, precision);
    newHover = clamp5(newHover, precision, max3);
    setState((prev2) => prev2.hover === newHover && prev2.focus === newHover ? prev2 : {
      hover: newHover,
      focus: newHover
    });
    setFocusVisible(false);
    if (onChangeActive && hover !== newHover) {
      onChangeActive(event, newHover);
    }
  };
  const handleMouseLeave = (event) => {
    if (onMouseLeave) {
      onMouseLeave(event);
    }
    const newHover = -1;
    setState({
      hover: newHover,
      focus: newHover
    });
    if (onChangeActive && hover !== newHover) {
      onChangeActive(event, newHover);
    }
  };
  const handleChange = (event) => {
    let newValue = event.target.value === "" ? null : parseFloat(event.target.value);
    if (hover !== -1) {
      newValue = hover;
    }
    setValueState(newValue);
    if (onChange) {
      onChange(event, newValue);
    }
  };
  const handleClear = (event) => {
    if (event.clientX === 0 && event.clientY === 0) {
      return;
    }
    setState({
      hover: -1,
      focus: -1
    });
    setValueState(null);
    if (onChange && parseFloat(event.target.value) === valueRounded) {
      onChange(event, null);
    }
  };
  const handleFocus = (event) => {
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
    }
    const newFocus = parseFloat(event.target.value);
    setState((prev2) => ({
      hover: prev2.hover,
      focus: newFocus
    }));
  };
  const handleBlur2 = (event) => {
    if (hover !== -1) {
      return;
    }
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    const newFocus = -1;
    setState((prev2) => ({
      hover: prev2.hover,
      focus: newFocus
    }));
  };
  const [emptyValueFocused, setEmptyValueFocused] = React231.useState(false);
  const ownerState = _extends({}, props, {
    defaultValue,
    disabled,
    emptyIcon,
    emptyLabelText,
    emptyValueFocused,
    focusVisible,
    getLabelText,
    icon,
    IconContainerComponent,
    max: max3,
    precision,
    readOnly,
    size: size2
  });
  const classes2 = useUtilityClasses102(ownerState);
  return (0, import_jsx_runtime204.jsxs)(RatingRoot, _extends({
    ref: handleRef,
    onMouseMove: handleMouseMove,
    onMouseLeave: handleMouseLeave,
    className: clsx_default2(classes2.root, className, readOnly && "MuiRating-readOnly"),
    ownerState,
    role: readOnly ? "img" : null,
    "aria-label": readOnly ? getLabelText(value) : null
  }, other, {
    children: [Array.from(new Array(max3)).map((_5, index2) => {
      const itemValue = index2 + 1;
      const ratingItemProps = {
        classes: classes2,
        disabled,
        emptyIcon,
        focus,
        getLabelText,
        highlightSelectedOnly,
        hover,
        icon,
        IconContainerComponent,
        name,
        onBlur: handleBlur2,
        onChange: handleChange,
        onClick: handleClear,
        onFocus: handleFocus,
        ratingValue: value,
        ratingValueRounded: valueRounded,
        readOnly,
        ownerState
      };
      const isActive = itemValue === Math.ceil(value) && (hover !== -1 || focus !== -1);
      if (precision < 1) {
        const items = Array.from(new Array(1 / precision));
        return (0, import_jsx_runtime203.jsx)(RatingDecimal, {
          className: clsx_default2(classes2.decimal, isActive && classes2.iconActive),
          ownerState,
          iconActive: isActive,
          children: items.map(($, indexDecimal) => {
            const itemDecimalValue = roundValueToPrecision(itemValue - 1 + (indexDecimal + 1) * precision, precision);
            return (0, import_jsx_runtime203.jsx)(RatingItem, _extends({}, ratingItemProps, {
              // The icon is already displayed as active
              isActive: false,
              itemValue: itemDecimalValue,
              labelProps: {
                style: items.length - 1 === indexDecimal ? {} : {
                  width: itemDecimalValue === value ? `${(indexDecimal + 1) * precision * 100}%` : "0%",
                  overflow: "hidden",
                  position: "absolute"
                }
              }
            }), itemDecimalValue);
          })
        }, itemValue);
      }
      return (0, import_jsx_runtime203.jsx)(RatingItem, _extends({}, ratingItemProps, {
        isActive,
        itemValue
      }), itemValue);
    }), !readOnly && !disabled && (0, import_jsx_runtime204.jsxs)(RatingLabel, {
      className: clsx_default2(classes2.label, classes2.labelEmptyValue),
      ownerState,
      children: [(0, import_jsx_runtime203.jsx)("input", {
        className: classes2.visuallyHidden,
        value: "",
        id: `${name}-empty`,
        type: "radio",
        name,
        checked: valueRounded == null,
        onFocus: () => setEmptyValueFocused(true),
        onBlur: () => setEmptyValueFocused(false),
        onChange: handleChange
      }), (0, import_jsx_runtime203.jsx)("span", {
        className: classes2.visuallyHidden,
        children: emptyLabelText
      })]
    })]
  }));
});
true ? Rating.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types152.default.object,
  /**
   * @ignore
   */
  className: import_prop_types152.default.string,
  /**
   * The default value. Use when the component is not controlled.
   * @default null
   */
  defaultValue: import_prop_types152.default.number,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types152.default.bool,
  /**
   * The icon to display when empty.
   * @default <StarBorder fontSize="inherit" />
   */
  emptyIcon: import_prop_types152.default.node,
  /**
   * The label read when the rating input is empty.
   * @default 'Empty'
   */
  emptyLabelText: import_prop_types152.default.node,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {number} value The rating label's value to format.
   * @returns {string}
   * @default function defaultLabelText(value) {
   *   return `${value} Star${value !== 1 ? 's' : ''}`;
   * }
   */
  getLabelText: import_prop_types152.default.func,
  /**
   * If `true`, only the selected icon will be highlighted.
   * @default false
   */
  highlightSelectedOnly: import_prop_types152.default.bool,
  /**
   * The icon to display.
   * @default <Star fontSize="inherit" />
   */
  icon: import_prop_types152.default.node,
  /**
   * The component containing the icon.
   * @default function IconContainer(props) {
   *   const { value, ...other } = props;
   *   return <span {...other} />;
   * }
   */
  IconContainerComponent: import_prop_types152.default.elementType,
  /**
   * Maximum rating.
   * @default 5
   */
  max: import_prop_types152.default.number,
  /**
   * The name attribute of the radio `input` elements.
   * This input `name` should be unique within the page.
   * Being unique within a form is insufficient since the `name` is used to generated IDs.
   */
  name: import_prop_types152.default.string,
  /**
   * Callback fired when the value changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number|null} value The new value.
   */
  onChange: import_prop_types152.default.func,
  /**
   * Callback function that is fired when the hover state changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number} value The new value.
   */
  onChangeActive: import_prop_types152.default.func,
  /**
   * @ignore
   */
  onMouseLeave: import_prop_types152.default.func,
  /**
   * @ignore
   */
  onMouseMove: import_prop_types152.default.func,
  /**
   * The minimum increment value change allowed.
   * @default 1
   */
  precision: chainPropTypes(import_prop_types152.default.number, (props) => {
    if (props.precision < 0.1) {
      return new Error(["MUI: The prop `precision` should be above 0.1.", "A value below this limit has an imperceptible impact."].join("\n"));
    }
    return null;
  }),
  /**
   * Removes all hover effects and pointer events.
   * @default false
   */
  readOnly: import_prop_types152.default.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types152.default.oneOfType([import_prop_types152.default.oneOf(["small", "medium", "large"]), import_prop_types152.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types152.default.oneOfType([import_prop_types152.default.arrayOf(import_prop_types152.default.oneOfType([import_prop_types152.default.func, import_prop_types152.default.object, import_prop_types152.default.bool])), import_prop_types152.default.func, import_prop_types152.default.object]),
  /**
   * The rating value.
   */
  value: import_prop_types152.default.number
} : void 0;

// node_modules/@mui/material/ScopedCssBaseline/ScopedCssBaseline.js
init_objectWithoutPropertiesLoose();
init_extends();
var React232 = __toESM(require_react());
var import_prop_types153 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/ScopedCssBaseline/scopedCssBaselineClasses.js
init_esm();
init_generateUtilityClass3();
function getScopedCssBaselineUtilityClass(slot) {
  return generateUtilityClass("MuiScopedCssBaseline", slot);
}
var scopedCssBaselineClasses = generateUtilityClasses("MuiScopedCssBaseline", ["root"]);

// node_modules/@mui/material/ScopedCssBaseline/ScopedCssBaseline.js
var import_jsx_runtime205 = __toESM(require_jsx_runtime());
var _excluded136 = ["className", "component", "enableColorScheme"];
var useUtilityClasses103 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getScopedCssBaselineUtilityClass, classes2);
};
var ScopedCssBaselineRoot = styled_default2("div", {
  name: "MuiScopedCssBaseline",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(({
  theme,
  ownerState
}) => {
  const colorSchemeStyles = {};
  if (ownerState.enableColorScheme && theme.colorSchemes) {
    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {
      var _scheme$palette;
      colorSchemeStyles[`&${theme.getColorSchemeSelector(key).replace(/\s*&/, "")}`] = {
        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode
      };
    });
  }
  return _extends({}, html(theme, ownerState.enableColorScheme), body(theme), {
    "& *, & *::before, & *::after": {
      boxSizing: "inherit"
    },
    "& strong, & b": {
      fontWeight: theme.typography.fontWeightBold
    }
  }, colorSchemeStyles);
});
var ScopedCssBaseline = React232.forwardRef(function ScopedCssBaseline2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiScopedCssBaseline"
  });
  const {
    className,
    component = "div"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded136);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses103(ownerState);
  return (0, import_jsx_runtime205.jsx)(ScopedCssBaselineRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other));
});
true ? ScopedCssBaseline.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types153.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types153.default.object,
  /**
   * @ignore
   */
  className: import_prop_types153.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types153.default.elementType,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   */
  enableColorScheme: import_prop_types153.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types153.default.oneOfType([import_prop_types153.default.arrayOf(import_prop_types153.default.oneOfType([import_prop_types153.default.func, import_prop_types153.default.object, import_prop_types153.default.bool])), import_prop_types153.default.func, import_prop_types153.default.object])
} : void 0;
var ScopedCssBaseline_default = ScopedCssBaseline;

// node_modules/@mui/material/Select/Select.js
init_extends();
init_objectWithoutPropertiesLoose();
var React234 = __toESM(require_react());
var import_prop_types155 = __toESM(require_prop_types());
init_clsx2();
init_esm();

// node_modules/@mui/material/Select/SelectInput.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();
var React233 = __toESM(require_react());
var import_react_is9 = __toESM(require_react_is3());
var import_prop_types154 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm();
init_ownerDocument3();
init_capitalize3();
init_styled2();
init_useForkRef3();
init_useControlled3();

// node_modules/@mui/material/Select/selectClasses.js
init_esm();
init_generateUtilityClass3();
function getSelectUtilityClasses(slot) {
  return generateUtilityClass("MuiSelect", slot);
}
var selectClasses2 = generateUtilityClasses("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var selectClasses_default = selectClasses2;

// node_modules/@mui/material/Select/SelectInput.js
var import_jsx_runtime206 = __toESM(require_jsx_runtime());
var import_jsx_runtime207 = __toESM(require_jsx_runtime());
var _span8;
var _excluded137 = ["aria-describedby", "aria-label", "autoFocus", "autoWidth", "children", "className", "defaultOpen", "defaultValue", "disabled", "displayEmpty", "error", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "SelectDisplayProps", "tabIndex", "type", "value", "variant"];
var SelectSelect = styled_default2("div", {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [
      // Win specificity over the input base
      {
        [`&.${selectClasses_default.select}`]: styles7.select
      },
      {
        [`&.${selectClasses_default.select}`]: styles7[ownerState.variant]
      },
      {
        [`&.${selectClasses_default.error}`]: styles7.error
      },
      {
        [`&.${selectClasses_default.multiple}`]: styles7.multiple
      }
    ];
  }
})(nativeSelectSelectStyles, {
  // Win specificity over the input base
  [`&.${selectClasses_default.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
});
var SelectIcon = styled_default2("svg", {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.icon, ownerState.variant && styles7[`icon${capitalize_default(ownerState.variant)}`], ownerState.open && styles7.iconOpen];
  }
})(nativeSelectIconStyles);
var SelectNativeInput = styled_default2("input", {
  shouldForwardProp: (prop) => slotShouldForwardProp(prop) && prop !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (props, styles7) => styles7.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function areEqualValues2(a, b) {
  if (typeof b === "object" && b !== null) {
    return a === b;
  }
  return String(a) === String(b);
}
function isEmpty5(display) {
  return display == null || typeof display === "string" && !display.trim();
}
var useUtilityClasses104 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    disabled,
    multiple,
    open,
    error
  } = ownerState;
  const slots = {
    select: ["select", variant, disabled && "disabled", multiple && "multiple", error && "error"],
    icon: ["icon", `icon${capitalize_default(variant)}`, open && "iconOpen", disabled && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return composeClasses(slots, getSelectUtilityClasses, classes2);
};
var SelectInput = React233.forwardRef(function SelectInput2(props, ref) {
  const {
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    autoFocus,
    autoWidth,
    children: children2,
    className,
    defaultOpen,
    defaultValue,
    disabled,
    displayEmpty,
    error = false,
    IconComponent,
    inputRef: inputRefProp,
    labelId,
    MenuProps = {},
    multiple,
    name,
    onBlur,
    onChange,
    onClose,
    onFocus,
    onOpen,
    open: openProp,
    readOnly,
    renderValue,
    SelectDisplayProps = {},
    tabIndex: tabIndexProp,
    value: valueProp,
    variant = "standard"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded137);
  const [value, setValueState] = useControlled_default({
    controlled: valueProp,
    default: defaultValue,
    name: "Select"
  });
  const [openState, setOpenState] = useControlled_default({
    controlled: openProp,
    default: defaultOpen,
    name: "Select"
  });
  const inputRef = React233.useRef(null);
  const displayRef = React233.useRef(null);
  const [displayNode, setDisplayNode] = React233.useState(null);
  const {
    current: isOpenControlled
  } = React233.useRef(openProp != null);
  const [menuMinWidthState, setMenuMinWidthState] = React233.useState();
  const handleRef = useForkRef_default(ref, inputRefProp);
  const handleDisplayRef = React233.useCallback((node2) => {
    displayRef.current = node2;
    if (node2) {
      setDisplayNode(node2);
    }
  }, []);
  const anchorElement = displayNode == null ? void 0 : displayNode.parentNode;
  React233.useImperativeHandle(handleRef, () => ({
    focus: () => {
      displayRef.current.focus();
    },
    node: inputRef.current,
    value
  }), [value]);
  React233.useEffect(() => {
    if (defaultOpen && openState && displayNode && !isOpenControlled) {
      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);
      displayRef.current.focus();
    }
  }, [displayNode, autoWidth]);
  React233.useEffect(() => {
    if (autoFocus) {
      displayRef.current.focus();
    }
  }, [autoFocus]);
  React233.useEffect(() => {
    if (!labelId) {
      return void 0;
    }
    const label = ownerDocument_default(displayRef.current).getElementById(labelId);
    if (label) {
      const handler = () => {
        if (getSelection().isCollapsed) {
          displayRef.current.focus();
        }
      };
      label.addEventListener("click", handler);
      return () => {
        label.removeEventListener("click", handler);
      };
    }
    return void 0;
  }, [labelId]);
  const update = (open2, event) => {
    if (open2) {
      if (onOpen) {
        onOpen(event);
      }
    } else if (onClose) {
      onClose(event);
    }
    if (!isOpenControlled) {
      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);
      setOpenState(open2);
    }
  };
  const handleMouseDown = (event) => {
    if (event.button !== 0) {
      return;
    }
    event.preventDefault();
    displayRef.current.focus();
    update(true, event);
  };
  const handleClose = (event) => {
    update(false, event);
  };
  const childrenArray = React233.Children.toArray(children2);
  const handleChange = (event) => {
    const child = childrenArray.find((childItem) => childItem.props.value === event.target.value);
    if (child === void 0) {
      return;
    }
    setValueState(child.props.value);
    if (onChange) {
      onChange(event, child);
    }
  };
  const handleItemClick = (child) => (event) => {
    let newValue;
    if (!event.currentTarget.hasAttribute("tabindex")) {
      return;
    }
    if (multiple) {
      newValue = Array.isArray(value) ? value.slice() : [];
      const itemIndex = value.indexOf(child.props.value);
      if (itemIndex === -1) {
        newValue.push(child.props.value);
      } else {
        newValue.splice(itemIndex, 1);
      }
    } else {
      newValue = child.props.value;
    }
    if (child.props.onClick) {
      child.props.onClick(event);
    }
    if (value !== newValue) {
      setValueState(newValue);
      if (onChange) {
        const nativeEvent = event.nativeEvent || event;
        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
        Object.defineProperty(clonedEvent, "target", {
          writable: true,
          value: {
            value: newValue,
            name
          }
        });
        onChange(clonedEvent, child);
      }
    }
    if (!multiple) {
      update(false, event);
    }
  };
  const handleKeyDown3 = (event) => {
    if (!readOnly) {
      const validKeys = [
        " ",
        "ArrowUp",
        "ArrowDown",
        // The native select doesn't respond to enter on macOS, but it's recommended by
        // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
        "Enter"
      ];
      if (validKeys.indexOf(event.key) !== -1) {
        event.preventDefault();
        update(true, event);
      }
    }
  };
  const open = displayNode !== null && openState;
  const handleBlur2 = (event) => {
    if (!open && onBlur) {
      Object.defineProperty(event, "target", {
        writable: true,
        value: {
          value,
          name
        }
      });
      onBlur(event);
    }
  };
  delete other["aria-invalid"];
  let display;
  let displaySingle;
  const displayMultiple = [];
  let computeDisplay = false;
  let foundMatch = false;
  if (isFilled({
    value
  }) || displayEmpty) {
    if (renderValue) {
      display = renderValue(value);
    } else {
      computeDisplay = true;
    }
  }
  const items = childrenArray.map((child) => {
    if (!React233.isValidElement(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is9.isFragment)(child)) {
        console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    let selected;
    if (multiple) {
      if (!Array.isArray(value)) {
        throw new Error(true ? `MUI: The \`value\` prop must be an array when using the \`Select\` component with \`multiple\`.` : formatMuiErrorMessage(2));
      }
      selected = value.some((v) => areEqualValues2(v, child.props.value));
      if (selected && computeDisplay) {
        displayMultiple.push(child.props.children);
      }
    } else {
      selected = areEqualValues2(value, child.props.value);
      if (selected && computeDisplay) {
        displaySingle = child.props.children;
      }
    }
    if (selected) {
      foundMatch = true;
    }
    return React233.cloneElement(child, {
      "aria-selected": selected ? "true" : "false",
      onClick: handleItemClick(child),
      onKeyUp: (event) => {
        if (event.key === " ") {
          event.preventDefault();
        }
        if (child.props.onKeyUp) {
          child.props.onKeyUp(event);
        }
      },
      role: "option",
      selected,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": child.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  if (true) {
    React233.useEffect(() => {
      if (!foundMatch && !multiple && value !== "") {
        const values3 = childrenArray.map((child) => child.props.value);
        console.warn([`MUI: You have provided an out-of-range value \`${value}\` for the select ${name ? `(name="${name}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${values3.filter((x) => x != null).map((x) => `\`${x}\``).join(", ") || '""'}.`].join("\n"));
      }
    }, [foundMatch, childrenArray, multiple, name, value]);
  }
  if (computeDisplay) {
    if (multiple) {
      if (displayMultiple.length === 0) {
        display = null;
      } else {
        display = displayMultiple.reduce((output, child, index2) => {
          output.push(child);
          if (index2 < displayMultiple.length - 1) {
            output.push(", ");
          }
          return output;
        }, []);
      }
    } else {
      display = displaySingle;
    }
  }
  let menuMinWidth = menuMinWidthState;
  if (!autoWidth && isOpenControlled && displayNode) {
    menuMinWidth = anchorElement.clientWidth;
  }
  let tabIndex;
  if (typeof tabIndexProp !== "undefined") {
    tabIndex = tabIndexProp;
  } else {
    tabIndex = disabled ? null : 0;
  }
  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : void 0);
  const ownerState = _extends({}, props, {
    variant,
    value,
    open,
    error
  });
  const classes2 = useUtilityClasses104(ownerState);
  return (0, import_jsx_runtime207.jsxs)(React233.Fragment, {
    children: [(0, import_jsx_runtime206.jsx)(SelectSelect, _extends({
      ref: handleDisplayRef,
      tabIndex,
      role: "button",
      "aria-disabled": disabled ? "true" : void 0,
      "aria-expanded": open ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": ariaLabel,
      "aria-labelledby": [labelId, buttonId].filter(Boolean).join(" ") || void 0,
      "aria-describedby": ariaDescribedby,
      onKeyDown: handleKeyDown3,
      onMouseDown: disabled || readOnly ? null : handleMouseDown,
      onBlur: handleBlur2,
      onFocus
    }, SelectDisplayProps, {
      ownerState,
      className: clsx_default2(SelectDisplayProps.className, classes2.select, className),
      id: buttonId,
      children: isEmpty5(display) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        _span8 || (_span8 = (0, import_jsx_runtime206.jsx)("span", {
          className: "notranslate",
          children: "​"
        }))
      ) : display
    })), (0, import_jsx_runtime206.jsx)(SelectNativeInput, _extends({
      "aria-invalid": error,
      value: Array.isArray(value) ? value.join(",") : value,
      name,
      ref: inputRef,
      "aria-hidden": true,
      onChange: handleChange,
      tabIndex: -1,
      disabled,
      className: classes2.nativeInput,
      autoFocus,
      ownerState
    }, other)), (0, import_jsx_runtime206.jsx)(SelectIcon, {
      as: IconComponent,
      className: classes2.icon,
      ownerState
    }), (0, import_jsx_runtime206.jsx)(Menu_default, _extends({
      id: `menu-${name || ""}`,
      anchorEl: anchorElement,
      open,
      onClose: handleClose,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      }
    }, MenuProps, {
      MenuListProps: _extends({
        "aria-labelledby": labelId,
        role: "listbox",
        disableListWrap: true
      }, MenuProps.MenuListProps),
      PaperProps: _extends({}, MenuProps.PaperProps, {
        style: _extends({
          minWidth: menuMinWidth
        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
      }),
      children: items
    }))]
  });
});
true ? SelectInput.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": import_prop_types154.default.string,
  /**
   * @ignore
   */
  "aria-label": import_prop_types154.default.string,
  /**
   * @ignore
   */
  autoFocus: import_prop_types154.default.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: import_prop_types154.default.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: import_prop_types154.default.node,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types154.default.object,
  /**
   * The CSS class name of the select element.
   */
  className: import_prop_types154.default.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: import_prop_types154.default.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types154.default.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: import_prop_types154.default.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: import_prop_types154.default.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: import_prop_types154.default.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: import_prop_types154.default.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: refType_default,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: import_prop_types154.default.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: import_prop_types154.default.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: import_prop_types154.default.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: import_prop_types154.default.string,
  /**
   * @ignore
   */
  onBlur: import_prop_types154.default.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: import_prop_types154.default.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: import_prop_types154.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types154.default.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: import_prop_types154.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types154.default.bool,
  /**
   * @ignore
   */
  readOnly: import_prop_types154.default.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: import_prop_types154.default.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: import_prop_types154.default.object,
  /**
   * @ignore
   */
  tabIndex: import_prop_types154.default.oneOfType([import_prop_types154.default.number, import_prop_types154.default.string]),
  /**
   * @ignore
   */
  type: import_prop_types154.default.any,
  /**
   * The input value.
   */
  value: import_prop_types154.default.any,
  /**
   * The variant to use.
   */
  variant: import_prop_types154.default.oneOf(["standard", "outlined", "filled"])
} : void 0;
var SelectInput_default = SelectInput;

// node_modules/@mui/material/Select/Select.js
init_useThemeProps3();
init_useForkRef3();
init_styled2();
var import_jsx_runtime208 = __toESM(require_jsx_runtime());
var _excluded138 = ["autoWidth", "children", "classes", "className", "defaultOpen", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"];
var _excluded218 = ["root"];
var useUtilityClasses105 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  return classes2;
};
var styledRootConfig = {
  name: "MuiSelect",
  overridesResolver: (props, styles7) => styles7.root,
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) && prop !== "variant",
  slot: "Root"
};
var StyledInput = styled_default2(Input_default, styledRootConfig)("");
var StyledOutlinedInput = styled_default2(OutlinedInput_default, styledRootConfig)("");
var StyledFilledInput = styled_default2(FilledInput_default, styledRootConfig)("");
var Select3 = React234.forwardRef(function Select4(inProps, ref) {
  const props = useThemeProps2({
    name: "MuiSelect",
    props: inProps
  });
  const {
    autoWidth = false,
    children: children2,
    classes: classesProp = {},
    className,
    defaultOpen = false,
    displayEmpty = false,
    IconComponent = ArrowDropDown_default,
    id,
    input,
    inputProps,
    label,
    labelId,
    MenuProps,
    multiple = false,
    native = false,
    onClose,
    onOpen,
    open,
    renderValue,
    SelectDisplayProps,
    variant: variantProp = "outlined"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded138);
  const inputComponent = native ? NativeSelectInput_default : SelectInput_default;
  const muiFormControl = useFormControl();
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["variant", "error"]
  });
  const variant = fcs.variant || variantProp;
  const ownerState = _extends({}, props, {
    variant,
    classes: classesProp
  });
  const classes2 = useUtilityClasses105(ownerState);
  const restOfClasses = _objectWithoutPropertiesLoose(classes2, _excluded218);
  const InputComponent = input || {
    standard: (0, import_jsx_runtime208.jsx)(StyledInput, {
      ownerState
    }),
    outlined: (0, import_jsx_runtime208.jsx)(StyledOutlinedInput, {
      label,
      ownerState
    }),
    filled: (0, import_jsx_runtime208.jsx)(StyledFilledInput, {
      ownerState
    })
  }[variant];
  const inputComponentRef = useForkRef_default(ref, InputComponent.ref);
  return (0, import_jsx_runtime208.jsx)(React234.Fragment, {
    children: React234.cloneElement(InputComponent, _extends({
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent,
      inputProps: _extends({
        children: children2,
        error: fcs.error,
        IconComponent,
        variant,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple
      }, native ? {
        id
      } : {
        autoWidth,
        defaultOpen,
        displayEmpty,
        labelId,
        MenuProps,
        onClose,
        onOpen,
        open,
        renderValue,
        SelectDisplayProps: _extends({
          id
        }, SelectDisplayProps)
      }, inputProps, {
        classes: inputProps ? deepmerge(restOfClasses, inputProps.classes) : restOfClasses
      }, input ? input.props.inputProps : {})
    }, multiple && native && variant === "outlined" ? {
      notched: true
    } : {}, {
      ref: inputComponentRef,
      className: clsx_default2(InputComponent.props.className, className, classes2.root)
    }, !input && {
      variant
    }, other))
  });
});
true ? Select3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: import_prop_types155.default.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: import_prop_types155.default.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: import_prop_types155.default.object,
  /**
   * @ignore
   */
  className: import_prop_types155.default.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: import_prop_types155.default.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types155.default.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: import_prop_types155.default.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: import_prop_types155.default.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: import_prop_types155.default.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: import_prop_types155.default.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: import_prop_types155.default.object,
  /**
   * See [OutlinedInput#label](/material-ui/api/outlined-input/#props)
   */
  label: import_prop_types155.default.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: import_prop_types155.default.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: import_prop_types155.default.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: import_prop_types155.default.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: import_prop_types155.default.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: import_prop_types155.default.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: import_prop_types155.default.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: import_prop_types155.default.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: import_prop_types155.default.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: import_prop_types155.default.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: import_prop_types155.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types155.default.oneOfType([import_prop_types155.default.arrayOf(import_prop_types155.default.oneOfType([import_prop_types155.default.func, import_prop_types155.default.object, import_prop_types155.default.bool])), import_prop_types155.default.func, import_prop_types155.default.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: import_prop_types155.default.oneOfType([import_prop_types155.default.oneOf([""]), import_prop_types155.default.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: import_prop_types155.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
Select3.muiName = "Select";
var Select_default = Select3;

// node_modules/@mui/material/Skeleton/Skeleton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React235 = __toESM(require_react());
init_clsx2();
var import_prop_types156 = __toESM(require_prop_types());
init_esm2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Skeleton/skeletonClasses.js
init_esm();
init_generateUtilityClass3();
function getSkeletonUtilityClass(slot) {
  return generateUtilityClass("MuiSkeleton", slot);
}
var skeletonClasses = generateUtilityClasses("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]);

// node_modules/@mui/material/Skeleton/Skeleton.js
var import_jsx_runtime209 = __toESM(require_jsx_runtime());
var _excluded139 = ["animation", "className", "component", "height", "style", "variant", "width"];
var _4 = (t) => t;
var _t7;
var _t24;
var _t34;
var _t44;
var useUtilityClasses106 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    animation,
    hasChildren,
    width: width2,
    height: height2
  } = ownerState;
  const slots = {
    root: ["root", variant, animation, hasChildren && "withChildren", hasChildren && !width2 && "fitContent", hasChildren && !height2 && "heightAuto"]
  };
  return composeClasses(slots, getSkeletonUtilityClass, classes2);
};
var pulseKeyframe = keyframes(_t7 || (_t7 = _4`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`));
var waveKeyframe = keyframes(_t24 || (_t24 = _4`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`));
var SkeletonRoot = styled_default2("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant], ownerState.animation !== false && styles7[ownerState.animation], ownerState.hasChildren && styles7.withChildren, ownerState.hasChildren && !ownerState.width && styles7.fitContent, ownerState.hasChildren && !ownerState.height && styles7.heightAuto];
  }
})(({
  theme,
  ownerState
}) => {
  const radiusUnit = getUnit(theme.shape.borderRadius) || "px";
  const radiusValue = toUnitless(theme.shape.borderRadius);
  return _extends({
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em"
  }, ownerState.variant === "text" && {
    marginTop: 0,
    marginBottom: 0,
    height: "auto",
    transformOrigin: "0 55%",
    transform: "scale(1, 0.60)",
    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,
    "&:empty:before": {
      content: '"\\00a0"'
    }
  }, ownerState.variant === "circular" && {
    borderRadius: "50%"
  }, ownerState.variant === "rounded" && {
    borderRadius: (theme.vars || theme).shape.borderRadius
  }, ownerState.hasChildren && {
    "& > *": {
      visibility: "hidden"
    }
  }, ownerState.hasChildren && !ownerState.width && {
    maxWidth: "fit-content"
  }, ownerState.hasChildren && !ownerState.height && {
    height: "auto"
  });
}, ({
  ownerState
}) => ownerState.animation === "pulse" && css(_t34 || (_t34 = _4`
      animation: ${0} 2s ease-in-out 0.5s infinite;
    `), pulseKeyframe), ({
  ownerState,
  theme
}) => ownerState.animation === "wave" && css(_t44 || (_t44 = _4`
      position: relative;
      overflow: hidden;

      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
      -webkit-mask-image: -webkit-radial-gradient(white, black);

      &::after {
        animation: ${0} 2s linear 0.5s infinite;
        background: linear-gradient(
          90deg,
          transparent,
          ${0},
          transparent
        );
        content: '';
        position: absolute;
        transform: translateX(-100%); /* Avoid flash during server-side hydration */
        bottom: 0;
        left: 0;
        right: 0;
        top: 0;
      }
    `), waveKeyframe, (theme.vars || theme).palette.action.hover));
var Skeleton = React235.forwardRef(function Skeleton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSkeleton"
  });
  const {
    animation = "pulse",
    className,
    component = "span",
    height: height2,
    style: style4,
    variant = "text",
    width: width2
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded139);
  const ownerState = _extends({}, props, {
    animation,
    component,
    variant,
    hasChildren: Boolean(other.children)
  });
  const classes2 = useUtilityClasses106(ownerState);
  return (0, import_jsx_runtime209.jsx)(SkeletonRoot, _extends({
    as: component,
    ref,
    className: clsx_default2(classes2.root, className),
    ownerState
  }, other, {
    style: _extends({
      width: width2,
      height: height2
    }, style4)
  }));
});
true ? Skeleton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: import_prop_types156.default.oneOf(["pulse", "wave", false]),
  /**
   * Optional children to infer width and height from.
   */
  children: import_prop_types156.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types156.default.object,
  /**
   * @ignore
   */
  className: import_prop_types156.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types156.default.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: import_prop_types156.default.oneOfType([import_prop_types156.default.number, import_prop_types156.default.string]),
  /**
   * @ignore
   */
  style: import_prop_types156.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types156.default.oneOfType([import_prop_types156.default.arrayOf(import_prop_types156.default.oneOfType([import_prop_types156.default.func, import_prop_types156.default.object, import_prop_types156.default.bool])), import_prop_types156.default.func, import_prop_types156.default.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: import_prop_types156.default.oneOfType([import_prop_types156.default.oneOf(["circular", "rectangular", "rounded", "text"]), import_prop_types156.default.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: import_prop_types156.default.oneOfType([import_prop_types156.default.number, import_prop_types156.default.string])
} : void 0;

// node_modules/@mui/material/Slider/Slider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React237 = __toESM(require_react());
var import_prop_types158 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_esm2();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/utils/shouldSpreadAdditionalProps.js
var shouldSpreadAdditionalProps = (Slot) => {
  return !Slot || !isHostComponent(Slot);
};
var shouldSpreadAdditionalProps_default = shouldSpreadAdditionalProps;

// node_modules/@mui/material/Slider/Slider.js
init_capitalize3();

// node_modules/@mui/material/Slider/SliderValueLabel.js
var React236 = __toESM(require_react());
var import_prop_types157 = __toESM(require_prop_types());
init_clsx2();

// node_modules/@mui/material/Slider/sliderClasses.js
init_esm();
init_generateUtilityClass3();
function getSliderUtilityClass2(slot) {
  return generateUtilityClass("MuiSlider", slot);
}
var sliderClasses2 = generateUtilityClasses("MuiSlider", ["root", "active", "colorPrimary", "colorSecondary", "disabled", "dragging", "focusVisible", "mark", "markActive", "marked", "markLabel", "markLabelActive", "rail", "sizeSmall", "thumb", "thumbColorPrimary", "thumbColorSecondary", "track", "trackInverted", "trackFalse", "thumbSizeSmall", "valueLabel", "valueLabelOpen", "valueLabelCircle", "valueLabelLabel", "vertical"]);
var sliderClasses_default = sliderClasses2;

// node_modules/@mui/material/Slider/SliderValueLabel.js
var import_jsx_runtime210 = __toESM(require_jsx_runtime());
var import_jsx_runtime211 = __toESM(require_jsx_runtime());
var useValueLabelClasses = (props) => {
  const {
    open
  } = props;
  const utilityClasses = {
    offset: clsx_default2(open && sliderClasses_default.valueLabelOpen),
    circle: sliderClasses_default.valueLabelCircle,
    label: sliderClasses_default.valueLabelLabel
  };
  return utilityClasses;
};
function SliderValueLabel(props) {
  const {
    children: children2,
    className,
    value
  } = props;
  const classes2 = useValueLabelClasses(props);
  if (!children2) {
    return null;
  }
  return React236.cloneElement(children2, {
    className: clsx_default2(children2.props.className)
  }, (0, import_jsx_runtime211.jsxs)(React236.Fragment, {
    children: [children2.props.children, (0, import_jsx_runtime210.jsx)("span", {
      className: clsx_default2(classes2.offset, className),
      "aria-hidden": true,
      children: (0, import_jsx_runtime210.jsx)("span", {
        className: classes2.circle,
        children: (0, import_jsx_runtime210.jsx)("span", {
          className: classes2.label,
          children: value
        })
      })
    })]
  }));
}
true ? SliderValueLabel.propTypes = {
  children: import_prop_types157.default.element.isRequired,
  className: import_prop_types157.default.string,
  value: import_prop_types157.default.node
} : void 0;

// node_modules/@mui/material/Slider/Slider.js
var import_jsx_runtime212 = __toESM(require_jsx_runtime());
var import_jsx_runtime213 = __toESM(require_jsx_runtime());
var _excluded140 = ["aria-label", "aria-valuetext", "aria-labelledby", "component", "components", "componentsProps", "color", "classes", "className", "disableSwap", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "orientation", "size", "step", "scale", "slotProps", "slots", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat"];
function Identity3(x) {
  return x;
}
var SliderRoot = styled_default2("span", {
  name: "MuiSlider",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`color${capitalize_default(ownerState.color)}`], ownerState.size !== "medium" && styles7[`size${capitalize_default(ownerState.size)}`], ownerState.marked && styles7.marked, ownerState.orientation === "vertical" && styles7.vertical, ownerState.track === "inverted" && styles7.trackInverted, ownerState.track === false && styles7.trackFalse];
  }
})(({
  theme,
  ownerState
}) => _extends({
  borderRadius: 12,
  boxSizing: "content-box",
  display: "inline-block",
  position: "relative",
  cursor: "pointer",
  touchAction: "none",
  color: (theme.vars || theme).palette[ownerState.color].main,
  WebkitTapHighlightColor: "transparent"
}, ownerState.orientation === "horizontal" && _extends({
  height: 4,
  width: "100%",
  padding: "13px 0",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "20px 0"
  }
}, ownerState.size === "small" && {
  height: 2
}, ownerState.marked && {
  marginBottom: 20
}), ownerState.orientation === "vertical" && _extends({
  height: "100%",
  width: 4,
  padding: "0 13px",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "0 20px"
  }
}, ownerState.size === "small" && {
  width: 2
}, ownerState.marked && {
  marginRight: 44
}), {
  "@media print": {
    colorAdjust: "exact"
  },
  [`&.${sliderClasses_default.disabled}`]: {
    pointerEvents: "none",
    cursor: "default",
    color: (theme.vars || theme).palette.grey[400]
  },
  [`&.${sliderClasses_default.dragging}`]: {
    [`& .${sliderClasses_default.thumb}, & .${sliderClasses_default.track}`]: {
      transition: "none"
    }
  }
}));
true ? SliderRoot.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types158.default.node
} : void 0;
var SliderRail = styled_default2("span", {
  name: "MuiSlider",
  slot: "Rail",
  overridesResolver: (props, styles7) => styles7.rail
})(({
  ownerState
}) => _extends({
  display: "block",
  position: "absolute",
  borderRadius: "inherit",
  backgroundColor: "currentColor",
  opacity: 0.38
}, ownerState.orientation === "horizontal" && {
  width: "100%",
  height: "inherit",
  top: "50%",
  transform: "translateY(-50%)"
}, ownerState.orientation === "vertical" && {
  height: "100%",
  width: "inherit",
  left: "50%",
  transform: "translateX(-50%)"
}, ownerState.track === "inverted" && {
  opacity: 1
}));
true ? SliderRail.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types158.default.node
} : void 0;
var SliderTrack = styled_default2("span", {
  name: "MuiSlider",
  slot: "Track",
  overridesResolver: (props, styles7) => styles7.track
})(({
  theme,
  ownerState
}) => {
  const color2 = (
    // Same logic as the LinearProgress track color
    theme.palette.mode === "light" ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.5)
  );
  return _extends({
    display: "block",
    position: "absolute",
    borderRadius: "inherit",
    border: "1px solid currentColor",
    backgroundColor: "currentColor",
    transition: theme.transitions.create(["left", "width", "bottom", "height"], {
      duration: theme.transitions.duration.shortest
    })
  }, ownerState.size === "small" && {
    border: "none"
  }, ownerState.orientation === "horizontal" && {
    height: "inherit",
    top: "50%",
    transform: "translateY(-50%)"
  }, ownerState.orientation === "vertical" && {
    width: "inherit",
    left: "50%",
    transform: "translateX(-50%)"
  }, ownerState.track === false && {
    display: "none"
  }, ownerState.track === "inverted" && {
    backgroundColor: theme.vars ? theme.vars.palette.Slider[`${ownerState.color}Track`] : color2,
    borderColor: theme.vars ? theme.vars.palette.Slider[`${ownerState.color}Track`] : color2
  });
});
true ? SliderTrack.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types158.default.node
} : void 0;
var SliderThumb = styled_default2("span", {
  name: "MuiSlider",
  slot: "Thumb",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.thumb, styles7[`thumbColor${capitalize_default(ownerState.color)}`], ownerState.size !== "medium" && styles7[`thumbSize${capitalize_default(ownerState.size)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  position: "absolute",
  width: 20,
  height: 20,
  boxSizing: "border-box",
  borderRadius: "50%",
  outline: 0,
  backgroundColor: "currentColor",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  transition: theme.transitions.create(["box-shadow", "left", "bottom"], {
    duration: theme.transitions.duration.shortest
  })
}, ownerState.size === "small" && {
  width: 12,
  height: 12
}, ownerState.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-50%, -50%)"
}, ownerState.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 50%)"
}, {
  "&:before": _extends({
    position: "absolute",
    content: '""',
    borderRadius: "inherit",
    width: "100%",
    height: "100%",
    boxShadow: (theme.vars || theme).shadows[2]
  }, ownerState.size === "small" && {
    boxShadow: "none"
  }),
  "&::after": {
    position: "absolute",
    content: '""',
    borderRadius: "50%",
    // 42px is the hit target
    width: 42,
    height: 42,
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)"
  },
  [`&:hover, &.${sliderClasses_default.focusVisible}`]: {
    boxShadow: `0px 0px 0px 8px ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.16)` : alpha(theme.palette[ownerState.color].main, 0.16)}`,
    "@media (hover: none)": {
      boxShadow: "none"
    }
  },
  [`&.${sliderClasses_default.active}`]: {
    boxShadow: `0px 0px 0px 14px ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.16)` : alpha(theme.palette[ownerState.color].main, 0.16)}`
  },
  [`&.${sliderClasses_default.disabled}`]: {
    "&:hover": {
      boxShadow: "none"
    }
  }
}));
true ? SliderThumb.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types158.default.node
} : void 0;
var StyledSliderValueLabel = styled_default2(SliderValueLabel, {
  name: "MuiSlider",
  slot: "ValueLabel",
  overridesResolver: (props, styles7) => styles7.valueLabel
})(({
  theme,
  ownerState
}) => _extends({
  [`&.${sliderClasses_default.valueLabelOpen}`]: {
    transform: `${ownerState.orientation === "vertical" ? "translateY(-50%)" : "translateY(-100%)"} scale(1)`
  },
  zIndex: 1,
  whiteSpace: "nowrap"
}, theme.typography.body2, {
  fontWeight: 500,
  transition: theme.transitions.create(["transform"], {
    duration: theme.transitions.duration.shortest
  }),
  transform: `${ownerState.orientation === "vertical" ? "translateY(-50%)" : "translateY(-100%)"} scale(0)`,
  position: "absolute",
  backgroundColor: (theme.vars || theme).palette.grey[600],
  borderRadius: 2,
  color: (theme.vars || theme).palette.common.white,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  padding: "0.25rem 0.75rem"
}, ownerState.orientation === "horizontal" && {
  top: "-10px",
  transformOrigin: "bottom center",
  "&:before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, 50%) rotate(45deg)",
    backgroundColor: "inherit",
    bottom: 0,
    left: "50%"
  }
}, ownerState.orientation === "vertical" && {
  right: ownerState.size === "small" ? "20px" : "30px",
  top: "50%",
  transformOrigin: "right center",
  "&:before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, -50%) rotate(45deg)",
    backgroundColor: "inherit",
    right: -8,
    top: "50%"
  }
}, ownerState.size === "small" && {
  fontSize: theme.typography.pxToRem(12),
  padding: "0.25rem 0.5rem"
}));
true ? StyledSliderValueLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types158.default.node
} : void 0;
var SliderMark = styled_default2("span", {
  name: "MuiSlider",
  slot: "Mark",
  shouldForwardProp: (prop) => slotShouldForwardProp(prop) && prop !== "markActive",
  overridesResolver: (props, styles7) => {
    const {
      markActive
    } = props;
    return [styles7.mark, markActive && styles7.markActive];
  }
})(({
  theme,
  ownerState,
  markActive
}) => _extends({
  position: "absolute",
  width: 2,
  height: 2,
  borderRadius: 1,
  backgroundColor: "currentColor"
}, ownerState.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-1px, -50%)"
}, ownerState.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 1px)"
}, markActive && {
  backgroundColor: (theme.vars || theme).palette.background.paper,
  opacity: 0.8
}));
true ? SliderMark.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types158.default.node
} : void 0;
var SliderMarkLabel = styled_default2("span", {
  name: "MuiSlider",
  slot: "MarkLabel",
  shouldForwardProp: (prop) => slotShouldForwardProp(prop) && prop !== "markLabelActive",
  overridesResolver: (props, styles7) => styles7.markLabel
})(({
  theme,
  ownerState,
  markLabelActive
}) => _extends({}, theme.typography.body2, {
  color: (theme.vars || theme).palette.text.secondary,
  position: "absolute",
  whiteSpace: "nowrap"
}, ownerState.orientation === "horizontal" && {
  top: 30,
  transform: "translateX(-50%)",
  "@media (pointer: coarse)": {
    top: 40
  }
}, ownerState.orientation === "vertical" && {
  left: 36,
  transform: "translateY(50%)",
  "@media (pointer: coarse)": {
    left: 44
  }
}, markLabelActive && {
  color: (theme.vars || theme).palette.text.primary
}));
true ? SliderMarkLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types158.default.node
} : void 0;
var useUtilityClasses107 = (ownerState) => {
  const {
    disabled,
    dragging,
    marked,
    orientation,
    track,
    classes: classes2,
    color: color2,
    size: size2
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", dragging && "dragging", marked && "marked", orientation === "vertical" && "vertical", track === "inverted" && "trackInverted", track === false && "trackFalse", color2 && `color${capitalize_default(color2)}`, size2 && `size${capitalize_default(size2)}`],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    thumb: ["thumb", disabled && "disabled", size2 && `thumbSize${capitalize_default(size2)}`, color2 && `thumbColor${capitalize_default(color2)}`],
    active: ["active"],
    disabled: ["disabled"],
    focusVisible: ["focusVisible"]
  };
  return composeClasses(slots, getSliderUtilityClass2, classes2);
};
var Forward = ({
  children: children2
}) => children2;
var Slider3 = React237.forwardRef(function Slider4(inputProps, ref) {
  var _ref2, _slots$root, _ref22, _slots$rail, _ref3, _slots$track, _ref4, _slots$thumb, _ref5, _slots$valueLabel, _ref6, _slots$mark, _ref7, _slots$markLabel, _ref8, _slots$input, _slotProps$root, _slotProps$rail, _slotProps$track, _slotProps$thumb, _slotProps$valueLabel, _slotProps$mark, _slotProps$markLabel, _slotProps$input;
  const props = useThemeProps2({
    props: inputProps,
    name: "MuiSlider"
  });
  const theme = useTheme5();
  const isRtl = theme.direction === "rtl";
  const {
    "aria-label": ariaLabel,
    "aria-valuetext": ariaValuetext,
    "aria-labelledby": ariaLabelledby,
    // eslint-disable-next-line react/prop-types
    component = "span",
    components = {},
    componentsProps = {},
    color: color2 = "primary",
    classes: classesProp,
    className,
    disableSwap = false,
    disabled = false,
    getAriaLabel,
    getAriaValueText,
    marks: marksProp = false,
    max: max3 = 100,
    min: min3 = 0,
    orientation = "horizontal",
    size: size2 = "medium",
    step = 1,
    scale = Identity3,
    slotProps,
    slots,
    track = "normal",
    valueLabelDisplay = "off",
    valueLabelFormat = Identity3
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded140);
  const ownerState = _extends({}, props, {
    isRtl,
    max: max3,
    min: min3,
    classes: classesProp,
    disabled,
    disableSwap,
    orientation,
    marks: marksProp,
    color: color2,
    size: size2,
    step,
    scale,
    track,
    valueLabelDisplay,
    valueLabelFormat
  });
  const {
    axisProps: axisProps2,
    getRootProps,
    getHiddenInputProps,
    getThumbProps,
    open,
    active,
    axis,
    focusedThumbIndex,
    range,
    dragging,
    marks,
    values: values3,
    trackOffset,
    trackLeap,
    getThumbStyle
  } = useSlider(_extends({}, ownerState, {
    rootRef: ref
  }));
  ownerState.marked = marks.length > 0 && marks.some((mark) => mark.label);
  ownerState.dragging = dragging;
  ownerState.focusedThumbIndex = focusedThumbIndex;
  const classes2 = useUtilityClasses107(ownerState);
  const RootSlot = (_ref2 = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref2 : SliderRoot;
  const RailSlot = (_ref22 = (_slots$rail = slots == null ? void 0 : slots.rail) != null ? _slots$rail : components.Rail) != null ? _ref22 : SliderRail;
  const TrackSlot = (_ref3 = (_slots$track = slots == null ? void 0 : slots.track) != null ? _slots$track : components.Track) != null ? _ref3 : SliderTrack;
  const ThumbSlot = (_ref4 = (_slots$thumb = slots == null ? void 0 : slots.thumb) != null ? _slots$thumb : components.Thumb) != null ? _ref4 : SliderThumb;
  const ValueLabelSlot = (_ref5 = (_slots$valueLabel = slots == null ? void 0 : slots.valueLabel) != null ? _slots$valueLabel : components.ValueLabel) != null ? _ref5 : StyledSliderValueLabel;
  const MarkSlot = (_ref6 = (_slots$mark = slots == null ? void 0 : slots.mark) != null ? _slots$mark : components.Mark) != null ? _ref6 : SliderMark;
  const MarkLabelSlot = (_ref7 = (_slots$markLabel = slots == null ? void 0 : slots.markLabel) != null ? _slots$markLabel : components.MarkLabel) != null ? _ref7 : SliderMarkLabel;
  const InputSlot = (_ref8 = (_slots$input = slots == null ? void 0 : slots.input) != null ? _slots$input : components.Input) != null ? _ref8 : "input";
  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;
  const railSlotProps = (_slotProps$rail = slotProps == null ? void 0 : slotProps.rail) != null ? _slotProps$rail : componentsProps.rail;
  const trackSlotProps = (_slotProps$track = slotProps == null ? void 0 : slotProps.track) != null ? _slotProps$track : componentsProps.track;
  const thumbSlotProps = (_slotProps$thumb = slotProps == null ? void 0 : slotProps.thumb) != null ? _slotProps$thumb : componentsProps.thumb;
  const valueLabelSlotProps = (_slotProps$valueLabel = slotProps == null ? void 0 : slotProps.valueLabel) != null ? _slotProps$valueLabel : componentsProps.valueLabel;
  const markSlotProps = (_slotProps$mark = slotProps == null ? void 0 : slotProps.mark) != null ? _slotProps$mark : componentsProps.mark;
  const markLabelSlotProps = (_slotProps$markLabel = slotProps == null ? void 0 : slotProps.markLabel) != null ? _slotProps$markLabel : componentsProps.markLabel;
  const inputSlotProps = (_slotProps$input = slotProps == null ? void 0 : slotProps.input) != null ? _slotProps$input : componentsProps.input;
  const rootProps = useSlotProps({
    elementType: RootSlot,
    getSlotProps: getRootProps,
    externalSlotProps: rootSlotProps,
    externalForwardedProps: other,
    additionalProps: _extends({}, shouldSpreadAdditionalProps_default(RootSlot) && {
      as: component
    }),
    ownerState: _extends({}, ownerState, rootSlotProps == null ? void 0 : rootSlotProps.ownerState),
    className: [classes2.root, className]
  });
  const railProps = useSlotProps({
    elementType: RailSlot,
    externalSlotProps: railSlotProps,
    ownerState,
    className: classes2.rail
  });
  const trackProps = useSlotProps({
    elementType: TrackSlot,
    externalSlotProps: trackSlotProps,
    additionalProps: {
      style: _extends({}, axisProps2[axis].offset(trackOffset), axisProps2[axis].leap(trackLeap))
    },
    ownerState: _extends({}, ownerState, trackSlotProps == null ? void 0 : trackSlotProps.ownerState),
    className: classes2.track
  });
  const thumbProps = useSlotProps({
    elementType: ThumbSlot,
    getSlotProps: getThumbProps,
    externalSlotProps: thumbSlotProps,
    ownerState: _extends({}, ownerState, thumbSlotProps == null ? void 0 : thumbSlotProps.ownerState),
    className: classes2.thumb
  });
  const valueLabelProps = useSlotProps({
    elementType: ValueLabelSlot,
    externalSlotProps: valueLabelSlotProps,
    ownerState: _extends({}, ownerState, valueLabelSlotProps == null ? void 0 : valueLabelSlotProps.ownerState),
    className: classes2.valueLabel
  });
  const markProps = useSlotProps({
    elementType: MarkSlot,
    externalSlotProps: markSlotProps,
    ownerState,
    className: classes2.mark
  });
  const markLabelProps = useSlotProps({
    elementType: MarkLabelSlot,
    externalSlotProps: markLabelSlotProps,
    ownerState,
    className: classes2.markLabel
  });
  const inputSliderProps = useSlotProps({
    elementType: InputSlot,
    getSlotProps: getHiddenInputProps,
    externalSlotProps: inputSlotProps,
    ownerState
  });
  return (0, import_jsx_runtime213.jsxs)(RootSlot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime212.jsx)(RailSlot, _extends({}, railProps)), (0, import_jsx_runtime212.jsx)(TrackSlot, _extends({}, trackProps)), marks.filter((mark) => mark.value >= min3 && mark.value <= max3).map((mark, index2) => {
      const percent = valueToPercent(mark.value, min3, max3);
      const style4 = axisProps2[axis].offset(percent);
      let markActive;
      if (track === false) {
        markActive = values3.indexOf(mark.value) !== -1;
      } else {
        markActive = track === "normal" && (range ? mark.value >= values3[0] && mark.value <= values3[values3.length - 1] : mark.value <= values3[0]) || track === "inverted" && (range ? mark.value <= values3[0] || mark.value >= values3[values3.length - 1] : mark.value >= values3[0]);
      }
      return (0, import_jsx_runtime213.jsxs)(React237.Fragment, {
        children: [(0, import_jsx_runtime212.jsx)(MarkSlot, _extends({
          "data-index": index2
        }, markProps, !isHostComponent(MarkSlot) && {
          markActive
        }, {
          style: _extends({}, style4, markProps.style),
          className: clsx_default2(markProps.className, markActive && classes2.markActive)
        })), mark.label != null ? (0, import_jsx_runtime212.jsx)(MarkLabelSlot, _extends({
          "aria-hidden": true,
          "data-index": index2
        }, markLabelProps, !isHostComponent(MarkLabelSlot) && {
          markLabelActive: markActive
        }, {
          style: _extends({}, style4, markLabelProps.style),
          className: clsx_default2(classes2.markLabel, markLabelProps.className, markActive && classes2.markLabelActive),
          children: mark.label
        })) : null]
      }, index2);
    }), values3.map((value, index2) => {
      const percent = valueToPercent(value, min3, max3);
      const style4 = axisProps2[axis].offset(percent);
      const ValueLabelComponent = valueLabelDisplay === "off" ? Forward : ValueLabelSlot;
      return (
        /* TODO v6: Change component structure. It will help in avoiding the complicated React.cloneElement API added in SliderValueLabel component. Should be: Thumb -> Input, ValueLabel. Follow Joy UI's Slider structure. */
        (0, import_jsx_runtime212.jsx)(ValueLabelComponent, _extends({}, !isHostComponent(ValueLabelComponent) && {
          valueLabelFormat,
          valueLabelDisplay,
          value: typeof valueLabelFormat === "function" ? valueLabelFormat(scale(value), index2) : valueLabelFormat,
          index: index2,
          open: open === index2 || active === index2 || valueLabelDisplay === "on",
          disabled
        }, valueLabelProps, {
          children: (0, import_jsx_runtime212.jsx)(ThumbSlot, _extends({
            "data-index": index2
          }, thumbProps, {
            className: clsx_default2(classes2.thumb, thumbProps.className, active === index2 && classes2.active, focusedThumbIndex === index2 && classes2.focusVisible),
            style: _extends({}, style4, getThumbStyle(index2), thumbProps.style),
            children: (0, import_jsx_runtime212.jsx)(InputSlot, _extends({
              "data-index": index2,
              "aria-label": getAriaLabel ? getAriaLabel(index2) : ariaLabel,
              "aria-valuenow": scale(value),
              "aria-labelledby": ariaLabelledby,
              "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index2) : ariaValuetext,
              value: values3[index2]
            }, inputSliderProps))
          }))
        }), index2)
      );
    })]
  }));
});
true ? Slider3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The label of the slider.
   */
  "aria-label": chainPropTypes(import_prop_types158.default.string, (props) => {
    const range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-label"] != null) {
      return new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.");
    }
    return null;
  }),
  /**
   * The id of the element containing a label for the slider.
   */
  "aria-labelledby": import_prop_types158.default.string,
  /**
   * A string value that provides a user-friendly name for the current value of the slider.
   */
  "aria-valuetext": chainPropTypes(import_prop_types158.default.string, (props) => {
    const range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-valuetext"] != null) {
      return new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.");
    }
    return null;
  }),
  /**
   * @ignore
   */
  children: import_prop_types158.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types158.default.object,
  /**
   * @ignore
   */
  className: import_prop_types158.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types158.default.oneOfType([import_prop_types158.default.oneOf(["primary", "secondary"]), import_prop_types158.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types158.default.shape({
    Input: import_prop_types158.default.elementType,
    Mark: import_prop_types158.default.elementType,
    MarkLabel: import_prop_types158.default.elementType,
    Rail: import_prop_types158.default.elementType,
    Root: import_prop_types158.default.elementType,
    Thumb: import_prop_types158.default.elementType,
    Track: import_prop_types158.default.elementType,
    ValueLabel: import_prop_types158.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types158.default.shape({
    input: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    mark: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    markLabel: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    rail: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    root: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    thumb: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    track: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    valueLabel: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.shape({
      children: import_prop_types158.default.element,
      className: import_prop_types158.default.string,
      open: import_prop_types158.default.bool,
      style: import_prop_types158.default.object,
      value: import_prop_types158.default.number,
      valueLabelDisplay: import_prop_types158.default.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types158.default.oneOfType([import_prop_types158.default.arrayOf(import_prop_types158.default.number), import_prop_types158.default.number]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types158.default.bool,
  /**
   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
   * @default false
   */
  disableSwap: import_prop_types158.default.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
   * This is important for screen reader users.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaLabel: import_prop_types158.default.func,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
   * This is important for screen reader users.
   * @param {number} value The thumb label's value to format.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaValueText: import_prop_types158.default.func,
  /**
   * Marks indicate predetermined values to which the user can move the slider.
   * If `true` the marks are spaced according the value of the `step` prop.
   * If an array, it should contain objects with `value` and an optional `label` keys.
   * @default false
   */
  marks: import_prop_types158.default.oneOfType([import_prop_types158.default.arrayOf(import_prop_types158.default.shape({
    label: import_prop_types158.default.node,
    value: import_prop_types158.default.number.isRequired
  })), import_prop_types158.default.bool]),
  /**
   * The maximum allowed value of the slider.
   * Should not be equal to min.
   * @default 100
   */
  max: import_prop_types158.default.number,
  /**
   * The minimum allowed value of the slider.
   * Should not be equal to max.
   * @default 0
   */
  min: import_prop_types158.default.number,
  /**
   * Name attribute of the hidden `input` element.
   */
  name: import_prop_types158.default.string,
  /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {Event} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   * @param {number} activeThumb Index of the currently moved thumb.
   */
  onChange: import_prop_types158.default.func,
  /**
   * Callback function that is fired when the `mouseup` is triggered.
   *
   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   */
  onChangeCommitted: import_prop_types158.default.func,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: import_prop_types158.default.oneOf(["horizontal", "vertical"]),
  /**
   * A transformation function, to change the scale of the slider.
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  scale: import_prop_types158.default.func,
  /**
   * The size of the slider.
   * @default 'medium'
   */
  size: import_prop_types158.default.oneOfType([import_prop_types158.default.oneOf(["small", "medium"]), import_prop_types158.default.string]),
  /**
   * The props used for each slot inside the Slider.
   * @default {}
   */
  slotProps: import_prop_types158.default.shape({
    input: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    mark: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    markLabel: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    rail: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    root: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    thumb: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    track: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object]),
    valueLabel: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.shape({
      children: import_prop_types158.default.element,
      className: import_prop_types158.default.string,
      open: import_prop_types158.default.bool,
      style: import_prop_types158.default.object,
      value: import_prop_types158.default.number,
      valueLabelDisplay: import_prop_types158.default.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The components used for each slot inside the Slider.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types158.default.shape({
    input: import_prop_types158.default.elementType,
    mark: import_prop_types158.default.elementType,
    markLabel: import_prop_types158.default.elementType,
    rail: import_prop_types158.default.elementType,
    root: import_prop_types158.default.elementType,
    thumb: import_prop_types158.default.elementType,
    track: import_prop_types158.default.elementType,
    valueLabel: import_prop_types158.default.elementType
  }),
  /**
   * The granularity with which the slider can step through values. (A "discrete" slider.)
   * The `min` prop serves as the origin for the valid values.
   * We recommend (max - min) to be evenly divisible by the step.
   *
   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
   * @default 1
   */
  step: import_prop_types158.default.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types158.default.oneOfType([import_prop_types158.default.arrayOf(import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.object, import_prop_types158.default.bool])), import_prop_types158.default.func, import_prop_types158.default.object]),
  /**
   * Tab index attribute of the hidden `input` element.
   */
  tabIndex: import_prop_types158.default.number,
  /**
   * The track presentation:
   *
   * - `normal` the track will render a bar representing the slider value.
   * - `inverted` the track will render a bar representing the remaining slider value.
   * - `false` the track will render without a bar.
   * @default 'normal'
   */
  track: import_prop_types158.default.oneOf(["inverted", "normal", false]),
  /**
   * The value of the slider.
   * For ranged sliders, provide an array with two values.
   */
  value: import_prop_types158.default.oneOfType([import_prop_types158.default.arrayOf(import_prop_types158.default.number), import_prop_types158.default.number]),
  /**
   * Controls when the value label is displayed:
   *
   * - `auto` the value label will display when the thumb is hovered or focused.
   * - `on` will display persistently.
   * - `off` will never display.
   * @default 'off'
   */
  valueLabelDisplay: import_prop_types158.default.oneOf(["auto", "off", "on"]),
  /**
   * The format function the value label's value.
   *
   * When a function is provided, it should have the following signature:
   *
   * - {number} value The value label's value to format
   * - {number} index The value label's index to format
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  valueLabelFormat: import_prop_types158.default.oneOfType([import_prop_types158.default.func, import_prop_types158.default.string])
} : void 0;

// node_modules/@mui/material/Snackbar/Snackbar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React239 = __toESM(require_react());
var import_prop_types160 = __toESM(require_prop_types());
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/SnackbarContent/SnackbarContent.js
init_objectWithoutPropertiesLoose();
init_extends();
var React238 = __toESM(require_react());
var import_prop_types159 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js
init_esm();
init_generateUtilityClass3();
function getSnackbarContentUtilityClass(slot) {
  return generateUtilityClass("MuiSnackbarContent", slot);
}
var snackbarContentClasses = generateUtilityClasses("MuiSnackbarContent", ["root", "message", "action"]);

// node_modules/@mui/material/SnackbarContent/SnackbarContent.js
var import_jsx_runtime214 = __toESM(require_jsx_runtime());
var import_jsx_runtime215 = __toESM(require_jsx_runtime());
var _excluded141 = ["action", "className", "message", "role"];
var useUtilityClasses108 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    action: ["action"],
    message: ["message"]
  };
  return composeClasses(slots, getSnackbarContentUtilityClass, classes2);
};
var SnackbarContentRoot = styled_default2(Paper_default, {
  name: "MuiSnackbarContent",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(({
  theme
}) => {
  const emphasis = theme.palette.mode === "light" ? 0.8 : 0.98;
  const backgroundColor2 = emphasize(theme.palette.background.default, emphasis);
  return _extends({}, theme.typography.body2, {
    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor2),
    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor2,
    display: "flex",
    alignItems: "center",
    flexWrap: "wrap",
    padding: "6px 16px",
    borderRadius: (theme.vars || theme).shape.borderRadius,
    flexGrow: 1,
    [theme.breakpoints.up("sm")]: {
      flexGrow: "initial",
      minWidth: 288
    }
  });
});
var SnackbarContentMessage = styled_default2("div", {
  name: "MuiSnackbarContent",
  slot: "Message",
  overridesResolver: (props, styles7) => styles7.message
})({
  padding: "8px 0"
});
var SnackbarContentAction = styled_default2("div", {
  name: "MuiSnackbarContent",
  slot: "Action",
  overridesResolver: (props, styles7) => styles7.action
})({
  display: "flex",
  alignItems: "center",
  marginLeft: "auto",
  paddingLeft: 16,
  marginRight: -8
});
var SnackbarContent = React238.forwardRef(function SnackbarContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSnackbarContent"
  });
  const {
    action,
    className,
    message,
    role = "alert"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded141);
  const ownerState = props;
  const classes2 = useUtilityClasses108(ownerState);
  return (0, import_jsx_runtime215.jsxs)(SnackbarContentRoot, _extends({
    role,
    square: true,
    elevation: 6,
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref
  }, other, {
    children: [(0, import_jsx_runtime214.jsx)(SnackbarContentMessage, {
      className: classes2.message,
      ownerState,
      children: message
    }), action ? (0, import_jsx_runtime214.jsx)(SnackbarContentAction, {
      className: classes2.action,
      ownerState,
      children: action
    }) : null]
  }));
});
true ? SnackbarContent.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: import_prop_types159.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types159.default.object,
  /**
   * @ignore
   */
  className: import_prop_types159.default.string,
  /**
   * The message to display.
   */
  message: import_prop_types159.default.node,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: import_prop_types159.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types159.default.oneOfType([import_prop_types159.default.arrayOf(import_prop_types159.default.oneOfType([import_prop_types159.default.func, import_prop_types159.default.object, import_prop_types159.default.bool])), import_prop_types159.default.func, import_prop_types159.default.object])
} : void 0;
var SnackbarContent_default = SnackbarContent;

// node_modules/@mui/material/Snackbar/snackbarClasses.js
init_esm();
init_generateUtilityClass3();
function getSnackbarUtilityClass2(slot) {
  return generateUtilityClass("MuiSnackbar", slot);
}
var snackbarClasses2 = generateUtilityClasses("MuiSnackbar", ["root", "anchorOriginTopCenter", "anchorOriginBottomCenter", "anchorOriginTopRight", "anchorOriginBottomRight", "anchorOriginTopLeft", "anchorOriginBottomLeft"]);

// node_modules/@mui/material/Snackbar/Snackbar.js
var import_jsx_runtime216 = __toESM(require_jsx_runtime());
var _excluded142 = ["onEnter", "onExited"];
var _excluded219 = ["action", "anchorOrigin", "autoHideDuration", "children", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onBlur", "onClose", "onFocus", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"];
var useUtilityClasses109 = (ownerState) => {
  const {
    classes: classes2,
    anchorOrigin
  } = ownerState;
  const slots = {
    root: ["root", `anchorOrigin${capitalize_default(anchorOrigin.vertical)}${capitalize_default(anchorOrigin.horizontal)}`]
  };
  return composeClasses(slots, getSnackbarUtilityClass2, classes2);
};
var SnackbarRoot = styled_default2("div", {
  name: "MuiSnackbar",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`anchorOrigin${capitalize_default(ownerState.anchorOrigin.vertical)}${capitalize_default(ownerState.anchorOrigin.horizontal)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  const center = {
    left: "50%",
    right: "auto",
    transform: "translateX(-50%)"
  };
  return _extends({
    zIndex: (theme.vars || theme).zIndex.snackbar,
    position: "fixed",
    display: "flex",
    left: 8,
    right: 8,
    justifyContent: "center",
    alignItems: "center"
  }, ownerState.anchorOrigin.vertical === "top" ? {
    top: 8
  } : {
    bottom: 8
  }, ownerState.anchorOrigin.horizontal === "left" && {
    justifyContent: "flex-start"
  }, ownerState.anchorOrigin.horizontal === "right" && {
    justifyContent: "flex-end"
  }, {
    [theme.breakpoints.up("sm")]: _extends({}, ownerState.anchorOrigin.vertical === "top" ? {
      top: 24
    } : {
      bottom: 24
    }, ownerState.anchorOrigin.horizontal === "center" && center, ownerState.anchorOrigin.horizontal === "left" && {
      left: 24,
      right: "auto"
    }, ownerState.anchorOrigin.horizontal === "right" && {
      right: 24,
      left: "auto"
    })
  });
});
var Snackbar3 = React239.forwardRef(function Snackbar4(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSnackbar"
  });
  const theme = useTheme5();
  const defaultTransitionDuration = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    action,
    anchorOrigin: {
      vertical,
      horizontal
    } = {
      vertical: "bottom",
      horizontal: "left"
    },
    autoHideDuration = null,
    children: children2,
    className,
    ClickAwayListenerProps,
    ContentProps,
    disableWindowBlurListener = false,
    message,
    open,
    TransitionComponent = Grow_default,
    transitionDuration = defaultTransitionDuration,
    TransitionProps: {
      onEnter,
      onExited
    } = {}
  } = props, TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded142), other = _objectWithoutPropertiesLoose(props, _excluded219);
  const ownerState = _extends({}, props, {
    anchorOrigin: {
      vertical,
      horizontal
    },
    autoHideDuration,
    disableWindowBlurListener,
    TransitionComponent,
    transitionDuration
  });
  const classes2 = useUtilityClasses109(ownerState);
  const {
    getRootProps,
    onClickAway
  } = useSnackbar(_extends({}, ownerState));
  const [exited, setExited] = React239.useState(true);
  const rootProps = useSlotProps({
    elementType: SnackbarRoot,
    getSlotProps: getRootProps,
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref
    },
    className: [classes2.root, className]
  });
  const handleExited = (node2) => {
    setExited(true);
    if (onExited) {
      onExited(node2);
    }
  };
  const handleEnter = (node2, isAppearing) => {
    setExited(false);
    if (onEnter) {
      onEnter(node2, isAppearing);
    }
  };
  if (!open && exited) {
    return null;
  }
  return (0, import_jsx_runtime216.jsx)(ClickAwayListener, _extends({
    onClickAway
  }, ClickAwayListenerProps, {
    children: (0, import_jsx_runtime216.jsx)(SnackbarRoot, _extends({}, rootProps, {
      children: (0, import_jsx_runtime216.jsx)(TransitionComponent, _extends({
        appear: true,
        in: open,
        timeout: transitionDuration,
        direction: vertical === "top" ? "down" : "up",
        onEnter: handleEnter,
        onExited: handleExited
      }, TransitionProps, {
        children: children2 || (0, import_jsx_runtime216.jsx)(SnackbarContent_default, _extends({
          message,
          action
        }, ContentProps))
      }))
    }))
  }));
});
true ? Snackbar3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: import_prop_types160.default.node,
  /**
   * The anchor of the `Snackbar`.
   * On smaller screens, the component grows to occupy all the available width,
   * the horizontal alignment is ignored.
   * @default { vertical: 'bottom', horizontal: 'left' }
   */
  anchorOrigin: import_prop_types160.default.shape({
    horizontal: import_prop_types160.default.oneOf(["center", "left", "right"]).isRequired,
    vertical: import_prop_types160.default.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The number of milliseconds to wait before automatically calling the
   * `onClose` function. `onClose` should then set the state of the `open`
   * prop to hide the Snackbar. This behavior is disabled by default with
   * the `null` value.
   * @default null
   */
  autoHideDuration: import_prop_types160.default.number,
  /**
   * Replace the `SnackbarContent` component.
   */
  children: import_prop_types160.default.element,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types160.default.object,
  /**
   * @ignore
   */
  className: import_prop_types160.default.string,
  /**
   * Props applied to the `ClickAwayListener` element.
   */
  ClickAwayListenerProps: import_prop_types160.default.object,
  /**
   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.
   */
  ContentProps: import_prop_types160.default.object,
  /**
   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.
   * @default false
   */
  disableWindowBlurListener: import_prop_types160.default.bool,
  /**
   * When displaying multiple consecutive snackbars using a single parent-rendered
   * `<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.
   * For instance, use `<Snackbar key={message} />`. Otherwise, messages might update
   * in place, and features like `autoHideDuration` could be affected.
   */
  key: () => null,
  /**
   * The message to display.
   */
  message: import_prop_types160.default.node,
  /**
   * @ignore
   */
  onBlur: import_prop_types160.default.func,
  /**
   * Callback fired when the component requests to be closed.
   * Typically `onClose` is used to set state in the parent component,
   * which is used to control the `Snackbar` `open` prop.
   * The `reason` parameter can optionally be used to control the response to `onClose`,
   * for example ignoring `clickaway`.
   *
   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.
   * @param {string} reason Can be: `"timeout"` (`autoHideDuration` expired), `"clickaway"`, or `"escapeKeyDown"`.
   */
  onClose: import_prop_types160.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types160.default.func,
  /**
   * @ignore
   */
  onMouseEnter: import_prop_types160.default.func,
  /**
   * @ignore
   */
  onMouseLeave: import_prop_types160.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types160.default.bool,
  /**
   * The number of milliseconds to wait before dismissing after user interaction.
   * If `autoHideDuration` prop isn't specified, it does nothing.
   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,
   * we default to `autoHideDuration / 2` ms.
   */
  resumeHideDuration: import_prop_types160.default.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types160.default.oneOfType([import_prop_types160.default.arrayOf(import_prop_types160.default.oneOfType([import_prop_types160.default.func, import_prop_types160.default.object, import_prop_types160.default.bool])), import_prop_types160.default.func, import_prop_types160.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: import_prop_types160.default.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types160.default.oneOfType([import_prop_types160.default.number, import_prop_types160.default.shape({
    appear: import_prop_types160.default.number,
    enter: import_prop_types160.default.number,
    exit: import_prop_types160.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: import_prop_types160.default.object
} : void 0;
var Snackbar_default = Snackbar3;

// node_modules/@mui/material/SpeedDial/SpeedDial.js
init_objectWithoutPropertiesLoose();
init_extends();
var React241 = __toESM(require_react());
var import_react_is10 = __toESM(require_react_is3());
var import_prop_types162 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Zoom/Zoom.js
init_extends();
init_objectWithoutPropertiesLoose();
var React240 = __toESM(require_react());
var import_prop_types161 = __toESM(require_prop_types());
init_esm();
init_useForkRef3();
var import_jsx_runtime217 = __toESM(require_jsx_runtime());
var _excluded143 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
var styles5 = {
  entering: {
    transform: "none"
  },
  entered: {
    transform: "none"
  }
};
var Zoom = React240.forwardRef(function Zoom2(props, ref) {
  const theme = useTheme5();
  const defaultTimeout = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    addEndListener,
    appear = true,
    children: children2,
    easing: easing2,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style: style4,
    timeout: timeout2 = defaultTimeout,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded143);
  const nodeRef = React240.useRef(null);
  const handleRef = useForkRef_default(nodeRef, children2.ref, ref);
  const normalizedTransitionCallback = (callback) => (maybeIsAppearing) => {
    if (callback) {
      const node2 = nodeRef.current;
      if (maybeIsAppearing === void 0) {
        callback(node2);
      } else {
        callback(node2, maybeIsAppearing);
      }
    }
  };
  const handleEntering = normalizedTransitionCallback(onEntering);
  const handleEnter = normalizedTransitionCallback((node2, isAppearing) => {
    reflow(node2);
    const transitionProps = getTransitionProps({
      style: style4,
      timeout: timeout2,
      easing: easing2
    }, {
      mode: "enter"
    });
    node2.style.webkitTransition = theme.transitions.create("transform", transitionProps);
    node2.style.transition = theme.transitions.create("transform", transitionProps);
    if (onEnter) {
      onEnter(node2, isAppearing);
    }
  });
  const handleEntered = normalizedTransitionCallback(onEntered);
  const handleExiting = normalizedTransitionCallback(onExiting);
  const handleExit = normalizedTransitionCallback((node2) => {
    const transitionProps = getTransitionProps({
      style: style4,
      timeout: timeout2,
      easing: easing2
    }, {
      mode: "exit"
    });
    node2.style.webkitTransition = theme.transitions.create("transform", transitionProps);
    node2.style.transition = theme.transitions.create("transform", transitionProps);
    if (onExit) {
      onExit(node2);
    }
  });
  const handleExited = normalizedTransitionCallback(onExited);
  const handleAddEndListener = (next2) => {
    if (addEndListener) {
      addEndListener(nodeRef.current, next2);
    }
  };
  return (0, import_jsx_runtime217.jsx)(TransitionComponent, _extends({
    appear,
    in: inProp,
    nodeRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout: timeout2
  }, other, {
    children: (state, childProps) => {
      return React240.cloneElement(children2, _extends({
        style: _extends({
          transform: "scale(0)",
          visibility: state === "exited" && !inProp ? "hidden" : void 0
        }, styles5[state], style4, children2.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
true ? Zoom.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: import_prop_types161.default.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: import_prop_types161.default.bool,
  /**
   * A single child content element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: import_prop_types161.default.oneOfType([import_prop_types161.default.shape({
    enter: import_prop_types161.default.string,
    exit: import_prop_types161.default.string
  }), import_prop_types161.default.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: import_prop_types161.default.bool,
  /**
   * @ignore
   */
  onEnter: import_prop_types161.default.func,
  /**
   * @ignore
   */
  onEntered: import_prop_types161.default.func,
  /**
   * @ignore
   */
  onEntering: import_prop_types161.default.func,
  /**
   * @ignore
   */
  onExit: import_prop_types161.default.func,
  /**
   * @ignore
   */
  onExited: import_prop_types161.default.func,
  /**
   * @ignore
   */
  onExiting: import_prop_types161.default.func,
  /**
   * @ignore
   */
  style: import_prop_types161.default.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: import_prop_types161.default.oneOfType([import_prop_types161.default.number, import_prop_types161.default.shape({
    appear: import_prop_types161.default.number,
    enter: import_prop_types161.default.number,
    exit: import_prop_types161.default.number
  })])
} : void 0;
var Zoom_default = Zoom;

// node_modules/@mui/material/SpeedDial/SpeedDial.js
init_capitalize3();
init_isMuiElement2();
init_useForkRef3();
init_useControlled3();

// node_modules/@mui/material/SpeedDial/speedDialClasses.js
init_esm();
init_generateUtilityClass3();
function getSpeedDialUtilityClass(slot) {
  return generateUtilityClass("MuiSpeedDial", slot);
}
var speedDialClasses = generateUtilityClasses("MuiSpeedDial", ["root", "fab", "directionUp", "directionDown", "directionLeft", "directionRight", "actions", "actionsClosed"]);
var speedDialClasses_default = speedDialClasses;

// node_modules/@mui/material/SpeedDial/SpeedDial.js
var import_jsx_runtime218 = __toESM(require_jsx_runtime());
var import_jsx_runtime219 = __toESM(require_jsx_runtime());
var _excluded144 = ["ref"];
var _excluded220 = ["ariaLabel", "FabProps", "children", "className", "direction", "hidden", "icon", "onBlur", "onClose", "onFocus", "onKeyDown", "onMouseEnter", "onMouseLeave", "onOpen", "open", "openIcon", "TransitionComponent", "transitionDuration", "TransitionProps"];
var _excluded311 = ["ref"];
var useUtilityClasses110 = (ownerState) => {
  const {
    classes: classes2,
    open,
    direction
  } = ownerState;
  const slots = {
    root: ["root", `direction${capitalize_default(direction)}`],
    fab: ["fab"],
    actions: ["actions", !open && "actionsClosed"]
  };
  return composeClasses(slots, getSpeedDialUtilityClass, classes2);
};
function getOrientation(direction) {
  if (direction === "up" || direction === "down") {
    return "vertical";
  }
  if (direction === "right" || direction === "left") {
    return "horizontal";
  }
  return void 0;
}
function clamp6(value, min3, max3) {
  if (value < min3) {
    return min3;
  }
  if (value > max3) {
    return max3;
  }
  return value;
}
var dialRadius = 32;
var spacingActions = 16;
var SpeedDialRoot = styled_default2("div", {
  name: "MuiSpeedDial",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`direction${capitalize_default(ownerState.direction)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  zIndex: (theme.vars || theme).zIndex.speedDial,
  display: "flex",
  alignItems: "center",
  pointerEvents: "none"
}, ownerState.direction === "up" && {
  flexDirection: "column-reverse",
  [`& .${speedDialClasses_default.actions}`]: {
    flexDirection: "column-reverse",
    marginBottom: -dialRadius,
    paddingBottom: spacingActions + dialRadius
  }
}, ownerState.direction === "down" && {
  flexDirection: "column",
  [`& .${speedDialClasses_default.actions}`]: {
    flexDirection: "column",
    marginTop: -dialRadius,
    paddingTop: spacingActions + dialRadius
  }
}, ownerState.direction === "left" && {
  flexDirection: "row-reverse",
  [`& .${speedDialClasses_default.actions}`]: {
    flexDirection: "row-reverse",
    marginRight: -dialRadius,
    paddingRight: spacingActions + dialRadius
  }
}, ownerState.direction === "right" && {
  flexDirection: "row",
  [`& .${speedDialClasses_default.actions}`]: {
    flexDirection: "row",
    marginLeft: -dialRadius,
    paddingLeft: spacingActions + dialRadius
  }
}));
var SpeedDialFab = styled_default2(Fab_default, {
  name: "MuiSpeedDial",
  slot: "Fab",
  overridesResolver: (props, styles7) => styles7.fab
})(() => ({
  pointerEvents: "auto"
}));
var SpeedDialActions = styled_default2("div", {
  name: "MuiSpeedDial",
  slot: "Actions",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.actions, !ownerState.open && styles7.actionsClosed];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  pointerEvents: "auto"
}, !ownerState.open && {
  transition: "top 0s linear 0.2s",
  pointerEvents: "none"
}));
var SpeedDial = React241.forwardRef(function SpeedDial2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSpeedDial"
  });
  const theme = useTheme5();
  const defaultTransitionDuration = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    ariaLabel,
    FabProps: {
      ref: origDialButtonRef
    } = {},
    children: childrenProp,
    className,
    direction = "up",
    hidden = false,
    icon,
    onBlur,
    onClose,
    onFocus,
    onKeyDown,
    onMouseEnter,
    onMouseLeave,
    onOpen,
    open: openProp,
    TransitionComponent = Zoom_default,
    transitionDuration = defaultTransitionDuration,
    TransitionProps
  } = props, FabProps = _objectWithoutPropertiesLoose(props.FabProps, _excluded144), other = _objectWithoutPropertiesLoose(props, _excluded220);
  const [open, setOpenState] = useControlled_default({
    controlled: openProp,
    default: false,
    name: "SpeedDial",
    state: "open"
  });
  const ownerState = _extends({}, props, {
    open,
    direction
  });
  const classes2 = useUtilityClasses110(ownerState);
  const eventTimer = React241.useRef();
  React241.useEffect(() => {
    return () => {
      clearTimeout(eventTimer.current);
    };
  }, []);
  const focusedAction = React241.useRef(0);
  const nextItemArrowKey = React241.useRef();
  const actions = React241.useRef([]);
  actions.current = [actions.current[0]];
  const handleOwnFabRef = React241.useCallback((fabFef) => {
    actions.current[0] = fabFef;
  }, []);
  const handleFabRef = useForkRef_default(origDialButtonRef, handleOwnFabRef);
  const createHandleSpeedDialActionButtonRef = (dialActionIndex, origButtonRef) => {
    return (buttonRef) => {
      actions.current[dialActionIndex + 1] = buttonRef;
      if (origButtonRef) {
        origButtonRef(buttonRef);
      }
    };
  };
  const handleKeyDown3 = (event) => {
    if (onKeyDown) {
      onKeyDown(event);
    }
    const key = event.key.replace("Arrow", "").toLowerCase();
    const {
      current: nextItemArrowKeyCurrent = key
    } = nextItemArrowKey;
    if (event.key === "Escape") {
      setOpenState(false);
      actions.current[0].focus();
      if (onClose) {
        onClose(event, "escapeKeyDown");
      }
      return;
    }
    if (getOrientation(key) === getOrientation(nextItemArrowKeyCurrent) && getOrientation(key) !== void 0) {
      event.preventDefault();
      const actionStep = key === nextItemArrowKeyCurrent ? 1 : -1;
      const nextAction = clamp6(focusedAction.current + actionStep, 0, actions.current.length - 1);
      actions.current[nextAction].focus();
      focusedAction.current = nextAction;
      nextItemArrowKey.current = nextItemArrowKeyCurrent;
    }
  };
  React241.useEffect(() => {
    if (!open) {
      focusedAction.current = 0;
      nextItemArrowKey.current = void 0;
    }
  }, [open]);
  const handleClose = (event) => {
    if (event.type === "mouseleave" && onMouseLeave) {
      onMouseLeave(event);
    }
    if (event.type === "blur" && onBlur) {
      onBlur(event);
    }
    clearTimeout(eventTimer.current);
    if (event.type === "blur") {
      eventTimer.current = setTimeout(() => {
        setOpenState(false);
        if (onClose) {
          onClose(event, "blur");
        }
      });
    } else {
      setOpenState(false);
      if (onClose) {
        onClose(event, "mouseLeave");
      }
    }
  };
  const handleClick2 = (event) => {
    if (FabProps.onClick) {
      FabProps.onClick(event);
    }
    clearTimeout(eventTimer.current);
    if (open) {
      setOpenState(false);
      if (onClose) {
        onClose(event, "toggle");
      }
    } else {
      setOpenState(true);
      if (onOpen) {
        onOpen(event, "toggle");
      }
    }
  };
  const handleOpen = (event) => {
    if (event.type === "mouseenter" && onMouseEnter) {
      onMouseEnter(event);
    }
    if (event.type === "focus" && onFocus) {
      onFocus(event);
    }
    clearTimeout(eventTimer.current);
    if (!open) {
      eventTimer.current = setTimeout(() => {
        setOpenState(true);
        if (onOpen) {
          const eventMap = {
            focus: "focus",
            mouseenter: "mouseEnter"
          };
          onOpen(event, eventMap[event.type]);
        }
      });
    }
  };
  const id = ariaLabel.replace(/^[^a-z]+|[^\w:.-]+/gi, "");
  const allItems = React241.Children.toArray(childrenProp).filter((child) => {
    if (true) {
      if ((0, import_react_is10.isFragment)(child)) {
        console.error(["MUI: The SpeedDial component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return React241.isValidElement(child);
  });
  const children2 = allItems.map((child, index2) => {
    const _child$props = child.props, {
      FabProps: {
        ref: origButtonRef
      } = {},
      tooltipPlacement: tooltipPlacementProp
    } = _child$props, ChildFabProps = _objectWithoutPropertiesLoose(_child$props.FabProps, _excluded311);
    const tooltipPlacement = tooltipPlacementProp || (getOrientation(direction) === "vertical" ? "left" : "top");
    return React241.cloneElement(child, {
      FabProps: _extends({}, ChildFabProps, {
        ref: createHandleSpeedDialActionButtonRef(index2, origButtonRef)
      }),
      delay: 30 * (open ? index2 : allItems.length - index2),
      open,
      tooltipPlacement,
      id: `${id}-action-${index2}`
    });
  });
  return (0, import_jsx_runtime219.jsxs)(SpeedDialRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ref,
    role: "presentation",
    onKeyDown: handleKeyDown3,
    onBlur: handleClose,
    onFocus: handleOpen,
    onMouseEnter: handleOpen,
    onMouseLeave: handleClose,
    ownerState
  }, other, {
    children: [(0, import_jsx_runtime218.jsx)(TransitionComponent, _extends({
      in: !hidden,
      timeout: transitionDuration,
      unmountOnExit: true
    }, TransitionProps, {
      children: (0, import_jsx_runtime218.jsx)(SpeedDialFab, _extends({
        color: "primary",
        "aria-label": ariaLabel,
        "aria-haspopup": "true",
        "aria-expanded": open,
        "aria-controls": `${id}-actions`
      }, FabProps, {
        onClick: handleClick2,
        className: clsx_default2(classes2.fab, FabProps.className),
        ref: handleFabRef,
        ownerState,
        children: React241.isValidElement(icon) && isMuiElement_default(icon, ["SpeedDialIcon"]) ? React241.cloneElement(icon, {
          open
        }) : icon
      }))
    })), (0, import_jsx_runtime218.jsx)(SpeedDialActions, {
      id: `${id}-actions`,
      role: "menu",
      "aria-orientation": getOrientation(direction),
      className: clsx_default2(classes2.actions, !open && classes2.actionsClosed),
      ownerState,
      children: children2
    })]
  }));
});
true ? SpeedDial.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The aria-label of the button element.
   * Also used to provide the `id` for the `SpeedDial` element and its children.
   */
  ariaLabel: import_prop_types162.default.string.isRequired,
  /**
   * SpeedDialActions to display when the SpeedDial is `open`.
   */
  children: import_prop_types162.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types162.default.object,
  /**
   * @ignore
   */
  className: import_prop_types162.default.string,
  /**
   * The direction the actions open relative to the floating action button.
   * @default 'up'
   */
  direction: import_prop_types162.default.oneOf(["down", "left", "right", "up"]),
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) element.
   * @default {}
   */
  FabProps: import_prop_types162.default.object,
  /**
   * If `true`, the SpeedDial is hidden.
   * @default false
   */
  hidden: import_prop_types162.default.bool,
  /**
   * The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component
   * provides a default Icon with animation.
   */
  icon: import_prop_types162.default.node,
  /**
   * @ignore
   */
  onBlur: import_prop_types162.default.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"blur"`, `"mouseLeave"`, `"escapeKeyDown"`.
   */
  onClose: import_prop_types162.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types162.default.func,
  /**
   * @ignore
   */
  onKeyDown: import_prop_types162.default.func,
  /**
   * @ignore
   */
  onMouseEnter: import_prop_types162.default.func,
  /**
   * @ignore
   */
  onMouseLeave: import_prop_types162.default.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"focus"`, `"mouseEnter"`.
   */
  onOpen: import_prop_types162.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types162.default.bool,
  /**
   * The icon to display in the SpeedDial Fab when the SpeedDial is open.
   */
  openIcon: import_prop_types162.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types162.default.oneOfType([import_prop_types162.default.arrayOf(import_prop_types162.default.oneOfType([import_prop_types162.default.func, import_prop_types162.default.object, import_prop_types162.default.bool])), import_prop_types162.default.func, import_prop_types162.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Zoom
   */
  TransitionComponent: import_prop_types162.default.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types162.default.oneOfType([import_prop_types162.default.number, import_prop_types162.default.shape({
    appear: import_prop_types162.default.number,
    enter: import_prop_types162.default.number,
    exit: import_prop_types162.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types162.default.object
} : void 0;

// node_modules/@mui/material/SpeedDialAction/SpeedDialAction.js
init_objectWithoutPropertiesLoose();
init_extends();
var React243 = __toESM(require_react());
var import_prop_types164 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Tooltip/Tooltip.js
init_objectWithoutPropertiesLoose();
init_extends();
var React242 = __toESM(require_react());
var import_prop_types163 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_esm2();
init_styled2();
init_useThemeProps3();
init_capitalize3();
init_useEventCallback3();
init_useForkRef3();
init_useId3();
init_useIsFocusVisible2();
init_useControlled3();

// node_modules/@mui/material/Tooltip/tooltipClasses.js
init_esm();
init_generateUtilityClass3();
function getTooltipUtilityClass(slot) {
  return generateUtilityClass("MuiTooltip", slot);
}
var tooltipClasses = generateUtilityClasses("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
var tooltipClasses_default = tooltipClasses;

// node_modules/@mui/material/Tooltip/Tooltip.js
var import_jsx_runtime220 = __toESM(require_jsx_runtime());
var import_jsx_runtime221 = __toESM(require_jsx_runtime());
var _excluded145 = ["arrow", "children", "classes", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "slotProps", "slots", "title", "TransitionComponent", "TransitionProps"];
function round4(value) {
  return Math.round(value * 1e5) / 1e5;
}
var useUtilityClasses111 = (ownerState) => {
  const {
    classes: classes2,
    disableInteractive,
    arrow: arrow3,
    touch,
    placement
  } = ownerState;
  const slots = {
    popper: ["popper", !disableInteractive && "popperInteractive", arrow3 && "popperArrow"],
    tooltip: ["tooltip", arrow3 && "tooltipArrow", touch && "touch", `tooltipPlacement${capitalize_default(placement.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return composeClasses(slots, getTooltipUtilityClass, classes2);
};
var TooltipPopper = styled_default2(Popper_default, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.popper, !ownerState.disableInteractive && styles7.popperInteractive, ownerState.arrow && styles7.popperArrow, !ownerState.open && styles7.popperClose];
  }
})(({
  theme,
  ownerState,
  open
}) => _extends({
  zIndex: (theme.vars || theme).zIndex.tooltip,
  pointerEvents: "none"
}, !ownerState.disableInteractive && {
  pointerEvents: "auto"
}, !open && {
  pointerEvents: "none"
}, ownerState.arrow && {
  [`&[data-popper-placement*="bottom"] .${tooltipClasses_default.arrow}`]: {
    top: 0,
    marginTop: "-0.71em",
    "&::before": {
      transformOrigin: "0 100%"
    }
  },
  [`&[data-popper-placement*="top"] .${tooltipClasses_default.arrow}`]: {
    bottom: 0,
    marginBottom: "-0.71em",
    "&::before": {
      transformOrigin: "100% 0"
    }
  },
  [`&[data-popper-placement*="right"] .${tooltipClasses_default.arrow}`]: _extends({}, !ownerState.isRtl ? {
    left: 0,
    marginLeft: "-0.71em"
  } : {
    right: 0,
    marginRight: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "100% 100%"
    }
  }),
  [`&[data-popper-placement*="left"] .${tooltipClasses_default.arrow}`]: _extends({}, !ownerState.isRtl ? {
    right: 0,
    marginRight: "-0.71em"
  } : {
    left: 0,
    marginLeft: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "0 0"
    }
  })
}));
var TooltipTooltip = styled_default2("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.tooltip, ownerState.touch && styles7.touch, ownerState.arrow && styles7.tooltipArrow, styles7[`tooltipPlacement${capitalize_default(ownerState.placement.split("-")[0])}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  backgroundColor: theme.vars ? theme.vars.palette.Tooltip.bg : alpha(theme.palette.grey[700], 0.92),
  borderRadius: (theme.vars || theme).shape.borderRadius,
  color: (theme.vars || theme).palette.common.white,
  fontFamily: theme.typography.fontFamily,
  padding: "4px 8px",
  fontSize: theme.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: theme.typography.fontWeightMedium
}, ownerState.arrow && {
  position: "relative",
  margin: 0
}, ownerState.touch && {
  padding: "8px 16px",
  fontSize: theme.typography.pxToRem(14),
  lineHeight: `${round4(16 / 14)}em`,
  fontWeight: theme.typography.fontWeightRegular
}, {
  [`.${tooltipClasses_default.popper}[data-popper-placement*="left"] &`]: _extends({
    transformOrigin: "right center"
  }, !ownerState.isRtl ? _extends({
    marginRight: "14px"
  }, ownerState.touch && {
    marginRight: "24px"
  }) : _extends({
    marginLeft: "14px"
  }, ownerState.touch && {
    marginLeft: "24px"
  })),
  [`.${tooltipClasses_default.popper}[data-popper-placement*="right"] &`]: _extends({
    transformOrigin: "left center"
  }, !ownerState.isRtl ? _extends({
    marginLeft: "14px"
  }, ownerState.touch && {
    marginLeft: "24px"
  }) : _extends({
    marginRight: "14px"
  }, ownerState.touch && {
    marginRight: "24px"
  })),
  [`.${tooltipClasses_default.popper}[data-popper-placement*="top"] &`]: _extends({
    transformOrigin: "center bottom",
    marginBottom: "14px"
  }, ownerState.touch && {
    marginBottom: "24px"
  }),
  [`.${tooltipClasses_default.popper}[data-popper-placement*="bottom"] &`]: _extends({
    transformOrigin: "center top",
    marginTop: "14px"
  }, ownerState.touch && {
    marginTop: "24px"
  })
}));
var TooltipArrow = styled_default2("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (props, styles7) => styles7.arrow
})(({
  theme
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: theme.vars ? theme.vars.palette.Tooltip.bg : alpha(theme.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
}));
var hystersisOpen = false;
var hystersisTimer = null;
var cursorPosition = {
  x: 0,
  y: 0
};
function composeEventHandler(handler, eventHandler) {
  return (event) => {
    if (eventHandler) {
      eventHandler(event);
    }
    handler(event);
  };
}
var Tooltip = React242.forwardRef(function Tooltip2(inProps, ref) {
  var _ref2, _slots$popper, _ref22, _ref3, _slots$transition, _ref4, _slots$tooltip, _ref5, _slots$arrow, _slotProps$popper, _ref6, _slotProps$popper2, _slotProps$transition, _slotProps$tooltip, _ref7, _slotProps$tooltip2, _slotProps$arrow, _ref8, _slotProps$arrow2;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTooltip"
  });
  const {
    arrow: arrow3 = false,
    children: childrenProp,
    components = {},
    componentsProps = {},
    describeChild = false,
    disableFocusListener = false,
    disableHoverListener = false,
    disableInteractive: disableInteractiveProp = false,
    disableTouchListener = false,
    enterDelay = 100,
    enterNextDelay = 0,
    enterTouchDelay = 700,
    followCursor = false,
    id: idProp,
    leaveDelay = 0,
    leaveTouchDelay = 1500,
    onClose,
    onOpen,
    open: openProp,
    placement = "bottom",
    PopperComponent: PopperComponentProp,
    PopperProps = {},
    slotProps = {},
    slots = {},
    title,
    TransitionComponent: TransitionComponentProp = Grow_default,
    TransitionProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded145);
  const children2 = React242.isValidElement(childrenProp) ? childrenProp : (0, import_jsx_runtime220.jsx)("span", {
    children: childrenProp
  });
  const theme = useTheme5();
  const isRtl = theme.direction === "rtl";
  const [childNode, setChildNode] = React242.useState();
  const [arrowRef, setArrowRef] = React242.useState(null);
  const ignoreNonTouchEvents = React242.useRef(false);
  const disableInteractive = disableInteractiveProp || followCursor;
  const closeTimer = React242.useRef();
  const enterTimer = React242.useRef();
  const leaveTimer = React242.useRef();
  const touchTimer = React242.useRef();
  const [openState, setOpenState] = useControlled_default({
    controlled: openProp,
    default: false,
    name: "Tooltip",
    state: "open"
  });
  let open = openState;
  if (true) {
    const {
      current: isControlled
    } = React242.useRef(openProp !== void 0);
    React242.useEffect(() => {
      if (childNode && childNode.disabled && !isControlled && title !== "" && childNode.tagName.toLowerCase() === "button") {
        console.error(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join("\n"));
      }
    }, [title, childNode, isControlled]);
  }
  const id = useId_default(idProp);
  const prevUserSelect = React242.useRef();
  const stopTouchInteraction = React242.useCallback(() => {
    if (prevUserSelect.current !== void 0) {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      prevUserSelect.current = void 0;
    }
    clearTimeout(touchTimer.current);
  }, []);
  React242.useEffect(() => {
    return () => {
      clearTimeout(closeTimer.current);
      clearTimeout(enterTimer.current);
      clearTimeout(leaveTimer.current);
      stopTouchInteraction();
    };
  }, [stopTouchInteraction]);
  const handleOpen = (event) => {
    clearTimeout(hystersisTimer);
    hystersisOpen = true;
    setOpenState(true);
    if (onOpen && !open) {
      onOpen(event);
    }
  };
  const handleClose = useEventCallback_default2(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (event) => {
      clearTimeout(hystersisTimer);
      hystersisTimer = setTimeout(() => {
        hystersisOpen = false;
      }, 800 + leaveDelay);
      setOpenState(false);
      if (onClose && open) {
        onClose(event);
      }
      clearTimeout(closeTimer.current);
      closeTimer.current = setTimeout(() => {
        ignoreNonTouchEvents.current = false;
      }, theme.transitions.duration.shortest);
    }
  );
  const handleEnter = (event) => {
    if (ignoreNonTouchEvents.current && event.type !== "touchstart") {
      return;
    }
    if (childNode) {
      childNode.removeAttribute("title");
    }
    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);
    if (enterDelay || hystersisOpen && enterNextDelay) {
      enterTimer.current = setTimeout(() => {
        handleOpen(event);
      }, hystersisOpen ? enterNextDelay : enterDelay);
    } else {
      handleOpen(event);
    }
  };
  const handleLeave = (event) => {
    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveDelay);
  };
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible_default();
  const [, setChildIsFocusVisible] = React242.useState(false);
  const handleBlur2 = (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setChildIsFocusVisible(false);
      handleLeave(event);
    }
  };
  const handleFocus = (event) => {
    if (!childNode) {
      setChildNode(event.currentTarget);
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setChildIsFocusVisible(true);
      handleEnter(event);
    }
  };
  const detectTouchStart = (event) => {
    ignoreNonTouchEvents.current = true;
    const childrenProps2 = children2.props;
    if (childrenProps2.onTouchStart) {
      childrenProps2.onTouchStart(event);
    }
  };
  const handleMouseOver = handleEnter;
  const handleMouseLeave = handleLeave;
  const handleTouchStart = (event) => {
    detectTouchStart(event);
    clearTimeout(leaveTimer.current);
    clearTimeout(closeTimer.current);
    stopTouchInteraction();
    prevUserSelect.current = document.body.style.WebkitUserSelect;
    document.body.style.WebkitUserSelect = "none";
    touchTimer.current = setTimeout(() => {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      handleEnter(event);
    }, enterTouchDelay);
  };
  const handleTouchEnd = (event) => {
    if (children2.props.onTouchEnd) {
      children2.props.onTouchEnd(event);
    }
    stopTouchInteraction();
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveTouchDelay);
  };
  React242.useEffect(() => {
    if (!open) {
      return void 0;
    }
    function handleKeyDown3(nativeEvent) {
      if (nativeEvent.key === "Escape" || nativeEvent.key === "Esc") {
        handleClose(nativeEvent);
      }
    }
    document.addEventListener("keydown", handleKeyDown3);
    return () => {
      document.removeEventListener("keydown", handleKeyDown3);
    };
  }, [handleClose, open]);
  const handleRef = useForkRef_default(children2.ref, focusVisibleRef, setChildNode, ref);
  if (!title && title !== 0) {
    open = false;
  }
  const popperRef = React242.useRef();
  const handleMouseMove = (event) => {
    const childrenProps2 = children2.props;
    if (childrenProps2.onMouseMove) {
      childrenProps2.onMouseMove(event);
    }
    cursorPosition = {
      x: event.clientX,
      y: event.clientY
    };
    if (popperRef.current) {
      popperRef.current.update();
    }
  };
  const nameOrDescProps = {};
  const titleIsString = typeof title === "string";
  if (describeChild) {
    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;
    nameOrDescProps["aria-describedby"] = open ? id : null;
  } else {
    nameOrDescProps["aria-label"] = titleIsString ? title : null;
    nameOrDescProps["aria-labelledby"] = open && !titleIsString ? id : null;
  }
  const childrenProps = _extends({}, nameOrDescProps, other, children2.props, {
    className: clsx_default2(other.className, children2.props.className),
    onTouchStart: detectTouchStart,
    ref: handleRef
  }, followCursor ? {
    onMouseMove: handleMouseMove
  } : {});
  if (true) {
    childrenProps["data-mui-internal-clone-element"] = true;
    React242.useEffect(() => {
      if (childNode && !childNode.getAttribute("data-mui-internal-clone-element")) {
        console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join("\n"));
      }
    }, [childNode]);
  }
  const interactiveWrapperListeners = {};
  if (!disableTouchListener) {
    childrenProps.onTouchStart = handleTouchStart;
    childrenProps.onTouchEnd = handleTouchEnd;
  }
  if (!disableHoverListener) {
    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);
    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);
    if (!disableInteractive) {
      interactiveWrapperListeners.onMouseOver = handleMouseOver;
      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;
    }
  }
  if (!disableFocusListener) {
    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);
    childrenProps.onBlur = composeEventHandler(handleBlur2, childrenProps.onBlur);
    if (!disableInteractive) {
      interactiveWrapperListeners.onFocus = handleFocus;
      interactiveWrapperListeners.onBlur = handleBlur2;
    }
  }
  if (true) {
    if (children2.props.title) {
      console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${children2.props.title}\` or the Tooltip component.`].join("\n"));
    }
  }
  const popperOptions = React242.useMemo(() => {
    var _PopperProps$popperOp;
    let tooltipModifiers = [{
      name: "arrow",
      enabled: Boolean(arrowRef),
      options: {
        element: arrowRef,
        padding: 4
      }
    }];
    if ((_PopperProps$popperOp = PopperProps.popperOptions) != null && _PopperProps$popperOp.modifiers) {
      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);
    }
    return _extends({}, PopperProps.popperOptions, {
      modifiers: tooltipModifiers
    });
  }, [arrowRef, PopperProps]);
  const ownerState = _extends({}, props, {
    isRtl,
    arrow: arrow3,
    disableInteractive,
    placement,
    PopperComponentProp,
    touch: ignoreNonTouchEvents.current
  });
  const classes2 = useUtilityClasses111(ownerState);
  const PopperComponent = (_ref2 = (_slots$popper = slots.popper) != null ? _slots$popper : components.Popper) != null ? _ref2 : TooltipPopper;
  const TransitionComponent = (_ref22 = (_ref3 = (_slots$transition = slots.transition) != null ? _slots$transition : components.Transition) != null ? _ref3 : TransitionComponentProp) != null ? _ref22 : Grow_default;
  const TooltipComponent = (_ref4 = (_slots$tooltip = slots.tooltip) != null ? _slots$tooltip : components.Tooltip) != null ? _ref4 : TooltipTooltip;
  const ArrowComponent = (_ref5 = (_slots$arrow = slots.arrow) != null ? _slots$arrow : components.Arrow) != null ? _ref5 : TooltipArrow;
  const popperProps = appendOwnerState(PopperComponent, _extends({}, PopperProps, (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper, {
    className: clsx_default2(classes2.popper, PopperProps == null ? void 0 : PopperProps.className, (_ref6 = (_slotProps$popper2 = slotProps.popper) != null ? _slotProps$popper2 : componentsProps.popper) == null ? void 0 : _ref6.className)
  }), ownerState);
  const transitionProps = appendOwnerState(TransitionComponent, _extends({}, TransitionProps, (_slotProps$transition = slotProps.transition) != null ? _slotProps$transition : componentsProps.transition), ownerState);
  const tooltipProps = appendOwnerState(TooltipComponent, _extends({}, (_slotProps$tooltip = slotProps.tooltip) != null ? _slotProps$tooltip : componentsProps.tooltip, {
    className: clsx_default2(classes2.tooltip, (_ref7 = (_slotProps$tooltip2 = slotProps.tooltip) != null ? _slotProps$tooltip2 : componentsProps.tooltip) == null ? void 0 : _ref7.className)
  }), ownerState);
  const tooltipArrowProps = appendOwnerState(ArrowComponent, _extends({}, (_slotProps$arrow = slotProps.arrow) != null ? _slotProps$arrow : componentsProps.arrow, {
    className: clsx_default2(classes2.arrow, (_ref8 = (_slotProps$arrow2 = slotProps.arrow) != null ? _slotProps$arrow2 : componentsProps.arrow) == null ? void 0 : _ref8.className)
  }), ownerState);
  return (0, import_jsx_runtime221.jsxs)(React242.Fragment, {
    children: [React242.cloneElement(children2, childrenProps), (0, import_jsx_runtime220.jsx)(PopperComponent, _extends({
      as: PopperComponentProp != null ? PopperComponentProp : Popper_default,
      placement,
      anchorEl: followCursor ? {
        getBoundingClientRect: () => ({
          top: cursorPosition.y,
          left: cursorPosition.x,
          right: cursorPosition.x,
          bottom: cursorPosition.y,
          width: 0,
          height: 0
        })
      } : childNode,
      popperRef,
      open: childNode ? open : false,
      id,
      transition: true
    }, interactiveWrapperListeners, popperProps, {
      popperOptions,
      children: ({
        TransitionProps: TransitionPropsInner
      }) => (0, import_jsx_runtime220.jsx)(TransitionComponent, _extends({
        timeout: theme.transitions.duration.shorter
      }, TransitionPropsInner, transitionProps, {
        children: (0, import_jsx_runtime221.jsxs)(TooltipComponent, _extends({}, tooltipProps, {
          children: [title, arrow3 ? (0, import_jsx_runtime220.jsx)(ArrowComponent, _extends({}, tooltipArrowProps, {
            ref: setArrowRef
          })) : null]
        }))
      }))
    }))]
  });
});
true ? Tooltip.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: import_prop_types163.default.bool,
  /**
   * Tooltip reference element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types163.default.object,
  /**
   * @ignore
   */
  className: import_prop_types163.default.string,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types163.default.shape({
    Arrow: import_prop_types163.default.elementType,
    Popper: import_prop_types163.default.elementType,
    Tooltip: import_prop_types163.default.elementType,
    Transition: import_prop_types163.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types163.default.shape({
    arrow: import_prop_types163.default.object,
    popper: import_prop_types163.default.object,
    tooltip: import_prop_types163.default.object,
    transition: import_prop_types163.default.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: import_prop_types163.default.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: import_prop_types163.default.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: import_prop_types163.default.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: import_prop_types163.default.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: import_prop_types163.default.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: import_prop_types163.default.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: import_prop_types163.default.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: import_prop_types163.default.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: import_prop_types163.default.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: import_prop_types163.default.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: import_prop_types163.default.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: import_prop_types163.default.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: import_prop_types163.default.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: import_prop_types163.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types163.default.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: import_prop_types163.default.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @default Popper
   */
  PopperComponent: import_prop_types163.default.elementType,
  /**
   * Props applied to the [`Popper`](/material-ui/api/popper/) element.
   * @default {}
   */
  PopperProps: import_prop_types163.default.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types163.default.shape({
    arrow: import_prop_types163.default.object,
    popper: import_prop_types163.default.object,
    tooltip: import_prop_types163.default.object,
    transition: import_prop_types163.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types163.default.shape({
    arrow: import_prop_types163.default.elementType,
    popper: import_prop_types163.default.elementType,
    tooltip: import_prop_types163.default.elementType,
    transition: import_prop_types163.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types163.default.oneOfType([import_prop_types163.default.arrayOf(import_prop_types163.default.oneOfType([import_prop_types163.default.func, import_prop_types163.default.object, import_prop_types163.default.bool])), import_prop_types163.default.func, import_prop_types163.default.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: import_prop_types163.default.node,
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: import_prop_types163.default.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types163.default.object
} : void 0;
var Tooltip_default = Tooltip;

// node_modules/@mui/material/SpeedDialAction/SpeedDialAction.js
init_capitalize3();

// node_modules/@mui/material/SpeedDialAction/speedDialActionClasses.js
init_esm();
init_generateUtilityClass3();
function getSpeedDialActionUtilityClass(slot) {
  return generateUtilityClass("MuiSpeedDialAction", slot);
}
var speedDialActionClasses = generateUtilityClasses("MuiSpeedDialAction", ["fab", "fabClosed", "staticTooltip", "staticTooltipClosed", "staticTooltipLabel", "tooltipPlacementLeft", "tooltipPlacementRight"]);
var speedDialActionClasses_default = speedDialActionClasses;

// node_modules/@mui/material/SpeedDialAction/SpeedDialAction.js
var import_jsx_runtime222 = __toESM(require_jsx_runtime());
var import_jsx_runtime223 = __toESM(require_jsx_runtime());
var _excluded146 = ["className", "delay", "FabProps", "icon", "id", "open", "TooltipClasses", "tooltipOpen", "tooltipPlacement", "tooltipTitle"];
var useUtilityClasses112 = (ownerState) => {
  const {
    open,
    tooltipPlacement,
    classes: classes2
  } = ownerState;
  const slots = {
    fab: ["fab", !open && "fabClosed"],
    staticTooltip: ["staticTooltip", `tooltipPlacement${capitalize_default(tooltipPlacement)}`, !open && "staticTooltipClosed"],
    staticTooltipLabel: ["staticTooltipLabel"]
  };
  return composeClasses(slots, getSpeedDialActionUtilityClass, classes2);
};
var SpeedDialActionFab = styled_default2(Fab_default, {
  name: "MuiSpeedDialAction",
  slot: "Fab",
  skipVariantsResolver: false,
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.fab, !ownerState.open && styles7.fabClosed];
  }
})(({
  theme,
  ownerState
}) => _extends({
  margin: 8,
  color: (theme.vars || theme).palette.text.secondary,
  backgroundColor: (theme.vars || theme).palette.background.paper,
  "&:hover": {
    backgroundColor: theme.vars ? theme.vars.palette.SpeedDialAction.fabHoverBg : emphasize(theme.palette.background.paper, 0.15)
  },
  transition: `${theme.transitions.create("transform", {
    duration: theme.transitions.duration.shorter
  })}, opacity 0.8s`,
  opacity: 1
}, !ownerState.open && {
  opacity: 0,
  transform: "scale(0)"
}));
var SpeedDialActionStaticTooltip = styled_default2("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltip",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.staticTooltip, !ownerState.open && styles7.staticTooltipClosed, styles7[`tooltipPlacement${capitalize_default(ownerState.tooltipPlacement)}`]];
  }
})(({
  theme,
  ownerState
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  [`& .${speedDialActionClasses_default.staticTooltipLabel}`]: _extends({
    transition: theme.transitions.create(["transform", "opacity"], {
      duration: theme.transitions.duration.shorter
    }),
    opacity: 1
  }, !ownerState.open && {
    opacity: 0,
    transform: "scale(0.5)"
  }, ownerState.tooltipPlacement === "left" && {
    transformOrigin: "100% 50%",
    right: "100%",
    marginRight: 8
  }, ownerState.tooltipPlacement === "right" && {
    transformOrigin: "0% 50%",
    left: "100%",
    marginLeft: 8
  })
}));
var SpeedDialActionStaticTooltipLabel = styled_default2("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltipLabel",
  overridesResolver: (props, styles7) => styles7.staticTooltipLabel
})(({
  theme
}) => _extends({
  position: "absolute"
}, theme.typography.body1, {
  backgroundColor: (theme.vars || theme).palette.background.paper,
  borderRadius: (theme.vars || theme).shape.borderRadius,
  boxShadow: (theme.vars || theme).shadows[1],
  color: (theme.vars || theme).palette.text.secondary,
  padding: "4px 16px",
  wordBreak: "keep-all"
}));
var SpeedDialAction = React243.forwardRef(function SpeedDialAction2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSpeedDialAction"
  });
  const {
    className,
    delay = 0,
    FabProps = {},
    icon,
    id,
    open,
    TooltipClasses,
    tooltipOpen: tooltipOpenProp = false,
    tooltipPlacement = "left",
    tooltipTitle
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded146);
  const ownerState = _extends({}, props, {
    tooltipPlacement
  });
  const classes2 = useUtilityClasses112(ownerState);
  const [tooltipOpen, setTooltipOpen] = React243.useState(tooltipOpenProp);
  const handleTooltipClose = () => {
    setTooltipOpen(false);
  };
  const handleTooltipOpen = () => {
    setTooltipOpen(true);
  };
  const transitionStyle = {
    transitionDelay: `${delay}ms`
  };
  const fab = (0, import_jsx_runtime222.jsx)(SpeedDialActionFab, _extends({
    size: "small",
    className: clsx_default2(classes2.fab, className),
    tabIndex: -1,
    role: "menuitem",
    ownerState
  }, FabProps, {
    style: _extends({}, transitionStyle, FabProps.style),
    children: icon
  }));
  if (tooltipOpenProp) {
    return (0, import_jsx_runtime223.jsxs)(SpeedDialActionStaticTooltip, _extends({
      id,
      ref,
      className: classes2.staticTooltip,
      ownerState
    }, other, {
      children: [(0, import_jsx_runtime222.jsx)(SpeedDialActionStaticTooltipLabel, {
        style: transitionStyle,
        id: `${id}-label`,
        className: classes2.staticTooltipLabel,
        ownerState,
        children: tooltipTitle
      }), React243.cloneElement(fab, {
        "aria-labelledby": `${id}-label`
      })]
    }));
  }
  if (!open && tooltipOpen) {
    setTooltipOpen(false);
  }
  return (0, import_jsx_runtime222.jsx)(Tooltip_default, _extends({
    id,
    ref,
    title: tooltipTitle,
    placement: tooltipPlacement,
    onClose: handleTooltipClose,
    onOpen: handleTooltipOpen,
    open: open && tooltipOpen,
    classes: TooltipClasses
  }, other, {
    children: fab
  }));
});
true ? SpeedDialAction.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types164.default.object,
  /**
   * @ignore
   */
  className: import_prop_types164.default.string,
  /**
   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.
   * @default 0
   */
  delay: import_prop_types164.default.number,
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) component.
   * @default {}
   */
  FabProps: import_prop_types164.default.object,
  /**
   * The icon to display in the SpeedDial Fab.
   */
  icon: import_prop_types164.default.node,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: import_prop_types164.default.string,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types164.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types164.default.oneOfType([import_prop_types164.default.arrayOf(import_prop_types164.default.oneOfType([import_prop_types164.default.func, import_prop_types164.default.object, import_prop_types164.default.bool])), import_prop_types164.default.func, import_prop_types164.default.object]),
  /**
   * `classes` prop applied to the [`Tooltip`](/material-ui/api/tooltip/) element.
   */
  TooltipClasses: import_prop_types164.default.object,
  /**
   * Make the tooltip always visible when the SpeedDial is open.
   * @default false
   */
  tooltipOpen: import_prop_types164.default.bool,
  /**
   * Placement of the tooltip.
   * @default 'left'
   */
  tooltipPlacement: import_prop_types164.default.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Label to display in the tooltip.
   */
  tooltipTitle: import_prop_types164.default.node
} : void 0;

// node_modules/@mui/material/SpeedDialIcon/SpeedDialIcon.js
init_objectWithoutPropertiesLoose();
init_extends();
var React245 = __toESM(require_react());
var import_prop_types165 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/internal/svg-icons/Add.js
var React244 = __toESM(require_react());
init_utils();
var import_jsx_runtime224 = __toESM(require_jsx_runtime());
var Add_default = createSvgIcon((0, import_jsx_runtime224.jsx)("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), "Add");

// node_modules/@mui/material/SpeedDialIcon/speedDialIconClasses.js
init_esm();
init_generateUtilityClass3();
function getSpeedDialIconUtilityClass(slot) {
  return generateUtilityClass("MuiSpeedDialIcon", slot);
}
var speedDialIconClasses = generateUtilityClasses("MuiSpeedDialIcon", ["root", "icon", "iconOpen", "iconWithOpenIconOpen", "openIcon", "openIconOpen"]);
var speedDialIconClasses_default = speedDialIconClasses;

// node_modules/@mui/material/SpeedDialIcon/SpeedDialIcon.js
var import_jsx_runtime225 = __toESM(require_jsx_runtime());
var import_jsx_runtime226 = __toESM(require_jsx_runtime());
var _excluded147 = ["className", "icon", "open", "openIcon"];
var useUtilityClasses113 = (ownerState) => {
  const {
    classes: classes2,
    open,
    openIcon
  } = ownerState;
  const slots = {
    root: ["root"],
    icon: ["icon", open && "iconOpen", openIcon && open && "iconWithOpenIconOpen"],
    openIcon: ["openIcon", open && "openIconOpen"]
  };
  return composeClasses(slots, getSpeedDialIconUtilityClass, classes2);
};
var SpeedDialIconRoot = styled_default2("span", {
  name: "MuiSpeedDialIcon",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${speedDialIconClasses_default.icon}`]: styles7.icon
    }, {
      [`& .${speedDialIconClasses_default.icon}`]: ownerState.open && styles7.iconOpen
    }, {
      [`& .${speedDialIconClasses_default.icon}`]: ownerState.open && ownerState.openIcon && styles7.iconWithOpenIconOpen
    }, {
      [`& .${speedDialIconClasses_default.openIcon}`]: styles7.openIcon
    }, {
      [`& .${speedDialIconClasses_default.openIcon}`]: ownerState.open && styles7.openIconOpen
    }, styles7.root];
  }
})(({
  theme,
  ownerState
}) => ({
  height: 24,
  [`& .${speedDialIconClasses_default.icon}`]: _extends({
    transition: theme.transitions.create(["transform", "opacity"], {
      duration: theme.transitions.duration.short
    })
  }, ownerState.open && _extends({
    transform: "rotate(45deg)"
  }, ownerState.openIcon && {
    opacity: 0
  })),
  [`& .${speedDialIconClasses_default.openIcon}`]: _extends({
    position: "absolute",
    transition: theme.transitions.create(["transform", "opacity"], {
      duration: theme.transitions.duration.short
    }),
    opacity: 0,
    transform: "rotate(-45deg)"
  }, ownerState.open && {
    transform: "rotate(0deg)",
    opacity: 1
  })
}));
var SpeedDialIcon = React245.forwardRef(function SpeedDialIcon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSpeedDialIcon"
  });
  const {
    className,
    icon: iconProp,
    openIcon: openIconProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded147);
  const ownerState = props;
  const classes2 = useUtilityClasses113(ownerState);
  function formatIcon(icon, newClassName) {
    if (React245.isValidElement(icon)) {
      return React245.cloneElement(icon, {
        className: newClassName
      });
    }
    return icon;
  }
  return (0, import_jsx_runtime226.jsxs)(SpeedDialIconRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: [openIconProp ? formatIcon(openIconProp, classes2.openIcon) : null, iconProp ? formatIcon(iconProp, classes2.icon) : (0, import_jsx_runtime225.jsx)(Add_default, {
      className: classes2.icon
    })]
  }));
});
true ? SpeedDialIcon.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types165.default.object,
  /**
   * @ignore
   */
  className: import_prop_types165.default.string,
  /**
   * The icon to display.
   */
  icon: import_prop_types165.default.node,
  /**
   * @ignore
   * If `true`, the component is shown.
   */
  open: import_prop_types165.default.bool,
  /**
   * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.
   */
  openIcon: import_prop_types165.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types165.default.oneOfType([import_prop_types165.default.arrayOf(import_prop_types165.default.oneOfType([import_prop_types165.default.func, import_prop_types165.default.object, import_prop_types165.default.bool])), import_prop_types165.default.func, import_prop_types165.default.object])
} : void 0;
SpeedDialIcon.muiName = "SpeedDialIcon";

// node_modules/@mui/material/Step/Step.js
init_objectWithoutPropertiesLoose();
init_extends();
var React248 = __toESM(require_react());
var import_prop_types166 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();

// node_modules/@mui/material/Stepper/StepperContext.js
var React246 = __toESM(require_react());
var StepperContext = React246.createContext({});
if (true) {
  StepperContext.displayName = "StepperContext";
}
var StepperContext_default = StepperContext;

// node_modules/@mui/material/Step/StepContext.js
var React247 = __toESM(require_react());
var StepContext = React247.createContext({});
if (true) {
  StepContext.displayName = "StepContext";
}
var StepContext_default = StepContext;

// node_modules/@mui/material/Step/Step.js
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Step/stepClasses.js
init_esm();
init_generateUtilityClass3();
function getStepUtilityClass(slot) {
  return generateUtilityClass("MuiStep", slot);
}
var stepClasses = generateUtilityClasses("MuiStep", ["root", "horizontal", "vertical", "alternativeLabel", "completed"]);

// node_modules/@mui/material/Step/Step.js
var import_jsx_runtime227 = __toESM(require_jsx_runtime());
var import_jsx_runtime228 = __toESM(require_jsx_runtime());
var _excluded148 = ["active", "children", "className", "component", "completed", "disabled", "expanded", "index", "last"];
var useUtilityClasses114 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    alternativeLabel,
    completed
  } = ownerState;
  const slots = {
    root: ["root", orientation, alternativeLabel && "alternativeLabel", completed && "completed"]
  };
  return composeClasses(slots, getStepUtilityClass, classes2);
};
var StepRoot = styled_default2("div", {
  name: "MuiStep",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.orientation], ownerState.alternativeLabel && styles7.alternativeLabel, ownerState.completed && styles7.completed];
  }
})(({
  ownerState
}) => _extends({}, ownerState.orientation === "horizontal" && {
  paddingLeft: 8,
  paddingRight: 8
}, ownerState.alternativeLabel && {
  flex: 1,
  position: "relative"
}));
var Step = React248.forwardRef(function Step2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStep"
  });
  const {
    active: activeProp,
    children: children2,
    className,
    component = "div",
    completed: completedProp,
    disabled: disabledProp,
    expanded = false,
    index: index2,
    last
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded148);
  const {
    activeStep,
    connector,
    alternativeLabel,
    orientation,
    nonLinear
  } = React248.useContext(StepperContext_default);
  let [active = false, completed = false, disabled = false] = [activeProp, completedProp, disabledProp];
  if (activeStep === index2) {
    active = activeProp !== void 0 ? activeProp : true;
  } else if (!nonLinear && activeStep > index2) {
    completed = completedProp !== void 0 ? completedProp : true;
  } else if (!nonLinear && activeStep < index2) {
    disabled = disabledProp !== void 0 ? disabledProp : true;
  }
  const contextValue = React248.useMemo(() => ({
    index: index2,
    last,
    expanded,
    icon: index2 + 1,
    active,
    completed,
    disabled
  }), [index2, last, expanded, active, completed, disabled]);
  const ownerState = _extends({}, props, {
    active,
    orientation,
    alternativeLabel,
    completed,
    disabled,
    expanded,
    component
  });
  const classes2 = useUtilityClasses114(ownerState);
  const newChildren = (0, import_jsx_runtime227.jsxs)(StepRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: [connector && alternativeLabel && index2 !== 0 ? connector : null, children2]
  }));
  return (0, import_jsx_runtime228.jsx)(StepContext_default.Provider, {
    value: contextValue,
    children: connector && !alternativeLabel && index2 !== 0 ? (0, import_jsx_runtime227.jsxs)(React248.Fragment, {
      children: [connector, newChildren]
    }) : newChildren
  });
});
true ? Step.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Sets the step as active. Is passed to child components.
   */
  active: import_prop_types166.default.bool,
  /**
   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.
   */
  children: import_prop_types166.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types166.default.object,
  /**
   * @ignore
   */
  className: import_prop_types166.default.string,
  /**
   * Mark the step as completed. Is passed to child components.
   */
  completed: import_prop_types166.default.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types166.default.elementType,
  /**
   * If `true`, the step is disabled, will also disable the button if
   * `StepButton` is a child of `Step`. Is passed to child components.
   */
  disabled: import_prop_types166.default.bool,
  /**
   * Expand the step.
   * @default false
   */
  expanded: import_prop_types166.default.bool,
  /**
   * The position of the step.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  index: integerPropType_default,
  /**
   * If `true`, the Step is displayed as rendered last.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  last: import_prop_types166.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types166.default.oneOfType([import_prop_types166.default.arrayOf(import_prop_types166.default.oneOfType([import_prop_types166.default.func, import_prop_types166.default.object, import_prop_types166.default.bool])), import_prop_types166.default.func, import_prop_types166.default.object])
} : void 0;

// node_modules/@mui/material/StepButton/StepButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React253 = __toESM(require_react());
var import_prop_types169 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/StepLabel/StepLabel.js
init_objectWithoutPropertiesLoose();
init_extends();
var React252 = __toESM(require_react());
var import_prop_types168 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/StepIcon/StepIcon.js
init_extends();
init_objectWithoutPropertiesLoose();
var React251 = __toESM(require_react());
var import_prop_types167 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/internal/svg-icons/CheckCircle.js
var React249 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime229 = __toESM(require_jsx_runtime());
var CheckCircle_default = createSvgIcon((0, import_jsx_runtime229.jsx)("path", {
  d: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z"
}), "CheckCircle");

// node_modules/@mui/material/internal/svg-icons/Warning.js
var React250 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime230 = __toESM(require_jsx_runtime());
var Warning_default = createSvgIcon((0, import_jsx_runtime230.jsx)("path", {
  d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
}), "Warning");

// node_modules/@mui/material/StepIcon/StepIcon.js
init_SvgIcon2();

// node_modules/@mui/material/StepIcon/stepIconClasses.js
init_esm();
init_generateUtilityClass3();
function getStepIconUtilityClass(slot) {
  return generateUtilityClass("MuiStepIcon", slot);
}
var stepIconClasses = generateUtilityClasses("MuiStepIcon", ["root", "active", "completed", "error", "text"]);
var stepIconClasses_default = stepIconClasses;

// node_modules/@mui/material/StepIcon/StepIcon.js
var import_jsx_runtime231 = __toESM(require_jsx_runtime());
var import_jsx_runtime232 = __toESM(require_jsx_runtime());
var _circle;
var _excluded149 = ["active", "className", "completed", "error", "icon"];
var useUtilityClasses115 = (ownerState) => {
  const {
    classes: classes2,
    active,
    completed,
    error
  } = ownerState;
  const slots = {
    root: ["root", active && "active", completed && "completed", error && "error"],
    text: ["text"]
  };
  return composeClasses(slots, getStepIconUtilityClass, classes2);
};
var StepIconRoot = styled_default2(SvgIcon_default, {
  name: "MuiStepIcon",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(({
  theme
}) => ({
  display: "block",
  transition: theme.transitions.create("color", {
    duration: theme.transitions.duration.shortest
  }),
  color: (theme.vars || theme).palette.text.disabled,
  [`&.${stepIconClasses_default.completed}`]: {
    color: (theme.vars || theme).palette.primary.main
  },
  [`&.${stepIconClasses_default.active}`]: {
    color: (theme.vars || theme).palette.primary.main
  },
  [`&.${stepIconClasses_default.error}`]: {
    color: (theme.vars || theme).palette.error.main
  }
}));
var StepIconText = styled_default2("text", {
  name: "MuiStepIcon",
  slot: "Text",
  overridesResolver: (props, styles7) => styles7.text
})(({
  theme
}) => ({
  fill: (theme.vars || theme).palette.primary.contrastText,
  fontSize: theme.typography.caption.fontSize,
  fontFamily: theme.typography.fontFamily
}));
var StepIcon = React251.forwardRef(function StepIcon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepIcon"
  });
  const {
    active = false,
    className: classNameProp,
    completed = false,
    error = false,
    icon
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded149);
  const ownerState = _extends({}, props, {
    active,
    completed,
    error
  });
  const classes2 = useUtilityClasses115(ownerState);
  if (typeof icon === "number" || typeof icon === "string") {
    const className = clsx_default2(classNameProp, classes2.root);
    if (error) {
      return (0, import_jsx_runtime231.jsx)(StepIconRoot, _extends({
        as: Warning_default,
        className,
        ref,
        ownerState
      }, other));
    }
    if (completed) {
      return (0, import_jsx_runtime231.jsx)(StepIconRoot, _extends({
        as: CheckCircle_default,
        className,
        ref,
        ownerState
      }, other));
    }
    return (0, import_jsx_runtime232.jsxs)(StepIconRoot, _extends({
      className,
      ref,
      ownerState
    }, other, {
      children: [_circle || (_circle = (0, import_jsx_runtime231.jsx)("circle", {
        cx: "12",
        cy: "12",
        r: "12"
      })), (0, import_jsx_runtime231.jsx)(StepIconText, {
        className: classes2.text,
        x: "12",
        y: "12",
        textAnchor: "middle",
        dominantBaseline: "central",
        ownerState,
        children: icon
      })]
    }));
  }
  return icon;
});
true ? StepIcon.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Whether this step is active.
   * @default false
   */
  active: import_prop_types167.default.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types167.default.object,
  /**
   * @ignore
   */
  className: import_prop_types167.default.string,
  /**
   * Mark the step as completed. Is passed to child components.
   * @default false
   */
  completed: import_prop_types167.default.bool,
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: import_prop_types167.default.bool,
  /**
   * The label displayed in the step icon.
   */
  icon: import_prop_types167.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types167.default.oneOfType([import_prop_types167.default.arrayOf(import_prop_types167.default.oneOfType([import_prop_types167.default.func, import_prop_types167.default.object, import_prop_types167.default.bool])), import_prop_types167.default.func, import_prop_types167.default.object])
} : void 0;
var StepIcon_default = StepIcon;

// node_modules/@mui/material/StepLabel/stepLabelClasses.js
init_esm();
init_generateUtilityClass3();
function getStepLabelUtilityClass(slot) {
  return generateUtilityClass("MuiStepLabel", slot);
}
var stepLabelClasses = generateUtilityClasses("MuiStepLabel", ["root", "horizontal", "vertical", "label", "active", "completed", "error", "disabled", "iconContainer", "alternativeLabel", "labelContainer"]);
var stepLabelClasses_default = stepLabelClasses;

// node_modules/@mui/material/StepLabel/StepLabel.js
var import_jsx_runtime233 = __toESM(require_jsx_runtime());
var import_jsx_runtime234 = __toESM(require_jsx_runtime());
var _excluded150 = ["children", "className", "componentsProps", "error", "icon", "optional", "slotProps", "StepIconComponent", "StepIconProps"];
var useUtilityClasses116 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    active,
    completed,
    error,
    disabled,
    alternativeLabel
  } = ownerState;
  const slots = {
    root: ["root", orientation, error && "error", disabled && "disabled", alternativeLabel && "alternativeLabel"],
    label: ["label", active && "active", completed && "completed", error && "error", disabled && "disabled", alternativeLabel && "alternativeLabel"],
    iconContainer: ["iconContainer", active && "active", completed && "completed", error && "error", disabled && "disabled", alternativeLabel && "alternativeLabel"],
    labelContainer: ["labelContainer", alternativeLabel && "alternativeLabel"]
  };
  return composeClasses(slots, getStepLabelUtilityClass, classes2);
};
var StepLabelRoot = styled_default2("span", {
  name: "MuiStepLabel",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.orientation]];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  alignItems: "center",
  [`&.${stepLabelClasses_default.alternativeLabel}`]: {
    flexDirection: "column"
  },
  [`&.${stepLabelClasses_default.disabled}`]: {
    cursor: "default"
  }
}, ownerState.orientation === "vertical" && {
  textAlign: "left",
  padding: "8px 0"
}));
var StepLabelLabel = styled_default2("span", {
  name: "MuiStepLabel",
  slot: "Label",
  overridesResolver: (props, styles7) => styles7.label
})(({
  theme
}) => _extends({}, theme.typography.body2, {
  display: "block",
  transition: theme.transitions.create("color", {
    duration: theme.transitions.duration.shortest
  }),
  [`&.${stepLabelClasses_default.active}`]: {
    color: (theme.vars || theme).palette.text.primary,
    fontWeight: 500
  },
  [`&.${stepLabelClasses_default.completed}`]: {
    color: (theme.vars || theme).palette.text.primary,
    fontWeight: 500
  },
  [`&.${stepLabelClasses_default.alternativeLabel}`]: {
    marginTop: 16
  },
  [`&.${stepLabelClasses_default.error}`]: {
    color: (theme.vars || theme).palette.error.main
  }
}));
var StepLabelIconContainer = styled_default2("span", {
  name: "MuiStepLabel",
  slot: "IconContainer",
  overridesResolver: (props, styles7) => styles7.iconContainer
})(() => ({
  flexShrink: 0,
  // Fix IE11 issue
  display: "flex",
  paddingRight: 8,
  [`&.${stepLabelClasses_default.alternativeLabel}`]: {
    paddingRight: 0
  }
}));
var StepLabelLabelContainer = styled_default2("span", {
  name: "MuiStepLabel",
  slot: "LabelContainer",
  overridesResolver: (props, styles7) => styles7.labelContainer
})(({
  theme
}) => ({
  width: "100%",
  color: (theme.vars || theme).palette.text.secondary,
  [`&.${stepLabelClasses_default.alternativeLabel}`]: {
    textAlign: "center"
  }
}));
var StepLabel = React252.forwardRef(function StepLabel2(inProps, ref) {
  var _slotProps$label;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepLabel"
  });
  const {
    children: children2,
    className,
    componentsProps = {},
    error = false,
    icon: iconProp,
    optional,
    slotProps = {},
    StepIconComponent: StepIconComponentProp,
    StepIconProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded150);
  const {
    alternativeLabel,
    orientation
  } = React252.useContext(StepperContext_default);
  const {
    active,
    disabled,
    completed,
    icon: iconContext
  } = React252.useContext(StepContext_default);
  const icon = iconProp || iconContext;
  let StepIconComponent = StepIconComponentProp;
  if (icon && !StepIconComponent) {
    StepIconComponent = StepIcon_default;
  }
  const ownerState = _extends({}, props, {
    active,
    alternativeLabel,
    completed,
    disabled,
    error,
    orientation
  });
  const classes2 = useUtilityClasses116(ownerState);
  const labelSlotProps = (_slotProps$label = slotProps.label) != null ? _slotProps$label : componentsProps.label;
  return (0, import_jsx_runtime234.jsxs)(StepLabelRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: [icon || StepIconComponent ? (0, import_jsx_runtime233.jsx)(StepLabelIconContainer, {
      className: classes2.iconContainer,
      ownerState,
      children: (0, import_jsx_runtime233.jsx)(StepIconComponent, _extends({
        completed,
        active,
        error,
        icon
      }, StepIconProps))
    }) : null, (0, import_jsx_runtime234.jsxs)(StepLabelLabelContainer, {
      className: classes2.labelContainer,
      ownerState,
      children: [children2 ? (0, import_jsx_runtime233.jsx)(StepLabelLabel, _extends({
        ownerState
      }, labelSlotProps, {
        className: clsx_default2(classes2.label, labelSlotProps == null ? void 0 : labelSlotProps.className),
        children: children2
      })) : null, optional]
    })]
  }));
});
true ? StepLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * In most cases will simply be a string containing a title for the label.
   */
  children: import_prop_types168.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types168.default.object,
  /**
   * @ignore
   */
  className: import_prop_types168.default.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: import_prop_types168.default.shape({
    label: import_prop_types168.default.object
  }),
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: import_prop_types168.default.bool,
  /**
   * Override the default label of the step icon.
   */
  icon: import_prop_types168.default.node,
  /**
   * The optional node to display.
   */
  optional: import_prop_types168.default.node,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: import_prop_types168.default.shape({
    label: import_prop_types168.default.object
  }),
  /**
   * The component to render in place of the [`StepIcon`](/material-ui/api/step-icon/).
   */
  StepIconComponent: import_prop_types168.default.elementType,
  /**
   * Props applied to the [`StepIcon`](/material-ui/api/step-icon/) element.
   */
  StepIconProps: import_prop_types168.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types168.default.oneOfType([import_prop_types168.default.arrayOf(import_prop_types168.default.oneOfType([import_prop_types168.default.func, import_prop_types168.default.object, import_prop_types168.default.bool])), import_prop_types168.default.func, import_prop_types168.default.object])
} : void 0;
StepLabel.muiName = "StepLabel";
var StepLabel_default = StepLabel;

// node_modules/@mui/material/StepButton/StepButton.js
init_isMuiElement2();

// node_modules/@mui/material/StepButton/stepButtonClasses.js
init_esm();
init_generateUtilityClass3();
function getStepButtonUtilityClass(slot) {
  return generateUtilityClass("MuiStepButton", slot);
}
var stepButtonClasses = generateUtilityClasses("MuiStepButton", ["root", "horizontal", "vertical", "touchRipple"]);
var stepButtonClasses_default = stepButtonClasses;

// node_modules/@mui/material/StepButton/StepButton.js
var import_jsx_runtime235 = __toESM(require_jsx_runtime());
var _excluded151 = ["children", "className", "icon", "optional"];
var useUtilityClasses117 = (ownerState) => {
  const {
    classes: classes2,
    orientation
  } = ownerState;
  const slots = {
    root: ["root", orientation],
    touchRipple: ["touchRipple"]
  };
  return composeClasses(slots, getStepButtonUtilityClass, classes2);
};
var StepButtonRoot = styled_default2(ButtonBase_default, {
  name: "MuiStepButton",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${stepButtonClasses_default.touchRipple}`]: styles7.touchRipple
    }, styles7.root, styles7[ownerState.orientation]];
  }
})(({
  ownerState
}) => _extends({
  width: "100%",
  padding: "24px 16px",
  margin: "-24px -16px",
  boxSizing: "content-box"
}, ownerState.orientation === "vertical" && {
  justifyContent: "flex-start",
  padding: "8px",
  margin: "-8px"
}, {
  [`& .${stepButtonClasses_default.touchRipple}`]: {
    color: "rgba(0, 0, 0, 0.3)"
  }
}));
var StepButton = React253.forwardRef(function StepButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepButton"
  });
  const {
    children: children2,
    className,
    icon,
    optional
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded151);
  const {
    disabled,
    active
  } = React253.useContext(StepContext_default);
  const {
    orientation
  } = React253.useContext(StepperContext_default);
  const ownerState = _extends({}, props, {
    orientation
  });
  const classes2 = useUtilityClasses117(ownerState);
  const childProps = {
    icon,
    optional
  };
  const child = isMuiElement_default(children2, ["StepLabel"]) ? React253.cloneElement(children2, childProps) : (0, import_jsx_runtime235.jsx)(StepLabel_default, _extends({}, childProps, {
    children: children2
  }));
  return (0, import_jsx_runtime235.jsx)(StepButtonRoot, _extends({
    focusRipple: true,
    disabled,
    TouchRippleProps: {
      className: classes2.touchRipple
    },
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState,
    "aria-current": active ? "step" : void 0
  }, other, {
    children: child
  }));
});
true ? StepButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
   */
  children: import_prop_types169.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types169.default.object,
  /**
   * @ignore
   */
  className: import_prop_types169.default.string,
  /**
   * The icon displayed by the step label.
   */
  icon: import_prop_types169.default.node,
  /**
   * The optional node to display.
   */
  optional: import_prop_types169.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types169.default.oneOfType([import_prop_types169.default.arrayOf(import_prop_types169.default.oneOfType([import_prop_types169.default.func, import_prop_types169.default.object, import_prop_types169.default.bool])), import_prop_types169.default.func, import_prop_types169.default.object])
} : void 0;

// node_modules/@mui/material/StepConnector/StepConnector.js
init_objectWithoutPropertiesLoose();
init_extends();
var React254 = __toESM(require_react());
var import_prop_types170 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_capitalize3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/StepConnector/stepConnectorClasses.js
init_esm();
init_generateUtilityClass3();
function getStepConnectorUtilityClass(slot) {
  return generateUtilityClass("MuiStepConnector", slot);
}
var stepConnectorClasses = generateUtilityClasses("MuiStepConnector", ["root", "horizontal", "vertical", "alternativeLabel", "active", "completed", "disabled", "line", "lineHorizontal", "lineVertical"]);

// node_modules/@mui/material/StepConnector/StepConnector.js
var import_jsx_runtime236 = __toESM(require_jsx_runtime());
var _excluded152 = ["className"];
var useUtilityClasses118 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    alternativeLabel,
    active,
    completed,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", orientation, alternativeLabel && "alternativeLabel", active && "active", completed && "completed", disabled && "disabled"],
    line: ["line", `line${capitalize_default(orientation)}`]
  };
  return composeClasses(slots, getStepConnectorUtilityClass, classes2);
};
var StepConnectorRoot = styled_default2("div", {
  name: "MuiStepConnector",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.orientation], ownerState.alternativeLabel && styles7.alternativeLabel, ownerState.completed && styles7.completed];
  }
})(({
  ownerState
}) => _extends({
  flex: "1 1 auto"
}, ownerState.orientation === "vertical" && {
  marginLeft: 12
  // half icon
}, ownerState.alternativeLabel && {
  position: "absolute",
  top: 8 + 4,
  left: "calc(-50% + 20px)",
  right: "calc(50% + 20px)"
}));
var StepConnectorLine = styled_default2("span", {
  name: "MuiStepConnector",
  slot: "Line",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.line, styles7[`line${capitalize_default(ownerState.orientation)}`]];
  }
})(({
  ownerState,
  theme
}) => {
  const borderColor2 = theme.palette.mode === "light" ? theme.palette.grey[400] : theme.palette.grey[600];
  return _extends({
    display: "block",
    borderColor: theme.vars ? theme.vars.palette.StepConnector.border : borderColor2
  }, ownerState.orientation === "horizontal" && {
    borderTopStyle: "solid",
    borderTopWidth: 1
  }, ownerState.orientation === "vertical" && {
    borderLeftStyle: "solid",
    borderLeftWidth: 1,
    minHeight: 24
  });
});
var StepConnector = React254.forwardRef(function StepConnector2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepConnector"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded152);
  const {
    alternativeLabel,
    orientation = "horizontal"
  } = React254.useContext(StepperContext_default);
  const {
    active,
    disabled,
    completed
  } = React254.useContext(StepContext_default);
  const ownerState = _extends({}, props, {
    alternativeLabel,
    orientation,
    active,
    completed,
    disabled
  });
  const classes2 = useUtilityClasses118(ownerState);
  return (0, import_jsx_runtime236.jsx)(StepConnectorRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime236.jsx)(StepConnectorLine, {
      className: classes2.line,
      ownerState
    })
  }));
});
true ? StepConnector.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types170.default.object,
  /**
   * @ignore
   */
  className: import_prop_types170.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types170.default.oneOfType([import_prop_types170.default.arrayOf(import_prop_types170.default.oneOfType([import_prop_types170.default.func, import_prop_types170.default.object, import_prop_types170.default.bool])), import_prop_types170.default.func, import_prop_types170.default.object])
} : void 0;
var StepConnector_default = StepConnector;

// node_modules/@mui/material/StepContent/StepContent.js
init_objectWithoutPropertiesLoose();
init_extends();
var React255 = __toESM(require_react());
var import_prop_types171 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/StepContent/stepContentClasses.js
init_esm();
init_generateUtilityClass3();
function getStepContentUtilityClass(slot) {
  return generateUtilityClass("MuiStepContent", slot);
}
var stepContentClasses = generateUtilityClasses("MuiStepContent", ["root", "last", "transition"]);

// node_modules/@mui/material/StepContent/StepContent.js
var import_jsx_runtime237 = __toESM(require_jsx_runtime());
var _excluded153 = ["children", "className", "TransitionComponent", "transitionDuration", "TransitionProps"];
var useUtilityClasses119 = (ownerState) => {
  const {
    classes: classes2,
    last
  } = ownerState;
  const slots = {
    root: ["root", last && "last"],
    transition: ["transition"]
  };
  return composeClasses(slots, getStepContentUtilityClass, classes2);
};
var StepContentRoot = styled_default2("div", {
  name: "MuiStepContent",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.last && styles7.last];
  }
})(({
  ownerState,
  theme
}) => _extends({
  marginLeft: 12,
  // half icon
  paddingLeft: 8 + 12,
  // margin + half icon
  paddingRight: 8,
  borderLeft: theme.vars ? `1px solid ${theme.vars.palette.StepContent.border}` : `1px solid ${theme.palette.mode === "light" ? theme.palette.grey[400] : theme.palette.grey[600]}`
}, ownerState.last && {
  borderLeft: "none"
}));
var StepContentTransition = styled_default2(Collapse_default, {
  name: "MuiStepContent",
  slot: "Transition",
  overridesResolver: (props, styles7) => styles7.transition
})({});
var StepContent = React255.forwardRef(function StepContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepContent"
  });
  const {
    children: children2,
    className,
    TransitionComponent = Collapse_default,
    transitionDuration: transitionDurationProp = "auto",
    TransitionProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded153);
  const {
    orientation
  } = React255.useContext(StepperContext_default);
  const {
    active,
    last,
    expanded
  } = React255.useContext(StepContext_default);
  const ownerState = _extends({}, props, {
    last
  });
  const classes2 = useUtilityClasses119(ownerState);
  if (true) {
    if (orientation !== "vertical") {
      console.error("MUI: <StepContent /> is only designed for use with the vertical stepper.");
    }
  }
  let transitionDuration = transitionDurationProp;
  if (transitionDurationProp === "auto" && !TransitionComponent.muiSupportAuto) {
    transitionDuration = void 0;
  }
  return (0, import_jsx_runtime237.jsx)(StepContentRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime237.jsx)(StepContentTransition, _extends({
      as: TransitionComponent,
      in: active || expanded,
      className: classes2.transition,
      ownerState,
      timeout: transitionDuration,
      unmountOnExit: true
    }, TransitionProps, {
      children: children2
    }))
  }));
});
true ? StepContent.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types171.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types171.default.object,
  /**
   * @ignore
   */
  className: import_prop_types171.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types171.default.oneOfType([import_prop_types171.default.arrayOf(import_prop_types171.default.oneOfType([import_prop_types171.default.func, import_prop_types171.default.object, import_prop_types171.default.bool])), import_prop_types171.default.func, import_prop_types171.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Collapse
   */
  TransitionComponent: import_prop_types171.default.elementType,
  /**
   * Adjust the duration of the content expand transition.
   * Passed as a prop to the transition component.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: import_prop_types171.default.oneOfType([import_prop_types171.default.oneOf(["auto"]), import_prop_types171.default.number, import_prop_types171.default.shape({
    appear: import_prop_types171.default.number,
    enter: import_prop_types171.default.number,
    exit: import_prop_types171.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types171.default.object
} : void 0;

// node_modules/@mui/material/Stepper/Stepper.js
init_objectWithoutPropertiesLoose();
init_extends();
var React256 = __toESM(require_react());
var import_prop_types172 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Stepper/stepperClasses.js
init_esm();
init_generateUtilityClass3();
function getStepperUtilityClass(slot) {
  return generateUtilityClass("MuiStepper", slot);
}
var stepperClasses = generateUtilityClasses("MuiStepper", ["root", "horizontal", "vertical", "alternativeLabel"]);

// node_modules/@mui/material/Stepper/Stepper.js
var import_jsx_runtime238 = __toESM(require_jsx_runtime());
var _excluded154 = ["activeStep", "alternativeLabel", "children", "className", "component", "connector", "nonLinear", "orientation"];
var useUtilityClasses120 = (ownerState) => {
  const {
    orientation,
    alternativeLabel,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", orientation, alternativeLabel && "alternativeLabel"]
  };
  return composeClasses(slots, getStepperUtilityClass, classes2);
};
var StepperRoot = styled_default2("div", {
  name: "MuiStepper",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.orientation], ownerState.alternativeLabel && styles7.alternativeLabel];
  }
})(({
  ownerState
}) => _extends({
  display: "flex"
}, ownerState.orientation === "horizontal" && {
  flexDirection: "row",
  alignItems: "center"
}, ownerState.orientation === "vertical" && {
  flexDirection: "column"
}, ownerState.alternativeLabel && {
  alignItems: "flex-start"
}));
var defaultConnector = (0, import_jsx_runtime238.jsx)(StepConnector_default, {});
var Stepper = React256.forwardRef(function Stepper2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepper"
  });
  const {
    activeStep = 0,
    alternativeLabel = false,
    children: children2,
    className,
    component = "div",
    connector = defaultConnector,
    nonLinear = false,
    orientation = "horizontal"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded154);
  const ownerState = _extends({}, props, {
    alternativeLabel,
    orientation,
    component
  });
  const classes2 = useUtilityClasses120(ownerState);
  const childrenArray = React256.Children.toArray(children2).filter(Boolean);
  const steps = childrenArray.map((step, index2) => {
    return React256.cloneElement(step, _extends({
      index: index2,
      last: index2 + 1 === childrenArray.length
    }, step.props));
  });
  const contextValue = React256.useMemo(() => ({
    activeStep,
    alternativeLabel,
    connector,
    nonLinear,
    orientation
  }), [activeStep, alternativeLabel, connector, nonLinear, orientation]);
  return (0, import_jsx_runtime238.jsx)(StepperContext_default.Provider, {
    value: contextValue,
    children: (0, import_jsx_runtime238.jsx)(StepperRoot, _extends({
      as: component,
      ownerState,
      className: clsx_default2(classes2.root, className),
      ref
    }, other, {
      children: steps
    }))
  });
});
true ? Stepper.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Set the active step (zero based index).
   * Set to -1 to disable all the steps.
   * @default 0
   */
  activeStep: integerPropType_default,
  /**
   * If set to 'true' and orientation is horizontal,
   * then the step label will be positioned under the icon.
   * @default false
   */
  alternativeLabel: import_prop_types172.default.bool,
  /**
   * Two or more `<Step />` components.
   */
  children: import_prop_types172.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types172.default.object,
  /**
   * @ignore
   */
  className: import_prop_types172.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types172.default.elementType,
  /**
   * An element to be placed between each step.
   * @default <StepConnector />
   */
  connector: import_prop_types172.default.element,
  /**
   * If set the `Stepper` will not assist in controlling steps for linear flow.
   * @default false
   */
  nonLinear: import_prop_types172.default.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: import_prop_types172.default.oneOf(["horizontal", "vertical"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types172.default.oneOfType([import_prop_types172.default.arrayOf(import_prop_types172.default.oneOfType([import_prop_types172.default.func, import_prop_types172.default.object, import_prop_types172.default.bool])), import_prop_types172.default.func, import_prop_types172.default.object])
} : void 0;

// node_modules/@mui/material/index.js
init_SvgIcon2();
init_SvgIcon2();

// node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js
init_extends();
init_objectWithoutPropertiesLoose();
var React258 = __toESM(require_react());
var ReactDOM6 = __toESM(require_react_dom());
var import_prop_types174 = __toESM(require_prop_types());
init_esm();
init_esm2();
init_useForkRef3();
init_ownerDocument3();
init_ownerWindow3();
init_useEventCallback3();
init_useEnhancedEffect3();

// node_modules/@mui/material/SwipeableDrawer/SwipeArea.js
init_objectWithoutPropertiesLoose();
init_extends();
var React257 = __toESM(require_react());
var import_prop_types173 = __toESM(require_prop_types());
init_clsx2();
init_styled2();
init_capitalize3();
var import_jsx_runtime239 = __toESM(require_jsx_runtime());
var _excluded155 = ["anchor", "classes", "className", "width", "style"];
var SwipeAreaRoot = styled_default2("div")(({
  theme,
  ownerState
}) => _extends({
  position: "fixed",
  top: 0,
  left: 0,
  bottom: 0,
  zIndex: theme.zIndex.drawer - 1
}, ownerState.anchor === "left" && {
  right: "auto"
}, ownerState.anchor === "right" && {
  left: "auto",
  right: 0
}, ownerState.anchor === "top" && {
  bottom: "auto",
  right: 0
}, ownerState.anchor === "bottom" && {
  top: "auto",
  bottom: 0,
  right: 0
}));
var SwipeArea = React257.forwardRef(function SwipeArea2(props, ref) {
  const {
    anchor,
    classes: classes2 = {},
    className,
    width: width2,
    style: style4
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded155);
  const ownerState = props;
  return (0, import_jsx_runtime239.jsx)(SwipeAreaRoot, _extends({
    className: clsx_default2("PrivateSwipeArea-root", classes2.root, classes2[`anchor${capitalize_default(anchor)}`], className),
    ref,
    style: _extends({
      [isHorizontal(anchor) ? "width" : "height"]: width2
    }, style4),
    ownerState
  }, other));
});
true ? SwipeArea.propTypes = {
  /**
   * Side on which to attach the discovery area.
   */
  anchor: import_prop_types173.default.oneOf(["left", "top", "right", "bottom"]).isRequired,
  /**
   * @ignore
   */
  classes: import_prop_types173.default.object,
  /**
   * @ignore
   */
  className: import_prop_types173.default.string,
  /**
   * @ignore
   */
  style: import_prop_types173.default.object,
  /**
   * The width of the left most (or right most) area in `px` where the
   * drawer can be swiped open from.
   */
  width: import_prop_types173.default.number.isRequired
} : void 0;
var SwipeArea_default = SwipeArea;

// node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js
var import_jsx_runtime240 = __toESM(require_jsx_runtime());
var import_jsx_runtime241 = __toESM(require_jsx_runtime());
var _excluded156 = ["BackdropProps"];
var _excluded221 = ["anchor", "disableBackdropTransition", "disableDiscovery", "disableSwipeToOpen", "hideBackdrop", "hysteresis", "allowSwipeInChildren", "minFlingVelocity", "ModalProps", "onClose", "onOpen", "open", "PaperProps", "SwipeAreaProps", "swipeAreaWidth", "transitionDuration", "variant"];
var UNCERTAINTY_THRESHOLD = 3;
var DRAG_STARTED_SIGNAL = 20;
var claimedSwipeInstance = null;
function calculateCurrentX(anchor, touches, doc) {
  return anchor === "right" ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;
}
function calculateCurrentY(anchor, touches, containerWindow) {
  return anchor === "bottom" ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;
}
function getMaxTranslate(horizontalSwipe, paperInstance) {
  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;
}
function getTranslate(currentTranslate, startLocation, open, maxTranslate) {
  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);
}
function getDomTreeShapes(element, rootNode) {
  const domTreeShapes = [];
  while (element && element !== rootNode.parentElement) {
    const style4 = ownerWindow_default(rootNode).getComputedStyle(element);
    if (
      // Ignore the scroll children if the element is absolute positioned.
      style4.getPropertyValue("position") === "absolute" || // Ignore the scroll children if the element has an overflowX hidden
      style4.getPropertyValue("overflow-x") === "hidden"
    ) {
    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {
      domTreeShapes.push(element);
    }
    element = element.parentElement;
  }
  return domTreeShapes;
}
function computeHasNativeHandler({
  domTreeShapes,
  start: start2,
  current,
  anchor
}) {
  const axisProperties = {
    scrollPosition: {
      x: "scrollLeft",
      y: "scrollTop"
    },
    scrollLength: {
      x: "scrollWidth",
      y: "scrollHeight"
    },
    clientLength: {
      x: "clientWidth",
      y: "clientHeight"
    }
  };
  return domTreeShapes.some((shape2) => {
    let goingForward = current >= start2;
    if (anchor === "top" || anchor === "left") {
      goingForward = !goingForward;
    }
    const axis = anchor === "left" || anchor === "right" ? "x" : "y";
    const scrollPosition = Math.round(shape2[axisProperties.scrollPosition[axis]]);
    const areNotAtStart = scrollPosition > 0;
    const areNotAtEnd = scrollPosition + shape2[axisProperties.clientLength[axis]] < shape2[axisProperties.scrollLength[axis]];
    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {
      return true;
    }
    return false;
  });
}
var iOS = typeof navigator !== "undefined" && /iPad|iPhone|iPod/.test(navigator.userAgent);
var SwipeableDrawer = React258.forwardRef(function SwipeableDrawer2(inProps, ref) {
  const props = useThemeProps({
    name: "MuiSwipeableDrawer",
    props: inProps
  });
  const theme = useTheme5();
  const transitionDurationDefault = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    anchor = "left",
    disableBackdropTransition = false,
    disableDiscovery = false,
    disableSwipeToOpen = iOS,
    hideBackdrop,
    hysteresis = 0.52,
    allowSwipeInChildren = false,
    minFlingVelocity = 450,
    ModalProps: {
      BackdropProps
    } = {},
    onClose,
    onOpen,
    open = false,
    PaperProps = {},
    SwipeAreaProps,
    swipeAreaWidth = 20,
    transitionDuration = transitionDurationDefault,
    variant = "temporary"
    // Mobile first.
  } = props, ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded156), other = _objectWithoutPropertiesLoose(props, _excluded221);
  const [maybeSwiping, setMaybeSwiping] = React258.useState(false);
  const swipeInstance = React258.useRef({
    isSwiping: null
  });
  const swipeAreaRef = React258.useRef();
  const backdropRef = React258.useRef();
  const paperRef = React258.useRef();
  const handleRef = useForkRef_default(PaperProps.ref, paperRef);
  const touchDetected = React258.useRef(false);
  const calculatedDurationRef = React258.useRef();
  useEnhancedEffect_default2(() => {
    calculatedDurationRef.current = null;
  }, [open]);
  const setPosition = React258.useCallback((translate, options = {}) => {
    const {
      mode = null,
      changeTransition = true
    } = options;
    const anchorRtl = getAnchor(theme, anchor);
    const rtlTranslateMultiplier = ["right", "bottom"].indexOf(anchorRtl) !== -1 ? 1 : -1;
    const horizontalSwipe = isHorizontal(anchor);
    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;
    const drawerStyle = paperRef.current.style;
    drawerStyle.webkitTransform = transform;
    drawerStyle.transform = transform;
    let transition = "";
    if (mode) {
      transition = theme.transitions.create("all", getTransitionProps({
        easing: void 0,
        style: void 0,
        timeout: transitionDuration
      }, {
        mode
      }));
    }
    if (changeTransition) {
      drawerStyle.webkitTransition = transition;
      drawerStyle.transition = transition;
    }
    if (!disableBackdropTransition && !hideBackdrop) {
      const backdropStyle = backdropRef.current.style;
      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);
      if (changeTransition) {
        backdropStyle.webkitTransition = transition;
        backdropStyle.transition = transition;
      }
    }
  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);
  const handleBodyTouchEnd = useEventCallback_default2((nativeEvent) => {
    if (!touchDetected.current) {
      return;
    }
    claimedSwipeInstance = null;
    touchDetected.current = false;
    ReactDOM6.flushSync(() => {
      setMaybeSwiping(false);
    });
    if (!swipeInstance.current.isSwiping) {
      swipeInstance.current.isSwiping = null;
      return;
    }
    swipeInstance.current.isSwiping = null;
    const anchorRtl = getAnchor(theme, anchor);
    const horizontal = isHorizontal(anchor);
    let current;
    if (horizontal) {
      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument_default(nativeEvent.currentTarget));
    } else {
      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow_default(nativeEvent.currentTarget));
    }
    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;
    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);
    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);
    const translateRatio = currentTranslate / maxTranslate;
    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {
      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1e3;
    }
    if (open) {
      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {
        onClose();
      } else {
        setPosition(0, {
          mode: "exit"
        });
      }
      return;
    }
    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {
      onOpen();
    } else {
      setPosition(getMaxTranslate(horizontal, paperRef.current), {
        mode: "enter"
      });
    }
  });
  const startMaybeSwiping = (force = false) => {
    if (!maybeSwiping) {
      if (force || !(disableDiscovery && allowSwipeInChildren)) {
        ReactDOM6.flushSync(() => {
          setMaybeSwiping(true);
        });
      }
      const horizontalSwipe = isHorizontal(anchor);
      if (!open && paperRef.current) {
        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {
          changeTransition: false
        });
      }
      swipeInstance.current.velocity = 0;
      swipeInstance.current.lastTime = null;
      swipeInstance.current.lastTranslate = null;
      swipeInstance.current.paperHit = false;
      touchDetected.current = true;
    }
  };
  const handleBodyTouchMove = useEventCallback_default2((nativeEvent) => {
    if (!paperRef.current || !touchDetected.current) {
      return;
    }
    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {
      return;
    }
    startMaybeSwiping(true);
    const anchorRtl = getAnchor(theme, anchor);
    const horizontalSwipe = isHorizontal(anchor);
    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument_default(nativeEvent.currentTarget));
    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow_default(nativeEvent.currentTarget));
    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {
      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);
      const hasNativeHandler = computeHasNativeHandler({
        domTreeShapes,
        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,
        current: horizontalSwipe ? currentX : currentY,
        anchor
      });
      if (hasNativeHandler) {
        claimedSwipeInstance = true;
        return;
      }
      claimedSwipeInstance = swipeInstance.current;
    }
    if (swipeInstance.current.isSwiping == null) {
      const dx = Math.abs(currentX - swipeInstance.current.startX);
      const dy = Math.abs(currentY - swipeInstance.current.startY);
      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;
      if (definitelySwiping && nativeEvent.cancelable) {
        nativeEvent.preventDefault();
      }
      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {
        swipeInstance.current.isSwiping = definitelySwiping;
        if (!definitelySwiping) {
          handleBodyTouchEnd(nativeEvent);
          return;
        }
        swipeInstance.current.startX = currentX;
        swipeInstance.current.startY = currentY;
        if (!disableDiscovery && !open) {
          if (horizontalSwipe) {
            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;
          } else {
            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;
          }
        }
      }
    }
    if (!swipeInstance.current.isSwiping) {
      return;
    }
    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);
    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;
    if (open && !swipeInstance.current.paperHit) {
      startLocation = Math.min(startLocation, maxTranslate);
    }
    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);
    if (open) {
      if (!swipeInstance.current.paperHit) {
        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;
        if (paperHit) {
          swipeInstance.current.paperHit = true;
          swipeInstance.current.startX = currentX;
          swipeInstance.current.startY = currentY;
        } else {
          return;
        }
      } else if (translate === 0) {
        swipeInstance.current.startX = currentX;
        swipeInstance.current.startY = currentY;
      }
    }
    if (swipeInstance.current.lastTranslate === null) {
      swipeInstance.current.lastTranslate = translate;
      swipeInstance.current.lastTime = performance.now() + 1;
    }
    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;
    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;
    swipeInstance.current.lastTranslate = translate;
    swipeInstance.current.lastTime = performance.now();
    if (nativeEvent.cancelable) {
      nativeEvent.preventDefault();
    }
    setPosition(translate);
  });
  const handleBodyTouchStart = useEventCallback_default2((nativeEvent) => {
    if (nativeEvent.defaultPrevented) {
      return;
    }
    if (nativeEvent.defaultMuiPrevented) {
      return;
    }
    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {
      return;
    }
    const anchorRtl = getAnchor(theme, anchor);
    const horizontalSwipe = isHorizontal(anchor);
    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument_default(nativeEvent.currentTarget));
    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow_default(nativeEvent.currentTarget));
    if (!open) {
      var _paperRef$current;
      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || (_paperRef$current = paperRef.current) != null && _paperRef$current.contains(nativeEvent.target) && (typeof allowSwipeInChildren === "function" ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {
        return;
      }
      if (horizontalSwipe) {
        if (currentX > swipeAreaWidth) {
          return;
        }
      } else if (currentY > swipeAreaWidth) {
        return;
      }
    }
    nativeEvent.defaultMuiPrevented = true;
    claimedSwipeInstance = null;
    swipeInstance.current.startX = currentX;
    swipeInstance.current.startY = currentY;
    startMaybeSwiping();
  });
  React258.useEffect(() => {
    if (variant === "temporary") {
      const doc = ownerDocument_default(paperRef.current);
      doc.addEventListener("touchstart", handleBodyTouchStart);
      doc.addEventListener("touchmove", handleBodyTouchMove, {
        passive: !open
      });
      doc.addEventListener("touchend", handleBodyTouchEnd);
      return () => {
        doc.removeEventListener("touchstart", handleBodyTouchStart);
        doc.removeEventListener("touchmove", handleBodyTouchMove, {
          passive: !open
        });
        doc.removeEventListener("touchend", handleBodyTouchEnd);
      };
    }
    return void 0;
  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);
  React258.useEffect(() => () => {
    if (claimedSwipeInstance === swipeInstance.current) {
      claimedSwipeInstance = null;
    }
  }, []);
  React258.useEffect(() => {
    if (!open) {
      setMaybeSwiping(false);
    }
  }, [open]);
  return (0, import_jsx_runtime241.jsxs)(React258.Fragment, {
    children: [(0, import_jsx_runtime240.jsx)(Drawer_default, _extends({
      open: variant === "temporary" && maybeSwiping ? true : open,
      variant,
      ModalProps: _extends({
        BackdropProps: _extends({}, BackdropProps, {
          ref: backdropRef
        })
      }, variant === "temporary" && {
        keepMounted: true
      }, ModalPropsProp),
      hideBackdrop,
      PaperProps: _extends({}, PaperProps, {
        style: _extends({
          pointerEvents: variant === "temporary" && !open && !allowSwipeInChildren ? "none" : ""
        }, PaperProps.style),
        ref: handleRef
      }),
      anchor,
      transitionDuration: calculatedDurationRef.current || transitionDuration,
      onClose,
      ref
    }, other)), !disableSwipeToOpen && variant === "temporary" && (0, import_jsx_runtime240.jsx)(NoSsr, {
      children: (0, import_jsx_runtime240.jsx)(SwipeArea_default, _extends({
        anchor,
        ref: swipeAreaRef,
        width: swipeAreaWidth
      }, SwipeAreaProps))
    })]
  });
});
true ? SwipeableDrawer.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.
   * This can be useful in scenarios where the drawer is partially visible.
   * You can customize it further with a callback that determines which children the user can drag over to open the drawer
   * (for example, to ignore other elements that handle touch move events, like sliders).
   *
   * @param {TouchEvent} event The 'touchstart' event
   * @param {HTMLDivElement} swipeArea The swipe area element
   * @param {HTMLDivElement} paper The drawer's paper element
   *
   * @default false
   */
  allowSwipeInChildren: import_prop_types174.default.oneOfType([import_prop_types174.default.bool, import_prop_types174.default.func]),
  /**
   * @ignore
   */
  anchor: import_prop_types174.default.oneOf(["bottom", "left", "right", "top"]),
  /**
   * The content of the component.
   */
  children: import_prop_types174.default.node,
  /**
   * Disable the backdrop transition.
   * This can improve the FPS on low-end devices.
   * @default false
   */
  disableBackdropTransition: import_prop_types174.default.bool,
  /**
   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit
   * to promote accidental discovery of the swipe gesture.
   * @default false
   */
  disableDiscovery: import_prop_types174.default.bool,
  /**
   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers
   * navigation actions. Swipe to open is disabled on iOS browsers by default.
   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)
   */
  disableSwipeToOpen: import_prop_types174.default.bool,
  /**
   * @ignore
   */
  hideBackdrop: import_prop_types174.default.bool,
  /**
   * Affects how far the drawer must be opened/closed to change its state.
   * Specified as percent (0-1) of the width of the drawer
   * @default 0.52
   */
  hysteresis: import_prop_types174.default.number,
  /**
   * Defines, from which (average) velocity on, the swipe is
   * defined as complete although hysteresis isn't reached.
   * Good threshold is between 250 - 1000 px/s
   * @default 450
   */
  minFlingVelocity: import_prop_types174.default.number,
  /**
   * @ignore
   */
  ModalProps: import_prop_types174.default.shape({
    BackdropProps: import_prop_types174.default.shape({
      component: elementTypeAcceptingRef_default
    })
  }),
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   */
  onClose: import_prop_types174.default.func.isRequired,
  /**
   * Callback fired when the component requests to be opened.
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: import_prop_types174.default.func.isRequired,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: import_prop_types174.default.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: import_prop_types174.default.shape({
    component: elementTypeAcceptingRef_default,
    style: import_prop_types174.default.object
  }),
  /**
   * The element is used to intercept the touch events on the edge.
   */
  SwipeAreaProps: import_prop_types174.default.object,
  /**
   * The width of the left most (or right most) area in `px` that
   * the drawer can be swiped open from.
   * @default 20
   */
  swipeAreaWidth: import_prop_types174.default.number,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types174.default.oneOfType([import_prop_types174.default.number, import_prop_types174.default.shape({
    appear: import_prop_types174.default.number,
    enter: import_prop_types174.default.number,
    exit: import_prop_types174.default.number
  })]),
  /**
   * @ignore
   */
  variant: import_prop_types174.default.oneOf(["permanent", "persistent", "temporary"])
} : void 0;

// node_modules/@mui/material/Switch/Switch.js
init_objectWithoutPropertiesLoose();
init_extends();
var React259 = __toESM(require_react());
var import_prop_types175 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_composeClasses3();
init_esm2();
init_capitalize3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Switch/switchClasses.js
init_esm();
init_generateUtilityClass3();
function getSwitchUtilityClass2(slot) {
  return generateUtilityClass("MuiSwitch", slot);
}
var switchClasses2 = generateUtilityClasses("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]);
var switchClasses_default = switchClasses2;

// node_modules/@mui/material/Switch/Switch.js
var import_jsx_runtime242 = __toESM(require_jsx_runtime());
var import_jsx_runtime243 = __toESM(require_jsx_runtime());
var _excluded157 = ["className", "color", "edge", "size", "sx"];
var useUtilityClasses121 = (ownerState) => {
  const {
    classes: classes2,
    edge,
    size: size2,
    color: color2,
    checked,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", edge && `edge${capitalize_default(edge)}`, `size${capitalize_default(size2)}`],
    switchBase: ["switchBase", `color${capitalize_default(color2)}`, checked && "checked", disabled && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  };
  const composedClasses = composeClasses(slots, getSwitchUtilityClass2, classes2);
  return _extends({}, classes2, composedClasses);
};
var SwitchRoot = styled_default2("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.edge && styles7[`edge${capitalize_default(ownerState.edge)}`], styles7[`size${capitalize_default(ownerState.size)}`]];
  }
})(({
  ownerState
}) => _extends({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  }
}, ownerState.edge === "start" && {
  marginLeft: -8
}, ownerState.edge === "end" && {
  marginRight: -8
}, ownerState.size === "small" && {
  width: 40,
  height: 24,
  padding: 7,
  [`& .${switchClasses_default.thumb}`]: {
    width: 16,
    height: 16
  },
  [`& .${switchClasses_default.switchBase}`]: {
    padding: 4,
    [`&.${switchClasses_default.checked}`]: {
      transform: "translateX(16px)"
    }
  }
}));
var SwitchSwitchBase = styled_default2(SwitchBase_default, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.switchBase, {
      [`& .${switchClasses_default.input}`]: styles7.input
    }, ownerState.color !== "default" && styles7[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  theme
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === "light" ? theme.palette.common.white : theme.palette.grey[300]}`,
  transition: theme.transitions.create(["left", "transform"], {
    duration: theme.transitions.duration.shortest
  }),
  [`&.${switchClasses_default.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${switchClasses_default.disabled}`]: {
    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === "light" ? theme.palette.grey[100] : theme.palette.grey[600]}`
  },
  [`&.${switchClasses_default.checked} + .${switchClasses_default.track}`]: {
    opacity: 0.5
  },
  [`&.${switchClasses_default.disabled} + .${switchClasses_default.track}`]: {
    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${switchClasses_default.input}`]: {
    left: "-100%",
    width: "300%"
  }
}), ({
  theme,
  ownerState
}) => _extends({
  "&:hover": {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, ownerState.color !== "default" && {
  [`&.${switchClasses_default.checked}`]: {
    color: (theme.vars || theme).palette[ownerState.color].main,
    "&:hover": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${switchClasses_default.disabled}`]: {
      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === "light" ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`
    }
  },
  [`&.${switchClasses_default.checked} + .${switchClasses_default.track}`]: {
    backgroundColor: (theme.vars || theme).palette[ownerState.color].main
  }
}));
var SwitchTrack = styled_default2("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (props, styles7) => styles7.track
})(({
  theme
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: theme.transitions.create(["opacity", "background-color"], {
    duration: theme.transitions.duration.shortest
  }),
  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === "light" ? theme.palette.common.black : theme.palette.common.white}`,
  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === "light" ? 0.38 : 0.3}`
}));
var SwitchThumb = styled_default2("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (props, styles7) => styles7.thumb
})(({
  theme
}) => ({
  boxShadow: (theme.vars || theme).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}));
var Switch3 = React259.forwardRef(function Switch4(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSwitch"
  });
  const {
    className,
    color: color2 = "primary",
    edge = false,
    size: size2 = "medium",
    sx
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded157);
  const ownerState = _extends({}, props, {
    color: color2,
    edge,
    size: size2
  });
  const classes2 = useUtilityClasses121(ownerState);
  const icon = (0, import_jsx_runtime242.jsx)(SwitchThumb, {
    className: classes2.thumb,
    ownerState
  });
  return (0, import_jsx_runtime243.jsxs)(SwitchRoot, {
    className: clsx_default2(classes2.root, className),
    sx,
    ownerState,
    children: [(0, import_jsx_runtime242.jsx)(SwitchSwitchBase, _extends({
      type: "checkbox",
      icon,
      checkedIcon: icon,
      ref,
      ownerState
    }, other, {
      classes: _extends({}, classes2, {
        root: classes2.switchBase
      })
    })), (0, import_jsx_runtime242.jsx)(SwitchTrack, {
      className: classes2.track,
      ownerState
    })]
  });
});
true ? Switch3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types175.default.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: import_prop_types175.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types175.default.object,
  /**
   * @ignore
   */
  className: import_prop_types175.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types175.default.oneOfType([import_prop_types175.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types175.default.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: import_prop_types175.default.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types175.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: import_prop_types175.default.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: import_prop_types175.default.oneOf(["end", "start", false]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: import_prop_types175.default.node,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types175.default.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: import_prop_types175.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types175.default.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: import_prop_types175.default.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: import_prop_types175.default.oneOfType([import_prop_types175.default.oneOf(["medium", "small"]), import_prop_types175.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types175.default.oneOfType([import_prop_types175.default.arrayOf(import_prop_types175.default.oneOfType([import_prop_types175.default.func, import_prop_types175.default.object, import_prop_types175.default.bool])), import_prop_types175.default.func, import_prop_types175.default.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: import_prop_types175.default.any
} : void 0;
var Switch_default = Switch3;

// node_modules/@mui/material/Tab/Tab.js
init_objectWithoutPropertiesLoose();
init_extends();
var React260 = __toESM(require_react());
var import_prop_types176 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_capitalize3();
init_useThemeProps3();
init_styled2();
init_unsupportedProp2();

// node_modules/@mui/material/Tab/tabClasses.js
init_esm();
init_generateUtilityClass3();
function getTabUtilityClass2(slot) {
  return generateUtilityClass("MuiTab", slot);
}
var tabClasses2 = generateUtilityClasses("MuiTab", ["root", "labelIcon", "textColorInherit", "textColorPrimary", "textColorSecondary", "selected", "disabled", "fullWidth", "wrapped", "iconWrapper"]);
var tabClasses_default = tabClasses2;

// node_modules/@mui/material/Tab/Tab.js
var import_jsx_runtime244 = __toESM(require_jsx_runtime());
var _excluded158 = ["className", "disabled", "disableFocusRipple", "fullWidth", "icon", "iconPosition", "indicator", "label", "onChange", "onClick", "onFocus", "selected", "selectionFollowsFocus", "textColor", "value", "wrapped"];
var useUtilityClasses122 = (ownerState) => {
  const {
    classes: classes2,
    textColor,
    fullWidth,
    wrapped,
    icon,
    label,
    selected,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", icon && label && "labelIcon", `textColor${capitalize_default(textColor)}`, fullWidth && "fullWidth", wrapped && "wrapped", selected && "selected", disabled && "disabled"],
    iconWrapper: ["iconWrapper"]
  };
  return composeClasses(slots, getTabUtilityClass2, classes2);
};
var TabRoot = styled_default2(ButtonBase_default, {
  name: "MuiTab",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.label && ownerState.icon && styles7.labelIcon, styles7[`textColor${capitalize_default(ownerState.textColor)}`], ownerState.fullWidth && styles7.fullWidth, ownerState.wrapped && styles7.wrapped];
  }
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.button, {
  maxWidth: 360,
  minWidth: 90,
  position: "relative",
  minHeight: 48,
  flexShrink: 0,
  padding: "12px 16px",
  overflow: "hidden",
  whiteSpace: "normal",
  textAlign: "center"
}, ownerState.label && {
  flexDirection: ownerState.iconPosition === "top" || ownerState.iconPosition === "bottom" ? "column" : "row"
}, {
  lineHeight: 1.25
}, ownerState.icon && ownerState.label && {
  minHeight: 72,
  paddingTop: 9,
  paddingBottom: 9,
  [`& > .${tabClasses_default.iconWrapper}`]: _extends({}, ownerState.iconPosition === "top" && {
    marginBottom: 6
  }, ownerState.iconPosition === "bottom" && {
    marginTop: 6
  }, ownerState.iconPosition === "start" && {
    marginRight: theme.spacing(1)
  }, ownerState.iconPosition === "end" && {
    marginLeft: theme.spacing(1)
  })
}, ownerState.textColor === "inherit" && {
  color: "inherit",
  opacity: 0.6,
  // same opacity as theme.palette.text.secondary
  [`&.${tabClasses_default.selected}`]: {
    opacity: 1
  },
  [`&.${tabClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  }
}, ownerState.textColor === "primary" && {
  color: (theme.vars || theme).palette.text.secondary,
  [`&.${tabClasses_default.selected}`]: {
    color: (theme.vars || theme).palette.primary.main
  },
  [`&.${tabClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.text.disabled
  }
}, ownerState.textColor === "secondary" && {
  color: (theme.vars || theme).palette.text.secondary,
  [`&.${tabClasses_default.selected}`]: {
    color: (theme.vars || theme).palette.secondary.main
  },
  [`&.${tabClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.text.disabled
  }
}, ownerState.fullWidth && {
  flexShrink: 1,
  flexGrow: 1,
  flexBasis: 0,
  maxWidth: "none"
}, ownerState.wrapped && {
  fontSize: theme.typography.pxToRem(12)
}));
var Tab3 = React260.forwardRef(function Tab4(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTab"
  });
  const {
    className,
    disabled = false,
    disableFocusRipple = false,
    // eslint-disable-next-line react/prop-types
    fullWidth,
    icon: iconProp,
    iconPosition = "top",
    // eslint-disable-next-line react/prop-types
    indicator,
    label,
    onChange,
    onClick,
    onFocus,
    // eslint-disable-next-line react/prop-types
    selected,
    // eslint-disable-next-line react/prop-types
    selectionFollowsFocus,
    // eslint-disable-next-line react/prop-types
    textColor = "inherit",
    value,
    wrapped = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded158);
  const ownerState = _extends({}, props, {
    disabled,
    disableFocusRipple,
    selected,
    icon: !!iconProp,
    iconPosition,
    label: !!label,
    fullWidth,
    textColor,
    wrapped
  });
  const classes2 = useUtilityClasses122(ownerState);
  const icon = iconProp && label && React260.isValidElement(iconProp) ? React260.cloneElement(iconProp, {
    className: clsx_default2(classes2.iconWrapper, iconProp.props.className)
  }) : iconProp;
  const handleClick2 = (event) => {
    if (!selected && onChange) {
      onChange(event, value);
    }
    if (onClick) {
      onClick(event);
    }
  };
  const handleFocus = (event) => {
    if (selectionFollowsFocus && !selected && onChange) {
      onChange(event, value);
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  return (0, import_jsx_runtime244.jsxs)(TabRoot, _extends({
    focusRipple: !disableFocusRipple,
    className: clsx_default2(classes2.root, className),
    ref,
    role: "tab",
    "aria-selected": selected,
    disabled,
    onClick: handleClick2,
    onFocus: handleFocus,
    ownerState,
    tabIndex: selected ? 0 : -1
  }, other, {
    children: [iconPosition === "top" || iconPosition === "start" ? (0, import_jsx_runtime244.jsxs)(React260.Fragment, {
      children: [icon, label]
    }) : (0, import_jsx_runtime244.jsxs)(React260.Fragment, {
      children: [label, icon]
    }), indicator]
  }));
});
true ? Tab3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: unsupportedProp_default,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types176.default.object,
  /**
   * @ignore
   */
  className: import_prop_types176.default.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types176.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types176.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: import_prop_types176.default.bool,
  /**
   * The icon to display.
   */
  icon: import_prop_types176.default.oneOfType([import_prop_types176.default.element, import_prop_types176.default.string]),
  /**
   * The position of the icon relative to the label.
   * @default 'top'
   */
  iconPosition: import_prop_types176.default.oneOf(["bottom", "end", "start", "top"]),
  /**
   * The label element.
   */
  label: import_prop_types176.default.node,
  /**
   * @ignore
   */
  onChange: import_prop_types176.default.func,
  /**
   * @ignore
   */
  onClick: import_prop_types176.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types176.default.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types176.default.oneOfType([import_prop_types176.default.arrayOf(import_prop_types176.default.oneOfType([import_prop_types176.default.func, import_prop_types176.default.object, import_prop_types176.default.bool])), import_prop_types176.default.func, import_prop_types176.default.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: import_prop_types176.default.any,
  /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   * @default false
   */
  wrapped: import_prop_types176.default.bool
} : void 0;
var Tab_default = Tab3;

// node_modules/@mui/material/Table/Table.js
init_objectWithoutPropertiesLoose();
init_extends();
var React262 = __toESM(require_react());
var import_prop_types177 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();

// node_modules/@mui/material/Table/TableContext.js
var React261 = __toESM(require_react());
var TableContext = React261.createContext();
if (true) {
  TableContext.displayName = "TableContext";
}
var TableContext_default = TableContext;

// node_modules/@mui/material/Table/Table.js
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Table/tableClasses.js
init_esm();
init_generateUtilityClass3();
function getTableUtilityClass(slot) {
  return generateUtilityClass("MuiTable", slot);
}
var tableClasses = generateUtilityClasses("MuiTable", ["root", "stickyHeader"]);

// node_modules/@mui/material/Table/Table.js
var import_jsx_runtime245 = __toESM(require_jsx_runtime());
var _excluded159 = ["className", "component", "padding", "size", "stickyHeader"];
var useUtilityClasses123 = (ownerState) => {
  const {
    classes: classes2,
    stickyHeader
  } = ownerState;
  const slots = {
    root: ["root", stickyHeader && "stickyHeader"]
  };
  return composeClasses(slots, getTableUtilityClass, classes2);
};
var TableRoot = styled_default2("table", {
  name: "MuiTable",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.stickyHeader && styles7.stickyHeader];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "table",
  width: "100%",
  borderCollapse: "collapse",
  borderSpacing: 0,
  "& caption": _extends({}, theme.typography.body2, {
    padding: theme.spacing(2),
    color: (theme.vars || theme).palette.text.secondary,
    textAlign: "left",
    captionSide: "bottom"
  })
}, ownerState.stickyHeader && {
  borderCollapse: "separate"
}));
var defaultComponent = "table";
var Table = React262.forwardRef(function Table2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTable"
  });
  const {
    className,
    component = defaultComponent,
    padding: padding2 = "normal",
    size: size2 = "medium",
    stickyHeader = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded159);
  const ownerState = _extends({}, props, {
    component,
    padding: padding2,
    size: size2,
    stickyHeader
  });
  const classes2 = useUtilityClasses123(ownerState);
  const table = React262.useMemo(() => ({
    padding: padding2,
    size: size2,
    stickyHeader
  }), [padding2, size2, stickyHeader]);
  return (0, import_jsx_runtime245.jsx)(TableContext_default.Provider, {
    value: table,
    children: (0, import_jsx_runtime245.jsx)(TableRoot, _extends({
      as: component,
      role: component === defaultComponent ? null : "table",
      ref,
      className: clsx_default2(classes2.root, className),
      ownerState
    }, other))
  });
});
true ? Table.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the table, normally `TableHead` and `TableBody`.
   */
  children: import_prop_types177.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types177.default.object,
  /**
   * @ignore
   */
  className: import_prop_types177.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types177.default.elementType,
  /**
   * Allows TableCells to inherit padding of the Table.
   * @default 'normal'
   */
  padding: import_prop_types177.default.oneOf(["checkbox", "none", "normal"]),
  /**
   * Allows TableCells to inherit size of the Table.
   * @default 'medium'
   */
  size: import_prop_types177.default.oneOfType([import_prop_types177.default.oneOf(["medium", "small"]), import_prop_types177.default.string]),
  /**
   * Set the header sticky.
   *
   * ⚠️ It doesn't work with IE11.
   * @default false
   */
  stickyHeader: import_prop_types177.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types177.default.oneOfType([import_prop_types177.default.arrayOf(import_prop_types177.default.oneOfType([import_prop_types177.default.func, import_prop_types177.default.object, import_prop_types177.default.bool])), import_prop_types177.default.func, import_prop_types177.default.object])
} : void 0;
var Table_default = Table;

// node_modules/@mui/material/TableBody/TableBody.js
init_extends();
init_objectWithoutPropertiesLoose();
var React264 = __toESM(require_react());
var import_prop_types178 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();

// node_modules/@mui/material/Table/Tablelvl2Context.js
var React263 = __toESM(require_react());
var Tablelvl2Context = React263.createContext();
if (true) {
  Tablelvl2Context.displayName = "Tablelvl2Context";
}
var Tablelvl2Context_default = Tablelvl2Context;

// node_modules/@mui/material/TableBody/TableBody.js
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/TableBody/tableBodyClasses.js
init_esm();
init_generateUtilityClass3();
function getTableBodyUtilityClass(slot) {
  return generateUtilityClass("MuiTableBody", slot);
}
var tableBodyClasses = generateUtilityClasses("MuiTableBody", ["root"]);

// node_modules/@mui/material/TableBody/TableBody.js
var import_jsx_runtime246 = __toESM(require_jsx_runtime());
var _excluded160 = ["className", "component"];
var useUtilityClasses124 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableBodyUtilityClass, classes2);
};
var TableBodyRoot = styled_default2("tbody", {
  name: "MuiTableBody",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({
  display: "table-row-group"
});
var tablelvl2 = {
  variant: "body"
};
var defaultComponent2 = "tbody";
var TableBody = React264.forwardRef(function TableBody2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableBody"
  });
  const {
    className,
    component = defaultComponent2
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded160);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses124(ownerState);
  return (0, import_jsx_runtime246.jsx)(Tablelvl2Context_default.Provider, {
    value: tablelvl2,
    children: (0, import_jsx_runtime246.jsx)(TableBodyRoot, _extends({
      className: clsx_default2(classes2.root, className),
      as: component,
      ref,
      role: component === defaultComponent2 ? null : "rowgroup",
      ownerState
    }, other))
  });
});
true ? TableBody.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `TableRow`.
   */
  children: import_prop_types178.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types178.default.object,
  /**
   * @ignore
   */
  className: import_prop_types178.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types178.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types178.default.oneOfType([import_prop_types178.default.arrayOf(import_prop_types178.default.oneOfType([import_prop_types178.default.func, import_prop_types178.default.object, import_prop_types178.default.bool])), import_prop_types178.default.func, import_prop_types178.default.object])
} : void 0;
var TableBody_default = TableBody;

// node_modules/@mui/material/TableCell/TableCell.js
init_objectWithoutPropertiesLoose();
init_extends();
var React265 = __toESM(require_react());
var import_prop_types179 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_capitalize3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/TableCell/tableCellClasses.js
init_esm();
init_generateUtilityClass3();
function getTableCellUtilityClass(slot) {
  return generateUtilityClass("MuiTableCell", slot);
}
var tableCellClasses = generateUtilityClasses("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]);
var tableCellClasses_default = tableCellClasses;

// node_modules/@mui/material/TableCell/TableCell.js
var import_jsx_runtime247 = __toESM(require_jsx_runtime());
var _excluded161 = ["align", "className", "component", "padding", "scope", "size", "sortDirection", "variant"];
var useUtilityClasses125 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    align,
    padding: padding2,
    size: size2,
    stickyHeader
  } = ownerState;
  const slots = {
    root: ["root", variant, stickyHeader && "stickyHeader", align !== "inherit" && `align${capitalize_default(align)}`, padding2 !== "normal" && `padding${capitalize_default(padding2)}`, `size${capitalize_default(size2)}`]
  };
  return composeClasses(slots, getTableCellUtilityClass, classes2);
};
var TableCellRoot = styled_default2("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[ownerState.variant], styles7[`size${capitalize_default(ownerState.size)}`], ownerState.padding !== "normal" && styles7[`padding${capitalize_default(ownerState.padding)}`], ownerState.align !== "inherit" && styles7[`align${capitalize_default(ownerState.align)}`], ownerState.stickyHeader && styles7.stickyHeader];
  }
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.body2, {
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid
    ${theme.palette.mode === "light" ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16
}, ownerState.variant === "head" && {
  color: (theme.vars || theme).palette.text.primary,
  lineHeight: theme.typography.pxToRem(24),
  fontWeight: theme.typography.fontWeightMedium
}, ownerState.variant === "body" && {
  color: (theme.vars || theme).palette.text.primary
}, ownerState.variant === "footer" && {
  color: (theme.vars || theme).palette.text.secondary,
  lineHeight: theme.typography.pxToRem(21),
  fontSize: theme.typography.pxToRem(12)
}, ownerState.size === "small" && {
  padding: "6px 16px",
  [`&.${tableCellClasses_default.paddingCheckbox}`]: {
    width: 24,
    // prevent the checkbox column from growing
    padding: "0 12px 0 16px",
    "& > *": {
      padding: 0
    }
  }
}, ownerState.padding === "checkbox" && {
  width: 48,
  // prevent the checkbox column from growing
  padding: "0 0 0 4px"
}, ownerState.padding === "none" && {
  padding: 0
}, ownerState.align === "left" && {
  textAlign: "left"
}, ownerState.align === "center" && {
  textAlign: "center"
}, ownerState.align === "right" && {
  textAlign: "right",
  flexDirection: "row-reverse"
}, ownerState.align === "justify" && {
  textAlign: "justify"
}, ownerState.stickyHeader && {
  position: "sticky",
  top: 0,
  zIndex: 2,
  backgroundColor: (theme.vars || theme).palette.background.default
}));
var TableCell = React265.forwardRef(function TableCell2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableCell"
  });
  const {
    align = "inherit",
    className,
    component: componentProp,
    padding: paddingProp,
    scope: scopeProp,
    size: sizeProp,
    sortDirection,
    variant: variantProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded161);
  const table = React265.useContext(TableContext_default);
  const tablelvl24 = React265.useContext(Tablelvl2Context_default);
  const isHeadCell = tablelvl24 && tablelvl24.variant === "head";
  let component;
  if (componentProp) {
    component = componentProp;
  } else {
    component = isHeadCell ? "th" : "td";
  }
  let scope = scopeProp;
  if (component === "td") {
    scope = void 0;
  } else if (!scope && isHeadCell) {
    scope = "col";
  }
  const variant = variantProp || tablelvl24 && tablelvl24.variant;
  const ownerState = _extends({}, props, {
    align,
    component,
    padding: paddingProp || (table && table.padding ? table.padding : "normal"),
    size: sizeProp || (table && table.size ? table.size : "medium"),
    sortDirection,
    stickyHeader: variant === "head" && table && table.stickyHeader,
    variant
  });
  const classes2 = useUtilityClasses125(ownerState);
  let ariaSort = null;
  if (sortDirection) {
    ariaSort = sortDirection === "asc" ? "ascending" : "descending";
  }
  return (0, import_jsx_runtime247.jsx)(TableCellRoot, _extends({
    as: component,
    ref,
    className: clsx_default2(classes2.root, className),
    "aria-sort": ariaSort,
    scope,
    ownerState
  }, other));
});
true ? TableCell.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: import_prop_types179.default.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: import_prop_types179.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types179.default.object,
  /**
   * @ignore
   */
  className: import_prop_types179.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types179.default.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: import_prop_types179.default.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: import_prop_types179.default.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: import_prop_types179.default.oneOfType([import_prop_types179.default.oneOf(["medium", "small"]), import_prop_types179.default.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: import_prop_types179.default.oneOf(["asc", "desc", false]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types179.default.oneOfType([import_prop_types179.default.arrayOf(import_prop_types179.default.oneOfType([import_prop_types179.default.func, import_prop_types179.default.object, import_prop_types179.default.bool])), import_prop_types179.default.func, import_prop_types179.default.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: import_prop_types179.default.oneOfType([import_prop_types179.default.oneOf(["body", "footer", "head"]), import_prop_types179.default.string])
} : void 0;
var TableCell_default = TableCell;

// node_modules/@mui/material/TableContainer/TableContainer.js
init_extends();
init_objectWithoutPropertiesLoose();
var React266 = __toESM(require_react());
var import_prop_types180 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/TableContainer/tableContainerClasses.js
init_esm();
init_generateUtilityClass3();
function getTableContainerUtilityClass(slot) {
  return generateUtilityClass("MuiTableContainer", slot);
}
var tableContainerClasses = generateUtilityClasses("MuiTableContainer", ["root"]);

// node_modules/@mui/material/TableContainer/TableContainer.js
var import_jsx_runtime248 = __toESM(require_jsx_runtime());
var _excluded162 = ["className", "component"];
var useUtilityClasses126 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableContainerUtilityClass, classes2);
};
var TableContainerRoot = styled_default2("div", {
  name: "MuiTableContainer",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({
  width: "100%",
  overflowX: "auto"
});
var TableContainer = React266.forwardRef(function TableContainer2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableContainer"
  });
  const {
    className,
    component = "div"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded162);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses126(ownerState);
  return (0, import_jsx_runtime248.jsx)(TableContainerRoot, _extends({
    ref,
    as: component,
    className: clsx_default2(classes2.root, className),
    ownerState
  }, other));
});
true ? TableContainer.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `Table`.
   */
  children: import_prop_types180.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types180.default.object,
  /**
   * @ignore
   */
  className: import_prop_types180.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types180.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types180.default.oneOfType([import_prop_types180.default.arrayOf(import_prop_types180.default.oneOfType([import_prop_types180.default.func, import_prop_types180.default.object, import_prop_types180.default.bool])), import_prop_types180.default.func, import_prop_types180.default.object])
} : void 0;

// node_modules/@mui/material/TableFooter/TableFooter.js
init_extends();
init_objectWithoutPropertiesLoose();
var React267 = __toESM(require_react());
var import_prop_types181 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/TableFooter/tableFooterClasses.js
init_esm();
init_generateUtilityClass3();
function getTableFooterUtilityClass(slot) {
  return generateUtilityClass("MuiTableFooter", slot);
}
var tableFooterClasses = generateUtilityClasses("MuiTableFooter", ["root"]);

// node_modules/@mui/material/TableFooter/TableFooter.js
var import_jsx_runtime249 = __toESM(require_jsx_runtime());
var _excluded163 = ["className", "component"];
var useUtilityClasses127 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableFooterUtilityClass, classes2);
};
var TableFooterRoot = styled_default2("tfoot", {
  name: "MuiTableFooter",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({
  display: "table-footer-group"
});
var tablelvl22 = {
  variant: "footer"
};
var defaultComponent3 = "tfoot";
var TableFooter = React267.forwardRef(function TableFooter2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableFooter"
  });
  const {
    className,
    component = defaultComponent3
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded163);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses127(ownerState);
  return (0, import_jsx_runtime249.jsx)(Tablelvl2Context_default.Provider, {
    value: tablelvl22,
    children: (0, import_jsx_runtime249.jsx)(TableFooterRoot, _extends({
      as: component,
      className: clsx_default2(classes2.root, className),
      ref,
      role: component === defaultComponent3 ? null : "rowgroup",
      ownerState
    }, other))
  });
});
true ? TableFooter.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `TableRow`.
   */
  children: import_prop_types181.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types181.default.object,
  /**
   * @ignore
   */
  className: import_prop_types181.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types181.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types181.default.oneOfType([import_prop_types181.default.arrayOf(import_prop_types181.default.oneOfType([import_prop_types181.default.func, import_prop_types181.default.object, import_prop_types181.default.bool])), import_prop_types181.default.func, import_prop_types181.default.object])
} : void 0;

// node_modules/@mui/material/TableHead/TableHead.js
init_extends();
init_objectWithoutPropertiesLoose();
var React268 = __toESM(require_react());
var import_prop_types182 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/TableHead/tableHeadClasses.js
init_esm();
init_generateUtilityClass3();
function getTableHeadUtilityClass(slot) {
  return generateUtilityClass("MuiTableHead", slot);
}
var tableHeadClasses = generateUtilityClasses("MuiTableHead", ["root"]);

// node_modules/@mui/material/TableHead/TableHead.js
var import_jsx_runtime250 = __toESM(require_jsx_runtime());
var _excluded164 = ["className", "component"];
var useUtilityClasses128 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableHeadUtilityClass, classes2);
};
var TableHeadRoot = styled_default2("thead", {
  name: "MuiTableHead",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({
  display: "table-header-group"
});
var tablelvl23 = {
  variant: "head"
};
var defaultComponent4 = "thead";
var TableHead = React268.forwardRef(function TableHead2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableHead"
  });
  const {
    className,
    component = defaultComponent4
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded164);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses128(ownerState);
  return (0, import_jsx_runtime250.jsx)(Tablelvl2Context_default.Provider, {
    value: tablelvl23,
    children: (0, import_jsx_runtime250.jsx)(TableHeadRoot, _extends({
      as: component,
      className: clsx_default2(classes2.root, className),
      ref,
      role: component === defaultComponent4 ? null : "rowgroup",
      ownerState
    }, other))
  });
});
true ? TableHead.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `TableRow`.
   */
  children: import_prop_types182.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types182.default.object,
  /**
   * @ignore
   */
  className: import_prop_types182.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types182.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types182.default.oneOfType([import_prop_types182.default.arrayOf(import_prop_types182.default.oneOfType([import_prop_types182.default.func, import_prop_types182.default.object, import_prop_types182.default.bool])), import_prop_types182.default.func, import_prop_types182.default.object])
} : void 0;
var TableHead_default = TableHead;

// node_modules/@mui/material/TablePagination/TablePagination.js
init_objectWithoutPropertiesLoose();
init_extends();
var React273 = __toESM(require_react());
var import_prop_types185 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/Toolbar/Toolbar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React269 = __toESM(require_react());
var import_prop_types183 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/Toolbar/toolbarClasses.js
init_esm();
init_generateUtilityClass3();
function getToolbarUtilityClass(slot) {
  return generateUtilityClass("MuiToolbar", slot);
}
var toolbarClasses = generateUtilityClasses("MuiToolbar", ["root", "gutters", "regular", "dense"]);

// node_modules/@mui/material/Toolbar/Toolbar.js
var import_jsx_runtime251 = __toESM(require_jsx_runtime());
var _excluded165 = ["className", "component", "disableGutters", "variant"];
var useUtilityClasses129 = (ownerState) => {
  const {
    classes: classes2,
    disableGutters,
    variant
  } = ownerState;
  const slots = {
    root: ["root", !disableGutters && "gutters", variant]
  };
  return composeClasses(slots, getToolbarUtilityClass, classes2);
};
var ToolbarRoot = styled_default2("div", {
  name: "MuiToolbar",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, !ownerState.disableGutters && styles7.gutters, styles7[ownerState.variant]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  position: "relative",
  display: "flex",
  alignItems: "center"
}, !ownerState.disableGutters && {
  paddingLeft: theme.spacing(2),
  paddingRight: theme.spacing(2),
  [theme.breakpoints.up("sm")]: {
    paddingLeft: theme.spacing(3),
    paddingRight: theme.spacing(3)
  }
}, ownerState.variant === "dense" && {
  minHeight: 48
}), ({
  theme,
  ownerState
}) => ownerState.variant === "regular" && theme.mixins.toolbar);
var Toolbar = React269.forwardRef(function Toolbar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiToolbar"
  });
  const {
    className,
    component = "div",
    disableGutters = false,
    variant = "regular"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded165);
  const ownerState = _extends({}, props, {
    component,
    disableGutters,
    variant
  });
  const classes2 = useUtilityClasses129(ownerState);
  return (0, import_jsx_runtime251.jsx)(ToolbarRoot, _extends({
    as: component,
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other));
});
true ? Toolbar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.
   */
  children: import_prop_types183.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types183.default.object,
  /**
   * @ignore
   */
  className: import_prop_types183.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types183.default.elementType,
  /**
   * If `true`, disables gutter padding.
   * @default false
   */
  disableGutters: import_prop_types183.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types183.default.oneOfType([import_prop_types183.default.arrayOf(import_prop_types183.default.oneOfType([import_prop_types183.default.func, import_prop_types183.default.object, import_prop_types183.default.bool])), import_prop_types183.default.func, import_prop_types183.default.object]),
  /**
   * The variant to use.
   * @default 'regular'
   */
  variant: import_prop_types183.default.oneOfType([import_prop_types183.default.oneOf(["dense", "regular"]), import_prop_types183.default.string])
} : void 0;
var Toolbar_default = Toolbar;

// node_modules/@mui/material/TablePagination/TablePaginationActions.js
init_extends();
init_objectWithoutPropertiesLoose();
var React272 = __toESM(require_react());
var import_prop_types184 = __toESM(require_prop_types());

// node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js
var React270 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime252 = __toESM(require_jsx_runtime());
var KeyboardArrowLeft_default = createSvgIcon((0, import_jsx_runtime252.jsx)("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft");

// node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js
var React271 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime253 = __toESM(require_jsx_runtime());
var KeyboardArrowRight_default = createSvgIcon((0, import_jsx_runtime253.jsx)("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight");

// node_modules/@mui/material/TablePagination/TablePaginationActions.js
var import_jsx_runtime254 = __toESM(require_jsx_runtime());
var import_jsx_runtime255 = __toESM(require_jsx_runtime());
var _LastPageIcon;
var _FirstPageIcon;
var _KeyboardArrowRight;
var _KeyboardArrowLeft;
var _KeyboardArrowLeft2;
var _KeyboardArrowRight2;
var _FirstPageIcon2;
var _LastPageIcon2;
var _excluded166 = ["backIconButtonProps", "count", "getItemAriaLabel", "nextIconButtonProps", "onPageChange", "page", "rowsPerPage", "showFirstButton", "showLastButton"];
var TablePaginationActions3 = React272.forwardRef(function TablePaginationActions4(props, ref) {
  const {
    backIconButtonProps,
    count,
    getItemAriaLabel,
    nextIconButtonProps,
    onPageChange,
    page,
    rowsPerPage,
    showFirstButton,
    showLastButton
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded166);
  const theme = useTheme5();
  const handleFirstPageButtonClick = (event) => {
    onPageChange(event, 0);
  };
  const handleBackButtonClick = (event) => {
    onPageChange(event, page - 1);
  };
  const handleNextButtonClick = (event) => {
    onPageChange(event, page + 1);
  };
  const handleLastPageButtonClick = (event) => {
    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));
  };
  return (0, import_jsx_runtime255.jsxs)("div", _extends({
    ref
  }, other, {
    children: [showFirstButton && (0, import_jsx_runtime254.jsx)(IconButton_default, {
      onClick: handleFirstPageButtonClick,
      disabled: page === 0,
      "aria-label": getItemAriaLabel("first", page),
      title: getItemAriaLabel("first", page),
      children: theme.direction === "rtl" ? _LastPageIcon || (_LastPageIcon = (0, import_jsx_runtime254.jsx)(LastPage_default, {})) : _FirstPageIcon || (_FirstPageIcon = (0, import_jsx_runtime254.jsx)(FirstPage_default, {}))
    }), (0, import_jsx_runtime254.jsx)(IconButton_default, _extends({
      onClick: handleBackButtonClick,
      disabled: page === 0,
      color: "inherit",
      "aria-label": getItemAriaLabel("previous", page),
      title: getItemAriaLabel("previous", page)
    }, backIconButtonProps, {
      children: theme.direction === "rtl" ? _KeyboardArrowRight || (_KeyboardArrowRight = (0, import_jsx_runtime254.jsx)(KeyboardArrowRight_default, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = (0, import_jsx_runtime254.jsx)(KeyboardArrowLeft_default, {}))
    })), (0, import_jsx_runtime254.jsx)(IconButton_default, _extends({
      onClick: handleNextButtonClick,
      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,
      color: "inherit",
      "aria-label": getItemAriaLabel("next", page),
      title: getItemAriaLabel("next", page)
    }, nextIconButtonProps, {
      children: theme.direction === "rtl" ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = (0, import_jsx_runtime254.jsx)(KeyboardArrowLeft_default, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = (0, import_jsx_runtime254.jsx)(KeyboardArrowRight_default, {}))
    })), showLastButton && (0, import_jsx_runtime254.jsx)(IconButton_default, {
      onClick: handleLastPageButtonClick,
      disabled: page >= Math.ceil(count / rowsPerPage) - 1,
      "aria-label": getItemAriaLabel("last", page),
      title: getItemAriaLabel("last", page),
      children: theme.direction === "rtl" ? _FirstPageIcon2 || (_FirstPageIcon2 = (0, import_jsx_runtime254.jsx)(FirstPage_default, {})) : _LastPageIcon2 || (_LastPageIcon2 = (0, import_jsx_runtime254.jsx)(LastPage_default, {}))
    })]
  }));
});
true ? TablePaginationActions3.propTypes = {
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  backIconButtonProps: import_prop_types184.default.object,
  /**
   * The total number of rows.
   */
  count: import_prop_types184.default.number.isRequired,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   *
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @returns {string}
   */
  getItemAriaLabel: import_prop_types184.default.func.isRequired,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: import_prop_types184.default.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: import_prop_types184.default.func.isRequired,
  /**
   * The zero-based index of the current page.
   */
  page: import_prop_types184.default.number.isRequired,
  /**
   * The number of rows per page.
   */
  rowsPerPage: import_prop_types184.default.number.isRequired,
  /**
   * If `true`, show the first-page button.
   */
  showFirstButton: import_prop_types184.default.bool.isRequired,
  /**
   * If `true`, show the last-page button.
   */
  showLastButton: import_prop_types184.default.bool.isRequired
} : void 0;
var TablePaginationActions_default = TablePaginationActions3;

// node_modules/@mui/material/TablePagination/TablePagination.js
init_useId3();

// node_modules/@mui/material/TablePagination/tablePaginationClasses.js
init_esm();
init_generateUtilityClass3();
function getTablePaginationUtilityClass2(slot) {
  return generateUtilityClass("MuiTablePagination", slot);
}
var tablePaginationClasses2 = generateUtilityClasses("MuiTablePagination", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]);
var tablePaginationClasses_default = tablePaginationClasses2;

// node_modules/@mui/material/TablePagination/TablePagination.js
var import_jsx_runtime256 = __toESM(require_jsx_runtime());
var import_react17 = __toESM(require_react());
var import_jsx_runtime257 = __toESM(require_jsx_runtime());
var _InputBase;
var _excluded167 = ["ActionsComponent", "backIconButtonProps", "className", "colSpan", "component", "count", "getItemAriaLabel", "labelDisplayedRows", "labelRowsPerPage", "nextIconButtonProps", "onPageChange", "onRowsPerPageChange", "page", "rowsPerPage", "rowsPerPageOptions", "SelectProps", "showFirstButton", "showLastButton"];
var TablePaginationRoot = styled_default2(TableCell_default, {
  name: "MuiTablePagination",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})(({
  theme
}) => ({
  overflow: "auto",
  color: (theme.vars || theme).palette.text.primary,
  fontSize: theme.typography.pxToRem(14),
  // Increase the specificity to override TableCell.
  "&:last-child": {
    padding: 0
  }
}));
var TablePaginationToolbar = styled_default2(Toolbar_default, {
  name: "MuiTablePagination",
  slot: "Toolbar",
  overridesResolver: (props, styles7) => _extends({
    [`& .${tablePaginationClasses_default.actions}`]: styles7.actions
  }, styles7.toolbar)
})(({
  theme
}) => ({
  minHeight: 52,
  paddingRight: 2,
  [`${theme.breakpoints.up("xs")} and (orientation: landscape)`]: {
    minHeight: 52
  },
  [theme.breakpoints.up("sm")]: {
    minHeight: 52,
    paddingRight: 2
  },
  [`& .${tablePaginationClasses_default.actions}`]: {
    flexShrink: 0,
    marginLeft: 20
  }
}));
var TablePaginationSpacer = styled_default2("div", {
  name: "MuiTablePagination",
  slot: "Spacer",
  overridesResolver: (props, styles7) => styles7.spacer
})({
  flex: "1 1 100%"
});
var TablePaginationSelectLabel = styled_default2("p", {
  name: "MuiTablePagination",
  slot: "SelectLabel",
  overridesResolver: (props, styles7) => styles7.selectLabel
})(({
  theme
}) => _extends({}, theme.typography.body2, {
  flexShrink: 0
}));
var TablePaginationSelect = styled_default2(Select_default, {
  name: "MuiTablePagination",
  slot: "Select",
  overridesResolver: (props, styles7) => _extends({
    [`& .${tablePaginationClasses_default.selectIcon}`]: styles7.selectIcon,
    [`& .${tablePaginationClasses_default.select}`]: styles7.select
  }, styles7.input, styles7.selectRoot)
})({
  color: "inherit",
  fontSize: "inherit",
  flexShrink: 0,
  marginRight: 32,
  marginLeft: 8,
  [`& .${tablePaginationClasses_default.select}`]: {
    paddingLeft: 8,
    paddingRight: 24,
    textAlign: "right",
    textAlignLast: "right"
    // Align <select> on Chrome.
  }
});
var TablePaginationMenuItem = styled_default2(MenuItem_default, {
  name: "MuiTablePagination",
  slot: "MenuItem",
  overridesResolver: (props, styles7) => styles7.menuItem
})({});
var TablePaginationDisplayedRows = styled_default2("p", {
  name: "MuiTablePagination",
  slot: "DisplayedRows",
  overridesResolver: (props, styles7) => styles7.displayedRows
})(({
  theme
}) => _extends({}, theme.typography.body2, {
  flexShrink: 0
}));
function defaultLabelDisplayedRows2({
  from: from2,
  to,
  count
}) {
  return `${from2}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
}
function defaultGetAriaLabel4(type) {
  return `Go to ${type} page`;
}
var useUtilityClasses130 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  };
  return composeClasses(slots, getTablePaginationUtilityClass2, classes2);
};
var TablePagination3 = React273.forwardRef(function TablePagination4(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTablePagination"
  });
  const {
    ActionsComponent = TablePaginationActions_default,
    backIconButtonProps,
    className,
    colSpan: colSpanProp,
    component = TableCell_default,
    count,
    getItemAriaLabel = defaultGetAriaLabel4,
    labelDisplayedRows = defaultLabelDisplayedRows2,
    labelRowsPerPage = "Rows per page:",
    nextIconButtonProps,
    onPageChange,
    onRowsPerPageChange,
    page,
    rowsPerPage,
    rowsPerPageOptions = [10, 25, 50, 100],
    SelectProps = {},
    showFirstButton = false,
    showLastButton = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded167);
  const ownerState = props;
  const classes2 = useUtilityClasses130(ownerState);
  const MenuItemComponent = SelectProps.native ? "option" : TablePaginationMenuItem;
  let colSpan;
  if (component === TableCell_default || component === "td") {
    colSpan = colSpanProp || 1e3;
  }
  const selectId = useId_default(SelectProps.id);
  const labelId = useId_default(SelectProps.labelId);
  const getLabelDisplayedRowsTo = () => {
    if (count === -1) {
      return (page + 1) * rowsPerPage;
    }
    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);
  };
  return (0, import_jsx_runtime256.jsx)(TablePaginationRoot, _extends({
    colSpan,
    ref,
    as: component,
    ownerState,
    className: clsx_default2(classes2.root, className)
  }, other, {
    children: (0, import_jsx_runtime257.jsxs)(TablePaginationToolbar, {
      className: classes2.toolbar,
      children: [(0, import_jsx_runtime256.jsx)(TablePaginationSpacer, {
        className: classes2.spacer
      }), rowsPerPageOptions.length > 1 && (0, import_jsx_runtime256.jsx)(TablePaginationSelectLabel, {
        className: classes2.selectLabel,
        id: labelId,
        children: labelRowsPerPage
      }), rowsPerPageOptions.length > 1 && (0, import_jsx_runtime256.jsx)(TablePaginationSelect, _extends({
        variant: "standard"
      }, !SelectProps.variant && {
        input: _InputBase || (_InputBase = (0, import_jsx_runtime256.jsx)(InputBase_default, {}))
      }, {
        value: rowsPerPage,
        onChange: onRowsPerPageChange,
        id: selectId,
        labelId
      }, SelectProps, {
        classes: _extends({}, SelectProps.classes, {
          // TODO v5 remove `classes.input`
          root: clsx_default2(classes2.input, classes2.selectRoot, (SelectProps.classes || {}).root),
          select: clsx_default2(classes2.select, (SelectProps.classes || {}).select),
          // TODO v5 remove `selectIcon`
          icon: clsx_default2(classes2.selectIcon, (SelectProps.classes || {}).icon)
        }),
        children: rowsPerPageOptions.map((rowsPerPageOption) => (0, import_react17.createElement)(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {
          ownerState
        }, {
          className: classes2.menuItem,
          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,
          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption
        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))
      })), (0, import_jsx_runtime256.jsx)(TablePaginationDisplayedRows, {
        className: classes2.displayedRows,
        children: labelDisplayedRows({
          from: count === 0 ? 0 : page * rowsPerPage + 1,
          to: getLabelDisplayedRowsTo(),
          count: count === -1 ? -1 : count,
          page
        })
      }), (0, import_jsx_runtime256.jsx)(ActionsComponent, {
        className: classes2.actions,
        backIconButtonProps,
        count,
        nextIconButtonProps,
        onPageChange,
        page,
        rowsPerPage,
        showFirstButton,
        showLastButton,
        getItemAriaLabel
      })]
    })
  }));
});
true ? TablePagination3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The component used for displaying the actions.
   * Either a string to use a HTML element or a component.
   * @default TablePaginationActions
   */
  ActionsComponent: import_prop_types185.default.elementType,
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.
   */
  backIconButtonProps: import_prop_types185.default.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types185.default.object,
  /**
   * @ignore
   */
  className: import_prop_types185.default.string,
  /**
   * @ignore
   */
  colSpan: import_prop_types185.default.number,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types185.default.elementType,
  /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */
  count: integerPropType_default.isRequired,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
   * @returns {string}
   * @default function defaultGetAriaLabel(type) {
   *   return `Go to ${type} page`;
   * }
   */
  getItemAriaLabel: import_prop_types185.default.func,
  /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default function defaultLabelDisplayedRows({ from, to, count }) {
   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
   * }
   */
  labelDisplayedRows: import_prop_types185.default.func,
  /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Rows per page:'
   */
  labelRowsPerPage: import_prop_types185.default.node,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: import_prop_types185.default.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: import_prop_types185.default.func.isRequired,
  /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   */
  onRowsPerPageChange: import_prop_types185.default.func,
  /**
   * The zero-based index of the current page.
   */
  page: chainPropTypes(integerPropType_default.isRequired, (props) => {
    const {
      count,
      page,
      rowsPerPage
    } = props;
    if (count === -1) {
      return null;
    }
    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);
    if (page < 0 || page > newLastPage) {
      return new Error(`MUI: The page prop of a TablePagination is out of range (0 to ${newLastPage}, but page is ${page}).`);
    }
    return null;
  }),
  /**
   * The number of rows per page.
   *
   * Set -1 to display all the rows.
   */
  rowsPerPage: integerPropType_default.isRequired,
  /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   * Use -1 for the value with a custom label to show all the rows.
   * @default [10, 25, 50, 100]
   */
  rowsPerPageOptions: import_prop_types185.default.arrayOf(import_prop_types185.default.oneOfType([import_prop_types185.default.number, import_prop_types185.default.shape({
    label: import_prop_types185.default.string.isRequired,
    value: import_prop_types185.default.number.isRequired
  })]).isRequired),
  /**
   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.
   * @default {}
   */
  SelectProps: import_prop_types185.default.object,
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: import_prop_types185.default.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: import_prop_types185.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types185.default.oneOfType([import_prop_types185.default.arrayOf(import_prop_types185.default.oneOfType([import_prop_types185.default.func, import_prop_types185.default.object, import_prop_types185.default.bool])), import_prop_types185.default.func, import_prop_types185.default.object])
} : void 0;
var TablePagination_default = TablePagination3;

// node_modules/@mui/material/TableRow/TableRow.js
init_extends();
init_objectWithoutPropertiesLoose();
var React274 = __toESM(require_react());
var import_prop_types186 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm2();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/TableRow/tableRowClasses.js
init_esm();
init_generateUtilityClass3();
function getTableRowUtilityClass(slot) {
  return generateUtilityClass("MuiTableRow", slot);
}
var tableRowClasses = generateUtilityClasses("MuiTableRow", ["root", "selected", "hover", "head", "footer"]);
var tableRowClasses_default = tableRowClasses;

// node_modules/@mui/material/TableRow/TableRow.js
var import_jsx_runtime258 = __toESM(require_jsx_runtime());
var _excluded168 = ["className", "component", "hover", "selected"];
var useUtilityClasses131 = (ownerState) => {
  const {
    classes: classes2,
    selected,
    hover,
    head,
    footer
  } = ownerState;
  const slots = {
    root: ["root", selected && "selected", hover && "hover", head && "head", footer && "footer"]
  };
  return composeClasses(slots, getTableRowUtilityClass, classes2);
};
var TableRowRoot = styled_default2("tr", {
  name: "MuiTableRow",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.head && styles7.head, ownerState.footer && styles7.footer];
  }
})(({
  theme
}) => ({
  color: "inherit",
  display: "table-row",
  verticalAlign: "middle",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  [`&.${tableRowClasses_default.hover}:hover`]: {
    backgroundColor: (theme.vars || theme).palette.action.hover
  },
  [`&.${tableRowClasses_default.selected}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
    "&:hover": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)
    }
  }
}));
var defaultComponent5 = "tr";
var TableRow = React274.forwardRef(function TableRow2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableRow"
  });
  const {
    className,
    component = defaultComponent5,
    hover = false,
    selected = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded168);
  const tablelvl24 = React274.useContext(Tablelvl2Context_default);
  const ownerState = _extends({}, props, {
    component,
    hover,
    selected,
    head: tablelvl24 && tablelvl24.variant === "head",
    footer: tablelvl24 && tablelvl24.variant === "footer"
  });
  const classes2 = useUtilityClasses131(ownerState);
  return (0, import_jsx_runtime258.jsx)(TableRowRoot, _extends({
    as: component,
    ref,
    className: clsx_default2(classes2.root, className),
    role: component === defaultComponent5 ? null : "row",
    ownerState
  }, other));
});
true ? TableRow.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Should be valid <tr> children such as `TableCell`.
   */
  children: import_prop_types186.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types186.default.object,
  /**
   * @ignore
   */
  className: import_prop_types186.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types186.default.elementType,
  /**
   * If `true`, the table row will shade on hover.
   * @default false
   */
  hover: import_prop_types186.default.bool,
  /**
   * If `true`, the table row will have the selected shading.
   * @default false
   */
  selected: import_prop_types186.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types186.default.oneOfType([import_prop_types186.default.arrayOf(import_prop_types186.default.oneOfType([import_prop_types186.default.func, import_prop_types186.default.object, import_prop_types186.default.bool])), import_prop_types186.default.func, import_prop_types186.default.object])
} : void 0;
var TableRow_default = TableRow;

// node_modules/@mui/material/TableSortLabel/TableSortLabel.js
init_objectWithoutPropertiesLoose();
init_extends();
init_composeClasses3();
init_clsx2();
var import_prop_types187 = __toESM(require_prop_types());
var React276 = __toESM(require_react());

// node_modules/@mui/material/internal/svg-icons/ArrowDownward.js
var React275 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime259 = __toESM(require_jsx_runtime());
var ArrowDownward_default = createSvgIcon((0, import_jsx_runtime259.jsx)("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward");

// node_modules/@mui/material/TableSortLabel/TableSortLabel.js
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js
init_esm();
init_generateUtilityClass3();
function getTableSortLabelUtilityClass(slot) {
  return generateUtilityClass("MuiTableSortLabel", slot);
}
var tableSortLabelClasses = generateUtilityClasses("MuiTableSortLabel", ["root", "active", "icon", "iconDirectionDesc", "iconDirectionAsc"]);
var tableSortLabelClasses_default = tableSortLabelClasses;

// node_modules/@mui/material/TableSortLabel/TableSortLabel.js
var import_jsx_runtime260 = __toESM(require_jsx_runtime());
var import_jsx_runtime261 = __toESM(require_jsx_runtime());
var _excluded169 = ["active", "children", "className", "direction", "hideSortIcon", "IconComponent"];
var useUtilityClasses132 = (ownerState) => {
  const {
    classes: classes2,
    direction,
    active
  } = ownerState;
  const slots = {
    root: ["root", active && "active"],
    icon: ["icon", `iconDirection${capitalize_default(direction)}`]
  };
  return composeClasses(slots, getTableSortLabelUtilityClass, classes2);
};
var TableSortLabelRoot = styled_default2(ButtonBase_default, {
  name: "MuiTableSortLabel",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.active && styles7.active];
  }
})(({
  theme
}) => ({
  cursor: "pointer",
  display: "inline-flex",
  justifyContent: "flex-start",
  flexDirection: "inherit",
  alignItems: "center",
  "&:focus": {
    color: (theme.vars || theme).palette.text.secondary
  },
  "&:hover": {
    color: (theme.vars || theme).palette.text.secondary,
    [`& .${tableSortLabelClasses_default.icon}`]: {
      opacity: 0.5
    }
  },
  [`&.${tableSortLabelClasses_default.active}`]: {
    color: (theme.vars || theme).palette.text.primary,
    [`& .${tableSortLabelClasses_default.icon}`]: {
      opacity: 1,
      color: (theme.vars || theme).palette.text.secondary
    }
  }
}));
var TableSortLabelIcon = styled_default2("span", {
  name: "MuiTableSortLabel",
  slot: "Icon",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.icon, styles7[`iconDirection${capitalize_default(ownerState.direction)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  fontSize: 18,
  marginRight: 4,
  marginLeft: 4,
  opacity: 0,
  transition: theme.transitions.create(["opacity", "transform"], {
    duration: theme.transitions.duration.shorter
  }),
  userSelect: "none"
}, ownerState.direction === "desc" && {
  transform: "rotate(0deg)"
}, ownerState.direction === "asc" && {
  transform: "rotate(180deg)"
}));
var TableSortLabel = React276.forwardRef(function TableSortLabel2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableSortLabel"
  });
  const {
    active = false,
    children: children2,
    className,
    direction = "asc",
    hideSortIcon = false,
    IconComponent = ArrowDownward_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded169);
  const ownerState = _extends({}, props, {
    active,
    direction,
    hideSortIcon,
    IconComponent
  });
  const classes2 = useUtilityClasses132(ownerState);
  return (0, import_jsx_runtime261.jsxs)(TableSortLabelRoot, _extends({
    className: clsx_default2(classes2.root, className),
    component: "span",
    disableRipple: true,
    ownerState,
    ref
  }, other, {
    children: [children2, hideSortIcon && !active ? null : (0, import_jsx_runtime260.jsx)(TableSortLabelIcon, {
      as: IconComponent,
      className: clsx_default2(classes2.icon),
      ownerState
    })]
  }));
});
true ? TableSortLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the label will have the active styling (should be true for the sorted column).
   * @default false
   */
  active: import_prop_types187.default.bool,
  /**
   * Label contents, the arrow will be appended automatically.
   */
  children: import_prop_types187.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types187.default.object,
  /**
   * @ignore
   */
  className: import_prop_types187.default.string,
  /**
   * The current sort direction.
   * @default 'asc'
   */
  direction: import_prop_types187.default.oneOf(["asc", "desc"]),
  /**
   * Hide sort icon when active is false.
   * @default false
   */
  hideSortIcon: import_prop_types187.default.bool,
  /**
   * Sort icon to use.
   * @default ArrowDownwardIcon
   */
  IconComponent: import_prop_types187.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types187.default.oneOfType([import_prop_types187.default.arrayOf(import_prop_types187.default.oneOfType([import_prop_types187.default.func, import_prop_types187.default.object, import_prop_types187.default.bool])), import_prop_types187.default.func, import_prop_types187.default.object])
} : void 0;
var TableSortLabel_default = TableSortLabel;

// node_modules/@mui/material/Tabs/Tabs.js
init_objectWithoutPropertiesLoose();
init_extends();
var React279 = __toESM(require_react());
var import_react_is11 = __toESM(require_react_is3());
var import_prop_types190 = __toESM(require_prop_types());
init_clsx2();
init_esm();
init_styled2();
init_useThemeProps3();
init_debounce3();

// node_modules/@mui/material/utils/scrollLeft.js
init_esm();

// node_modules/@mui/material/internal/animate.js
function easeInOutSin(time) {
  return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2;
}
function animate(property, element, to, options = {}, cb = () => {
}) {
  const {
    ease = easeInOutSin,
    duration: duration2 = 300
    // standard
  } = options;
  let start2 = null;
  const from2 = element[property];
  let cancelled = false;
  const cancel = () => {
    cancelled = true;
  };
  const step = (timestamp) => {
    if (cancelled) {
      cb(new Error("Animation cancelled"));
      return;
    }
    if (start2 === null) {
      start2 = timestamp;
    }
    const time = Math.min(1, (timestamp - start2) / duration2);
    element[property] = ease(time) * (to - from2) + from2;
    if (time >= 1) {
      requestAnimationFrame(() => {
        cb(null);
      });
      return;
    }
    requestAnimationFrame(step);
  };
  if (from2 === to) {
    cb(new Error("Element already at target position"));
    return cancel;
  }
  requestAnimationFrame(step);
  return cancel;
}

// node_modules/@mui/material/Tabs/ScrollbarSize.js
init_extends();
init_objectWithoutPropertiesLoose();
var React277 = __toESM(require_react());
var import_prop_types188 = __toESM(require_prop_types());
init_debounce3();
init_utils();
var import_jsx_runtime262 = __toESM(require_jsx_runtime());
var _excluded170 = ["onChange"];
var styles6 = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function ScrollbarSize(props) {
  const {
    onChange
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded170);
  const scrollbarHeight = React277.useRef();
  const nodeRef = React277.useRef(null);
  const setMeasurements = () => {
    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;
  };
  useEnhancedEffect_default2(() => {
    const handleResize = debounce_default(() => {
      const prevHeight = scrollbarHeight.current;
      setMeasurements();
      if (prevHeight !== scrollbarHeight.current) {
        onChange(scrollbarHeight.current);
      }
    });
    const containerWindow = ownerWindow_default(nodeRef.current);
    containerWindow.addEventListener("resize", handleResize);
    return () => {
      handleResize.clear();
      containerWindow.removeEventListener("resize", handleResize);
    };
  }, [onChange]);
  React277.useEffect(() => {
    setMeasurements();
    onChange(scrollbarHeight.current);
  }, [onChange]);
  return (0, import_jsx_runtime262.jsx)("div", _extends({
    style: styles6,
    ref: nodeRef
  }, other));
}
true ? ScrollbarSize.propTypes = {
  onChange: import_prop_types188.default.func.isRequired
} : void 0;

// node_modules/@mui/material/TabScrollButton/TabScrollButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React278 = __toESM(require_react());
var import_prop_types189 = __toESM(require_prop_types());
init_clsx2();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/TabScrollButton/tabScrollButtonClasses.js
init_esm();
init_generateUtilityClass3();
function getTabScrollButtonUtilityClass(slot) {
  return generateUtilityClass("MuiTabScrollButton", slot);
}
var tabScrollButtonClasses = generateUtilityClasses("MuiTabScrollButton", ["root", "vertical", "horizontal", "disabled"]);
var tabScrollButtonClasses_default = tabScrollButtonClasses;

// node_modules/@mui/material/TabScrollButton/TabScrollButton.js
var import_jsx_runtime263 = __toESM(require_jsx_runtime());
var _excluded171 = ["className", "slots", "slotProps", "direction", "orientation", "disabled"];
var useUtilityClasses133 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", orientation, disabled && "disabled"]
  };
  return composeClasses(slots, getTabScrollButtonUtilityClass, classes2);
};
var TabScrollButtonRoot = styled_default2(ButtonBase_default, {
  name: "MuiTabScrollButton",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, ownerState.orientation && styles7[ownerState.orientation]];
  }
})(({
  ownerState
}) => _extends({
  width: 40,
  flexShrink: 0,
  opacity: 0.8,
  [`&.${tabScrollButtonClasses_default.disabled}`]: {
    opacity: 0
  }
}, ownerState.orientation === "vertical" && {
  width: "100%",
  height: 40,
  "& svg": {
    transform: `rotate(${ownerState.isRtl ? -90 : 90}deg)`
  }
}));
var TabScrollButton = React278.forwardRef(function TabScrollButton2(inProps, ref) {
  var _slots$StartScrollBut, _slots$EndScrollButto;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTabScrollButton"
  });
  const {
    className,
    slots = {},
    slotProps = {},
    direction
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded171);
  const theme = useTheme5();
  const isRtl = theme.direction === "rtl";
  const ownerState = _extends({
    isRtl
  }, props);
  const classes2 = useUtilityClasses133(ownerState);
  const StartButtonIcon = (_slots$StartScrollBut = slots.StartScrollButtonIcon) != null ? _slots$StartScrollBut : KeyboardArrowLeft_default;
  const EndButtonIcon = (_slots$EndScrollButto = slots.EndScrollButtonIcon) != null ? _slots$EndScrollButto : KeyboardArrowRight_default;
  const startButtonIconProps = useSlotProps({
    elementType: StartButtonIcon,
    externalSlotProps: slotProps.startScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState
  });
  const endButtonIconProps = useSlotProps({
    elementType: EndButtonIcon,
    externalSlotProps: slotProps.endScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState
  });
  return (0, import_jsx_runtime263.jsx)(TabScrollButtonRoot, _extends({
    component: "div",
    className: clsx_default2(classes2.root, className),
    ref,
    role: null,
    ownerState,
    tabIndex: null
  }, other, {
    children: direction === "left" ? (0, import_jsx_runtime263.jsx)(StartButtonIcon, _extends({}, startButtonIconProps)) : (0, import_jsx_runtime263.jsx)(EndButtonIcon, _extends({}, endButtonIconProps))
  }));
});
true ? TabScrollButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types189.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types189.default.object,
  /**
   * @ignore
   */
  className: import_prop_types189.default.string,
  /**
   * The direction the button should indicate.
   */
  direction: import_prop_types189.default.oneOf(["left", "right"]).isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types189.default.bool,
  /**
   * The component orientation (layout flow direction).
   */
  orientation: import_prop_types189.default.oneOf(["horizontal", "vertical"]).isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: import_prop_types189.default.shape({
    endScrollButtonIcon: import_prop_types189.default.oneOfType([import_prop_types189.default.func, import_prop_types189.default.object]),
    startScrollButtonIcon: import_prop_types189.default.oneOfType([import_prop_types189.default.func, import_prop_types189.default.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: import_prop_types189.default.shape({
    EndScrollButtonIcon: import_prop_types189.default.elementType,
    StartScrollButtonIcon: import_prop_types189.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types189.default.oneOfType([import_prop_types189.default.arrayOf(import_prop_types189.default.oneOfType([import_prop_types189.default.func, import_prop_types189.default.object, import_prop_types189.default.bool])), import_prop_types189.default.func, import_prop_types189.default.object])
} : void 0;
var TabScrollButton_default = TabScrollButton;

// node_modules/@mui/material/Tabs/Tabs.js
init_useEventCallback3();

// node_modules/@mui/material/Tabs/tabsClasses.js
init_esm();
init_generateUtilityClass3();
function getTabsUtilityClass2(slot) {
  return generateUtilityClass("MuiTabs", slot);
}
var tabsClasses2 = generateUtilityClasses("MuiTabs", ["root", "vertical", "flexContainer", "flexContainerVertical", "centered", "scroller", "fixed", "scrollableX", "scrollableY", "hideScrollbar", "scrollButtons", "scrollButtonsHideMobile", "indicator"]);
var tabsClasses_default = tabsClasses2;

// node_modules/@mui/material/Tabs/Tabs.js
init_ownerDocument3();
init_ownerWindow3();
var import_jsx_runtime264 = __toESM(require_jsx_runtime());
var import_jsx_runtime265 = __toESM(require_jsx_runtime());
var _excluded172 = ["aria-label", "aria-labelledby", "action", "centered", "children", "className", "component", "allowScrollButtonsMobile", "indicatorColor", "onChange", "orientation", "ScrollButtonComponent", "scrollButtons", "selectionFollowsFocus", "slots", "slotProps", "TabIndicatorProps", "TabScrollButtonProps", "textColor", "value", "variant", "visibleScrollbar"];
var nextItem2 = (list, item) => {
  if (list === item) {
    return list.firstChild;
  }
  if (item && item.nextElementSibling) {
    return item.nextElementSibling;
  }
  return list.firstChild;
};
var previousItem2 = (list, item) => {
  if (list === item) {
    return list.lastChild;
  }
  if (item && item.previousElementSibling) {
    return item.previousElementSibling;
  }
  return list.lastChild;
};
var moveFocus2 = (list, currentFocus, traversalFunction) => {
  let wrappedOnce = false;
  let nextFocus = traversalFunction(list, currentFocus);
  while (nextFocus) {
    if (nextFocus === list.firstChild) {
      if (wrappedOnce) {
        return;
      }
      wrappedOnce = true;
    }
    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute("aria-disabled") === "true";
    if (!nextFocus.hasAttribute("tabindex") || nextFocusDisabled) {
      nextFocus = traversalFunction(list, nextFocus);
    } else {
      nextFocus.focus();
      return;
    }
  }
};
var useUtilityClasses134 = (ownerState) => {
  const {
    vertical,
    fixed,
    hideScrollbar,
    scrollableX,
    scrollableY,
    centered,
    scrollButtonsHideMobile,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", vertical && "vertical"],
    scroller: ["scroller", fixed && "fixed", hideScrollbar && "hideScrollbar", scrollableX && "scrollableX", scrollableY && "scrollableY"],
    flexContainer: ["flexContainer", vertical && "flexContainerVertical", centered && "centered"],
    indicator: ["indicator"],
    scrollButtons: ["scrollButtons", scrollButtonsHideMobile && "scrollButtonsHideMobile"],
    scrollableX: [scrollableX && "scrollableX"],
    hideScrollbar: [hideScrollbar && "hideScrollbar"]
  };
  return composeClasses(slots, getTabsUtilityClass2, classes2);
};
var TabsRoot = styled_default2("div", {
  name: "MuiTabs",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${tabsClasses_default.scrollButtons}`]: styles7.scrollButtons
    }, {
      [`& .${tabsClasses_default.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles7.scrollButtonsHideMobile
    }, styles7.root, ownerState.vertical && styles7.vertical];
  }
})(({
  ownerState,
  theme
}) => _extends({
  overflow: "hidden",
  minHeight: 48,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  display: "flex"
}, ownerState.vertical && {
  flexDirection: "column"
}, ownerState.scrollButtonsHideMobile && {
  [`& .${tabsClasses_default.scrollButtons}`]: {
    [theme.breakpoints.down("sm")]: {
      display: "none"
    }
  }
}));
var TabsScroller = styled_default2("div", {
  name: "MuiTabs",
  slot: "Scroller",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.scroller, ownerState.fixed && styles7.fixed, ownerState.hideScrollbar && styles7.hideScrollbar, ownerState.scrollableX && styles7.scrollableX, ownerState.scrollableY && styles7.scrollableY];
  }
})(({
  ownerState
}) => _extends({
  position: "relative",
  display: "inline-block",
  flex: "1 1 auto",
  whiteSpace: "nowrap"
}, ownerState.fixed && {
  overflowX: "hidden",
  width: "100%"
}, ownerState.hideScrollbar && {
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}, ownerState.scrollableX && {
  overflowX: "auto",
  overflowY: "hidden"
}, ownerState.scrollableY && {
  overflowY: "auto",
  overflowX: "hidden"
}));
var FlexContainer = styled_default2("div", {
  name: "MuiTabs",
  slot: "FlexContainer",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.flexContainer, ownerState.vertical && styles7.flexContainerVertical, ownerState.centered && styles7.centered];
  }
})(({
  ownerState
}) => _extends({
  display: "flex"
}, ownerState.vertical && {
  flexDirection: "column"
}, ownerState.centered && {
  justifyContent: "center"
}));
var TabsIndicator = styled_default2("span", {
  name: "MuiTabs",
  slot: "Indicator",
  overridesResolver: (props, styles7) => styles7.indicator
})(({
  ownerState,
  theme
}) => _extends({
  position: "absolute",
  height: 2,
  bottom: 0,
  width: "100%",
  transition: theme.transitions.create()
}, ownerState.indicatorColor === "primary" && {
  backgroundColor: (theme.vars || theme).palette.primary.main
}, ownerState.indicatorColor === "secondary" && {
  backgroundColor: (theme.vars || theme).palette.secondary.main
}, ownerState.vertical && {
  height: "100%",
  width: 2,
  right: 0
}));
var TabsScrollbarSize = styled_default2(ScrollbarSize, {
  name: "MuiTabs",
  slot: "ScrollbarSize"
})({
  overflowX: "auto",
  overflowY: "hidden",
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
});
var defaultIndicatorStyle = {};
var warnedOnceTabPresent = false;
var Tabs3 = React279.forwardRef(function Tabs4(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTabs"
  });
  const theme = useTheme5();
  const isRtl = theme.direction === "rtl";
  const {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    action,
    centered = false,
    children: childrenProp,
    className,
    component = "div",
    allowScrollButtonsMobile = false,
    indicatorColor = "primary",
    onChange,
    orientation = "horizontal",
    ScrollButtonComponent = TabScrollButton_default,
    scrollButtons = "auto",
    selectionFollowsFocus,
    slots = {},
    slotProps = {},
    TabIndicatorProps = {},
    TabScrollButtonProps = {},
    textColor = "primary",
    value,
    variant = "standard",
    visibleScrollbar = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded172);
  const scrollable = variant === "scrollable";
  const vertical = orientation === "vertical";
  const scrollStart = vertical ? "scrollTop" : "scrollLeft";
  const start2 = vertical ? "top" : "left";
  const end2 = vertical ? "bottom" : "right";
  const clientSize = vertical ? "clientHeight" : "clientWidth";
  const size2 = vertical ? "height" : "width";
  const ownerState = _extends({}, props, {
    component,
    allowScrollButtonsMobile,
    indicatorColor,
    orientation,
    vertical,
    scrollButtons,
    textColor,
    variant,
    visibleScrollbar,
    fixed: !scrollable,
    hideScrollbar: scrollable && !visibleScrollbar,
    scrollableX: scrollable && !vertical,
    scrollableY: scrollable && vertical,
    centered: centered && !scrollable,
    scrollButtonsHideMobile: !allowScrollButtonsMobile
  });
  const classes2 = useUtilityClasses134(ownerState);
  const startScrollButtonIconProps = useSlotProps({
    elementType: slots.StartScrollButtonIcon,
    externalSlotProps: slotProps.startScrollButtonIcon,
    ownerState
  });
  const endScrollButtonIconProps = useSlotProps({
    elementType: slots.EndScrollButtonIcon,
    externalSlotProps: slotProps.endScrollButtonIcon,
    ownerState
  });
  if (true) {
    if (centered && scrollable) {
      console.error('MUI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
    }
  }
  const [mounted, setMounted] = React279.useState(false);
  const [indicatorStyle, setIndicatorStyle] = React279.useState(defaultIndicatorStyle);
  const [displayStartScroll, setDisplayStartScroll] = React279.useState(false);
  const [displayEndScroll, setDisplayEndScroll] = React279.useState(false);
  const [updateScrollObserver, setUpdateScrollObserver] = React279.useState(false);
  const [scrollerStyle, setScrollerStyle] = React279.useState({
    overflow: "hidden",
    scrollbarWidth: 0
  });
  const valueToIndex = /* @__PURE__ */ new Map();
  const tabsRef = React279.useRef(null);
  const tabListRef = React279.useRef(null);
  const getTabsMeta = () => {
    const tabsNode = tabsRef.current;
    let tabsMeta;
    if (tabsNode) {
      const rect = tabsNode.getBoundingClientRect();
      tabsMeta = {
        clientWidth: tabsNode.clientWidth,
        scrollLeft: tabsNode.scrollLeft,
        scrollTop: tabsNode.scrollTop,
        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),
        scrollWidth: tabsNode.scrollWidth,
        top: rect.top,
        bottom: rect.bottom,
        left: rect.left,
        right: rect.right
      };
    }
    let tabMeta;
    if (tabsNode && value !== false) {
      const children3 = tabListRef.current.children;
      if (children3.length > 0) {
        const tab = children3[valueToIndex.get(value)];
        if (true) {
          if (!tab) {
            console.error([`MUI: The \`value\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with "${value}".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(", ")}.` : null].join("\n"));
          }
        }
        tabMeta = tab ? tab.getBoundingClientRect() : null;
        if (true) {
          if (!warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 && // if the whole Tabs component is hidden, don't warn
          tabsMeta.clientWidth !== 0) {
            tabsMeta = null;
            console.error(["MUI: The `value` provided to the Tabs component is invalid.", `The Tab with this \`value\` ("${value}") is not part of the document layout.`, "Make sure the tab item is present in the document or that it's not `display: none`."].join("\n"));
            warnedOnceTabPresent = true;
          }
        }
      }
    }
    return {
      tabsMeta,
      tabMeta
    };
  };
  const updateIndicatorState = useEventCallback_default2(() => {
    const {
      tabsMeta,
      tabMeta
    } = getTabsMeta();
    let startValue = 0;
    let startIndicator;
    if (vertical) {
      startIndicator = "top";
      if (tabMeta && tabsMeta) {
        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;
      }
    } else {
      startIndicator = isRtl ? "right" : "left";
      if (tabMeta && tabsMeta) {
        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;
        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + correction);
      }
    }
    const newIndicatorStyle = {
      [startIndicator]: startValue,
      // May be wrong until the font is loaded.
      [size2]: tabMeta ? tabMeta[size2] : 0
    };
    if (isNaN(indicatorStyle[startIndicator]) || isNaN(indicatorStyle[size2])) {
      setIndicatorStyle(newIndicatorStyle);
    } else {
      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);
      const dSize = Math.abs(indicatorStyle[size2] - newIndicatorStyle[size2]);
      if (dStart >= 1 || dSize >= 1) {
        setIndicatorStyle(newIndicatorStyle);
      }
    }
  });
  const scroll = (scrollValue, {
    animation = true
  } = {}) => {
    if (animation) {
      animate(scrollStart, tabsRef.current, scrollValue, {
        duration: theme.transitions.duration.standard
      });
    } else {
      tabsRef.current[scrollStart] = scrollValue;
    }
  };
  const moveTabsScroll = (delta) => {
    let scrollValue = tabsRef.current[scrollStart];
    if (vertical) {
      scrollValue += delta;
    } else {
      scrollValue += delta * (isRtl ? -1 : 1);
      scrollValue *= isRtl && detectScrollType() === "reverse" ? -1 : 1;
    }
    scroll(scrollValue);
  };
  const getScrollSize = () => {
    const containerSize = tabsRef.current[clientSize];
    let totalSize = 0;
    const children3 = Array.from(tabListRef.current.children);
    for (let i = 0; i < children3.length; i += 1) {
      const tab = children3[i];
      if (totalSize + tab[clientSize] > containerSize) {
        if (i === 0) {
          totalSize = containerSize;
        }
        break;
      }
      totalSize += tab[clientSize];
    }
    return totalSize;
  };
  const handleStartScrollClick = () => {
    moveTabsScroll(-1 * getScrollSize());
  };
  const handleEndScrollClick = () => {
    moveTabsScroll(getScrollSize());
  };
  const handleScrollbarSizeChange = React279.useCallback((scrollbarWidth) => {
    setScrollerStyle({
      overflow: null,
      scrollbarWidth
    });
  }, []);
  const getConditionalElements = () => {
    const conditionalElements2 = {};
    conditionalElements2.scrollbarSizeListener = scrollable ? (0, import_jsx_runtime264.jsx)(TabsScrollbarSize, {
      onChange: handleScrollbarSizeChange,
      className: clsx_default2(classes2.scrollableX, classes2.hideScrollbar)
    }) : null;
    const scrollButtonsActive = displayStartScroll || displayEndScroll;
    const showScrollButtons = scrollable && (scrollButtons === "auto" && scrollButtonsActive || scrollButtons === true);
    conditionalElements2.scrollButtonStart = showScrollButtons ? (0, import_jsx_runtime264.jsx)(ScrollButtonComponent, _extends({
      slots: {
        StartScrollButtonIcon: slots.StartScrollButtonIcon
      },
      slotProps: {
        startScrollButtonIcon: startScrollButtonIconProps
      },
      orientation,
      direction: isRtl ? "right" : "left",
      onClick: handleStartScrollClick,
      disabled: !displayStartScroll
    }, TabScrollButtonProps, {
      className: clsx_default2(classes2.scrollButtons, TabScrollButtonProps.className)
    })) : null;
    conditionalElements2.scrollButtonEnd = showScrollButtons ? (0, import_jsx_runtime264.jsx)(ScrollButtonComponent, _extends({
      slots: {
        EndScrollButtonIcon: slots.EndScrollButtonIcon
      },
      slotProps: {
        endScrollButtonIcon: endScrollButtonIconProps
      },
      orientation,
      direction: isRtl ? "left" : "right",
      onClick: handleEndScrollClick,
      disabled: !displayEndScroll
    }, TabScrollButtonProps, {
      className: clsx_default2(classes2.scrollButtons, TabScrollButtonProps.className)
    })) : null;
    return conditionalElements2;
  };
  const scrollSelectedIntoView = useEventCallback_default2((animation) => {
    const {
      tabsMeta,
      tabMeta
    } = getTabsMeta();
    if (!tabMeta || !tabsMeta) {
      return;
    }
    if (tabMeta[start2] < tabsMeta[start2]) {
      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start2] - tabsMeta[start2]);
      scroll(nextScrollStart, {
        animation
      });
    } else if (tabMeta[end2] > tabsMeta[end2]) {
      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end2] - tabsMeta[end2]);
      scroll(nextScrollStart, {
        animation
      });
    }
  });
  const updateScrollButtonState = useEventCallback_default2(() => {
    if (scrollable && scrollButtons !== false) {
      setUpdateScrollObserver(!updateScrollObserver);
    }
  });
  React279.useEffect(() => {
    const handleResize = debounce_default(() => {
      if (tabsRef.current) {
        updateIndicatorState();
      }
    });
    const win = ownerWindow_default(tabsRef.current);
    win.addEventListener("resize", handleResize);
    let resizeObserver;
    if (typeof ResizeObserver !== "undefined") {
      resizeObserver = new ResizeObserver(handleResize);
      Array.from(tabListRef.current.children).forEach((child) => {
        resizeObserver.observe(child);
      });
    }
    return () => {
      handleResize.clear();
      win.removeEventListener("resize", handleResize);
      if (resizeObserver) {
        resizeObserver.disconnect();
      }
    };
  }, [updateIndicatorState]);
  React279.useEffect(() => {
    const tabListChildren = Array.from(tabListRef.current.children);
    const length2 = tabListChildren.length;
    if (typeof IntersectionObserver !== "undefined" && length2 > 0 && scrollable && scrollButtons !== false) {
      const firstTab = tabListChildren[0];
      const lastTab = tabListChildren[length2 - 1];
      const observerOptions = {
        root: tabsRef.current,
        threshold: 0.99
      };
      const handleScrollButtonStart = (entries) => {
        setDisplayStartScroll(!entries[0].isIntersecting);
      };
      const firstObserver = new IntersectionObserver(handleScrollButtonStart, observerOptions);
      firstObserver.observe(firstTab);
      const handleScrollButtonEnd = (entries) => {
        setDisplayEndScroll(!entries[0].isIntersecting);
      };
      const lastObserver = new IntersectionObserver(handleScrollButtonEnd, observerOptions);
      lastObserver.observe(lastTab);
      return () => {
        firstObserver.disconnect();
        lastObserver.disconnect();
      };
    }
    return void 0;
  }, [scrollable, scrollButtons, updateScrollObserver, childrenProp == null ? void 0 : childrenProp.length]);
  React279.useEffect(() => {
    setMounted(true);
  }, []);
  React279.useEffect(() => {
    updateIndicatorState();
  });
  React279.useEffect(() => {
    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);
  }, [scrollSelectedIntoView, indicatorStyle]);
  React279.useImperativeHandle(action, () => ({
    updateIndicator: updateIndicatorState,
    updateScrollButtons: updateScrollButtonState
  }), [updateIndicatorState, updateScrollButtonState]);
  const indicator = (0, import_jsx_runtime264.jsx)(TabsIndicator, _extends({}, TabIndicatorProps, {
    className: clsx_default2(classes2.indicator, TabIndicatorProps.className),
    ownerState,
    style: _extends({}, indicatorStyle, TabIndicatorProps.style)
  }));
  let childIndex = 0;
  const children2 = React279.Children.map(childrenProp, (child) => {
    if (!React279.isValidElement(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is11.isFragment)(child)) {
        console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    const childValue = child.props.value === void 0 ? childIndex : child.props.value;
    valueToIndex.set(childValue, childIndex);
    const selected = childValue === value;
    childIndex += 1;
    return React279.cloneElement(child, _extends({
      fullWidth: variant === "fullWidth",
      indicator: selected && !mounted && indicator,
      selected,
      selectionFollowsFocus,
      onChange,
      textColor,
      value: childValue
    }, childIndex === 1 && value === false && !child.props.tabIndex ? {
      tabIndex: 0
    } : {}));
  });
  const handleKeyDown3 = (event) => {
    const list = tabListRef.current;
    const currentFocus = ownerDocument_default(list).activeElement;
    const role = currentFocus.getAttribute("role");
    if (role !== "tab") {
      return;
    }
    let previousItemKey = orientation === "horizontal" ? "ArrowLeft" : "ArrowUp";
    let nextItemKey = orientation === "horizontal" ? "ArrowRight" : "ArrowDown";
    if (orientation === "horizontal" && isRtl) {
      previousItemKey = "ArrowRight";
      nextItemKey = "ArrowLeft";
    }
    switch (event.key) {
      case previousItemKey:
        event.preventDefault();
        moveFocus2(list, currentFocus, previousItem2);
        break;
      case nextItemKey:
        event.preventDefault();
        moveFocus2(list, currentFocus, nextItem2);
        break;
      case "Home":
        event.preventDefault();
        moveFocus2(list, null, nextItem2);
        break;
      case "End":
        event.preventDefault();
        moveFocus2(list, null, previousItem2);
        break;
      default:
        break;
    }
  };
  const conditionalElements = getConditionalElements();
  return (0, import_jsx_runtime265.jsxs)(TabsRoot, _extends({
    className: clsx_default2(classes2.root, className),
    ownerState,
    ref,
    as: component
  }, other, {
    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, (0, import_jsx_runtime265.jsxs)(TabsScroller, {
      className: classes2.scroller,
      ownerState,
      style: {
        overflow: scrollerStyle.overflow,
        [vertical ? `margin${isRtl ? "Left" : "Right"}` : "marginBottom"]: visibleScrollbar ? void 0 : -scrollerStyle.scrollbarWidth
      },
      ref: tabsRef,
      children: [(0, import_jsx_runtime264.jsx)(FlexContainer, {
        "aria-label": ariaLabel,
        "aria-labelledby": ariaLabelledBy,
        "aria-orientation": orientation === "vertical" ? "vertical" : null,
        className: classes2.flexContainer,
        ownerState,
        onKeyDown: handleKeyDown3,
        ref: tabListRef,
        role: "tablist",
        children: children2
      }), mounted && indicator]
    }), conditionalElements.scrollButtonEnd]
  }));
});
true ? Tabs3.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: refType_default,
  /**
   * If `true`, the scroll buttons aren't forced hidden on mobile.
   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
   * @default false
   */
  allowScrollButtonsMobile: import_prop_types190.default.bool,
  /**
   * The label for the Tabs as a string.
   */
  "aria-label": import_prop_types190.default.string,
  /**
   * An id or list of ids separated by a space that label the Tabs.
   */
  "aria-labelledby": import_prop_types190.default.string,
  /**
   * If `true`, the tabs are centered.
   * This prop is intended for large views.
   * @default false
   */
  centered: import_prop_types190.default.bool,
  /**
   * The content of the component.
   */
  children: import_prop_types190.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types190.default.object,
  /**
   * @ignore
   */
  className: import_prop_types190.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types190.default.elementType,
  /**
   * Determines the color of the indicator.
   * @default 'primary'
   */
  indicatorColor: import_prop_types190.default.oneOfType([import_prop_types190.default.oneOf(["primary", "secondary"]), import_prop_types190.default.string]),
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child (number)
   */
  onChange: import_prop_types190.default.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: import_prop_types190.default.oneOf(["horizontal", "vertical"]),
  /**
   * The component used to render the scroll buttons.
   * @default TabScrollButton
   */
  ScrollButtonComponent: import_prop_types190.default.elementType,
  /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `true` will always present them.
   * - `false` will never present them.
   *
   * By default the scroll buttons are hidden on mobile.
   * This behavior can be disabled with `allowScrollButtonsMobile`.
   * @default 'auto'
   */
  scrollButtons: import_prop_types190.default.oneOf(["auto", false, true]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: import_prop_types190.default.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: import_prop_types190.default.shape({
    endScrollButtonIcon: import_prop_types190.default.oneOfType([import_prop_types190.default.func, import_prop_types190.default.object]),
    startScrollButtonIcon: import_prop_types190.default.oneOfType([import_prop_types190.default.func, import_prop_types190.default.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: import_prop_types190.default.shape({
    EndScrollButtonIcon: import_prop_types190.default.elementType,
    StartScrollButtonIcon: import_prop_types190.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types190.default.oneOfType([import_prop_types190.default.arrayOf(import_prop_types190.default.oneOfType([import_prop_types190.default.func, import_prop_types190.default.object, import_prop_types190.default.bool])), import_prop_types190.default.func, import_prop_types190.default.object]),
  /**
   * Props applied to the tab indicator element.
   * @default  {}
   */
  TabIndicatorProps: import_prop_types190.default.object,
  /**
   * Props applied to the [`TabScrollButton`](/material-ui/api/tab-scroll-button/) element.
   * @default {}
   */
  TabScrollButtonProps: import_prop_types190.default.object,
  /**
   * Determines the color of the `Tab`.
   * @default 'primary'
   */
  textColor: import_prop_types190.default.oneOf(["inherit", "primary", "secondary"]),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `false`.
   */
  value: import_prop_types190.default.any,
  /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  -`fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   * @default 'standard'
   */
  variant: import_prop_types190.default.oneOf(["fullWidth", "scrollable", "standard"]),
  /**
   * If `true`, the scrollbar is visible. It can be useful when displaying
   * a long vertical list of tabs.
   * @default false
   */
  visibleScrollbar: import_prop_types190.default.bool
} : void 0;
var Tabs_default = Tabs3;

// node_modules/@mui/material/TextField/TextField.js
init_extends();
init_objectWithoutPropertiesLoose();
var React280 = __toESM(require_react());
var import_prop_types191 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_esm();
init_styled2();
init_useThemeProps3();

// node_modules/@mui/material/TextField/textFieldClasses.js
init_esm();
init_generateUtilityClass3();
function getTextFieldUtilityClass(slot) {
  return generateUtilityClass("MuiTextField", slot);
}
var textFieldClasses = generateUtilityClasses("MuiTextField", ["root"]);

// node_modules/@mui/material/TextField/TextField.js
var import_jsx_runtime266 = __toESM(require_jsx_runtime());
var import_jsx_runtime267 = __toESM(require_jsx_runtime());
var _excluded173 = ["autoComplete", "autoFocus", "children", "className", "color", "defaultValue", "disabled", "error", "FormHelperTextProps", "fullWidth", "helperText", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "select", "SelectProps", "type", "value", "variant"];
var variantComponent = {
  standard: Input_default,
  filled: FilledInput_default,
  outlined: OutlinedInput_default
};
var useUtilityClasses135 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTextFieldUtilityClass, classes2);
};
var TextFieldRoot = styled_default2(FormControl_default, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (props, styles7) => styles7.root
})({});
var TextField = React280.forwardRef(function TextField2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTextField"
  });
  const {
    autoComplete,
    autoFocus = false,
    children: children2,
    className,
    color: color2 = "primary",
    defaultValue,
    disabled = false,
    error = false,
    FormHelperTextProps,
    fullWidth = false,
    helperText,
    id: idOverride,
    InputLabelProps,
    inputProps,
    InputProps,
    inputRef,
    label,
    maxRows,
    minRows,
    multiline = false,
    name,
    onBlur,
    onChange,
    onFocus,
    placeholder,
    required: required2 = false,
    rows,
    select = false,
    SelectProps,
    type,
    value,
    variant = "outlined"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded173);
  const ownerState = _extends({}, props, {
    autoFocus,
    color: color2,
    disabled,
    error,
    fullWidth,
    multiline,
    required: required2,
    select,
    variant
  });
  const classes2 = useUtilityClasses135(ownerState);
  if (true) {
    if (select && !children2) {
      console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
    }
  }
  const InputMore = {};
  if (variant === "outlined") {
    if (InputLabelProps && typeof InputLabelProps.shrink !== "undefined") {
      InputMore.notched = InputLabelProps.shrink;
    }
    InputMore.label = label;
  }
  if (select) {
    if (!SelectProps || !SelectProps.native) {
      InputMore.id = void 0;
    }
    InputMore["aria-describedby"] = void 0;
  }
  const id = useId(idOverride);
  const helperTextId = helperText && id ? `${id}-helper-text` : void 0;
  const inputLabelId = label && id ? `${id}-label` : void 0;
  const InputComponent = variantComponent[variant];
  const InputElement = (0, import_jsx_runtime266.jsx)(InputComponent, _extends({
    "aria-describedby": helperTextId,
    autoComplete,
    autoFocus,
    defaultValue,
    fullWidth,
    multiline,
    name,
    rows,
    maxRows,
    minRows,
    type,
    value,
    id,
    inputRef,
    onBlur,
    onChange,
    onFocus,
    placeholder,
    inputProps
  }, InputMore, InputProps));
  return (0, import_jsx_runtime267.jsxs)(TextFieldRoot, _extends({
    className: clsx_default2(classes2.root, className),
    disabled,
    error,
    fullWidth,
    ref,
    required: required2,
    color: color2,
    variant,
    ownerState
  }, other, {
    children: [label != null && label !== "" && (0, import_jsx_runtime266.jsx)(InputLabel_default, _extends({
      htmlFor: id,
      id: inputLabelId
    }, InputLabelProps, {
      children: label
    })), select ? (0, import_jsx_runtime266.jsx)(Select_default, _extends({
      "aria-describedby": helperTextId,
      id,
      labelId: inputLabelId,
      value,
      input: InputElement
    }, SelectProps, {
      children: children2
    })) : InputElement, helperText && (0, import_jsx_runtime266.jsx)(FormHelperText_default, _extends({
      id: helperTextId
    }, FormHelperTextProps, {
      children: helperText
    }))]
  }));
});
true ? TextField.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: import_prop_types191.default.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: import_prop_types191.default.bool,
  /**
   * @ignore
   */
  children: import_prop_types191.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types191.default.object,
  /**
   * @ignore
   */
  className: import_prop_types191.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types191.default.oneOfType([import_prop_types191.default.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), import_prop_types191.default.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types191.default.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types191.default.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: import_prop_types191.default.bool,
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: import_prop_types191.default.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types191.default.bool,
  /**
   * The helper text content.
   */
  helperText: import_prop_types191.default.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: import_prop_types191.default.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: import_prop_types191.default.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: import_prop_types191.default.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: import_prop_types191.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * The label content.
   */
  label: import_prop_types191.default.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: import_prop_types191.default.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: import_prop_types191.default.oneOfType([import_prop_types191.default.number, import_prop_types191.default.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: import_prop_types191.default.oneOfType([import_prop_types191.default.number, import_prop_types191.default.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: import_prop_types191.default.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: import_prop_types191.default.string,
  /**
   * @ignore
   */
  onBlur: import_prop_types191.default.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types191.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types191.default.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: import_prop_types191.default.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: import_prop_types191.default.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: import_prop_types191.default.oneOfType([import_prop_types191.default.number, import_prop_types191.default.string]),
  /**
   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: import_prop_types191.default.bool,
  /**
   * Props applied to the [`Select`](/material-ui/api/select/) element.
   */
  SelectProps: import_prop_types191.default.object,
  /**
   * The size of the component.
   */
  size: import_prop_types191.default.oneOfType([import_prop_types191.default.oneOf(["medium", "small"]), import_prop_types191.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types191.default.oneOfType([import_prop_types191.default.arrayOf(import_prop_types191.default.oneOfType([import_prop_types191.default.func, import_prop_types191.default.object, import_prop_types191.default.bool])), import_prop_types191.default.func, import_prop_types191.default.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: import_prop_types191.default.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: import_prop_types191.default.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: import_prop_types191.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
var TextField_default = TextField;

// node_modules/@mui/material/ToggleButton/ToggleButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React281 = __toESM(require_react());
var import_prop_types192 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_capitalize3();
init_useThemeProps3();
init_styled2();

// node_modules/@mui/material/ToggleButton/toggleButtonClasses.js
init_esm();
init_generateUtilityClass3();
function getToggleButtonUtilityClass(slot) {
  return generateUtilityClass("MuiToggleButton", slot);
}
var toggleButtonClasses = generateUtilityClasses("MuiToggleButton", ["root", "disabled", "selected", "standard", "primary", "secondary", "sizeSmall", "sizeMedium", "sizeLarge"]);
var toggleButtonClasses_default = toggleButtonClasses;

// node_modules/@mui/material/ToggleButton/ToggleButton.js
var import_jsx_runtime268 = __toESM(require_jsx_runtime());
var _excluded174 = ["children", "className", "color", "disabled", "disableFocusRipple", "fullWidth", "onChange", "onClick", "selected", "size", "value"];
var useUtilityClasses136 = (ownerState) => {
  const {
    classes: classes2,
    fullWidth,
    selected,
    disabled,
    size: size2,
    color: color2
  } = ownerState;
  const slots = {
    root: ["root", selected && "selected", disabled && "disabled", fullWidth && "fullWidth", `size${capitalize_default(size2)}`, color2]
  };
  return composeClasses(slots, getToggleButtonUtilityClass, classes2);
};
var ToggleButtonRoot = styled_default2(ButtonBase_default, {
  name: "MuiToggleButton",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [styles7.root, styles7[`size${capitalize_default(ownerState.size)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  let selectedColor = ownerState.color === "standard" ? theme.palette.text.primary : theme.palette[ownerState.color].main;
  let selectedColorChannel;
  if (theme.vars) {
    selectedColor = ownerState.color === "standard" ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;
    selectedColorChannel = ownerState.color === "standard" ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;
  }
  return _extends({}, theme.typography.button, {
    borderRadius: (theme.vars || theme).shape.borderRadius,
    padding: 11,
    border: `1px solid ${(theme.vars || theme).palette.divider}`,
    color: (theme.vars || theme).palette.action.active
  }, ownerState.fullWidth && {
    width: "100%"
  }, {
    [`&.${toggleButtonClasses_default.disabled}`]: {
      color: (theme.vars || theme).palette.action.disabled,
      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`
    },
    "&:hover": {
      textDecoration: "none",
      // Reset on mouse devices
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${toggleButtonClasses_default.selected}`]: {
      color: selectedColor,
      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),
      "&:hover": {
        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)
        }
      }
    }
  }, ownerState.size === "small" && {
    padding: 7,
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === "large" && {
    padding: 15,
    fontSize: theme.typography.pxToRem(15)
  });
});
var ToggleButton = React281.forwardRef(function ToggleButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiToggleButton"
  });
  const {
    children: children2,
    className,
    color: color2 = "standard",
    disabled = false,
    disableFocusRipple = false,
    fullWidth = false,
    onChange,
    onClick,
    selected,
    size: size2 = "medium",
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded174);
  const ownerState = _extends({}, props, {
    color: color2,
    disabled,
    disableFocusRipple,
    fullWidth,
    size: size2
  });
  const classes2 = useUtilityClasses136(ownerState);
  const handleChange = (event) => {
    if (onClick) {
      onClick(event, value);
      if (event.defaultPrevented) {
        return;
      }
    }
    if (onChange) {
      onChange(event, value);
    }
  };
  return (0, import_jsx_runtime268.jsx)(ToggleButtonRoot, _extends({
    className: clsx_default2(classes2.root, className),
    disabled,
    focusRipple: !disableFocusRipple,
    ref,
    onClick: handleChange,
    onChange,
    value,
    ownerState,
    "aria-pressed": selected
  }, other, {
    children: children2
  }));
});
true ? ToggleButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types192.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types192.default.object,
  /**
   * @ignore
   */
  className: import_prop_types192.default.string,
  /**
   * The color of the button when it is in an active state.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'standard'
   */
  color: import_prop_types192.default.oneOfType([import_prop_types192.default.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types192.default.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types192.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types192.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: import_prop_types192.default.bool,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types192.default.bool,
  /**
   * Callback fired when the state changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onChange: import_prop_types192.default.func,
  /**
   * Callback fired when the button is clicked.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onClick: import_prop_types192.default.func,
  /**
   * If `true`, the button is rendered in an active state.
   */
  selected: import_prop_types192.default.bool,
  /**
   * The size of the component.
   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.
   * @default 'medium'
   */
  size: import_prop_types192.default.oneOfType([import_prop_types192.default.oneOf(["small", "medium", "large"]), import_prop_types192.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types192.default.oneOfType([import_prop_types192.default.arrayOf(import_prop_types192.default.oneOfType([import_prop_types192.default.func, import_prop_types192.default.object, import_prop_types192.default.bool])), import_prop_types192.default.func, import_prop_types192.default.object]),
  /**
   * The value to associate with the button when selected in a
   * ToggleButtonGroup.
   */
  value: import_prop_types192.default.any.isRequired
} : void 0;

// node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React282 = __toESM(require_react());
var import_react_is12 = __toESM(require_react_is3());
var import_prop_types193 = __toESM(require_prop_types());
init_clsx2();
init_composeClasses3();
init_styled2();
init_useThemeProps3();
init_capitalize3();

// node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js
function isValueSelected(value, candidate) {
  if (candidate === void 0 || value === void 0) {
    return false;
  }
  if (Array.isArray(candidate)) {
    return candidate.indexOf(value) >= 0;
  }
  return value === candidate;
}

// node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js
init_esm();
init_generateUtilityClass3();
function getToggleButtonGroupUtilityClass(slot) {
  return generateUtilityClass("MuiToggleButtonGroup", slot);
}
var toggleButtonGroupClasses = generateUtilityClasses("MuiToggleButtonGroup", ["root", "selected", "vertical", "disabled", "grouped", "groupedHorizontal", "groupedVertical"]);
var toggleButtonGroupClasses_default = toggleButtonGroupClasses;

// node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js
var import_jsx_runtime269 = __toESM(require_jsx_runtime());
var _excluded175 = ["children", "className", "color", "disabled", "exclusive", "fullWidth", "onChange", "orientation", "size", "value"];
var useUtilityClasses137 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    fullWidth,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", orientation === "vertical" && "vertical", fullWidth && "fullWidth"],
    grouped: ["grouped", `grouped${capitalize_default(orientation)}`, disabled && "disabled"]
  };
  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes2);
};
var ToggleButtonGroupRoot = styled_default2("div", {
  name: "MuiToggleButtonGroup",
  slot: "Root",
  overridesResolver: (props, styles7) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${toggleButtonGroupClasses_default.grouped}`]: styles7.grouped
    }, {
      [`& .${toggleButtonGroupClasses_default.grouped}`]: styles7[`grouped${capitalize_default(ownerState.orientation)}`]
    }, styles7.root, ownerState.orientation === "vertical" && styles7.vertical, ownerState.fullWidth && styles7.fullWidth];
  }
})(({
  ownerState,
  theme
}) => _extends({
  display: "inline-flex",
  borderRadius: (theme.vars || theme).shape.borderRadius
}, ownerState.orientation === "vertical" && {
  flexDirection: "column"
}, ownerState.fullWidth && {
  width: "100%"
}, {
  [`& .${toggleButtonGroupClasses_default.grouped}`]: _extends({}, ownerState.orientation === "horizontal" ? {
    "&:not(:first-of-type)": {
      marginLeft: -1,
      borderLeft: "1px solid transparent",
      borderTopLeftRadius: 0,
      borderBottomLeftRadius: 0
    },
    "&:not(:last-of-type)": {
      borderTopRightRadius: 0,
      borderBottomRightRadius: 0
    },
    [`&.${toggleButtonGroupClasses_default.selected} + .${toggleButtonGroupClasses_default.grouped}.${toggleButtonGroupClasses_default.selected}`]: {
      borderLeft: 0,
      marginLeft: 0
    }
  } : {
    "&:not(:first-of-type)": {
      marginTop: -1,
      borderTop: "1px solid transparent",
      borderTopLeftRadius: 0,
      borderTopRightRadius: 0
    },
    "&:not(:last-of-type)": {
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    },
    [`&.${toggleButtonGroupClasses_default.selected} + .${toggleButtonGroupClasses_default.grouped}.${toggleButtonGroupClasses_default.selected}`]: {
      borderTop: 0,
      marginTop: 0
    }
  })
}));
var ToggleButtonGroup = React282.forwardRef(function ToggleButtonGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiToggleButtonGroup"
  });
  const {
    children: children2,
    className,
    color: color2 = "standard",
    disabled = false,
    exclusive = false,
    fullWidth = false,
    onChange,
    orientation = "horizontal",
    size: size2 = "medium",
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded175);
  const ownerState = _extends({}, props, {
    disabled,
    fullWidth,
    orientation,
    size: size2
  });
  const classes2 = useUtilityClasses137(ownerState);
  const handleChange = (event, buttonValue) => {
    if (!onChange) {
      return;
    }
    const index2 = value && value.indexOf(buttonValue);
    let newValue;
    if (value && index2 >= 0) {
      newValue = value.slice();
      newValue.splice(index2, 1);
    } else {
      newValue = value ? value.concat(buttonValue) : [buttonValue];
    }
    onChange(event, newValue);
  };
  const handleExclusiveChange = (event, buttonValue) => {
    if (!onChange) {
      return;
    }
    onChange(event, value === buttonValue ? null : buttonValue);
  };
  return (0, import_jsx_runtime269.jsx)(ToggleButtonGroupRoot, _extends({
    role: "group",
    className: clsx_default2(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: React282.Children.map(children2, (child) => {
      if (!React282.isValidElement(child)) {
        return null;
      }
      if (true) {
        if ((0, import_react_is12.isFragment)(child)) {
          console.error(["MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
        }
      }
      return React282.cloneElement(child, {
        className: clsx_default2(classes2.grouped, child.props.className),
        onChange: exclusive ? handleExclusiveChange : handleChange,
        selected: child.props.selected === void 0 ? isValueSelected(child.props.value, value) : child.props.selected,
        size: child.props.size || size2,
        fullWidth,
        color: child.props.color || color2,
        disabled: child.props.disabled || disabled
      });
    })
  }));
});
true ? ToggleButtonGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types193.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types193.default.object,
  /**
   * @ignore
   */
  className: import_prop_types193.default.string,
  /**
   * The color of the button when it is selected.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'standard'
   */
  color: import_prop_types193.default.oneOfType([import_prop_types193.default.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types193.default.string]),
  /**
   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.
   * @default false
   */
  disabled: import_prop_types193.default.bool,
  /**
   * If `true`, only allow one of the child ToggleButton values to be selected.
   * @default false
   */
  exclusive: import_prop_types193.default.bool,
  /**
   * If `true`, the button group will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types193.default.bool,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected buttons. When `exclusive` is true
   * this is a single value; when false an array of selected values. If no value
   * is selected and `exclusive` is true the value is null; when false an empty array.
   */
  onChange: import_prop_types193.default.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: import_prop_types193.default.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types193.default.oneOfType([import_prop_types193.default.oneOf(["small", "medium", "large"]), import_prop_types193.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types193.default.oneOfType([import_prop_types193.default.arrayOf(import_prop_types193.default.oneOfType([import_prop_types193.default.func, import_prop_types193.default.object, import_prop_types193.default.bool])), import_prop_types193.default.func, import_prop_types193.default.object]),
  /**
   * The currently selected value within the group or an array of selected
   * values when `exclusive` is false.
   *
   * The value must have reference equality with the option in order to be selected.
   */
  value: import_prop_types193.default.any
} : void 0;

// node_modules/@mui/material/useScrollTrigger/useScrollTrigger.js
init_extends();
init_objectWithoutPropertiesLoose();
var React283 = __toESM(require_react());
var _excluded176 = ["getTrigger", "target"];
function defaultTrigger(store, options) {
  const {
    disableHysteresis = false,
    threshold = 100,
    target
  } = options;
  const previous = store.current;
  if (target) {
    store.current = target.pageYOffset !== void 0 ? target.pageYOffset : target.scrollTop;
  }
  if (!disableHysteresis && previous !== void 0) {
    if (store.current < previous) {
      return false;
    }
  }
  return store.current > threshold;
}
var defaultTarget = typeof window !== "undefined" ? window : null;
function useScrollTrigger(options = {}) {
  const {
    getTrigger = defaultTrigger,
    target = defaultTarget
  } = options, other = _objectWithoutPropertiesLoose(options, _excluded176);
  const store = React283.useRef();
  const [trigger, setTrigger] = React283.useState(() => getTrigger(store, other));
  React283.useEffect(() => {
    const handleScroll = () => {
      setTrigger(getTrigger(store, _extends({
        target
      }, other)));
    };
    handleScroll();
    target.addEventListener("scroll", handleScroll, {
      passive: true
    });
    return () => {
      target.removeEventListener("scroll", handleScroll, {
        passive: true
      });
    };
  }, [target, getTrigger, JSON.stringify(other)]);
  return trigger;
}

// node_modules/@mui/material/index.js
init_composeClasses3();
init_generateUtilityClass3();
init_generateUtilityClass3();

// node_modules/@mui/material/generateUtilityClasses/index.js
init_esm();

// node_modules/ra-ui-materialui/dist/esm/auth/AuthError.js
var import_Lock = __toESM(require_Lock());
var import_prop_types236 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/button/CloneButton.js
var React285 = __toESM(require_react());
var import_react18 = __toESM(require_react());
var import_prop_types195 = __toESM(require_prop_types());
var import_Queue = __toESM(require_Queue());
var import_query_string = __toESM(require_query_string());

// node_modules/ra-ui-materialui/dist/esm/button/Button.js
var React284 = __toESM(require_react());
var import_prop_types194 = __toESM(require_prop_types());
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Button5 = function(props) {
  var _a13 = props.alignIcon, alignIcon = _a13 === void 0 ? "left" : _a13, children2 = props.children, className = props.className, disabled = props.disabled, label = props.label, _b = props.color, color2 = _b === void 0 ? "primary" : _b, _c = props.size, size2 = _c === void 0 ? "small" : _c, locationDescriptor = props.to, rest = __rest(props, ["alignIcon", "children", "className", "disabled", "label", "color", "size", "to"]);
  var translate = useTranslate();
  var translatedLabel = label ? translate(label, { _: label }) : void 0;
  var linkParams = getLinkParams(locationDescriptor);
  var isXSmall = useMediaQuery(function(theme) {
    return theme.breakpoints.down("sm");
  });
  return isXSmall ? label && !disabled ? React284.createElement(
    Tooltip_default,
    { title: translatedLabel },
    React284.createElement(IconButton_default, __assign({ "aria-label": translatedLabel, className, color: color2, size: "large" }, rest, linkParams), children2)
  ) : React284.createElement(IconButton_default, __assign({ className, color: color2, disabled, size: "large" }, rest, linkParams), children2) : React284.createElement(StyledButton, __assign({ className, color: color2, size: size2, "aria-label": translatedLabel, disabled, startIcon: alignIcon === "left" && children2 ? children2 : void 0, endIcon: alignIcon === "right" && children2 ? children2 : void 0 }, rest, linkParams), translatedLabel);
};
Button5.propTypes = {
  alignIcon: import_prop_types194.default.oneOf(["left", "right"]),
  children: import_prop_types194.default.element,
  className: import_prop_types194.default.string,
  color: import_prop_types194.default.oneOfType([
    import_prop_types194.default.oneOf([
      "inherit",
      "default",
      "primary",
      "secondary",
      "error",
      "info",
      "success",
      "warning"
    ]),
    import_prop_types194.default.string
  ]),
  disabled: import_prop_types194.default.bool,
  label: import_prop_types194.default.string,
  size: import_prop_types194.default.oneOf(["small", "medium", "large"])
};
var PREFIX = "RaButton";
var StyledButton = styled_default2(Button_default, {
  name: PREFIX,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})({
  "&.MuiButton-sizeSmall": {
    // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240
    lineHeight: 1.5
  }
});
var getLinkParams = function(locationDescriptor) {
  if (locationDescriptor == void 0) {
    return void 0;
  }
  if (typeof locationDescriptor === "string") {
    return { to: locationDescriptor };
  }
  var redirect = locationDescriptor.redirect, replace2 = locationDescriptor.replace, state = locationDescriptor.state, to = __rest(locationDescriptor, ["redirect", "replace", "state"]);
  return {
    to,
    redirect,
    replace: replace2,
    state
  };
};

// node_modules/ra-ui-materialui/dist/esm/button/CloneButton.js
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var __rest2 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var CloneButton = function(props) {
  var _a13 = props.label, label = _a13 === void 0 ? "ra.action.clone" : _a13, _b = props.scrollToTop, scrollToTop = _b === void 0 ? true : _b, _c = props.icon, icon = _c === void 0 ? defaultIcon4 : _c, rest = __rest2(props, ["label", "scrollToTop", "icon"]);
  var resource = useResourceContext(props);
  var record = useRecordContext(props);
  var createPath = useCreatePath();
  var pathname = createPath({ resource, type: "create" });
  return React285.createElement(Button5, __assign2({ component: Link, to: record ? {
    pathname,
    search: (0, import_query_string.stringify)({
      source: JSON.stringify(omitId(record))
    }),
    state: { _scrollToTop: scrollToTop }
  } : pathname, label, onClick: stopPropagation }, sanitizeRestProps(rest)), icon);
};
var defaultIcon4 = React285.createElement(import_Queue.default, null);
var stopPropagation = function(e) {
  return e.stopPropagation();
};
var omitId = function(_a13) {
  var id = _a13.id, rest = __rest2(_a13, ["id"]);
  return rest;
};
var sanitizeRestProps = function(_a13) {
  var resource = _a13.resource, record = _a13.record, rest = __rest2(_a13, ["resource", "record"]);
  return rest;
};
CloneButton.propTypes = {
  icon: import_prop_types195.default.element,
  label: import_prop_types195.default.string,
  record: import_prop_types195.default.any
};
var CloneButton_default = (0, import_react18.memo)(CloneButton);

// node_modules/ra-ui-materialui/dist/esm/button/CreateButton.js
var React286 = __toESM(require_react());
var import_react19 = __toESM(require_react());
var import_prop_types196 = __toESM(require_prop_types());
var import_Add2 = __toESM(require_Add());

// node_modules/clsx/dist/clsx.m.js
function r4(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e)
    n += e;
  else if ("object" == typeof e)
    if (Array.isArray(e))
      for (t = 0; t < e.length; t++)
        e[t] && (f = r4(e[t])) && (n && (n += " "), n += f);
    else
      for (t in e)
        e[t] && (n && (n += " "), n += t);
  return n;
}
function clsx4() {
  for (var e, t, f = 0, n = ""; f < arguments.length; )
    (e = arguments[f++]) && (t = r4(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_m_default = clsx4;

// node_modules/ra-ui-materialui/dist/esm/button/CreateButton.js
var import_isEqual = __toESM(require_isEqual());
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var __rest3 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var CreateButton = function(props) {
  var className = props.className, _a13 = props.icon, icon = _a13 === void 0 ? defaultIcon5 : _a13, _b = props.label, label = _b === void 0 ? "ra.action.create" : _b, resourceProp = props.resource, _c = props.scrollToTop, scrollToTop = _c === void 0 ? true : _c, variant = props.variant, rest = __rest3(props, ["className", "icon", "label", "resource", "scrollToTop", "variant"]);
  var resource = useResourceContext(props);
  var createPath = useCreatePath();
  var translate = useTranslate();
  var isSmall = useMediaQuery(function(theme) {
    return theme.breakpoints.down("md");
  });
  return isSmall ? React286.createElement(StyledFab, __assign3({
    component: Link,
    to: createPath({ resource, type: "create" }),
    state: scrollStates[String(scrollToTop)],
    // @ts-ignore FabProps ships its own runtime palette `FabPropsColorOverrides` provoking an overlap error with `ButtonProps`
    color: "primary",
    className: clsx_m_default(CreateButtonClasses.floating, className),
    "aria-label": label && translate(label)
  }, rest), icon) : React286.createElement(StyledButton2, __assign3({ component: Link, to: createPath({ resource, type: "create" }), state: scrollStates[String(scrollToTop)], className: clsx_m_default(CreateButtonClasses.root, className), label, variant }, rest), icon);
};
var scrollStates = {
  true: { _scrollToTop: true },
  false: {}
};
var defaultIcon5 = React286.createElement(import_Add2.default, null);
CreateButton.propTypes = {
  resource: import_prop_types196.default.string,
  className: import_prop_types196.default.string,
  icon: import_prop_types196.default.element,
  label: import_prop_types196.default.string
};
var PREFIX2 = "RaCreateButton";
var CreateButtonClasses = {
  root: "".concat(PREFIX2, "-root"),
  floating: "".concat(PREFIX2, "-floating")
};
var StyledFab = styled_default2(Fab_default, {
  name: PREFIX2,
  overridesResolver: function(_props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["&.".concat(CreateButtonClasses.floating)] = {
    color: theme.palette.getContrastText(theme.palette.primary.main),
    margin: 0,
    top: "auto",
    right: 20,
    bottom: 60,
    left: "auto",
    position: "fixed",
    zIndex: 1e3
  }, _b;
});
var StyledButton2 = styled_default2(Button5, {
  name: PREFIX2,
  overridesResolver: function(_props, styles7) {
    return styles7.root;
  }
})({});
var CreateButton_default = (0, import_react19.memo)(CreateButton, function(prevProps, nextProps) {
  return prevProps.resource === nextProps.resource && prevProps.label === nextProps.label && prevProps.translate === nextProps.translate && prevProps.disabled === nextProps.disabled && (0, import_isEqual.default)(prevProps.to, nextProps.to);
});

// node_modules/ra-ui-materialui/dist/esm/button/ShowButton.js
var React287 = __toESM(require_react());
var import_react20 = __toESM(require_react());
var import_prop_types197 = __toESM(require_prop_types());
var import_RemoveRedEye = __toESM(require_RemoveRedEye());
var import_isEqual2 = __toESM(require_isEqual());
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var __rest4 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ShowButton = function(props) {
  var _a13 = props.icon, icon = _a13 === void 0 ? defaultIcon6 : _a13, _b = props.label, label = _b === void 0 ? "ra.action.show" : _b, recordProp = props.record, resourceProp = props.resource, _c = props.scrollToTop, scrollToTop = _c === void 0 ? true : _c, rest = __rest4(props, ["icon", "label", "record", "resource", "scrollToTop"]);
  var resource = useResourceContext(props);
  var record = useRecordContext(props);
  var createPath = useCreatePath();
  if (!record)
    return null;
  return React287.createElement(Button5, __assign4({ component: Link, to: createPath({ type: "show", resource, id: record.id }), state: scrollStates2[String(scrollToTop)], label, onClick: stopPropagation2 }, rest), icon);
};
var scrollStates2 = {
  true: { _scrollToTop: true },
  false: {}
};
var defaultIcon6 = React287.createElement(import_RemoveRedEye.default, null);
var stopPropagation2 = function(e) {
  return e.stopPropagation();
};
ShowButton.propTypes = {
  icon: import_prop_types197.default.element,
  label: import_prop_types197.default.string,
  record: import_prop_types197.default.any,
  scrollToTop: import_prop_types197.default.bool
};
var PureShowButton = (0, import_react20.memo)(ShowButton, function(prevProps, nextProps) {
  return prevProps.resource === nextProps.resource && (prevProps.record && nextProps.record ? prevProps.record.id === nextProps.record.id : prevProps.record == nextProps.record) && // eslint-disable-line eqeqeq
  prevProps.label === nextProps.label && prevProps.disabled === nextProps.disabled && (0, import_isEqual2.default)(prevProps.to, nextProps.to);
});
var ShowButton_default = PureShowButton;

// node_modules/ra-ui-materialui/dist/esm/button/SortButton.js
var React288 = __toESM(require_react());
var import_react21 = __toESM(require_react());
var import_Sort = __toESM(require_Sort());
var import_ArrowDropDown4 = __toESM(require_ArrowDropDown());
var SortButton = function(props) {
  var fields = props.fields, _a13 = props.label, label = _a13 === void 0 ? "ra.sort.sort_by" : _a13, _b = props.icon, icon = _b === void 0 ? defaultIcon7 : _b;
  var _c = useListSortContext(), resource = _c.resource, sort = _c.sort, setSort = _c.setSort;
  var translate = useTranslate();
  var translateLabel = useTranslateLabel();
  var isXSmall = useMediaQuery(function(theme) {
    return theme.breakpoints.down("sm");
  });
  var _d = React288.useState(null), anchorEl = _d[0], setAnchorEl = _d[1];
  var handleClick2 = function(event) {
    setAnchorEl(event.currentTarget);
  };
  var handleClose = function() {
    setAnchorEl(null);
  };
  var handleChangeSort = function(event) {
    var field = event.currentTarget.dataset.sort;
    setSort({
      field,
      order: field === sort.field ? inverseOrder(sort.order) : "ASC"
    });
    setAnchorEl(null);
  };
  var buttonLabel = translate(label, {
    field: translateLabel({
      resource,
      source: sort.field
    }),
    order: translate("ra.sort.".concat(sort.order)),
    _: label
  });
  return React288.createElement(
    React288.Fragment,
    null,
    isXSmall ? React288.createElement(
      Tooltip_default,
      { title: buttonLabel },
      React288.createElement(IconButton_default, { "aria-label": buttonLabel, color: "primary", onClick: handleClick2, size: "large" }, icon)
    ) : React288.createElement(StyledButton3, { "aria-controls": "simple-menu", "aria-haspopup": "true", color: "primary", onClick: handleClick2, startIcon: icon, endIcon: React288.createElement(import_ArrowDropDown4.default, null), size: "small" }, buttonLabel),
    React288.createElement(Menu_default, { id: "simple-menu", anchorEl, keepMounted: true, open: Boolean(anchorEl), onClose: handleClose }, fields.map(function(field) {
      return React288.createElement(
        MenuItem_default,
        { onClick: handleChangeSort, "data-sort": field, key: field },
        translateLabel({
          resource,
          source: field
        }),
        " ",
        translate("ra.sort.".concat(sort.field === field ? inverseOrder(sort.order) : "ASC"))
      );
    }))
  );
};
var defaultIcon7 = React288.createElement(import_Sort.default, null);
var inverseOrder = function(sort) {
  return sort === "ASC" ? "DESC" : "ASC";
};
var arePropsEqual = function(prevProps, nextProps) {
  return shallowEqual(prevProps.fields, nextProps.fields);
};
var StyledButton3 = styled_default2(Button_default, {
  name: "RaSortButton",
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})({
  "&.MuiButton-sizeSmall": {
    // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240
    lineHeight: 1.5
  },
  "& .MuiButton-endIcon": { ml: 0 }
});
var SortButton_default = (0, import_react21.memo)(SortButton, arePropsEqual);

// node_modules/ra-ui-materialui/dist/esm/button/BulkDeleteButton.js
var React330 = __toESM(require_react());
var import_prop_types219 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/button/BulkDeleteWithConfirmButton.js
var React328 = __toESM(require_react());
var import_react43 = __toESM(require_react());
var import_prop_types217 = __toESM(require_prop_types());
var import_Delete = __toESM(require_Delete());
var import_inflection = __toESM(require_inflection());

// node_modules/ra-ui-materialui/dist/esm/layout/AppBar.js
var React298 = __toESM(require_react());
var import_react29 = __toESM(require_react());
var import_prop_types202 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/layout/SidebarToggleButton.js
var React289 = __toESM(require_react());
var import_Menu5 = __toESM(require_Menu());

// node_modules/ra-ui-materialui/dist/esm/layout/useSidebarState.js
var useSidebarState = function() {
  var isXSmall = useMediaQuery(function(theme) {
    return theme === null || theme === void 0 ? void 0 : theme.breakpoints.down("sm");
  }, { noSsr: true });
  return useStore("sidebar.open", isXSmall ? false : true);
};

// node_modules/ra-ui-materialui/dist/esm/layout/SidebarToggleButton.js
var SidebarToggleButton = function(props) {
  var translate = useTranslate();
  var className = props.className;
  var _a13 = useSidebarState(), open = _a13[0], setOpen = _a13[1];
  return React289.createElement(
    Tooltip_default,
    { className, title: translate(open ? "ra.action.close_menu" : "ra.action.open_menu", { _: "Open/Close menu" }), enterDelay: 500 },
    React289.createElement(
      StyledIconButton,
      { color: "inherit", onClick: function() {
        return setOpen(!open);
      } },
      React289.createElement(import_Menu5.default, { classes: {
        root: open ? SidebarToggleButtonClasses.menuButtonIconOpen : SidebarToggleButtonClasses.menuButtonIconClosed
      } })
    )
  );
};
var PREFIX3 = "RaSidebarToggleButton";
var SidebarToggleButtonClasses = {
  menuButtonIconClosed: "".concat(PREFIX3, "-menuButtonIconClosed"),
  menuButtonIconOpen: "".concat(PREFIX3, "-menuButtonIconOpen")
};
var StyledIconButton = styled_default2(IconButton_default, {
  name: PREFIX3,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(SidebarToggleButtonClasses.menuButtonIconClosed)] = {
    transition: theme.transitions.create(["transform"], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen
    }),
    transform: "rotate(0deg)"
  }, _b["& .".concat(SidebarToggleButtonClasses.menuButtonIconOpen)] = {
    transition: theme.transitions.create(["transform"], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen
    }),
    transform: "rotate(180deg)"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/layout/LoadingIndicator.js
var React290 = __toESM(require_react());
var import_prop_types198 = __toESM(require_prop_types());
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
var __rest5 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var LoadingIndicator = function(props) {
  var className = props.className, sx = props.sx, rest = __rest5(props, ["className", "sx"]);
  var loading = useLoading();
  var theme = useTheme5();
  return React290.createElement(Root, { className, sx }, loading ? React290.createElement(CircularProgress_default, __assign5({ className: clsx_m_default("app-loader", LoadingIndicatorClasses.loader), color: "inherit", size: theme.spacing(2), thickness: 6 }, rest)) : React290.createElement(RefreshIconButton, { className: LoadingIndicatorClasses.loadedIcon }));
};
LoadingIndicator.propTypes = {
  classes: import_prop_types198.default.object,
  className: import_prop_types198.default.string,
  width: import_prop_types198.default.string
};
var PREFIX4 = "RaLoadingIndicator";
var LoadingIndicatorClasses = {
  loader: "".concat(PREFIX4, "-loader"),
  loadedIcon: "".concat(PREFIX4, "-loadedIcon")
};
var Root = styled_default2("div", {
  name: PREFIX4,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(LoadingIndicatorClasses.loader)] = {
    marginLeft: theme.spacing(1.5),
    marginRight: theme.spacing(1.5)
  }, _b["& .".concat(LoadingIndicatorClasses.loadedIcon)] = {}, _b;
});

// node_modules/ra-ui-materialui/dist/esm/layout/UserMenu.js
var React293 = __toESM(require_react());
var import_react24 = __toESM(require_react());
var import_prop_types200 = __toESM(require_prop_types());
var import_AccountCircle = __toESM(require_AccountCircle());

// node_modules/ra-ui-materialui/dist/esm/layout/UserMenuContextProvider.js
var React291 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/layout/UserMenuContext.js
var import_react22 = __toESM(require_react());
var UserMenuContext = (0, import_react22.createContext)(void 0);

// node_modules/ra-ui-materialui/dist/esm/layout/UserMenuContextProvider.js
var UserMenuContextProvider = function(_a13) {
  var children2 = _a13.children, value = _a13.value;
  return React291.createElement(UserMenuContext.Provider, { value }, children2);
};

// node_modules/ra-ui-materialui/dist/esm/auth/Logout.js
var React292 = __toESM(require_react());
var import_react23 = __toESM(require_react());
var import_prop_types199 = __toESM(require_prop_types());
var import_PowerSettingsNew = __toESM(require_PowerSettingsNew());
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
var __rest6 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a;
var Logout = React292.forwardRef(function Logout2(props, ref) {
  var className = props.className, redirectTo = props.redirectTo, icon = props.icon, rest = __rest6(props, ["className", "redirectTo", "icon"]);
  var authenticated = useAuthState_default().authenticated;
  var isXSmall = useMediaQuery(function(theme) {
    return theme.breakpoints.down("sm");
  });
  var translate = useTranslate();
  var logout = useLogout_default();
  var handleClick2 = (0, import_react23.useCallback)(function() {
    return logout(null, redirectTo, false);
  }, [
    redirectTo,
    logout
  ]);
  if (!authenticated)
    return null;
  return React292.createElement(
    StyledMenuItem,
    __assign6({
      className: clsx_m_default("logout", className),
      onClick: handleClick2,
      ref,
      // @ts-ignore
      component: isXSmall ? "span" : "li"
    }, rest),
    React292.createElement(ListItemIcon_default, { className: LogoutClasses.icon }, icon ? icon : React292.createElement(import_PowerSettingsNew.default, { fontSize: "small" })),
    React292.createElement(ListItemText_default, null, translate("ra.auth.logout", { _: "Logout" }))
  );
});
Logout.propTypes = {
  className: import_prop_types199.default.string,
  redirectTo: import_prop_types199.default.string,
  icon: import_prop_types199.default.element
};
var PREFIX5 = "RaLogout";
var LogoutClasses = {
  icon: "".concat(PREFIX5, "-icon")
};
var StyledMenuItem = styled_default2(MenuItem_default, {
  name: PREFIX5,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a = {}, _a["& .".concat(LogoutClasses.icon)] = {}, _a));

// node_modules/ra-ui-materialui/dist/esm/layout/UserMenu.js
var UserMenu = function(props) {
  var _a13 = (0, import_react24.useState)(null), anchorEl = _a13[0], setAnchorEl = _a13[1];
  var translate = useTranslate();
  var _b = useGetIdentity(), isLoading = _b.isLoading, identity = _b.identity;
  var authProvider = useAuthProvider_default();
  var isLargeEnough = useMediaQuery(function(theme) {
    return theme.breakpoints.up("sm");
  });
  var _c = props.children, children2 = _c === void 0 ? !!authProvider ? React293.createElement(Logout, null) : null : _c, className = props.className, _d = props.label, label = _d === void 0 ? "ra.auth.user_menu" : _d, _e = props.icon, icon = _e === void 0 ? defaultIcon8 : _e;
  var handleMenu = function(event) {
    return setAnchorEl(event.currentTarget);
  };
  var handleClose = (0, import_react24.useCallback)(function() {
    return setAnchorEl(null);
  }, []);
  var context = (0, import_react24.useMemo)(function() {
    return { onClose: handleClose };
  }, [handleClose]);
  if (!children2)
    return null;
  var open = Boolean(anchorEl);
  return React293.createElement(
    Root2,
    { className },
    isLargeEnough && !isLoading && (identity === null || identity === void 0 ? void 0 : identity.fullName) ? React293.createElement(Button_default, { "aria-label": label && translate(label, { _: label }), className: UserMenuClasses.userButton, color: "inherit", startIcon: identity.avatar ? React293.createElement(Avatar_default, { className: UserMenuClasses.avatar, src: identity.avatar, alt: identity.fullName }) : icon, onClick: handleMenu }, identity.fullName) : React293.createElement(
      Tooltip_default,
      { title: label && translate(label, { _: "Profile" }) },
      React293.createElement(IconButton_default, { "aria-label": label && translate(label, { _: "Profile" }), "aria-owns": open ? "menu-appbar" : null, "aria-haspopup": true, color: "inherit", onClick: handleMenu }, !isLoading && (identity === null || identity === void 0 ? void 0 : identity.avatar) ? React293.createElement(Avatar_default, { className: UserMenuClasses.avatar, src: identity.avatar, alt: identity.fullName }) : icon)
    ),
    React293.createElement(
      UserMenuContextProvider,
      { value: context },
      React293.createElement(Menu_default, { id: "menu-appbar", disableScrollLock: true, anchorEl, anchorOrigin: AnchorOrigin, transformOrigin: TransformOrigin, open, onClose: handleClose }, children2)
    )
  );
};
UserMenu.propTypes = {
  children: import_prop_types200.default.node,
  classes: import_prop_types200.default.object,
  label: import_prop_types200.default.string,
  icon: import_prop_types200.default.node
};
var PREFIX6 = "RaUserMenu";
var UserMenuClasses = {
  userButton: "".concat(PREFIX6, "-userButton"),
  avatar: "".concat(PREFIX6, "-avatar")
};
var Root2 = styled_default2("div", {
  name: PREFIX6,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(UserMenuClasses.userButton)] = {
    textTransform: "none",
    marginInlineStart: theme.spacing(0.5)
  }, _b["& .".concat(UserMenuClasses.avatar)] = {
    width: theme.spacing(4),
    height: theme.spacing(4)
  }, _b;
});
var defaultIcon8 = React293.createElement(import_AccountCircle.default, null);
var AnchorOrigin = {
  vertical: "bottom",
  horizontal: "right"
};
var TransformOrigin = {
  vertical: "top",
  horizontal: "right"
};

// node_modules/ra-ui-materialui/dist/esm/layout/HideOnScroll.js
var React294 = __toESM(require_react());
var import_prop_types201 = __toESM(require_prop_types());
var HideOnScroll = function(props) {
  var children2 = props.children, className = props.className;
  var trigger = useScrollTrigger();
  return React294.createElement(Slide_default, { appear: false, direction: "down", in: !trigger, className }, children2);
};
HideOnScroll.propTypes = {
  children: import_prop_types201.default.node.isRequired,
  className: import_prop_types201.default.string
};

// node_modules/ra-ui-materialui/dist/esm/layout/TitlePortal.js
var React295 = __toESM(require_react());
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
var TitlePortal = function(props) {
  return React295.createElement(Typography_default, __assign7({ flex: "1", textOverflow: "ellipsis", whiteSpace: "nowrap", overflow: "hidden", variant: "h6", color: "inherit", id: "react-admin-title" }, props));
};

// node_modules/ra-ui-materialui/dist/esm/layout/Theme/useThemesContext.js
var import_react26 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/layout/Theme/ThemesContext.js
var import_react25 = __toESM(require_react());
var ThemesContext = (0, import_react25.createContext)({});

// node_modules/ra-ui-materialui/dist/esm/layout/Theme/useThemesContext.js
var useThemesContext = function(params) {
  var _a13 = params || {}, lightTheme = _a13.lightTheme, darkTheme = _a13.darkTheme, defaultTheme8 = _a13.defaultTheme;
  var context = (0, import_react26.useContext)(ThemesContext);
  return {
    lightTheme: lightTheme || context.lightTheme,
    darkTheme: darkTheme || context.darkTheme,
    defaultTheme: defaultTheme8 !== null && defaultTheme8 !== void 0 ? defaultTheme8 : context.defaultTheme
  };
};

// node_modules/ra-ui-materialui/dist/esm/button/ToggleThemeButton.js
var import_react28 = __toESM(require_react());
var import_Brightness42 = __toESM(require_Brightness4());
var import_Brightness72 = __toESM(require_Brightness7());

// node_modules/ra-ui-materialui/dist/esm/button/ToggleThemeLegacyButton.js
var import_react27 = __toESM(require_react());
var import_Brightness4 = __toESM(require_Brightness4());
var import_Brightness7 = __toESM(require_Brightness7());
var ToggleThemeLegacyButton = function(props) {
  var translate = useTranslate();
  var darkTheme = props.darkTheme, lightTheme = props.lightTheme;
  var _a13 = useTheme6(), theme = _a13[0], setTheme = _a13[1];
  var isDark = theme === "dark" || (theme === null || theme === void 0 ? void 0 : theme.palette.mode) === "dark";
  var handleTogglePaletteType = function() {
    setTheme(isDark ? lightTheme : darkTheme);
  };
  var toggleThemeTitle = translate("ra.action.toggle_theme", {
    _: "Toggle Theme"
  });
  return import_react27.default.createElement(
    Tooltip_default,
    { title: toggleThemeTitle, enterDelay: 300 },
    import_react27.default.createElement(IconButton_default, { color: "inherit", onClick: handleTogglePaletteType, "aria-label": toggleThemeTitle }, isDark ? import_react27.default.createElement(import_Brightness7.default, null) : import_react27.default.createElement(import_Brightness4.default, null))
  );
};

// node_modules/ra-ui-materialui/dist/esm/button/ToggleThemeButton.js
var ToggleThemeButton = function(props) {
  var translate = useTranslate();
  var _a13 = useThemesContext(props), darkTheme = _a13.darkTheme, defaultTheme8 = _a13.defaultTheme;
  var prefersDarkMode = useMediaQuery("(prefers-color-scheme: dark)", {
    noSsr: true
  });
  var _b = useTheme6(defaultTheme8 || (prefersDarkMode && darkTheme ? "dark" : "light")), theme = _b[0], setTheme = _b[1];
  if (props.darkTheme) {
    return import_react28.default.createElement(ToggleThemeLegacyButton, { darkTheme: props.darkTheme, lightTheme: props.lightTheme });
  }
  var handleTogglePaletteType = function() {
    setTheme(theme === "dark" ? "light" : "dark");
  };
  var toggleThemeTitle = translate("ra.action.toggle_theme", {
    _: "Toggle Theme"
  });
  return import_react28.default.createElement(
    Tooltip_default,
    { title: toggleThemeTitle, enterDelay: 300 },
    import_react28.default.createElement(IconButton_default, { color: "inherit", onClick: handleTogglePaletteType, "aria-label": toggleThemeTitle }, theme === "dark" ? import_react28.default.createElement(import_Brightness72.default, null) : import_react28.default.createElement(import_Brightness42.default, null))
  );
};

// node_modules/ra-ui-materialui/dist/esm/layout/AppBar.js
var __assign8 = function() {
  __assign8 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
var __rest7 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var AppBar3 = (0, import_react29.memo)(function(props) {
  var alwaysOn = props.alwaysOn, children2 = props.children, className = props.className, _a13 = props.color, color2 = _a13 === void 0 ? "secondary" : _a13, open = props.open, title = props.title, _b = props.toolbar, toolbar = _b === void 0 ? defaultToolbarElement : _b, _c = props.userMenu, userMenu = _c === void 0 ? DefaultUserMenu : _c, _d = props.container, Container3 = _d === void 0 ? alwaysOn ? "div" : HideOnScroll : _d, rest = __rest7(props, ["alwaysOn", "children", "className", "color", "open", "title", "toolbar", "userMenu", "container"]);
  var isXSmall = useMediaQuery(function(theme) {
    return theme.breakpoints.down("sm");
  });
  return React298.createElement(
    Container3,
    { className },
    React298.createElement(
      StyledAppBar,
      __assign8({ className: AppBarClasses.appBar, color: color2 }, rest),
      React298.createElement(
        Toolbar_default,
        { disableGutters: true, variant: isXSmall ? "regular" : "dense", className: AppBarClasses.toolbar },
        React298.createElement(SidebarToggleButton, { className: AppBarClasses.menuButton }),
        import_react29.Children.count(children2) === 0 ? React298.createElement(TitlePortal, { className: AppBarClasses.title }) : children2,
        toolbar,
        typeof userMenu === "boolean" ? userMenu === true ? React298.createElement(UserMenu, null) : null : userMenu
      )
    )
  );
});
var DefaultToolbar = function() {
  var locales = useLocales();
  var darkTheme = useThemesContext().darkTheme;
  return React298.createElement(
    React298.Fragment,
    null,
    locales && locales.length > 1 ? React298.createElement(LocalesMenuButton, null) : null,
    darkTheme && React298.createElement(ToggleThemeButton, null),
    React298.createElement(LoadingIndicator, null)
  );
};
var defaultToolbarElement = React298.createElement(DefaultToolbar, null);
AppBar3.propTypes = {
  alwaysOn: import_prop_types202.default.bool,
  children: import_prop_types202.default.node,
  className: import_prop_types202.default.string,
  color: import_prop_types202.default.oneOf([
    "default",
    "inherit",
    "primary",
    "secondary",
    "transparent"
  ]),
  container: ComponentPropType_default,
  /**
   * @deprecated
   */
  open: import_prop_types202.default.bool,
  toolbar: import_prop_types202.default.element,
  userMenu: import_prop_types202.default.oneOfType([import_prop_types202.default.element, import_prop_types202.default.bool])
};
var DefaultUserMenu = React298.createElement(UserMenu, null);
var PREFIX7 = "RaAppBar";
var AppBarClasses = {
  appBar: "".concat(PREFIX7, "-appBar"),
  toolbar: "".concat(PREFIX7, "-toolbar"),
  menuButton: "".concat(PREFIX7, "-menuButton"),
  menuButtonIconClosed: "".concat(PREFIX7, "-menuButtonIconClosed"),
  menuButtonIconOpen: "".concat(PREFIX7, "-menuButtonIconOpen"),
  title: "".concat(PREFIX7, "-title")
};
var StyledAppBar = styled_default2(AppBar_default, {
  name: PREFIX7,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b, _c;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(AppBarClasses.toolbar)] = (_c = {
    padding: "0 ".concat(theme.spacing(1))
  }, _c[theme.breakpoints.down("md")] = {
    minHeight: theme.spacing(6)
  }, _c), _b["& .".concat(AppBarClasses.menuButton)] = {
    marginRight: "0.2em"
  }, _b["& .".concat(AppBarClasses.title)] = {}, _b;
});

// node_modules/ra-ui-materialui/dist/esm/layout/ApplicationUpdatedNotification.js
var React299 = __toESM(require_react());
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
var __rest8 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ApplicationUpdatedNotification = React299.forwardRef(function(props, ref) {
  var ButtonProps = props.ButtonProps, _a13 = props.updateText, updateText = _a13 === void 0 ? "ra.action.update_application" : _a13, _b = props.notificationText, notificationText = _b === void 0 ? "ra.notification.application_update_available" : _b, alertProps = __rest8(props, ["ButtonProps", "updateText", "notificationText"]);
  var translate = useTranslate();
  var handleButtonClick = function() {
    window.location.reload();
  };
  return React299.createElement(Alert_default, __assign9({ ref, severity: "info", action: React299.createElement(Button_default, __assign9({ color: "inherit", size: "small", onClick: handleButtonClick }, ButtonProps), translate(updateText, { _: updateText })) }, alertProps), translate(notificationText, { _: notificationText }));
});

// node_modules/ra-ui-materialui/dist/esm/layout/CardContentInner.js
var React300 = __toESM(require_react());
var import_prop_types203 = __toESM(require_prop_types());
var CardContentInner = function(props) {
  var className = props.className, children2 = props.children;
  return React300.createElement(Root3, { className }, children2);
};
CardContentInner.propTypes = {
  className: import_prop_types203.default.string,
  classes: import_prop_types203.default.object,
  children: import_prop_types203.default.node
};
var PREFIX8 = "RaCardContentInner";
var CardContentInnerClasses = {
  root: "".concat(PREFIX8, "-root")
};
var Root3 = styled_default2(CardContent_default, {
  name: PREFIX8,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return {
    paddingTop: 0,
    paddingBottom: 0,
    "&:first-of-type": {
      paddingTop: 16
    },
    "&:last-child": (_b = {
      paddingBottom: 16
    }, _b[theme.breakpoints.only("xs")] = {
      paddingBottom: 70
    }, _b)
  };
});

// node_modules/ra-ui-materialui/dist/esm/layout/CheckForApplicationUpdate.js
var React301 = __toESM(require_react());
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
var __rest9 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var CheckForApplicationUpdate = function(props) {
  var _a13 = props.notification, notification = _a13 === void 0 ? DEFAULT_NOTIFICATION : _a13, rest = __rest9(props, ["notification"]);
  var notify = useNotify();
  var onNewVersionAvailable = function() {
    notify(notification, {
      type: "info",
      autoHideDuration: null
    });
  };
  useCheckForApplicationUpdate(__assign10({ onNewVersionAvailable }, rest));
  return null;
};
var DEFAULT_NOTIFICATION = React301.createElement(ApplicationUpdatedNotification, null);

// node_modules/ra-ui-materialui/dist/esm/layout/Confirm.js
var React302 = __toESM(require_react());
var import_react30 = __toESM(require_react());
var import_prop_types204 = __toESM(require_prop_types());
var import_CheckCircle2 = __toESM(require_CheckCircle());
var import_ErrorOutline2 = __toESM(require_ErrorOutline());
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
var __rest10 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Confirm = function(props) {
  var _a13;
  var className = props.className, _b = props.isOpen, isOpen = _b === void 0 ? false : _b, loading = props.loading, title = props.title, content = props.content, _c = props.cancel, cancel = _c === void 0 ? "ra.action.cancel" : _c, _d = props.confirm, confirm = _d === void 0 ? "ra.action.confirm" : _d, _e = props.confirmColor, confirmColor = _e === void 0 ? "primary" : _e, _f = props.ConfirmIcon, ConfirmIcon = _f === void 0 ? import_CheckCircle2.default : _f, _g = props.CancelIcon, CancelIcon3 = _g === void 0 ? import_ErrorOutline2.default : _g, onClose = props.onClose, onConfirm = props.onConfirm, _h = props.translateOptions, translateOptions = _h === void 0 ? {} : _h, rest = __rest10(props, ["className", "isOpen", "loading", "title", "content", "cancel", "confirm", "confirmColor", "ConfirmIcon", "CancelIcon", "onClose", "onConfirm", "translateOptions"]);
  var translate = useTranslate();
  var handleConfirm = (0, import_react30.useCallback)(function(e) {
    e.stopPropagation();
    onConfirm(e);
  }, [onConfirm]);
  var handleClick2 = (0, import_react30.useCallback)(function(e) {
    e.stopPropagation();
  }, []);
  return React302.createElement(
    StyledDialog,
    __assign11({ className, open: isOpen, onClose, onClick: handleClick2, "aria-labelledby": "alert-dialog-title" }, rest),
    React302.createElement(DialogTitle_default, { id: "alert-dialog-title" }, typeof title === "string" ? translate(title, __assign11({ _: title }, translateOptions)) : title),
    React302.createElement(DialogContent_default, null, typeof content === "string" ? React302.createElement(DialogContentText_default, null, translate(content, __assign11({ _: content }, translateOptions))) : content),
    React302.createElement(
      DialogActions_default,
      null,
      React302.createElement(Button_default, { disabled: loading, onClick: onClose, startIcon: React302.createElement(CancelIcon3, null) }, translate(cancel, { _: cancel })),
      React302.createElement(Button_default, { disabled: loading, onClick: handleConfirm, className: clsx_m_default("ra-confirm", (_a13 = {}, _a13[ConfirmClasses.confirmWarning] = confirmColor === "warning", _a13[ConfirmClasses.confirmPrimary] = confirmColor === "primary", _a13)), autoFocus: true, startIcon: React302.createElement(ConfirmIcon, null) }, translate(confirm, { _: confirm }))
    )
  );
};
Confirm.propTypes = {
  cancel: import_prop_types204.default.string,
  className: import_prop_types204.default.string,
  confirm: import_prop_types204.default.string,
  confirmColor: import_prop_types204.default.string,
  ConfirmIcon: import_prop_types204.default.elementType,
  CancelIcon: import_prop_types204.default.elementType,
  content: import_prop_types204.default.node.isRequired,
  isOpen: import_prop_types204.default.bool,
  loading: import_prop_types204.default.bool,
  onClose: import_prop_types204.default.func.isRequired,
  onConfirm: import_prop_types204.default.func.isRequired,
  title: import_prop_types204.default.node.isRequired,
  sx: import_prop_types204.default.any
};
var PREFIX9 = "RaConfirm";
var ConfirmClasses = {
  confirmPrimary: "".concat(PREFIX9, "-confirmPrimary"),
  confirmWarning: "".concat(PREFIX9, "-confirmWarning")
};
var StyledDialog = styled_default2(Dialog_default, {
  name: PREFIX9,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(ConfirmClasses.confirmPrimary)] = {
    color: theme.palette.primary.main
  }, _b["& .".concat(ConfirmClasses.confirmWarning)] = {
    color: theme.palette.error.main,
    "&:hover": {
      backgroundColor: alpha(theme.palette.error.main, 0.12),
      // Reset on mouse devices
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/layout/DashboardMenuItem.js
var import_react32 = __toESM(require_react());
var import_prop_types206 = __toESM(require_prop_types());
var import_Dashboard = __toESM(require_Dashboard());

// node_modules/ra-ui-materialui/dist/esm/layout/MenuItemLink.js
var import_react31 = __toESM(require_react());
var import_prop_types205 = __toESM(require_prop_types());
var __assign12 = function() {
  __assign12 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign12.apply(this, arguments);
};
var __rest11 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var MenuItemLink = (0, import_react31.forwardRef)(function(props, ref) {
  var className = props.className, primaryText = props.primaryText, leftIcon = props.leftIcon, onClick = props.onClick, sidebarIsOpen = props.sidebarIsOpen, tooltipProps = props.tooltipProps, rest = __rest11(props, ["className", "primaryText", "leftIcon", "onClick", "sidebarIsOpen", "tooltipProps"]);
  var isSmall = useMediaQuery(function(theme) {
    return theme.breakpoints.down("md");
  });
  var translate = useTranslate();
  var basename = useBasename();
  var _a13 = useSidebarState(), open = _a13[0], setOpen = _a13[1];
  var handleMenuTap = (0, import_react31.useCallback)(function(e) {
    if (isSmall) {
      setOpen(false);
    }
    onClick && onClick(e);
  }, [setOpen, isSmall, onClick]);
  var to = (typeof props.to === "string" ? props.to : props.to.pathname) || "";
  var match2 = useMatch({ path: to, end: to === "".concat(basename, "/") });
  var renderMenuItem = function() {
    var _a14;
    return import_react31.default.createElement(
      StyledMenuItem2,
      __assign12({
        className: clsx_m_default(className, (_a14 = {}, _a14[MenuItemLinkClasses.active] = !!match2, _a14)),
        // @ts-ignore
        component: LinkRef,
        ref,
        tabIndex: 0
      }, rest, { onClick: handleMenuTap }),
      leftIcon && import_react31.default.createElement(ListItemIcon_default, { className: MenuItemLinkClasses.icon }, leftIcon),
      typeof primaryText === "string" ? translate(primaryText, { _: primaryText }) : primaryText
    );
  };
  return open ? renderMenuItem() : import_react31.default.createElement(Tooltip_default, __assign12({ title: typeof primaryText === "string" ? translate(primaryText, { _: primaryText }) : primaryText, placement: "right" }, tooltipProps), renderMenuItem());
});
MenuItemLink.propTypes = {
  className: import_prop_types205.default.string,
  leftIcon: import_prop_types205.default.element,
  onClick: import_prop_types205.default.func,
  primaryText: import_prop_types205.default.node,
  to: import_prop_types205.default.oneOfType([import_prop_types205.default.string, import_prop_types205.default.object]).isRequired,
  sidebarIsOpen: import_prop_types205.default.bool
};
var PREFIX10 = "RaMenuItemLink";
var MenuItemLinkClasses = {
  active: "".concat(PREFIX10, "-active"),
  icon: "".concat(PREFIX10, "-icon")
};
var StyledMenuItem2 = styled_default2(MenuItem_default, {
  name: PREFIX10,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    color: theme.palette.text.secondary
  }, _b["&.".concat(MenuItemLinkClasses.active)] = {
    color: theme.palette.text.primary
  }, _b["& .".concat(MenuItemLinkClasses.icon)] = { minWidth: theme.spacing(5) }, _b;
});
var LinkRef = (0, import_react31.forwardRef)(function(props, ref) {
  return import_react31.default.createElement(Link, __assign12({ ref }, props));
});

// node_modules/ra-ui-materialui/dist/esm/layout/DashboardMenuItem.js
var __assign13 = function() {
  __assign13 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign13.apply(this, arguments);
};
var __rest12 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DashboardMenuItem = function(props) {
  var basename = useBasename();
  var _a13 = props.leftIcon, leftIcon = _a13 === void 0 ? import_react32.default.createElement(import_Dashboard.default, null) : _a13, _b = props.to, to = _b === void 0 ? "".concat(basename, "/") : _b, _c = props.primaryText, primaryText = _c === void 0 ? "ra.page.dashboard" : _c, rest = __rest12(props, ["leftIcon", "to", "primaryText"]);
  return import_react32.default.createElement(MenuItemLink, __assign13({ leftIcon, to, primaryText }, rest));
};
DashboardMenuItem.propTypes = {
  leftIcon: import_prop_types206.default.element,
  locale: import_prop_types206.default.string,
  onClick: import_prop_types206.default.func,
  dense: import_prop_types206.default.bool,
  sidebarIsOpen: import_prop_types206.default.bool
};

// node_modules/ra-ui-materialui/dist/esm/layout/DeviceTestWrapper.js
var React305 = __toESM(require_react());
var import_css_mediaquery = __toESM(require_css_mediaquery());
var __assign14 = function() {
  __assign14 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign14.apply(this, arguments);
};
var DeviceTestWrapper = function(_a13) {
  var _b = _a13.width, width2 = _b === void 0 ? "md" : _b, children2 = _a13.children;
  var theme = createTheme_default2();
  var ssrMatchMedia = function(query) {
    return {
      matches: import_css_mediaquery.default.match(query, {
        // The estimated CSS width of the browser.
        // For the sake of this demo, we are using a fixed value.
        // In production, you can look into client-hint https://caniuse.com/#search=client%20hint
        // or user-agent resolution.
        width: theme.breakpoints.values[width2]
      })
    };
  };
  return React305.createElement(ThemeProvider4, { theme: __assign14(__assign14({}, theme), { components: {
    MuiUseMediaQuery: {
      defaultProps: {
        ssrMatchMedia,
        matchMedia: ssrMatchMedia
      }
    }
  } }) }, children2);
};

// node_modules/ra-ui-materialui/dist/esm/layout/Error.js
var React315 = __toESM(require_react());
var import_react37 = __toESM(require_react());
var import_prop_types208 = __toESM(require_prop_types());
var import_Report = __toESM(require_Report());
var import_ExpandMore = __toESM(require_ExpandMore());
var import_History = __toESM(require_History());

// node_modules/ra-ui-materialui/dist/esm/layout/Title.js
var React314 = __toESM(require_react());
var import_react35 = __toESM(require_react());
var import_react_dom4 = __toESM(require_react_dom());
var import_prop_types207 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/layout/PageTitleConfigurable.js
var React313 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/preferences/Configurable.js
var React306 = __toESM(require_react());
var import_react33 = __toESM(require_react());
var import_Settings = __toESM(require_Settings());
var Configurable = function(props) {
  var children2 = props.children, editor = props.editor, preferenceKey = props.preferenceKey, _a13 = props.openButtonLabel, openButtonLabel = _a13 === void 0 ? "ra.configurable.customize" : _a13, sx = props.sx;
  var prefixedPreferenceKey = "preferences.".concat(preferenceKey);
  var preferencesEditorContext = usePreferencesEditor();
  var hasPreferencesEditorContext = !!preferencesEditorContext;
  var translate = useTranslate();
  var _b = preferencesEditorContext || {}, isEnabled = _b.isEnabled, setEditor = _b.setEditor, currentPreferenceKey = _b.preferenceKey, setPreferenceKey = _b.setPreferenceKey;
  var isEditorOpen = prefixedPreferenceKey === currentPreferenceKey;
  var editorOpenRef = (0, import_react33.useRef)(isEditorOpen);
  var wrapperRef = (0, import_react33.useRef)(null);
  var _c = (0, import_react33.useState)(false), isCustomizeButtonVisible = _c[0], setIsCustomizeButtonVisible = _c[1];
  (0, import_react33.useEffect)(function() {
    editorOpenRef.current = isEditorOpen;
  }, [isEditorOpen]);
  (0, import_react33.useEffect)(function() {
    return function() {
      if (!editorOpenRef.current)
        return;
      setPreferenceKey && setPreferenceKey(null);
      setEditor && setEditor(null);
    };
  }, [setEditor, setPreferenceKey]);
  if (!hasPreferencesEditorContext) {
    return children2;
  }
  var handleOpenEditor = function() {
    setEditor((0, import_react33.cloneElement)(editor, {
      preferenceKey: prefixedPreferenceKey,
      key: prefixedPreferenceKey
    }));
    setPreferenceKey(prefixedPreferenceKey);
  };
  var handleShowButton = function() {
    setIsCustomizeButtonVisible(true);
  };
  var handleHideButton = function() {
    setIsCustomizeButtonVisible(false);
  };
  return React306.createElement(
    PreferenceKeyContextProvider,
    { value: prefixedPreferenceKey },
    React306.createElement(Root4, { className: clsx_m_default(ConfigurableClasses.root, isEnabled && ConfigurableClasses.editMode, isEditorOpen && ConfigurableClasses.editorActive), sx, ref: wrapperRef, onMouseEnter: isEnabled ? handleShowButton : void 0, onMouseLeave: isEnabled ? handleHideButton : void 0 }, children2),
    React306.createElement(
      Popover_default,
      { open: isEnabled && (isCustomizeButtonVisible || isEditorOpen), sx: {
        pointerEvents: "none",
        "& .MuiPaper-root": {
          pointerEvents: "auto",
          borderRadius: 10,
          padding: "2px",
          lineHeight: 0,
          backgroundColor: "warning.light",
          color: "warning.contrastText",
          "&:hover": {
            cursor: "pointer"
          }
        }
      }, anchorEl: wrapperRef.current, anchorOrigin: {
        vertical: "top",
        horizontal: "right"
      }, transformOrigin: {
        vertical: "center",
        horizontal: "center"
      }, onClose: handleHideButton, PaperProps: {
        elevation: 1,
        onMouseEnter: handleShowButton,
        onMouseLeave: handleHideButton,
        title: translate(openButtonLabel),
        onClick: handleOpenEditor
      }, disableAutoFocus: true, disableRestoreFocus: true, disableEnforceFocus: true, disableScrollLock: true, marginThreshold: 8 },
      React306.createElement(
        import_Settings.default,
        {
          // @ts-ignore
          fontSize: "12px"
        }
      )
    )
  );
};
var PREFIX11 = "RaConfigurable";
var ConfigurableClasses = {
  root: "".concat(PREFIX11, "-root"),
  editMode: "".concat(PREFIX11, "-editMode"),
  editorActive: "".concat(PREFIX11, "-editorActive")
};
var Root4 = styled_default2("span", {
  name: PREFIX11,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    position: "relative",
    display: "inline-block"
  }, _b["&.".concat(ConfigurableClasses.editMode)] = {
    transition: theme.transitions.create("outline"),
    outline: "".concat(alpha(theme.palette.warning.main, 0.3), " solid 2px")
  }, _b["&.".concat(ConfigurableClasses.editMode, ":hover ")] = {
    outline: "".concat(alpha(theme.palette.warning.main, 0.5), " solid 2px")
  }, _b["&.".concat(ConfigurableClasses.editMode, ".").concat(ConfigurableClasses.editorActive, " , &.").concat(ConfigurableClasses.editMode, ".").concat(ConfigurableClasses.editorActive, ":hover ")] = {
    outline: "".concat(theme.palette.warning.main, " solid 2px")
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/preferences/FieldsSelector.js
var React308 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/preferences/FieldToggle.js
var React307 = __toESM(require_react());
var import_DragIndicator = __toESM(require_DragIndicator());
var FieldToggle = function(props) {
  var selected = props.selected, label = props.label, onToggle = props.onToggle, onMove = props.onMove, source = props.source, index2 = props.index;
  var resource = useResourceContext();
  var dropIndex = React307.useRef(null);
  var x = React307.useRef(null);
  var y = React307.useRef(null);
  var handleDocumentDragOver = React307.useCallback(function(event) {
    x.current = event.clientX;
    y.current = event.clientY;
  }, []);
  var handleDragStart = function() {
    document.addEventListener("dragover", handleDocumentDragOver);
  };
  var handleDrag = function(event) {
    var selectedItem = event.target;
    selectedItem.classList.add("drag-active");
    var list = selectedItem.parentNode;
    var dropItem = document.elementFromPoint(x.current, y.current) === null ? selectedItem : document.elementFromPoint(x.current, y.current);
    if (dropItem.classList.contains("dragIcon")) {
      dropItem = dropItem.parentNode;
    }
    if (dropItem === selectedItem) {
      return;
    }
    if (list === dropItem.parentNode) {
      dropIndex.current = dropItem.dataset.index;
      if (dropItem === selectedItem.nextSibling) {
        dropItem = dropItem.nextSibling;
      }
      list.insertBefore(selectedItem, dropItem);
    }
  };
  var handleDragEnd = function(event) {
    var selectedItem = event.target;
    onMove(selectedItem.dataset.index, dropIndex.current);
    selectedItem.classList.remove("drag-active");
    document.removeEventListener("dragover", handleDocumentDragOver);
  };
  var handleDragOver = function(event) {
    event.preventDefault();
    event.dataTransfer.dropEffect = "move";
  };
  return React307.createElement(
    Root5,
    { key: source, draggable: onMove ? "true" : void 0, onDrag: onMove ? handleDrag : void 0, onDragStart: onMove ? handleDragStart : void 0, onDragEnd: onMove ? handleDragEnd : void 0, onDragOver: onMove ? handleDragOver : void 0, "data-index": index2 },
    React307.createElement(
      "label",
      { htmlFor: "switch_".concat(index2) },
      React307.createElement(Switch_default, { checked: selected, onChange: onToggle, name: index2, id: "switch_".concat(index2), size: "small", sx: { mr: 0.5, ml: -0.5 } }),
      React307.createElement(
        Typography_default,
        { variant: "body2", component: "span" },
        React307.createElement(FieldTitle_default, { label, source, resource })
      )
    ),
    onMove && React307.createElement(import_DragIndicator.default, { className: "dragIcon", color: "disabled", fontSize: "small" })
  );
};
var Root5 = styled_default2("div")(function(_a13) {
  var theme = _a13.theme;
  return {
    display: "flex",
    justifyContent: "space-between",
    "& svg": {
      cursor: "move"
    },
    "&.drag-active": {
      background: "transparent",
      color: "transparent",
      outline: "1px solid ".concat(theme.palette.action.selected),
      "& .MuiSwitch-root, & svg": {
        visibility: "hidden"
      }
    }
  };
});

// node_modules/ra-ui-materialui/dist/esm/preferences/FieldsSelector.js
var __spreadArray = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var FieldsSelector = function(_a13) {
  var _b = _a13.name, name = _b === void 0 ? "columns" : _b, _c = _a13.availableName, availableName = _c === void 0 ? "availableColumns" : _c;
  var translate = useTranslate();
  var _d = usePreference(availableName, []), availableFields = _d[0], setAvailableFields = _d[1];
  var omit = usePreference("omit", [])[0];
  var _e = usePreference(name, availableFields.filter(function(field) {
    return !(omit === null || omit === void 0 ? void 0 : omit.includes(field.source));
  }).map(function(field) {
    return field.index;
  })), fields = _e[0], setFields = _e[1];
  var handleToggle = function(event) {
    if (event.target.checked) {
      setFields(availableFields.filter(function(field) {
        return field.index === event.target.name || fields.includes(field.index);
      }).map(function(field) {
        return field.index;
      }));
    } else {
      setFields(fields.filter(function(index2) {
        return index2 !== event.target.name;
      }));
    }
  };
  var handleMove = function(index1, index2) {
    var index1Pos = availableFields.findIndex(
      // eslint-disable-next-line eqeqeq
      function(field) {
        return field.index == index1;
      }
    );
    var index2Pos = availableFields.findIndex(
      // eslint-disable-next-line eqeqeq
      function(field) {
        return field.index == index2;
      }
    );
    if (index1Pos === -1 || index2Pos === -1) {
      return;
    }
    var newAvailableFields;
    if (index1Pos > index2Pos) {
      newAvailableFields = __spreadArray(__spreadArray(__spreadArray(__spreadArray([], availableFields.slice(0, index2Pos), true), [
        availableFields[index1Pos]
      ], false), availableFields.slice(index2Pos, index1Pos), true), availableFields.slice(index1Pos + 1), true);
    } else {
      newAvailableFields = __spreadArray(__spreadArray(__spreadArray(__spreadArray([], availableFields.slice(0, index1Pos), true), availableFields.slice(index1Pos + 1, index2Pos + 1), true), [
        availableFields[index1Pos]
      ], false), availableFields.slice(index2Pos + 1), true);
    }
    setAvailableFields(newAvailableFields);
    setFields(function(fields2) {
      return newAvailableFields.filter(function(field) {
        return fields2.includes(field.index);
      }).map(function(field) {
        return field.index;
      });
    });
  };
  var handleHideAll = function() {
    setFields([]);
  };
  var handleShowAll = function() {
    setFields(availableFields.map(function(field) {
      return field.index;
    }));
  };
  return React308.createElement(
    Box_default2,
    { pt: 0.5 },
    availableFields.map(function(field) {
      return React308.createElement(FieldToggle, { key: field.index, source: field.source, label: field.label, index: field.index, selected: fields.includes(field.index), onToggle: handleToggle, onMove: handleMove });
    }),
    React308.createElement(
      Box_default2,
      { display: "flex", justifyContent: "space-between", mx: -0.5, mt: 1 },
      React308.createElement(Button_default, { size: "small", onClick: handleHideAll }, translate("ra.inspector.hideAll", {
        _: "Hide All"
      })),
      React308.createElement(Button_default, { size: "small", onClick: handleShowAll }, translate("ra.inspector.showAll", {
        _: "Show All"
      }))
    )
  );
};

// node_modules/ra-ui-materialui/dist/esm/preferences/Inspector.js
var React310 = __toESM(require_react());
var import_react34 = __toESM(require_react());
var import_CancelOutlined = __toESM(require_CancelOutlined());
var import_DeleteOutline = __toESM(require_DeleteOutline());

// node_modules/ra-ui-materialui/dist/esm/preferences/InspectorRoot.js
var React309 = __toESM(require_react());
var InspectorRoot = function() {
  var translate = useTranslate();
  useSetInspectorTitle("ra.configurable.inspector.title", {
    _: "Inspector"
  });
  return React309.createElement(Typography_default, null, translate("ra.configurable.inspector.content", {
    _: "Hover the application UI elements to configure them"
  }));
};

// node_modules/ra-ui-materialui/dist/esm/preferences/Inspector.js
var Inspector = function() {
  var _a13 = usePreferencesEditor(), isEnabled = _a13.isEnabled, disable = _a13.disable, title = _a13.title, titleOptions = _a13.titleOptions, editor = _a13.editor, preferenceKey = _a13.preferenceKey;
  var isDragging = (0, import_react34.useRef)(false);
  var removeItems = useRemoveItemsFromStore(preferenceKey);
  var theme = useTheme5();
  var translate = useTranslate();
  var _b = (0, import_react34.useState)(0), version = _b[0], setVersion = _b[1];
  var _c = useStore("ra.inspector.position", {
    x: (
      // We want it positioned to the far right of the screen
      (document === null || document === void 0 ? void 0 : document.body.clientWidth) - // So we remove its size (see the root css class)
      theme.breakpoints.values.sm / 2 - // And add a margin
      8
    ),
    y: 8
  }), dialogPosition = _c[0], setDialogPosition = _c[1];
  var _d = (0, import_react34.useState)(), clickPosition = _d[0], setClickPosition = _d[1];
  var handleDragStart = function(e) {
    var draggedElement = document === null || document === void 0 ? void 0 : document.elementFromPoint(e.clientX, e.clientY);
    if (draggedElement.id !== "inspector-dialog-title") {
      return;
    }
    isDragging.current = true;
    e.dataTransfer.effectAllowed = "move";
    e.dataTransfer.setData("inspector", "");
    setTimeout(function() {
      e.target.classList.add("hide");
    }, 0);
    setClickPosition({
      x: e.clientX - dialogPosition.x,
      y: e.clientY - dialogPosition.y
    });
  };
  var handleDragEnd = function(e) {
    if (isDragging.current) {
      setDialogPosition({
        x: e.clientX - clickPosition.x,
        y: e.clientY - clickPosition.y
      });
      e.target.classList.remove("hide");
      isDragging.current = false;
    }
  };
  (0, import_react34.useEffect)(function() {
    if (!isEnabled)
      return;
    var handleDragover = function(e) {
      if (e.dataTransfer.types.includes("inspector")) {
        e.preventDefault();
      }
    };
    document === null || document === void 0 ? void 0 : document.addEventListener("dragover", handleDragover);
    return function() {
      document === null || document === void 0 ? void 0 : document.removeEventListener("dragover", handleDragover);
    };
  }, [isEnabled]);
  (0, import_react34.useEffect)(function() {
    if (!isEnabled)
      return;
    var moveInspectorIfOutsideScreen = function() {
      window === null || window === void 0 ? void 0 : window.requestAnimationFrame(function() {
        setDialogPosition(function(position3) {
          return {
            x: Math.min(position3.x, (document === null || document === void 0 ? void 0 : document.body.clientWidth) - theme.breakpoints.values.sm / 2 - 8),
            y: Math.min(position3.y, (window === null || window === void 0 ? void 0 : window.innerHeight) - 50)
          };
        });
      });
    };
    moveInspectorIfOutsideScreen();
    window === null || window === void 0 ? void 0 : window.addEventListener("resize", moveInspectorIfOutsideScreen);
    return function() {
      window === null || window === void 0 ? void 0 : window.removeEventListener("resize", moveInspectorIfOutsideScreen);
    };
  }, [isEnabled, setDialogPosition, theme.breakpoints.values.sm]);
  var handleReset = function() {
    removeItems();
    setVersion(function(version2) {
      return version2 + 1;
    });
  };
  if (!isEnabled)
    return null;
  return React310.createElement(
    StyledPaper,
    { className: InspectorClasses.modal, elevation: 3, draggable: true, onDragStart: handleDragStart, onDragEnd: handleDragEnd, sx: { left: dialogPosition.x, top: dialogPosition.y } },
    React310.createElement(
      "div",
      { className: InspectorClasses.title },
      React310.createElement(Typography_default, { id: "inspector-dialog-title", variant: "overline", component: "div", py: 1, px: 2, flex: "1" }, title && translate(title, titleOptions)),
      React310.createElement("span", { id: "inspector-toolbar" }),
      preferenceKey && React310.createElement(
        IconButton_default,
        { "aria-label": translate("ra.action.remove"), onClick: handleReset, size: "small" },
        React310.createElement(import_DeleteOutline.default, { fontSize: "inherit" })
      ),
      React310.createElement(
        IconButton_default,
        { "aria-label": translate("ra.action.close"), onClick: disable, size: "small", sx: { mr: 1 } },
        React310.createElement(import_CancelOutlined.default, { fontSize: "inherit" })
      )
    ),
    React310.createElement(
      "div",
      { className: InspectorClasses.content, key: version },
      React310.createElement(PreferenceKeyContextProvider, { value: preferenceKey }, editor || React310.createElement(InspectorRoot, null))
    )
  );
};
var PREFIX12 = "RaInspector";
var InspectorClasses = {
  modal: "".concat(PREFIX12, "-modal"),
  title: "".concat(PREFIX12, "-title"),
  content: "".concat(PREFIX12, "-content")
};
var StyledPaper = styled_default2(Paper_default, {
  name: PREFIX12,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    position: "fixed",
    zIndex: theme.zIndex.modal + 1,
    width: theme.breakpoints.values.sm / 2,
    transition: theme.transitions.create(["height", "width"]),
    "&.hide": {
      display: "none"
    }
  }, _b["& .".concat(InspectorClasses.title)] = {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    cursor: "move"
  }, _b["& .".concat(InspectorClasses.content)] = {
    overflowY: "auto",
    maxHeight: "75vh",
    padding: theme.spacing(2),
    paddingTop: 0
  }, _b;
});
Inspector.displayName = "Inspector";

// node_modules/ra-ui-materialui/dist/esm/preferences/InspectorButton.js
var React311 = __toESM(require_react());
var import_Settings2 = __toESM(require_Settings());
var __assign15 = function() {
  __assign15 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign15.apply(this, arguments);
};
var __rest13 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var InspectorButton = React311.forwardRef(function(_a13, ref) {
  var _b = _a13.label, label = _b === void 0 ? "ra.configurable.configureMode" : _b, _c = _a13.SvgIconProps, SvgIconProps = _c === void 0 ? {} : _c, props = __rest13(_a13, ["label", "SvgIconProps"]);
  var _d = usePreferencesEditor(), enable = _d.enable, disable = _d.disable, setPreferenceKey = _d.setPreferenceKey, isEnabled = _d.isEnabled;
  var translate = useTranslate();
  var handleClick2 = function() {
    if (isEnabled) {
      disable();
      setPreferenceKey(null);
    } else {
      enable();
    }
  };
  var translatedLabel = translate(label, { _: "Configure mode" });
  return React311.createElement(
    Tooltip_default,
    { title: translatedLabel },
    React311.createElement(
      IconButton_default,
      __assign15({ "aria-label": translatedLabel, onClick: handleClick2, color: "inherit", ref }, props),
      React311.createElement(import_Settings2.default, __assign15({ fontSize: "inherit" }, SvgIconProps))
    )
  );
});

// node_modules/ra-ui-materialui/dist/esm/layout/PageTitle.js
var React312 = __toESM(require_react());
var __assign16 = function() {
  __assign16 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign16.apply(this, arguments);
};
var __rest14 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var PageTitle = function(_a13) {
  var title = _a13.title, defaultTitle = _a13.defaultTitle, className = _a13.className, rest = __rest14(_a13, ["title", "defaultTitle", "className"]);
  var titleFromPreferences = usePreference()[0];
  var translate = useTranslate();
  var record = useRecordContext();
  return titleFromPreferences ? React312.createElement("span", __assign16({ className }, rest), translate(titleFromPreferences, __assign16(__assign16({}, record), { _: titleFromPreferences }))) : React312.createElement("span", { className }, !title ? React312.createElement("span", __assign16({}, rest), defaultTitle) : typeof title === "string" ? React312.createElement("span", __assign16({}, rest), translate(title, { _: title })) : title);
};

// node_modules/ra-ui-materialui/dist/esm/layout/PageTitleConfigurable.js
var __assign17 = function() {
  __assign17 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign17.apply(this, arguments);
};
var __rest15 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var PageTitleEditor = function() {
  var field = usePreferenceInput();
  return React313.createElement(
    "form",
    null,
    React313.createElement(TextField_default, __assign17({ label: "title", variant: "filled", size: "small", fullWidth: true, sx: { mb: 1 } }, field))
  );
};
var PageTitleConfigurable = function(_a13) {
  var preferenceKey = _a13.preferenceKey, props = __rest15(_a13, ["preferenceKey"]);
  var pathname = useLocation().pathname;
  return React313.createElement(
    Configurable,
    { editor: React313.createElement(PageTitleEditor, null), preferenceKey: preferenceKey || "".concat(pathname, ".title"), sx: {
      "&.RaConfigurable-editMode": {
        margin: "2px"
      }
    } },
    React313.createElement(PageTitle, __assign17({}, props))
  );
};

// node_modules/ra-ui-materialui/dist/esm/layout/Title.js
var __assign18 = function() {
  __assign18 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign18.apply(this, arguments);
};
var __rest16 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Title = function(props) {
  var defaultTitle = props.defaultTitle, title = props.title, preferenceKey = props.preferenceKey, rest = __rest16(props, ["defaultTitle", "title", "preferenceKey"]);
  var _a13 = (0, import_react35.useState)(function() {
    return typeof document !== "undefined" ? document.getElementById("react-admin-title") : null;
  }), container = _a13[0], setContainer = _a13[1];
  (0, import_react35.useEffect)(function() {
    setContainer(function(container2) {
      var isInTheDom = typeof document !== "undefined" && document.body.contains(container2);
      if (container2 && isInTheDom)
        return container2;
      return typeof document !== "undefined" ? document.getElementById("react-admin-title") : null;
    });
  }, []);
  if (!container)
    return null;
  warning_default(!defaultTitle && !title, "Missing title prop in <Title> element");
  return (0, import_react_dom4.createPortal)(React314.createElement(PageTitleConfigurable, __assign18({ title, defaultTitle, preferenceKey }, rest)), container);
};
var TitlePropType = import_prop_types207.default.oneOfType([
  import_prop_types207.default.string,
  import_prop_types207.default.element
]);
Title.propTypes = {
  defaultTitle: import_prop_types207.default.string,
  className: import_prop_types207.default.string,
  record: import_prop_types207.default.any,
  title: TitlePropType
};

// node_modules/ra-ui-materialui/dist/esm/layout/useResetErrorBoundaryOnLocationChange.js
var import_react36 = __toESM(require_react());
var useResetErrorBoundaryOnLocationChange = function(resetErrorBoundary) {
  var pathname = useLocation().pathname;
  var originalPathname = (0, import_react36.useRef)(pathname);
  (0, import_react36.useEffect)(function() {
    if (pathname !== originalPathname.current) {
      resetErrorBoundary();
    }
  }, [pathname, resetErrorBoundary]);
};

// node_modules/ra-ui-materialui/dist/esm/layout/Error.js
var __assign19 = function() {
  __assign19 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign19.apply(this, arguments);
};
var __rest17 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Error2 = function(props) {
  var error = props.error, ErrorComponent = props.errorComponent, errorInfo = props.errorInfo, resetErrorBoundary = props.resetErrorBoundary, className = props.className, title = props.title, rest = __rest17(props, ["error", "errorComponent", "errorInfo", "resetErrorBoundary", "className", "title"]);
  var translate = useTranslate();
  useResetErrorBoundaryOnLocationChange(resetErrorBoundary);
  if (ErrorComponent) {
    return React315.createElement(ErrorComponent, { error, errorInfo, title });
  }
  return React315.createElement(
    import_react37.Fragment,
    null,
    title && React315.createElement(Title, { title }),
    React315.createElement(
      Root6,
      __assign19({ className }, rest),
      React315.createElement(
        "h1",
        { className: ErrorClasses.title, role: "alert" },
        React315.createElement(import_Report.default, { className: ErrorClasses.icon }),
        translate("ra.page.error")
      ),
      React315.createElement("div", null, translate("ra.message.error")),
      React315.createElement(
        React315.Fragment,
        null,
        React315.createElement(
          Accordion_default,
          { className: ErrorClasses.panel },
          React315.createElement(AccordionSummary_default, { expandIcon: React315.createElement(import_ExpandMore.default, null), className: ErrorClasses.panelSumary }, translate(error.message, {
            _: error.message
          })),
          React315.createElement(
            AccordionDetails_default,
            { className: ErrorClasses.panelDetails },
            React315.createElement("p", null, translate(error.message, {
              _: error.message
            })),
            React315.createElement("p", null, errorInfo === null || errorInfo === void 0 ? void 0 : errorInfo.componentStack)
          )
        ),
        React315.createElement(
          "div",
          { className: ErrorClasses.advice },
          React315.createElement(Typography_default, { align: "center" }, "Need help with this error? Try the following:"),
          React315.createElement(
            Typography_default,
            { component: "div" },
            React315.createElement(
              "ul",
              null,
              React315.createElement(
                "li",
                null,
                "Check the",
                " ",
                React315.createElement("a", { href: "https://marmelab.com/react-admin/Readme.html" }, "react-admin documentation")
              ),
              React315.createElement(
                "li",
                null,
                "Search on",
                " ",
                React315.createElement("a", { href: "https://stackoverflow.com/questions/tagged/react-admin" }, "StackOverflow"),
                " ",
                "for community answers"
              ),
              React315.createElement(
                "li",
                null,
                "Get help from the core team via",
                " ",
                React315.createElement("a", { href: "https://marmelab.com/ra-enterprise/#fromsww" }, "react-admin Enterprise Edition")
              )
            )
          )
        )
      ),
      React315.createElement(
        "div",
        { className: ErrorClasses.toolbar },
        React315.createElement(Button_default, { variant: "contained", startIcon: React315.createElement(import_History.default, null), onClick: goBack }, translate("ra.action.back"))
      )
    )
  );
};
Error2.propTypes = {
  className: import_prop_types208.default.string,
  error: import_prop_types208.default.object.isRequired,
  errorInfo: import_prop_types208.default.object,
  title: TitlePropType
};
var PREFIX13 = "RaError";
var ErrorClasses = {
  container: "".concat(PREFIX13, "-container"),
  title: "".concat(PREFIX13, "-title"),
  icon: "".concat(PREFIX13, "-icon"),
  panel: "".concat(PREFIX13, "-panel"),
  panelSumary: "".concat(PREFIX13, "-panelSumary"),
  panelDetails: "".concat(PREFIX13, "-panelDetails"),
  toolbar: "".concat(PREFIX13, "-toolbar"),
  advice: "".concat(PREFIX13, "-advice")
};
var Root6 = styled_default2("div", {
  name: PREFIX13,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center"
  }, _b[theme.breakpoints.down("md")] = {
    padding: "1em"
  }, _b.fontFamily = "Roboto, sans-serif", _b.opacity = 0.5, _b["& .".concat(ErrorClasses.title)] = {
    display: "flex",
    alignItems: "center"
  }, _b["& .".concat(ErrorClasses.icon)] = {
    width: "2em",
    height: "2em",
    marginRight: "0.5em"
  }, _b["& .".concat(ErrorClasses.panel)] = {
    marginTop: "1em",
    maxWidth: "60em"
  }, _b["& .".concat(ErrorClasses.panelSumary)] = {
    userSelect: "all"
  }, _b["& .".concat(ErrorClasses.panelDetails)] = {
    whiteSpace: "pre-wrap"
  }, _b["& .".concat(ErrorClasses.toolbar)] = {
    marginTop: "2em"
  }, _b["& .".concat(ErrorClasses.advice)] = {
    marginTop: "2em"
  }, _b;
});
function goBack() {
  window.history.go(-1);
}

// node_modules/ra-ui-materialui/dist/esm/layout/Layout.js
var import_react39 = __toESM(require_react());

// node_modules/react-error-boundary/dist/react-error-boundary.esm.js
var React316 = __toESM(require_react());
var changedArray = function changedArray2(a, b) {
  if (a === void 0) {
    a = [];
  }
  if (b === void 0) {
    b = [];
  }
  return a.length !== b.length || a.some(function(item, index2) {
    return !Object.is(item, b[index2]);
  });
};
var initialState = {
  error: null
};
var ErrorBoundary = function(_React$Component) {
  _inheritsLoose(ErrorBoundary2, _React$Component);
  function ErrorBoundary2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
    _this.state = initialState;
    _this.resetErrorBoundary = function() {
      var _this$props;
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      _this.props.onReset == null ? void 0 : (_this$props = _this.props).onReset.apply(_this$props, args);
      _this.reset();
    };
    return _this;
  }
  ErrorBoundary2.getDerivedStateFromError = function getDerivedStateFromError(error) {
    return {
      error
    };
  };
  var _proto = ErrorBoundary2.prototype;
  _proto.reset = function reset() {
    this.setState(initialState);
  };
  _proto.componentDidCatch = function componentDidCatch(error, info) {
    var _this$props$onError, _this$props2;
    (_this$props$onError = (_this$props2 = this.props).onError) == null ? void 0 : _this$props$onError.call(_this$props2, error, info);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    var error = this.state.error;
    var resetKeys = this.props.resetKeys;
    if (error !== null && prevState.error !== null && changedArray(prevProps.resetKeys, resetKeys)) {
      var _this$props$onResetKe, _this$props3;
      (_this$props$onResetKe = (_this$props3 = this.props).onResetKeysChange) == null ? void 0 : _this$props$onResetKe.call(_this$props3, prevProps.resetKeys, resetKeys);
      this.reset();
    }
  };
  _proto.render = function render() {
    var error = this.state.error;
    var _this$props4 = this.props, fallbackRender = _this$props4.fallbackRender, FallbackComponent = _this$props4.FallbackComponent, fallback = _this$props4.fallback;
    if (error !== null) {
      var _props = {
        error,
        resetErrorBoundary: this.resetErrorBoundary
      };
      if (React316.isValidElement(fallback)) {
        return fallback;
      } else if (typeof fallbackRender === "function") {
        return fallbackRender(_props);
      } else if (FallbackComponent) {
        return React316.createElement(FallbackComponent, _props);
      } else {
        throw new Error("react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop");
      }
    }
    return this.props.children;
  };
  return ErrorBoundary2;
}(React316.Component);

// node_modules/ra-ui-materialui/dist/esm/layout/Sidebar.js
var React317 = __toESM(require_react());
var import_prop_types209 = __toESM(require_prop_types());
var import_get = __toESM(require_get());
var __assign20 = function() {
  __assign20 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign20.apply(this, arguments);
};
var __rest18 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Sidebar = function(props) {
  var appBarAlwaysOn = props.appBarAlwaysOn, children2 = props.children, closedSize = props.closedSize, size2 = props.size, rest = __rest18(props, ["appBarAlwaysOn", "children", "closedSize", "size"]);
  var isXSmall = useMediaQuery(function(theme) {
    return theme.breakpoints.down("sm");
  });
  var _a13 = useSidebarState(), open = _a13[0], setOpen = _a13[1];
  useLocale();
  var trigger = useScrollTrigger();
  var toggleSidebar = function() {
    return setOpen(!open);
  };
  return isXSmall ? React317.createElement(StyledDrawer, __assign20({ variant: "temporary", open, onClose: toggleSidebar, classes: SidebarClasses }, rest), children2) : React317.createElement(
    StyledDrawer,
    __assign20({ variant: "permanent", open, onClose: toggleSidebar, classes: SidebarClasses, className: trigger && !appBarAlwaysOn ? SidebarClasses.appBarCollapsed : "" }, rest),
    React317.createElement("div", { className: SidebarClasses.fixed }, children2)
  );
};
Sidebar.propTypes = {
  children: import_prop_types209.default.node.isRequired
};
var PREFIX14 = "RaSidebar";
var SidebarClasses = {
  docked: "".concat(PREFIX14, "-docked"),
  paper: "".concat(PREFIX14, "-paper"),
  paperAnchorLeft: "".concat(PREFIX14, "-paperAnchorLeft"),
  paperAnchorRight: "".concat(PREFIX14, "-paperAnchorRight"),
  paperAnchorTop: "".concat(PREFIX14, "-paperAnchorTop"),
  paperAnchorBottom: "".concat(PREFIX14, "-paperAnchorBottom"),
  paperAnchorDockedLeft: "".concat(PREFIX14, "-paperAnchorDockedLeft"),
  paperAnchorDockedTop: "".concat(PREFIX14, "-paperAnchorDockedTop"),
  paperAnchorDockedRight: "".concat(PREFIX14, "-paperAnchorDockedRight"),
  paperAnchorDockedBottom: "".concat(PREFIX14, "-paperAnchorDockedBottom"),
  modal: "".concat(PREFIX14, "-modal"),
  fixed: "".concat(PREFIX14, "-fixed"),
  appBarCollapsed: "".concat(PREFIX14, "-appBarCollapsed")
};
var StyledDrawer = styled_default2(Drawer_default, {
  name: PREFIX14,
  slot: "Root",
  overridesResolver: function(props, styles7) {
    return styles7.root;
  },
  shouldForwardProp: function() {
    return true;
  }
})(function(_a13) {
  var _b, _c, _d;
  var open = _a13.open, theme = _a13.theme;
  return _b = {
    height: "calc(100vh - 3em)",
    marginTop: 0,
    transition: theme.transitions.create("margin", {
      easing: theme.transitions.easing.easeOut,
      duration: theme.transitions.duration.enteringScreen
    })
  }, _b["&.".concat(SidebarClasses.appBarCollapsed)] = (_c = {
    // compensate the margin of the Layout appFrame instead of removing it in the Layout
    // because otherwise, the appFrame content without margin may revert the scrollTrigger,
    // leading to a visual jiggle
    marginTop: theme.spacing(-6)
  }, _c[theme.breakpoints.down("sm")] = {
    marginTop: theme.spacing(-7)
  }, _c.transition = theme.transitions.create("margin", {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.leavingScreen
  }), _c), _b["& .".concat(SidebarClasses.docked)] = {}, _b["& .".concat(SidebarClasses.paper)] = {}, _b["& .".concat(SidebarClasses.paperAnchorLeft)] = {}, _b["& .".concat(SidebarClasses.paperAnchorRight)] = {}, _b["& .".concat(SidebarClasses.paperAnchorTop)] = {}, _b["& .".concat(SidebarClasses.paperAnchorBottom)] = {}, _b["& .".concat(SidebarClasses.paperAnchorDockedLeft)] = {}, _b["& .".concat(SidebarClasses.paperAnchorDockedTop)] = {}, _b["& .".concat(SidebarClasses.paperAnchorDockedRight)] = {}, _b["& .".concat(SidebarClasses.paperAnchorDockedBottom)] = {}, _b["& .".concat(SidebarClasses.modal)] = {}, _b["& .".concat(SidebarClasses.fixed)] = {
    position: "fixed",
    height: "calc(100vh - 3em)",
    overflowX: "hidden",
    // hide scrollbar
    scrollbarWidth: "none",
    msOverflowStyle: "none",
    "&::-webkit-scrollbar": {
      display: "none"
    }
  }, _b["& .MuiPaper-root"] = (_d = {
    position: "relative",
    width: open ? (0, import_get.default)(theme, "sidebar.width", DRAWER_WIDTH) : (0, import_get.default)(theme, "sidebar.closedWidth", CLOSED_DRAWER_WIDTH),
    transition: theme.transitions.create("width", {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen
    }),
    backgroundColor: "transparent",
    borderRight: "none"
  }, _d[theme.breakpoints.only("xs")] = {
    marginTop: 0,
    height: "100vh",
    position: "inherit",
    backgroundColor: theme.palette.background.default
  }, _d[theme.breakpoints.up("md")] = {
    border: "none"
  }, _d.zIndex = "inherit", _d), _b;
});
var DRAWER_WIDTH = 240;
var CLOSED_DRAWER_WIDTH = 55;

// node_modules/ra-ui-materialui/dist/esm/layout/Menu.js
var React319 = __toESM(require_react());
var import_prop_types210 = __toESM(require_prop_types());
var import_get2 = __toESM(require_get());

// node_modules/ra-ui-materialui/dist/esm/layout/ResourceMenuItem.js
var React318 = __toESM(require_react());
var import_react38 = __toESM(require_react());
var import_ViewList = __toESM(require_ViewList());
var ResourceMenuItem = function(_a13) {
  var name = _a13.name;
  var resources = useResourceDefinitions();
  var getResourceLabel = useGetResourceLabel();
  var createPath = useCreatePath();
  if (!resources || !resources[name])
    return null;
  return React318.createElement(MenuItemLink, { to: createPath({
    resource: name,
    type: "list"
  }), state: { _scrollToTop: true }, primaryText: React318.createElement(React318.Fragment, null, getResourceLabel(name, 2)), leftIcon: resources[name].icon ? (0, import_react38.createElement)(resources[name].icon) : React318.createElement(import_ViewList.default, null) });
};

// node_modules/ra-ui-materialui/dist/esm/layout/Menu.js
var __assign21 = function() {
  __assign21 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign21.apply(this, arguments);
};
var __rest19 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray2 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var Menu5 = function(props) {
  var _a13;
  var resources = useResourceDefinitions();
  var hasDashboard = props.hasDashboard, _b = props.children, children2 = _b === void 0 ? __spreadArray2([
    hasDashboard ? React319.createElement(DashboardMenuItem, { key: "default-dashboard-menu-item" }) : null
  ], Object.keys(resources).filter(function(name) {
    return resources[name].hasList;
  }).map(function(name) {
    return React319.createElement(ResourceMenuItem, { key: name, name });
  }), true) : _b, className = props.className, rest = __rest19(props, ["hasDashboard", "children", "className"]);
  var open = useSidebarState()[0];
  return React319.createElement(Root7, __assign21({ className: clsx_m_default((_a13 = {}, _a13[MenuClasses.open] = open, _a13[MenuClasses.closed] = !open, _a13), className) }, rest), children2);
};
Menu5.propTypes = {
  className: import_prop_types210.default.string,
  dense: import_prop_types210.default.bool,
  hasDashboard: import_prop_types210.default.bool
};
Menu5.Item = MenuItemLink;
Menu5.DashboardItem = DashboardMenuItem;
Menu5.ResourceItem = ResourceMenuItem;
var PREFIX15 = "RaMenu";
var MenuClasses = {
  open: "".concat(PREFIX15, "-open"),
  closed: "".concat(PREFIX15, "-closed")
};
var Root7 = styled_default2(MenuList_default, {
  name: PREFIX15,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    flexDirection: "column",
    justifyContent: "flex-start",
    marginTop: "0.5em",
    marginBottom: "1em"
  }, _b[theme.breakpoints.only("xs")] = {
    marginTop: 0
  }, _b.transition = theme.transitions.create("width", {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.leavingScreen
  }), _b["&.".concat(MenuClasses.open)] = {
    width: (0, import_get2.default)(theme, "sidebar.width", DRAWER_WIDTH)
  }, _b["&.".concat(MenuClasses.closed)] = {
    width: (0, import_get2.default)(theme, "sidebar.closedWidth", CLOSED_DRAWER_WIDTH)
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/layout/Layout.js
var __assign22 = function() {
  __assign22 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign22.apply(this, arguments);
};
var __rest20 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Layout = function(props) {
  var _a13 = props.appBar, AppBar4 = _a13 === void 0 ? AppBar3 : _a13, appBarAlwaysOn = props.appBarAlwaysOn, children2 = props.children, className = props.className, dashboard = props.dashboard, errorComponent = props.error, _b = props.menu, Menu6 = _b === void 0 ? Menu5 : _b, _c = props.sidebar, Sidebar2 = _c === void 0 ? Sidebar : _c, title = props.title, rest = __rest20(props, ["appBar", "appBarAlwaysOn", "children", "className", "dashboard", "error", "menu", "sidebar", "title"]);
  var open = useSidebarState()[0];
  var _d = (0, import_react39.useState)(null), errorInfo = _d[0], setErrorInfo = _d[1];
  var handleError = function(error, info) {
    setErrorInfo(info);
  };
  return import_react39.default.createElement(
    StyledLayout,
    __assign22({ className: clsx_m_default("layout", className) }, rest),
    import_react39.default.createElement(SkipNavigationButton, null),
    import_react39.default.createElement(
      "div",
      { className: LayoutClasses.appFrame },
      import_react39.default.createElement(AppBar4, { open, title, alwaysOn: appBarAlwaysOn }),
      import_react39.default.createElement(
        "main",
        { className: LayoutClasses.contentWithSidebar },
        import_react39.default.createElement(
          Sidebar2,
          { appBarAlwaysOn },
          import_react39.default.createElement(Menu6, { hasDashboard: !!dashboard })
        ),
        import_react39.default.createElement(
          "div",
          { id: "main-content", className: LayoutClasses.content },
          import_react39.default.createElement(ErrorBoundary, { onError: handleError, fallbackRender: function(_a14) {
            var error = _a14.error, resetErrorBoundary = _a14.resetErrorBoundary;
            return import_react39.default.createElement(Error2, { error, errorComponent, errorInfo, resetErrorBoundary, title });
          } }, children2)
        )
      ),
      import_react39.default.createElement(Inspector, null)
    )
  );
};
var PREFIX16 = "RaLayout";
var LayoutClasses = {
  appFrame: "".concat(PREFIX16, "-appFrame"),
  contentWithSidebar: "".concat(PREFIX16, "-contentWithSidebar"),
  content: "".concat(PREFIX16, "-content")
};
var StyledLayout = styled_default2("div", {
  name: PREFIX16,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b, _c, _d;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    flexDirection: "column",
    zIndex: 1,
    minHeight: "100vh",
    backgroundColor: theme.palette.background.default,
    position: "relative",
    minWidth: "fit-content",
    width: "100%",
    color: theme.palette.getContrastText(theme.palette.background.default)
  }, _b["& .".concat(LayoutClasses.appFrame)] = (_c = {
    display: "flex",
    flexDirection: "column",
    flexGrow: 1,
    marginTop: theme.spacing(6)
  }, _c[theme.breakpoints.down("sm")] = {
    marginTop: theme.spacing(7)
  }, _c), _b["& .".concat(LayoutClasses.contentWithSidebar)] = {
    display: "flex",
    flexGrow: 1,
    transition: theme.transitions.create("margin", {
      easing: theme.transitions.easing.easeOut,
      duration: theme.transitions.duration.enteringScreen
    })
  }, _b["& .".concat(LayoutClasses.content)] = (_d = {
    backgroundColor: theme.palette.background.default,
    zIndex: 2,
    display: "flex",
    flexDirection: "column",
    flexGrow: 1,
    flexBasis: 0,
    padding: 0
  }, _d[theme.breakpoints.up("xs")] = {
    paddingRight: theme.spacing(1),
    paddingLeft: theme.spacing(1)
  }, _d), _b;
});

// node_modules/ra-ui-materialui/dist/esm/layout/LinearProgress.js
var React321 = __toESM(require_react());
var import_prop_types211 = __toESM(require_prop_types());
var __assign23 = function() {
  __assign23 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign23.apply(this, arguments);
};
var __rest21 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var LinearProgress3 = function(_a13) {
  var _b = _a13.timeout, timeout2 = _b === void 0 ? 1e3 : _b, props = __rest21(_a13, ["timeout"]);
  var className = props.className, rest = __rest21(props, ["className"]);
  var oneSecondHasPassed = useTimeout(timeout2);
  return oneSecondHasPassed ? React321.createElement(StyledProgress, __assign23({ className }, rest)) : React321.createElement(Box_default2, { my: 1, height: 4 });
};
LinearProgress3.propTypes = {
  className: import_prop_types211.default.string,
  timeout: import_prop_types211.default.number
};
LinearProgress3.displayName = "LinearProgress";
var PREFIX17 = "RaLinearProgress";
var StyledProgress = styled_default2(LinearProgress_default, {
  name: PREFIX17,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    margin: "".concat(theme.spacing(1), " 0"),
    width: theme.spacing(20)
  };
});

// node_modules/ra-ui-materialui/dist/esm/layout/Loading.js
var React322 = __toESM(require_react());
var import_prop_types212 = __toESM(require_prop_types());
var __assign24 = function() {
  __assign24 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign24.apply(this, arguments);
};
var __rest22 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Loading = function(props) {
  var className = props.className, _a13 = props.loadingPrimary, loadingPrimary = _a13 === void 0 ? "ra.page.loading" : _a13, _b = props.loadingSecondary, loadingSecondary = _b === void 0 ? "ra.message.loading" : _b, rest = __rest22(props, ["className", "loadingPrimary", "loadingSecondary"]);
  var translate = useTranslate();
  return React322.createElement(
    Root8,
    __assign24({ className }, rest),
    React322.createElement(
      "div",
      { className: LoadingClasses.message },
      React322.createElement(CircularProgress_default, { className: LoadingClasses.icon, color: "primary" }),
      React322.createElement("h1", null, translate(loadingPrimary, { _: loadingPrimary })),
      React322.createElement("div", null, translate(loadingSecondary, { _: loadingSecondary }))
    )
  );
};
Loading.propTypes = {
  className: import_prop_types212.default.string,
  loadingPrimary: import_prop_types212.default.string,
  loadingSecondary: import_prop_types212.default.string
};
var PREFIX18 = "RaLoading";
var LoadingClasses = {
  root: "".concat(PREFIX18, "-root"),
  icon: "".concat(PREFIX18, "-icon"),
  message: "".concat(PREFIX18, "-message")
};
var Root8 = styled_default2("div", {
  name: PREFIX18,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    flexDirection: "column",
    justifyContent: "center"
  }, _b[theme.breakpoints.up("md")] = {
    height: "100%"
  }, _b[theme.breakpoints.down("xl")] = {
    height: "100vh",
    marginTop: "-3em"
  }, _b["& .".concat(LoadingClasses.icon)] = {
    width: "9em",
    height: "9em"
  }, _b["& .".concat(LoadingClasses.message)] = {
    textAlign: "center",
    fontFamily: "Roboto, sans-serif",
    opacity: 0.5,
    margin: "0 1em"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/layout/LoadingPage.js
var React323 = __toESM(require_react());
var import_prop_types213 = __toESM(require_prop_types());
var __assign25 = function() {
  __assign25 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign25.apply(this, arguments);
};
var __rest23 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var LoadingPage = function(_a13) {
  var _b = _a13.loadingPrimary, loadingPrimary = _b === void 0 ? "ra.page.loading" : _b, _c = _a13.loadingSecondary, loadingSecondary = _c === void 0 ? "ra.message.loading" : _c, props = __rest23(_a13, ["loadingPrimary", "loadingSecondary"]);
  return React323.createElement(Loading, __assign25({ loadingPrimary, loadingSecondary }, props));
};
LoadingPage.propTypes = {
  theme: import_prop_types213.default.object,
  className: import_prop_types213.default.string,
  loadingPrimary: import_prop_types213.default.string,
  loadingSecondary: import_prop_types213.default.string
};

// node_modules/ra-ui-materialui/dist/esm/layout/NotFound.js
var React324 = __toESM(require_react());
var import_prop_types214 = __toESM(require_prop_types());
var import_HotTub = __toESM(require_HotTub());
var import_History2 = __toESM(require_History());
var __assign26 = function() {
  __assign26 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign26.apply(this, arguments);
};
var __rest24 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var NotFound = function(props) {
  var className = props.className, title = props.title, rest = __rest24(props, ["className", "title"]);
  var translate = useTranslate();
  useAuthenticated();
  return React324.createElement(
    Root9,
    __assign26({ className }, sanitizeRestProps2(rest)),
    React324.createElement(Title, { defaultTitle: title }),
    React324.createElement(
      "div",
      { className: NotFoundClasses.message },
      React324.createElement(import_HotTub.default, { className: NotFoundClasses.icon }),
      React324.createElement("h1", null, translate("ra.page.not_found")),
      React324.createElement(
        "div",
        null,
        translate("ra.message.not_found"),
        "."
      )
    ),
    React324.createElement(
      "div",
      { className: NotFoundClasses.toolbar },
      React324.createElement(Button_default, { variant: "contained", startIcon: React324.createElement(import_History2.default, null), onClick: goBack2 }, translate("ra.action.back"))
    )
  );
};
var sanitizeRestProps2 = function(_a13) {
  var staticContext = _a13.staticContext, history = _a13.history, location = _a13.location, match2 = _a13.match, rest = __rest24(_a13, ["staticContext", "history", "location", "match"]);
  return rest;
};
NotFound.propTypes = {
  className: import_prop_types214.default.string,
  title: import_prop_types214.default.string,
  location: import_prop_types214.default.object
};
var PREFIX19 = "RaNotFound";
var NotFoundClasses = {
  icon: "".concat(PREFIX19, "-icon"),
  message: "".concat(PREFIX19, "-message"),
  toolbar: "".concat(PREFIX19, "-toolbar")
};
var Root9 = styled_default2("div", {
  name: PREFIX19,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    flexDirection: "column",
    justifyContent: "center"
  }, _b[theme.breakpoints.up("md")] = {
    height: "100%"
  }, _b[theme.breakpoints.down("md")] = {
    height: "100vh",
    marginTop: "-3em"
  }, _b["& .".concat(NotFoundClasses.icon)] = {
    width: "9em",
    height: "9em"
  }, _b["& .".concat(NotFoundClasses.message)] = {
    textAlign: "center",
    fontFamily: "Roboto, sans-serif",
    opacity: 0.5,
    margin: "0 1em"
  }, _b["& .".concat(NotFoundClasses.toolbar)] = {
    textAlign: "center",
    marginTop: "2em"
  }, _b;
});
function goBack2() {
  window.history.go(-1);
}

// node_modules/ra-ui-materialui/dist/esm/layout/Notification.js
var React325 = __toESM(require_react());
var import_react40 = __toESM(require_react());
var import_prop_types215 = __toESM(require_prop_types());
var __assign27 = function() {
  __assign27 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign27.apply(this, arguments);
};
var __rest25 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var defaultAnchorOrigin = {
  vertical: "bottom",
  horizontal: "center"
};
var Notification = function(props) {
  var _a13;
  var className = props.className, _b = props.type, type = _b === void 0 ? "info" : _b, _c = props.autoHideDuration, autoHideDuration = _c === void 0 ? 4e3 : _c, _d = props.multiLine, multiLine = _d === void 0 ? false : _d, _e = props.anchorOrigin, anchorOrigin = _e === void 0 ? defaultAnchorOrigin : _e, rest = __rest25(props, ["className", "type", "autoHideDuration", "multiLine", "anchorOrigin"]);
  var _f = useNotificationContext(), notifications = _f.notifications, takeNotification = _f.takeNotification;
  var _g = (0, import_react40.useState)(false), open = _g[0], setOpen = _g[1];
  var _h = React325.useState(void 0), messageInfo = _h[0], setMessageInfo = _h[1];
  var translate = useTranslate();
  (0, import_react40.useEffect)(function() {
    var _a14;
    var beforeunload = function(e) {
      e.preventDefault();
      var confirmationMessage = "";
      e.returnValue = confirmationMessage;
      return confirmationMessage;
    };
    if ((_a14 = messageInfo === null || messageInfo === void 0 ? void 0 : messageInfo.notificationOptions) === null || _a14 === void 0 ? void 0 : _a14.undoable) {
      window.addEventListener("beforeunload", beforeunload);
    }
    if (notifications.length && !messageInfo) {
      setMessageInfo(takeNotification());
      setOpen(true);
    } else if (notifications.length && messageInfo && open) {
      setOpen(false);
    }
    return function() {
      var _a15;
      if ((_a15 = messageInfo === null || messageInfo === void 0 ? void 0 : messageInfo.notificationOptions) === null || _a15 === void 0 ? void 0 : _a15.undoable) {
        window.removeEventListener("beforeunload", beforeunload);
      }
    };
  }, [notifications, messageInfo, open, takeNotification]);
  var handleRequestClose = (0, import_react40.useCallback)(function() {
    setOpen(false);
  }, [setOpen]);
  var handleExited = (0, import_react40.useCallback)(function() {
    if (messageInfo && messageInfo.notificationOptions.undoable) {
      undoableEventEmitter_default.emit("end", { isUndo: false });
    }
    setMessageInfo(void 0);
  }, [messageInfo]);
  var handleUndo = (0, import_react40.useCallback)(function() {
    undoableEventEmitter_default.emit("end", { isUndo: true });
    setOpen(false);
  }, []);
  if (!messageInfo)
    return null;
  var message = messageInfo.message, typeFromMessage = messageInfo.type, _j = messageInfo.notificationOptions, autoHideDurationFromMessage = _j.autoHideDuration, messageArgs = _j.messageArgs, multilineFromMessage = _j.multiLine, undoable = _j.undoable, options = __rest25(_j, ["autoHideDuration", "messageArgs", "multiLine", "undoable"]);
  return React325.createElement(StyledSnackbar, __assign27({ className, open, message: message && typeof message === "string" && translate(message, messageArgs), autoHideDuration: (
    // Only apply the default autoHideDuration when autoHideDurationFromMessage is undefined
    // as 0 and null are valid values
    autoHideDurationFromMessage === void 0 ? autoHideDuration : autoHideDurationFromMessage
  ), disableWindowBlurListener: undoable, TransitionProps: { onExited: handleExited }, onClose: handleRequestClose, ContentProps: {
    className: clsx_m_default(NotificationClasses[typeFromMessage || type], (_a13 = {}, _a13[NotificationClasses.multiLine] = multilineFromMessage || multiLine, _a13))
  }, action: undoable ? React325.createElement(
    Button_default,
    { color: "primary", className: NotificationClasses.undo, size: "small", onClick: handleUndo },
    React325.createElement(React325.Fragment, null, translate("ra.action.undo"))
  ) : null, anchorOrigin }, rest, options), message && typeof message !== "string" ? message : null);
};
Notification.propTypes = {
  type: import_prop_types215.default.string,
  autoHideDuration: import_prop_types215.default.number,
  multiLine: import_prop_types215.default.bool
};
var PREFIX20 = "RaNotification";
var NotificationClasses = {
  success: "".concat(PREFIX20, "-success"),
  error: "".concat(PREFIX20, "-error"),
  warning: "".concat(PREFIX20, "-warning"),
  undo: "".concat(PREFIX20, "-undo"),
  multiLine: "".concat(PREFIX20, "-multiLine")
};
var StyledSnackbar = styled_default2(Snackbar_default, {
  name: PREFIX20,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme, type = _a13.type;
  return _b = {}, _b["& .".concat(NotificationClasses.success)] = {
    backgroundColor: theme.palette.success.main,
    color: theme.palette.success.contrastText
  }, _b["& .".concat(NotificationClasses.error)] = {
    backgroundColor: theme.palette.error.main,
    color: theme.palette.error.contrastText
  }, _b["& .".concat(NotificationClasses.warning)] = {
    backgroundColor: theme.palette.warning.main,
    color: theme.palette.warning.contrastText
  }, _b["& .".concat(NotificationClasses.undo)] = {
    color: type === "success" ? theme.palette.success.contrastText : theme.palette.primary.light
  }, _b["& .".concat(NotificationClasses.multiLine)] = {
    whiteSpace: "pre-wrap"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/layout/Theme/useTheme.js
var useTheme6 = function(type) {
  var _a13 = useStore("theme", type), theme = _a13[0], setter = _a13[1];
  return [theme, setter];
};

// node_modules/ra-ui-materialui/dist/esm/layout/Theme/ThemeProvider.js
var React326 = __toESM(require_react());
var import_react41 = __toESM(require_react());
var ThemeProvider5 = function(_a13) {
  var children2 = _a13.children, themeOverride = _a13.theme;
  var _b = useThemesContext(), lightTheme = _b.lightTheme, darkTheme = _b.darkTheme, defaultTheme8 = _b.defaultTheme;
  var prefersDarkMode = useMediaQuery("(prefers-color-scheme: dark)", {
    noSsr: true
  });
  var mode = useTheme6(defaultTheme8 || (prefersDarkMode && darkTheme ? "dark" : "light"))[0];
  var themeValue = (0, import_react41.useMemo)(function() {
    try {
      return createTheme_default2(typeof mode === "object" ? mode : mode === "dark" ? darkTheme : lightTheme || themeOverride);
    } catch (e) {
      console.warn("Failed to reuse custom theme from store", e);
      return createTheme_default2();
    }
  }, [mode, themeOverride, lightTheme, darkTheme]);
  return React326.createElement(ThemeProvider4, { theme: themeValue }, children2);
};

// node_modules/ra-ui-materialui/dist/esm/layout/TopToolbar.js
var React327 = __toESM(require_react());
var import_prop_types216 = __toESM(require_prop_types());
var __assign28 = function() {
  __assign28 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign28.apply(this, arguments);
};
var TopToolbar = function(props) {
  return React327.createElement(StyledToolbar, __assign28({}, props));
};
TopToolbar.propTypes = {
  children: import_prop_types216.default.node,
  className: import_prop_types216.default.string
};
var TopToolbar_default = TopToolbar;
var PREFIX21 = "RaTopToolbar";
var StyledToolbar = styled_default2(Toolbar_default, {
  name: PREFIX21,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    justifyContent: "flex-end",
    alignItems: "flex-end",
    gap: theme.spacing(1),
    whiteSpace: "nowrap",
    flex: "0 1 auto",
    minHeight: theme.spacing(8)
  }, _b[theme.breakpoints.up("md")] = {
    padding: theme.spacing(0.5),
    paddingTop: theme.spacing(1)
  }, _b[theme.breakpoints.down("md")] = {
    flex: "0 1 100%",
    padding: theme.spacing(0.5),
    paddingBottom: theme.spacing(1)
  }, _b[theme.breakpoints.down("sm")] = {
    backgroundColor: theme.palette.background.paper
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/layout/useUserMenu.js
var import_react42 = __toESM(require_react());
var useUserMenu = function() {
  return (0, import_react42.useContext)(UserMenuContext);
};

// node_modules/ra-ui-materialui/dist/esm/button/BulkDeleteWithConfirmButton.js
var __assign29 = function() {
  __assign29 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign29.apply(this, arguments);
};
var __rest26 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BulkDeleteWithConfirmButton = function(props) {
  var _a13 = props.confirmTitle, confirmTitle = _a13 === void 0 ? "ra.message.bulk_delete_title" : _a13, _b = props.confirmContent, confirmContent = _b === void 0 ? "ra.message.bulk_delete_content" : _b, _c = props.icon, icon = _c === void 0 ? defaultIcon9 : _c, _d = props.label, label = _d === void 0 ? "ra.action.delete" : _d, _e = props.mutationMode, mutationMode = _e === void 0 ? "pessimistic" : _e, _f = props.mutationOptions, mutationOptions = _f === void 0 ? {} : _f, onClick = props.onClick, rest = __rest26(props, ["confirmTitle", "confirmContent", "icon", "label", "mutationMode", "mutationOptions", "onClick"]);
  var mutationMeta = mutationOptions.meta, otherMutationOptions = __rest26(mutationOptions, ["meta"]);
  var _g = useListContext(props), selectedIds = _g.selectedIds, onUnselectItems = _g.onUnselectItems;
  var _h = useSafeSetState(false), isOpen = _h[0], setOpen = _h[1];
  var notify = useNotify();
  var resource = useResourceContext(props);
  var refresh = useRefresh();
  var translate = useTranslate();
  var _j = useDeleteMany(resource, { ids: selectedIds, meta: mutationMeta }, __assign29({ onSuccess: function() {
    refresh();
    notify("ra.notification.deleted", {
      type: "info",
      messageArgs: { smart_count: selectedIds.length },
      undoable: mutationMode === "undoable"
    });
    onUnselectItems();
    setOpen(false);
  }, onError: function(error) {
    notify(typeof error === "string" ? error : error.message || "ra.notification.http_error", {
      type: "error",
      messageArgs: {
        _: typeof error === "string" ? error : error && error.message ? error.message : void 0
      }
    });
    setOpen(false);
  }, mutationMode }, otherMutationOptions)), deleteMany = _j[0], isLoading = _j[1].isLoading;
  var handleClick2 = function(e) {
    setOpen(true);
    e.stopPropagation();
  };
  var handleDialogClose = function() {
    setOpen(false);
  };
  var handleDelete = function(e) {
    deleteMany();
    if (typeof onClick === "function") {
      onClick(e);
    }
  };
  return React328.createElement(
    import_react43.Fragment,
    null,
    React328.createElement(StyledButton4, __assign29({ onClick: handleClick2, label }, sanitizeRestProps3(rest)), icon),
    React328.createElement(Confirm, { isOpen, loading: isLoading, title: confirmTitle, content: confirmContent, translateOptions: {
      smart_count: selectedIds.length,
      name: translate("resources.".concat(resource, ".forcedCaseName"), {
        smart_count: selectedIds.length,
        _: import_inflection.default.humanize(translate("resources.".concat(resource, ".name"), {
          smart_count: selectedIds.length,
          _: import_inflection.default.inflect(resource, selectedIds.length)
        }), true)
      })
    }, onConfirm: handleDelete, onClose: handleDialogClose })
  );
};
var sanitizeRestProps3 = function(_a13) {
  var classes2 = _a13.classes, filterValues = _a13.filterValues, label = _a13.label, selectedIds = _a13.selectedIds, rest = __rest26(_a13, ["classes", "filterValues", "label", "selectedIds"]);
  return rest;
};
var PREFIX22 = "RaBulkDeleteWithConfirmButton";
var StyledButton4 = styled_default2(Button5, {
  name: PREFIX22,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    color: theme.palette.error.main,
    "&:hover": {
      backgroundColor: alpha(theme.palette.error.main, 0.12),
      // Reset on mouse devices
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  };
});
var defaultIcon9 = React328.createElement(import_Delete.default, null);
BulkDeleteWithConfirmButton.propTypes = {
  confirmTitle: import_prop_types217.default.node,
  confirmContent: import_prop_types217.default.node,
  icon: import_prop_types217.default.element,
  label: import_prop_types217.default.string,
  mutationMode: import_prop_types217.default.oneOf(["pessimistic", "optimistic", "undoable"]),
  resource: import_prop_types217.default.string,
  selectedIds: import_prop_types217.default.arrayOf(import_prop_types217.default.any)
};

// node_modules/ra-ui-materialui/dist/esm/button/BulkDeleteWithUndoButton.js
var React329 = __toESM(require_react());
var import_prop_types218 = __toESM(require_prop_types());
var import_Delete2 = __toESM(require_Delete());
var __assign30 = function() {
  __assign30 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign30.apply(this, arguments);
};
var __rest27 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BulkDeleteWithUndoButton = function(props) {
  var _a13 = props.label, label = _a13 === void 0 ? "ra.action.delete" : _a13, _b = props.icon, icon = _b === void 0 ? defaultIcon10 : _b, onClick = props.onClick, _c = props.mutationOptions, mutationOptions = _c === void 0 ? {} : _c, rest = __rest27(props, ["label", "icon", "onClick", "mutationOptions"]);
  var mutationMeta = mutationOptions.meta, otherMutationOptions = __rest27(mutationOptions, ["meta"]);
  var _d = useListContext(props), selectedIds = _d.selectedIds, onUnselectItems = _d.onUnselectItems;
  var notify = useNotify();
  var resource = useResourceContext(props);
  var refresh = useRefresh();
  var _e = useDeleteMany(), deleteMany = _e[0], isLoading = _e[1].isLoading;
  var handleClick2 = function(e) {
    deleteMany(resource, { ids: selectedIds, meta: mutationMeta }, __assign30({ onSuccess: function() {
      notify("ra.notification.deleted", {
        type: "info",
        messageArgs: { smart_count: selectedIds.length },
        undoable: true
      });
      onUnselectItems();
    }, onError: function(error) {
      notify(typeof error === "string" ? error : error.message || "ra.notification.http_error", {
        type: "error",
        messageArgs: {
          _: typeof error === "string" ? error : error && error.message ? error.message : void 0
        }
      });
      refresh();
    }, mutationMode: "undoable" }, otherMutationOptions));
    if (typeof onClick === "function") {
      onClick(e);
    }
  };
  return React329.createElement(StyledButton5, __assign30({ onClick: handleClick2, label, disabled: isLoading }, sanitizeRestProps4(rest)), icon);
};
var defaultIcon10 = React329.createElement(import_Delete2.default, null);
var sanitizeRestProps4 = function(_a13) {
  var classes2 = _a13.classes, filterValues = _a13.filterValues, label = _a13.label, selectedIds = _a13.selectedIds, rest = __rest27(_a13, ["classes", "filterValues", "label", "selectedIds"]);
  return rest;
};
var PREFIX23 = "RaBulkDeleteWithUndoButton";
var StyledButton5 = styled_default2(Button5, {
  name: PREFIX23,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    color: theme.palette.error.main,
    "&:hover": {
      backgroundColor: alpha(theme.palette.error.main, 0.12),
      // Reset on mouse devices
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  };
});
BulkDeleteWithUndoButton.propTypes = {
  label: import_prop_types218.default.string,
  resource: import_prop_types218.default.string,
  selectedIds: import_prop_types218.default.arrayOf(import_prop_types218.default.any),
  icon: import_prop_types218.default.element
};

// node_modules/ra-ui-materialui/dist/esm/button/BulkDeleteButton.js
var __assign31 = function() {
  __assign31 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign31.apply(this, arguments);
};
var __rest28 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BulkDeleteButton = function(_a13) {
  var _b = _a13.mutationMode, mutationMode = _b === void 0 ? "undoable" : _b, props = __rest28(_a13, ["mutationMode"]);
  return mutationMode === "undoable" ? React330.createElement(BulkDeleteWithUndoButton, __assign31({}, props)) : React330.createElement(BulkDeleteWithConfirmButton, __assign31({ mutationMode }, props));
};
BulkDeleteButton.propTypes = {
  label: import_prop_types219.default.string,
  resource: import_prop_types219.default.string,
  selectedIds: import_prop_types219.default.arrayOf(import_prop_types219.default.any),
  mutationMode: import_prop_types219.default.oneOf(["pessimistic", "optimistic", "undoable"]),
  icon: import_prop_types219.default.element
};

// node_modules/ra-ui-materialui/dist/esm/button/BulkExportButton.js
var React331 = __toESM(require_react());
var import_react44 = __toESM(require_react());
var import_prop_types220 = __toESM(require_prop_types());
var import_GetApp = __toESM(require_GetApp());
var __assign32 = function() {
  __assign32 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign32.apply(this, arguments);
};
var __rest29 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BulkExportButton = function(props) {
  var onClick = props.onClick, _a13 = props.label, label = _a13 === void 0 ? "ra.action.export" : _a13, _b = props.icon, icon = _b === void 0 ? defaultIcon11 : _b, customExporter = props.exporter, meta = props.meta, rest = __rest29(props, ["onClick", "label", "icon", "exporter", "meta"]);
  var _c = useListContext(props), exporterFromContext = _c.exporter, resource = _c.resource, selectedIds = _c.selectedIds;
  var exporter = customExporter || exporterFromContext;
  var dataProvider = useDataProvider();
  var notify = useNotify();
  var handleClick2 = (0, import_react44.useCallback)(function(event) {
    exporter && dataProvider.getMany(resource, { ids: selectedIds, meta }).then(function(_a14) {
      var data = _a14.data;
      return exporter(data, fetchRelatedRecords_default(dataProvider), dataProvider, resource);
    }).catch(function(error) {
      console.error(error);
      notify("ra.notification.http_error", {
        type: "error"
      });
    });
    if (typeof onClick === "function") {
      onClick(event);
    }
  }, [dataProvider, exporter, notify, onClick, resource, selectedIds, meta]);
  return React331.createElement(Button5, __assign32({ onClick: handleClick2, label }, sanitizeRestProps5(rest)), icon);
};
var defaultIcon11 = React331.createElement(import_GetApp.default, null);
var sanitizeRestProps5 = function(_a13) {
  var filterValues = _a13.filterValues, selectedIds = _a13.selectedIds, resource = _a13.resource, rest = __rest29(_a13, ["filterValues", "selectedIds", "resource"]);
  return rest;
};
BulkExportButton.propTypes = {
  exporter: import_prop_types220.default.func,
  label: import_prop_types220.default.string,
  resource: import_prop_types220.default.string,
  selectedIds: import_prop_types220.default.arrayOf(import_prop_types220.default.any),
  icon: import_prop_types220.default.element,
  meta: import_prop_types220.default.any
};

// node_modules/ra-ui-materialui/dist/esm/button/BulkUpdateButton.js
var React334 = __toESM(require_react());
var import_prop_types223 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/button/BulkUpdateWithConfirmButton.js
var React332 = __toESM(require_react());
var import_react45 = __toESM(require_react());
var import_prop_types221 = __toESM(require_prop_types());
var import_Update = __toESM(require_Update());
var import_inflection2 = __toESM(require_inflection());
var __assign33 = function() {
  __assign33 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign33.apply(this, arguments);
};
var __rest30 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BulkUpdateWithConfirmButton = function(props) {
  var notify = useNotify();
  var refresh = useRefresh();
  var translate = useTranslate();
  var resource = useResourceContext(props);
  var unselectAll = useUnselectAll(resource);
  var _a13 = (0, import_react45.useState)(false), isOpen = _a13[0], setOpen = _a13[1];
  var selectedIds = useListContext(props).selectedIds;
  var _b = props.confirmTitle, confirmTitle = _b === void 0 ? "ra.message.bulk_update_title" : _b, _c = props.confirmContent, confirmContent = _c === void 0 ? "ra.message.bulk_update_content" : _c, data = props.data, _d = props.icon, icon = _d === void 0 ? defaultIcon12 : _d, _e = props.label, label = _e === void 0 ? "ra.action.update" : _e, _f = props.mutationMode, mutationMode = _f === void 0 ? "pessimistic" : _f, onClick = props.onClick, _g = props.onSuccess, onSuccess = _g === void 0 ? function() {
    refresh();
    notify("ra.notification.updated", {
      type: "info",
      messageArgs: { smart_count: selectedIds.length },
      undoable: mutationMode === "undoable"
    });
    unselectAll();
    setOpen(false);
  } : _g, _h = props.onError, onError = _h === void 0 ? function(error) {
    notify(typeof error === "string" ? error : error.message || "ra.notification.http_error", {
      type: "error",
      messageArgs: {
        _: typeof error === "string" ? error : error && error.message ? error.message : void 0
      }
    });
    setOpen(false);
  } : _h, _j = props.mutationOptions, mutationOptions = _j === void 0 ? {} : _j, rest = __rest30(props, ["confirmTitle", "confirmContent", "data", "icon", "label", "mutationMode", "onClick", "onSuccess", "onError", "mutationOptions"]);
  var mutationMeta = mutationOptions.meta, otherMutationOptions = __rest30(mutationOptions, ["meta"]);
  var _k = useUpdateMany(resource, { ids: selectedIds, data, meta: mutationMeta }, __assign33({ onSuccess, onError, mutationMode }, otherMutationOptions)), updateMany = _k[0], isLoading = _k[1].isLoading;
  var handleClick2 = function(e) {
    setOpen(true);
    e.stopPropagation();
  };
  var handleDialogClose = function() {
    setOpen(false);
  };
  var handleUpdate = function(e) {
    updateMany();
    if (typeof onClick === "function") {
      onClick(e);
    }
  };
  return React332.createElement(
    import_react45.Fragment,
    null,
    React332.createElement(StyledButton6, __assign33({ onClick: handleClick2, label }, sanitizeRestProps6(rest)), icon),
    React332.createElement(Confirm, { isOpen, loading: isLoading, title: confirmTitle, content: confirmContent, translateOptions: {
      smart_count: selectedIds.length,
      name: translate("resources.".concat(resource, ".forcedCaseName"), {
        smart_count: selectedIds.length,
        _: import_inflection2.default.humanize(translate("resources.".concat(resource, ".name"), {
          smart_count: selectedIds.length,
          _: import_inflection2.default.inflect(resource, selectedIds.length)
        }), true)
      })
    }, onConfirm: handleUpdate, onClose: handleDialogClose })
  );
};
var sanitizeRestProps6 = function(_a13) {
  var filterValues = _a13.filterValues, label = _a13.label, onSuccess = _a13.onSuccess, onError = _a13.onError, rest = __rest30(_a13, ["filterValues", "label", "onSuccess", "onError"]);
  return rest;
};
BulkUpdateWithConfirmButton.propTypes = {
  confirmTitle: import_prop_types221.default.node,
  confirmContent: import_prop_types221.default.node,
  label: import_prop_types221.default.string,
  resource: import_prop_types221.default.string,
  selectedIds: import_prop_types221.default.arrayOf(import_prop_types221.default.any),
  icon: import_prop_types221.default.element,
  data: import_prop_types221.default.any.isRequired,
  mutationMode: import_prop_types221.default.oneOf(["pessimistic", "optimistic", "undoable"])
};
var PREFIX24 = "RaBulkUpdateWithConfirmButton";
var StyledButton6 = styled_default2(Button5, {
  name: PREFIX24,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    color: theme.palette.primary.main,
    "&:hover": {
      backgroundColor: alpha(theme.palette.primary.main, 0.12),
      // Reset on mouse devices
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  };
});
var defaultIcon12 = React332.createElement(import_Update.default, null);

// node_modules/ra-ui-materialui/dist/esm/button/BulkUpdateWithUndoButton.js
var React333 = __toESM(require_react());
var import_prop_types222 = __toESM(require_prop_types());
var import_Update2 = __toESM(require_Update());
var __assign34 = function() {
  __assign34 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign34.apply(this, arguments);
};
var __rest31 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BulkUpdateWithUndoButton = function(props) {
  var selectedIds = useListContext(props).selectedIds;
  var notify = useNotify();
  var resource = useResourceContext(props);
  var unselectAll = useUnselectAll(resource);
  var refresh = useRefresh();
  var data = props.data, _a13 = props.label, label = _a13 === void 0 ? "ra.action.update" : _a13, _b = props.icon, icon = _b === void 0 ? defaultIcon13 : _b, onClick = props.onClick, _c = props.onSuccess, onSuccess = _c === void 0 ? function() {
    notify("ra.notification.updated", {
      type: "info",
      messageArgs: { smart_count: selectedIds.length },
      undoable: true
    });
    unselectAll();
    refresh();
  } : _c, _d = props.onError, onError = _d === void 0 ? function(error) {
    notify(typeof error === "string" ? error : error.message || "ra.notification.http_error", {
      type: "error",
      messageArgs: {
        _: typeof error === "string" ? error : error && error.message ? error.message : void 0
      }
    });
    refresh();
  } : _d, _e = props.mutationOptions, mutationOptions = _e === void 0 ? {} : _e, rest = __rest31(props, ["data", "label", "icon", "onClick", "onSuccess", "onError", "mutationOptions"]);
  var mutationMeta = mutationOptions.meta, otherMutationOptions = __rest31(mutationOptions, ["meta"]);
  var _f = useUpdateMany(resource, { ids: selectedIds, data, meta: mutationMeta }, __assign34({ onSuccess, onError, mutationMode: "undoable" }, otherMutationOptions)), updateMany = _f[0], isLoading = _f[1].isLoading;
  var handleClick2 = function(e) {
    updateMany();
    if (typeof onClick === "function") {
      onClick(e);
    }
  };
  return React333.createElement(StyledButton7, __assign34({ onClick: handleClick2, label, disabled: isLoading }, sanitizeRestProps7(rest)), icon);
};
var defaultIcon13 = React333.createElement(import_Update2.default, null);
var sanitizeRestProps7 = function(_a13) {
  var filterValues = _a13.filterValues, label = _a13.label, selectedIds = _a13.selectedIds, onSuccess = _a13.onSuccess, onError = _a13.onError, rest = __rest31(_a13, ["filterValues", "label", "selectedIds", "onSuccess", "onError"]);
  return rest;
};
BulkUpdateWithUndoButton.propTypes = {
  label: import_prop_types222.default.string,
  resource: import_prop_types222.default.string,
  selectedIds: import_prop_types222.default.arrayOf(import_prop_types222.default.any),
  icon: import_prop_types222.default.element,
  data: import_prop_types222.default.any.isRequired
};
var PREFIX25 = "RaBulkUpdateWithUndoButton";
var StyledButton7 = styled_default2(Button5, {
  name: PREFIX25,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    color: theme.palette.primary.main,
    "&:hover": {
      backgroundColor: alpha(theme.palette.primary.main, 0.12),
      // Reset on mouse devices
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  };
});

// node_modules/ra-ui-materialui/dist/esm/button/BulkUpdateButton.js
var __assign35 = function() {
  __assign35 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign35.apply(this, arguments);
};
var __rest32 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BulkUpdateButton = function(props) {
  var _a13 = props.mutationMode, mutationMode = _a13 === void 0 ? "undoable" : _a13, _b = props.data, data = _b === void 0 ? defaultData : _b, rest = __rest32(props, ["mutationMode", "data"]);
  return mutationMode === "undoable" ? React334.createElement(BulkUpdateWithUndoButton, __assign35({ data }, rest)) : React334.createElement(BulkUpdateWithConfirmButton, __assign35({ mutationMode, data }, rest));
};
BulkUpdateButton.propTypes = {
  label: import_prop_types223.default.string,
  resource: import_prop_types223.default.string,
  selectedIds: import_prop_types223.default.arrayOf(import_prop_types223.default.any),
  mutationMode: import_prop_types223.default.oneOf(["pessimistic", "optimistic", "undoable"]),
  icon: import_prop_types223.default.element
};
var defaultData = [];

// node_modules/ra-ui-materialui/dist/esm/button/DeleteButton.js
var React337 = __toESM(require_react());
var import_prop_types226 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/button/DeleteWithUndoButton.js
var React335 = __toESM(require_react());
var import_prop_types224 = __toESM(require_prop_types());
var import_Delete3 = __toESM(require_Delete());
var __assign36 = function() {
  __assign36 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign36.apply(this, arguments);
};
var __rest33 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DeleteWithUndoButton = function(props) {
  var _a13 = props.label, label = _a13 === void 0 ? "ra.action.delete" : _a13, className = props.className, _b = props.icon, icon = _b === void 0 ? defaultIcon14 : _b, onClick = props.onClick, _c = props.redirect, redirect = _c === void 0 ? "list" : _c, mutationOptions = props.mutationOptions, _d = props.color, color2 = _d === void 0 ? "error" : _d, rest = __rest33(props, ["label", "className", "icon", "onClick", "redirect", "mutationOptions", "color"]);
  var record = useRecordContext(props);
  var resource = useResourceContext(props);
  var _e = useDeleteWithUndoController_default({
    record,
    resource,
    redirect,
    onClick,
    mutationOptions
  }), isLoading = _e.isLoading, handleDelete = _e.handleDelete;
  return React335.createElement(Button5, __assign36({ onClick: handleDelete, disabled: isLoading, label, className: clsx_m_default("ra-delete-button", className), key: "button", color: color2 }, rest), icon);
};
var defaultIcon14 = React335.createElement(import_Delete3.default, null);
DeleteWithUndoButton.propTypes = {
  className: import_prop_types224.default.string,
  label: import_prop_types224.default.string,
  record: import_prop_types224.default.any,
  redirect: import_prop_types224.default.oneOfType([
    import_prop_types224.default.string,
    import_prop_types224.default.bool,
    import_prop_types224.default.func
  ]),
  resource: import_prop_types224.default.string,
  icon: import_prop_types224.default.element
};

// node_modules/ra-ui-materialui/dist/esm/button/DeleteWithConfirmButton.js
var import_react46 = __toESM(require_react());
var import_prop_types225 = __toESM(require_prop_types());
var import_Delete4 = __toESM(require_Delete());
var import_inflection3 = __toESM(require_inflection());
var __assign37 = function() {
  __assign37 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign37.apply(this, arguments);
};
var __rest34 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DeleteWithConfirmButton = function(props) {
  var className = props.className, _a13 = props.confirmTitle, confirmTitle = _a13 === void 0 ? "ra.message.delete_title" : _a13, _b = props.confirmContent, confirmContent = _b === void 0 ? "ra.message.delete_content" : _b, _c = props.icon, icon = _c === void 0 ? defaultIcon15 : _c, _d = props.label, label = _d === void 0 ? "ra.action.delete" : _d, _e = props.mutationMode, mutationMode = _e === void 0 ? "pessimistic" : _e, onClick = props.onClick, _f = props.redirect, redirect = _f === void 0 ? "list" : _f, _g = props.translateOptions, translateOptions = _g === void 0 ? {} : _g, mutationOptions = props.mutationOptions, _h = props.color, color2 = _h === void 0 ? "error" : _h, rest = __rest34(props, ["className", "confirmTitle", "confirmContent", "icon", "label", "mutationMode", "onClick", "redirect", "translateOptions", "mutationOptions", "color"]);
  var translate = useTranslate();
  var record = useRecordContext(props);
  var resource = useResourceContext(props);
  var _j = useDeleteWithConfirmController_default({
    record,
    redirect,
    mutationMode,
    onClick,
    mutationOptions,
    resource
  }), open = _j.open, isLoading = _j.isLoading, handleDialogOpen = _j.handleDialogOpen, handleDialogClose = _j.handleDialogClose, handleDelete = _j.handleDelete;
  return import_react46.default.createElement(
    import_react46.Fragment,
    null,
    import_react46.default.createElement(Button5, __assign37({ onClick: handleDialogOpen, label, className: clsx_m_default("ra-delete-button", className), key: "button", color: color2 }, rest), icon),
    import_react46.default.createElement(Confirm, { isOpen: open, loading: isLoading, title: confirmTitle, content: confirmContent, translateOptions: __assign37({ name: translate("resources.".concat(resource, ".forcedCaseName"), {
      smart_count: 1,
      _: import_inflection3.default.humanize(translate("resources.".concat(resource, ".name"), {
        smart_count: 1,
        _: import_inflection3.default.singularize(resource)
      }), true)
    }), id: record.id }, translateOptions), onConfirm: handleDelete, onClose: handleDialogClose })
  );
};
var defaultIcon15 = import_react46.default.createElement(import_Delete4.default, null);
DeleteWithConfirmButton.propTypes = {
  className: import_prop_types225.default.string,
  confirmTitle: import_prop_types225.default.node,
  confirmContent: import_prop_types225.default.node,
  label: import_prop_types225.default.string,
  mutationMode: import_prop_types225.default.oneOf(["pessimistic", "optimistic", "undoable"]),
  record: import_prop_types225.default.any,
  redirect: import_prop_types225.default.oneOfType([
    import_prop_types225.default.string,
    import_prop_types225.default.bool,
    import_prop_types225.default.func
  ]),
  resource: import_prop_types225.default.string,
  icon: import_prop_types225.default.element,
  translateOptions: import_prop_types225.default.object
};

// node_modules/ra-ui-materialui/dist/esm/button/DeleteButton.js
var __assign38 = function() {
  __assign38 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign38.apply(this, arguments);
};
var __rest35 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DeleteButton = function(props) {
  var mutationMode = props.mutationMode, rest = __rest35(props, ["mutationMode"]);
  var record = useRecordContext(props);
  var saveContext = useSaveContext(props);
  if (!record || record.id == null) {
    return null;
  }
  var finalMutationMode = mutationMode ? mutationMode : (saveContext === null || saveContext === void 0 ? void 0 : saveContext.mutationMode) ? saveContext.mutationMode : "undoable";
  return finalMutationMode === "undoable" ? (
    // @ts-ignore I looked for the error for one hour without finding it
    React337.createElement(DeleteWithUndoButton, __assign38({ record }, rest))
  ) : React337.createElement(DeleteWithConfirmButton, __assign38({
    // @ts-ignore I looked for the error for one hour without finding it
    mutationMode: finalMutationMode,
    record
  }, rest));
};
DeleteButton.propTypes = {
  label: import_prop_types226.default.string,
  mutationMode: import_prop_types226.default.oneOf(["pessimistic", "optimistic", "undoable"]),
  record: import_prop_types226.default.any,
  // @ts-ignore
  redirect: import_prop_types226.default.oneOfType([
    import_prop_types226.default.string,
    import_prop_types226.default.bool,
    import_prop_types226.default.func
  ]),
  resource: import_prop_types226.default.string,
  icon: import_prop_types226.default.element
};

// node_modules/ra-ui-materialui/dist/esm/button/EditButton.js
var React338 = __toESM(require_react());
var import_prop_types227 = __toESM(require_prop_types());
var import_Create = __toESM(require_Create());
var __assign39 = function() {
  __assign39 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign39.apply(this, arguments);
};
var __rest36 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var EditButton = function(props) {
  var _a13 = props.icon, icon = _a13 === void 0 ? defaultIcon16 : _a13, _b = props.label, label = _b === void 0 ? "ra.action.edit" : _b, _c = props.scrollToTop, scrollToTop = _c === void 0 ? true : _c, className = props.className, rest = __rest36(props, ["icon", "label", "scrollToTop", "className"]);
  var resource = useResourceContext(props);
  var record = useRecordContext(props);
  var createPath = useCreatePath();
  if (!record)
    return null;
  return React338.createElement(StyledButton8, __assign39({ component: Link, to: createPath({ type: "edit", resource, id: record.id }), state: scrollStates3[String(scrollToTop)], label, onClick: stopPropagation3, className: clsx_m_default(EditButtonClasses.root, className) }, rest), icon);
};
var scrollStates3 = {
  true: { _scrollToTop: true },
  false: {}
};
var defaultIcon16 = React338.createElement(import_Create.default, null);
var stopPropagation3 = function(e) {
  return e.stopPropagation();
};
EditButton.propTypes = {
  icon: import_prop_types227.default.element,
  label: import_prop_types227.default.string,
  record: import_prop_types227.default.any,
  scrollToTop: import_prop_types227.default.bool
};
var PREFIX26 = "RaEditButton";
var EditButtonClasses = {
  root: "".concat(PREFIX26, "-root")
};
var StyledButton8 = styled_default2(Button5, {
  name: PREFIX26,
  overridesResolver: function(_props, styles7) {
    return styles7.root;
  }
})({});

// node_modules/ra-ui-materialui/dist/esm/button/ExportButton.js
var React339 = __toESM(require_react());
var import_react47 = __toESM(require_react());
var import_prop_types228 = __toESM(require_prop_types());
var import_GetApp2 = __toESM(require_GetApp());
var __assign40 = function() {
  __assign40 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign40.apply(this, arguments);
};
var __rest37 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ExportButton = function(props) {
  var _a13 = props.maxResults, maxResults = _a13 === void 0 ? 1e3 : _a13, onClick = props.onClick, _b = props.label, label = _b === void 0 ? "ra.action.export" : _b, _c = props.icon, icon = _c === void 0 ? defaultIcon17 : _c, customExporter = props.exporter, meta = props.meta, rest = __rest37(props, ["maxResults", "onClick", "label", "icon", "exporter", "meta"]);
  var _d = useListContext(props), filter = _d.filter, filterValues = _d.filterValues, sort = _d.sort, exporterFromContext = _d.exporter, total = _d.total;
  var resource = useResourceContext(props);
  var exporter = customExporter || exporterFromContext;
  var dataProvider = useDataProvider();
  var notify = useNotify();
  var handleClick2 = (0, import_react47.useCallback)(function(event) {
    dataProvider.getList(resource, {
      sort,
      filter: filter ? __assign40(__assign40({}, filterValues), filter) : filterValues,
      pagination: { page: 1, perPage: maxResults },
      meta
    }).then(function(_a14) {
      var data = _a14.data;
      return exporter && exporter(data, fetchRelatedRecords_default(dataProvider), dataProvider, resource);
    }).catch(function(error) {
      console.error(error);
      notify("ra.notification.http_error", { type: "error" });
    });
    if (typeof onClick === "function") {
      onClick(event);
    }
  }, [
    dataProvider,
    exporter,
    filter,
    filterValues,
    maxResults,
    notify,
    onClick,
    resource,
    sort,
    meta
  ]);
  return React339.createElement(Button5, __assign40({ onClick: handleClick2, label, disabled: total === 0 }, sanitizeRestProps8(rest)), icon);
};
var defaultIcon17 = React339.createElement(import_GetApp2.default, null);
var sanitizeRestProps8 = function(_a13) {
  var filterValues = _a13.filterValues, resource = _a13.resource, rest = __rest37(_a13, ["filterValues", "resource"]);
  return rest;
};
ExportButton.propTypes = {
  exporter: import_prop_types228.default.func,
  filterValues: import_prop_types228.default.object,
  label: import_prop_types228.default.string,
  maxResults: import_prop_types228.default.number,
  resource: import_prop_types228.default.string,
  sort: import_prop_types228.default.exact({
    field: import_prop_types228.default.string,
    order: import_prop_types228.default.string
  }),
  icon: import_prop_types228.default.element,
  meta: import_prop_types228.default.any
};

// node_modules/ra-ui-materialui/dist/esm/button/IconButtonWithTooltip.js
var React340 = __toESM(require_react());
var __assign41 = function() {
  __assign41 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign41.apply(this, arguments);
};
var __rest38 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var IconButtonWithTooltip = function(_a13) {
  var label = _a13.label, onClick = _a13.onClick, props = __rest38(_a13, ["label", "onClick"]);
  var translate = useTranslate();
  var _b = React340.useState(false), open = _b[0], setOpen = _b[1];
  var handleClose = function() {
    setOpen(false);
  };
  var handleOpen = function() {
    setOpen(true);
  };
  var translatedLabel = translate(label, { _: label });
  var handleClick2 = function(event) {
    handleClose();
    onClick(event);
  };
  return React340.createElement(
    Tooltip_default,
    { title: translatedLabel, open, onOpen: handleOpen, onClose: handleClose },
    React340.createElement(IconButton_default, __assign41({ "aria-label": translatedLabel, onClick: handleClick2 }, props))
  );
};

// node_modules/ra-ui-materialui/dist/esm/button/LocalesMenuButton.js
var React341 = __toESM(require_react());
var import_react48 = __toESM(require_react());
var import_Translate = __toESM(require_Translate());
var import_ExpandMore2 = __toESM(require_ExpandMore());
var LocalesMenuButton = function(props) {
  var _a13 = (0, import_react48.useState)(null), anchorEl = _a13[0], setAnchorEl = _a13[1];
  var languages = useLocales({ locales: props.languages });
  var _b = useLocaleState(), locale = _b[0], setLocale = _b[1];
  var getNameForLocale = function(locale2) {
    var language = languages.find(function(language2) {
      return language2.locale === locale2;
    });
    return language ? language.name : "";
  };
  var changeLocale = function(locale2) {
    return function() {
      setLocale(locale2);
      setAnchorEl(null);
    };
  };
  var handleLanguageClick = function(event) {
    setAnchorEl(event.currentTarget);
  };
  var handleClose = function() {
    setAnchorEl(null);
  };
  return React341.createElement(
    Root10,
    { component: "span" },
    React341.createElement(Button_default, { color: "inherit", "aria-controls": "simple-menu", "aria-label": "", "aria-haspopup": "true", onClick: handleLanguageClick, startIcon: React341.createElement(import_Translate.default, null), endIcon: React341.createElement(import_ExpandMore2.default, { fontSize: "small" }) }, getNameForLocale(locale)),
    React341.createElement(Menu_default, { id: "simple-menu", anchorEl, keepMounted: true, open: Boolean(anchorEl), onClose: handleClose }, languages.map(function(language) {
      return React341.createElement(MenuItem_default, { key: language.locale, onClick: changeLocale(language.locale), selected: language.locale === locale }, language.name);
    }))
  );
};
var PREFIX27 = "RaLocalesMenuButton";
var LocalesMenuButtonClasses = {};
var Root10 = styled_default2(Box_default2, {
  name: PREFIX27,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})({});

// node_modules/ra-ui-materialui/dist/esm/button/ListButton.js
var React342 = __toESM(require_react());
var import_prop_types229 = __toESM(require_prop_types());
var import_List4 = __toESM(require_List());
var __assign42 = function() {
  __assign42 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign42.apply(this, arguments);
};
var __rest39 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ListButton = function(props) {
  var _a13 = props.icon, icon = _a13 === void 0 ? defaultIcon18 : _a13, _b = props.label, label = _b === void 0 ? "ra.action.list" : _b, resourceProp = props.resource, _c = props.scrollToTop, scrollToTop = _c === void 0 ? true : _c, rest = __rest39(props, ["icon", "label", "resource", "scrollToTop"]);
  var resource = useResourceContext(props);
  var createPath = useCreatePath();
  return React342.createElement(Button5, __assign42({ component: Link, to: createPath({ type: "list", resource }), state: scrollStates4[String(scrollToTop)], label }, rest), icon);
};
var scrollStates4 = {
  true: { _scrollToTop: true },
  false: {}
};
var defaultIcon18 = React342.createElement(import_List4.default, null);
ListButton.propTypes = {
  icon: import_prop_types229.default.element,
  label: import_prop_types229.default.string
};

// node_modules/ra-ui-materialui/dist/esm/button/RefreshButton.js
var React343 = __toESM(require_react());
var import_react49 = __toESM(require_react());
var import_prop_types230 = __toESM(require_prop_types());
var import_Refresh = __toESM(require_Refresh());
var __assign43 = function() {
  __assign43 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign43.apply(this, arguments);
};
var __rest40 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var RefreshButton = function(props) {
  var _a13 = props.label, label = _a13 === void 0 ? "ra.action.refresh" : _a13, _b = props.icon, icon = _b === void 0 ? defaultIcon19 : _b, onClick = props.onClick, rest = __rest40(props, ["label", "icon", "onClick"]);
  var refresh = useRefresh();
  var handleClick2 = (0, import_react49.useCallback)(function(event) {
    event.preventDefault();
    refresh();
    if (typeof onClick === "function") {
      onClick(event);
    }
  }, [refresh, onClick]);
  return React343.createElement(Button5, __assign43({ label, onClick: handleClick2 }, rest), icon);
};
var defaultIcon19 = React343.createElement(import_Refresh.default, null);
RefreshButton.propTypes = {
  label: import_prop_types230.default.string,
  icon: import_prop_types230.default.element,
  onClick: import_prop_types230.default.func
};

// node_modules/ra-ui-materialui/dist/esm/button/RefreshIconButton.js
var React344 = __toESM(require_react());
var import_react50 = __toESM(require_react());
var import_prop_types231 = __toESM(require_prop_types());
var import_Refresh2 = __toESM(require_Refresh());
var __assign44 = function() {
  __assign44 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign44.apply(this, arguments);
};
var __rest41 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var RefreshIconButton = function(props) {
  var _a13 = props.label, label = _a13 === void 0 ? "ra.action.refresh" : _a13, _b = props.icon, icon = _b === void 0 ? defaultIcon20 : _b, onClick = props.onClick, className = props.className, rest = __rest41(props, ["label", "icon", "onClick", "className"]);
  var refresh = useRefresh();
  var translate = useTranslate();
  var handleClick2 = (0, import_react50.useCallback)(function(event) {
    event.preventDefault();
    refresh();
    if (typeof onClick === "function") {
      onClick(event);
    }
  }, [refresh, onClick]);
  return React344.createElement(
    Tooltip_default,
    { title: label && translate(label, { _: "Refresh" }) },
    React344.createElement(IconButton_default, __assign44({ "aria-label": label && translate(label, { _: "Refresh" }), className, color: "inherit", onClick: handleClick2 }, rest), icon)
  );
};
var defaultIcon20 = React344.createElement(import_Refresh2.default, null);
RefreshIconButton.propTypes = {
  className: import_prop_types231.default.string,
  label: import_prop_types231.default.string,
  icon: import_prop_types231.default.element
};

// node_modules/ra-ui-materialui/dist/esm/button/SaveButton.js
var React345 = __toESM(require_react());
var import_react51 = __toESM(require_react());
var import_prop_types232 = __toESM(require_prop_types());
var import_Save = __toESM(require_Save());
var __assign45 = function() {
  __assign45 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign45.apply(this, arguments);
};
var __awaiter = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = function(thisArg, body2) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_5 = 0)), _5)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __rest42 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SaveButton = function(props) {
  var _a13 = props.color, color2 = _a13 === void 0 ? "primary" : _a13, _b = props.icon, icon = _b === void 0 ? defaultIcon21 : _b, invalid = props.invalid, _c = props.label, label = _c === void 0 ? "ra.action.save" : _c, onClick = props.onClick, mutationOptions = props.mutationOptions, disabledProp = props.disabled, _d = props.type, type = _d === void 0 ? "submit" : _d, transform = props.transform, _e = props.variant, variant = _e === void 0 ? "contained" : _e, _f = props.alwaysEnable, alwaysEnable = _f === void 0 ? false : _f, rest = __rest42(props, ["color", "icon", "invalid", "label", "onClick", "mutationOptions", "disabled", "type", "transform", "variant", "alwaysEnable"]);
  var translate = useTranslate();
  var form = useFormContext();
  var saveContext = useSaveContext();
  var _g = useFormState(), dirtyFields = _g.dirtyFields, isValidating = _g.isValidating, isSubmitting = _g.isSubmitting;
  var isDirty = Object.keys(dirtyFields).length > 0;
  var disabled = valueOrDefault(alwaysEnable === false || alwaysEnable === void 0 ? void 0 : !alwaysEnable, disabledProp || !isDirty || isValidating || isSubmitting);
  warning_default(type === "submit" && (mutationOptions && (mutationOptions.onSuccess || mutationOptions.onError) || transform), 'Cannot use <SaveButton mutationOptions> props on a button of type "submit". To override the default mutation options on a particular save button, set the <SaveButton type="button"> prop, or set mutationOptions in the main view component (<Create> or <Edit>).');
  var handleSubmit2 = (0, import_react51.useCallback)(function(values3) {
    return __awaiter(void 0, void 0, void 0, function() {
      var errors;
      return __generator(this, function(_a14) {
        switch (_a14.label) {
          case 0:
            if (!(saveContext === null || saveContext === void 0 ? void 0 : saveContext.save))
              return [3, 2];
            return [4, saveContext.save(values3, __assign45(__assign45({}, mutationOptions), { transform }))];
          case 1:
            errors = _a14.sent();
            _a14.label = 2;
          case 2:
            if (errors != null) {
              setSubmissionErrors(errors, form.setError);
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [form.setError, saveContext, mutationOptions, transform]);
  var handleClick2 = (0, import_react51.useCallback)(function(event) {
    return __awaiter(void 0, void 0, void 0, function() {
      return __generator(this, function(_a14) {
        switch (_a14.label) {
          case 0:
            if (onClick) {
              onClick(event);
            }
            if (event.defaultPrevented) {
              return [
                2
                /*return*/
              ];
            }
            if (!(type === "button"))
              return [3, 2];
            event.stopPropagation();
            return [4, form.handleSubmit(handleSubmit2)(event)];
          case 1:
            _a14.sent();
            _a14.label = 2;
          case 2:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [onClick, type, form, handleSubmit2]);
  var displayedLabel = label && translate(label, { _: label });
  return React345.createElement(
    StyledButton9,
    __assign45({ variant, type, color: color2, "aria-label": displayedLabel, disabled, onClick: handleClick2 }, rest),
    isSubmitting ? React345.createElement(CircularProgress_default, { sx: circularProgressStyle, size: 14, thickness: 3, color: "inherit" }) : icon,
    displayedLabel
  );
};
var circularProgressStyle = {
  "&.MuiCircularProgress-root": {
    marginRight: "10px",
    marginLeft: "2px"
  }
};
var defaultIcon21 = React345.createElement(import_Save.default, null);
SaveButton.propTypes = {
  className: import_prop_types232.default.string,
  invalid: import_prop_types232.default.bool,
  label: import_prop_types232.default.string,
  variant: import_prop_types232.default.oneOf(["text", "outlined", "contained"]),
  icon: import_prop_types232.default.element,
  alwaysEnable: import_prop_types232.default.bool
};
var PREFIX28 = "RaSaveButton";
var StyledButton9 = styled_default2(Button_default, {
  name: PREFIX28,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    position: "relative"
  }, _b["& .MuiSvgIcon-root, & .MuiIcon-root, & .MuiCircularProgress-root"] = {
    marginRight: theme.spacing(1)
  }, _b["& .MuiSvgIcon-root, & .MuiIcon-root"] = {
    fontSize: 18
  }, _b;
});
var valueOrDefault = function(value, defaultValue) {
  return typeof value === "undefined" ? defaultValue : value;
};

// node_modules/ra-ui-materialui/dist/esm/button/SkipNavigationButton.js
var import_react52 = __toESM(require_react());
var SkipNavigationButton = function() {
  return import_react52.default.createElement(StyledButton10, { onClick: skipToContent, className: "skip-nav-button", label: "ra.navigation.skip_nav", variant: "contained" });
};
var PREFIX29 = "RaSkipNavigationButton";
var StyledButton10 = styled_default2(Button5, {
  name: PREFIX29,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    position: "fixed",
    padding: theme.spacing(1),
    backgroundColor: theme.palette.background.default,
    color: theme.palette.getContrastText(theme.palette.background.default),
    transition: theme.transitions.create(["top", "opacity"], {
      easing: theme.transitions.easing.easeIn,
      duration: theme.transitions.duration.leavingScreen
    }),
    left: theme.spacing(2),
    top: theme.spacing(-10),
    zIndex: 5e3,
    "&:hover": {
      opacity: 0.8,
      backgroundColor: theme.palette.background.default
    },
    "&:focus": {
      top: theme.spacing(2),
      transition: theme.transitions.create(["top", "opacity"], {
        easing: theme.transitions.easing.easeOut,
        duration: theme.transitions.duration.enteringScreen
      })
    }
  };
});
var skipToContent = function() {
  if (typeof document === "undefined")
    return;
  var element = document.getElementById("main-content");
  if (!element) {
    if (true) {
      console.warn('No element with id "main-content" was found. Ensure the element that contains your main content has an id of "main-content".');
    }
    return;
  }
  element.setAttribute("tabIndex", "-1");
  element.focus();
  element.blur();
  element.removeAttribute("tabIndex");
};

// node_modules/ra-ui-materialui/dist/esm/button/UpdateButton.js
var React349 = __toESM(require_react());
var import_prop_types235 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/button/UpdateWithConfirmButton.js
var React347 = __toESM(require_react());
var import_react53 = __toESM(require_react());
var import_prop_types233 = __toESM(require_prop_types());
var import_Update3 = __toESM(require_Update());
var import_inflection4 = __toESM(require_inflection());
var __assign46 = function() {
  __assign46 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign46.apply(this, arguments);
};
var __rest43 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var UpdateWithConfirmButton = function(props) {
  var notify = useNotify();
  var translate = useTranslate();
  var resource = useResourceContext(props);
  var _a13 = (0, import_react53.useState)(false), isOpen = _a13[0], setOpen = _a13[1];
  var record = useRecordContext(props);
  var _b = props.confirmTitle, confirmTitle = _b === void 0 ? "ra.message.bulk_update_title" : _b, _c = props.confirmContent, confirmContent = _c === void 0 ? "ra.message.bulk_update_content" : _c, data = props.data, _d = props.icon, icon = _d === void 0 ? defaultIcon22 : _d, _e = props.label, label = _e === void 0 ? "ra.action.update" : _e, _f = props.mutationMode, mutationMode = _f === void 0 ? "pessimistic" : _f, onClick = props.onClick, _g = props.mutationOptions, mutationOptions = _g === void 0 ? {} : _g, rest = __rest43(props, ["confirmTitle", "confirmContent", "data", "icon", "label", "mutationMode", "onClick", "mutationOptions"]);
  var mutationMeta = mutationOptions.meta, _h = mutationOptions.onSuccess, onSuccess = _h === void 0 ? function() {
    notify("ra.notification.updated", {
      type: "info",
      messageArgs: { smart_count: 1 },
      undoable: mutationMode === "undoable"
    });
  } : _h, _j = mutationOptions.onError, onError = _j === void 0 ? function(error) {
    notify(typeof error === "string" ? error : error.message || "ra.notification.http_error", {
      type: "error",
      messageArgs: {
        _: typeof error === "string" ? error : error && error.message ? error.message : void 0
      }
    });
  } : _j, _k = mutationOptions.onSettled, onSettled = _k === void 0 ? function() {
    setOpen(false);
  } : _k, otherMutationOptions = __rest43(mutationOptions, ["meta", "onSuccess", "onError", "onSettled"]);
  var _l = useUpdate(), updateMany = _l[0], isLoading = _l[1].isLoading;
  var handleClick2 = function(e) {
    setOpen(true);
    e.stopPropagation();
  };
  var handleDialogClose = function() {
    setOpen(false);
  };
  var handleUpdate = function(e) {
    updateMany(resource, { id: record.id, data, meta: mutationMeta, previousData: record }, __assign46({ onSuccess, onError, onSettled, mutationMode }, otherMutationOptions));
    if (typeof onClick === "function") {
      onClick(e);
    }
  };
  return React347.createElement(
    import_react53.Fragment,
    null,
    React347.createElement(StyledButton11, __assign46({ onClick: handleClick2, label }, sanitizeRestProps9(rest)), icon),
    React347.createElement(Confirm, { isOpen, loading: isLoading, title: confirmTitle, content: confirmContent, translateOptions: {
      smart_count: 1,
      name: translate("resources.".concat(resource, ".forcedCaseName"), {
        smart_count: 1,
        _: import_inflection4.default.humanize(translate("resources.".concat(resource, ".name"), {
          smart_count: 1,
          _: import_inflection4.default.inflect(resource, 1)
        }), true)
      })
    }, onConfirm: handleUpdate, onClose: handleDialogClose })
  );
};
var sanitizeRestProps9 = function(_a13) {
  var filterValues = _a13.filterValues, label = _a13.label, rest = __rest43(_a13, ["filterValues", "label"]);
  return rest;
};
UpdateWithConfirmButton.propTypes = {
  confirmTitle: import_prop_types233.default.node,
  confirmContent: import_prop_types233.default.node,
  label: import_prop_types233.default.string,
  resource: import_prop_types233.default.string,
  selectedIds: import_prop_types233.default.arrayOf(import_prop_types233.default.any),
  icon: import_prop_types233.default.element,
  data: import_prop_types233.default.any.isRequired,
  mutationMode: import_prop_types233.default.oneOf(["pessimistic", "optimistic", "undoable"])
};
var PREFIX30 = "RaUpdateWithConfirmButton";
var StyledButton11 = styled_default2(Button5, {
  name: PREFIX30,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    color: theme.palette.primary.main,
    "&:hover": {
      backgroundColor: alpha(theme.palette.primary.main, 0.12),
      // Reset on mouse devices
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  };
});
var defaultIcon22 = React347.createElement(import_Update3.default, null);

// node_modules/ra-ui-materialui/dist/esm/button/UpdateWithUndoButton.js
var React348 = __toESM(require_react());
var import_prop_types234 = __toESM(require_prop_types());
var import_Update4 = __toESM(require_Update());
var __assign47 = function() {
  __assign47 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign47.apply(this, arguments);
};
var __rest44 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var UpdateWithUndoButton = function(props) {
  var record = useRecordContext(props);
  var notify = useNotify();
  var resource = useResourceContext(props);
  var refresh = useRefresh();
  var data = props.data, _a13 = props.label, label = _a13 === void 0 ? "ra.action.update" : _a13, _b = props.icon, icon = _b === void 0 ? defaultIcon23 : _b, onClick = props.onClick, _c = props.mutationOptions, mutationOptions = _c === void 0 ? {} : _c, rest = __rest44(props, ["data", "label", "icon", "onClick", "mutationOptions"]);
  var _d = useUpdate(), updateMany = _d[0], isLoading = _d[1].isLoading;
  var mutationMeta = mutationOptions.meta, _e = mutationOptions.onSuccess, onSuccess = _e === void 0 ? function() {
    notify("ra.notification.updated", {
      type: "info",
      messageArgs: { smart_count: 1 },
      undoable: true
    });
  } : _e, _f = mutationOptions.onError, onError = _f === void 0 ? function(error) {
    notify(typeof error === "string" ? error : error.message || "ra.notification.http_error", {
      type: "error",
      messageArgs: {
        _: typeof error === "string" ? error : error && error.message ? error.message : void 0
      }
    });
    refresh();
  } : _f, otherMutationOptions = __rest44(mutationOptions, ["meta", "onSuccess", "onError"]);
  var handleClick2 = function(e) {
    updateMany(resource, { id: record.id, data, meta: mutationMeta, previousData: record }, __assign47({ onSuccess, onError, mutationMode: "undoable" }, otherMutationOptions));
    if (typeof onClick === "function") {
      onClick(e);
    }
  };
  return React348.createElement(StyledButton12, __assign47({ onClick: handleClick2, label, disabled: isLoading }, sanitizeRestProps10(rest)), icon);
};
var defaultIcon23 = React348.createElement(import_Update4.default, null);
var sanitizeRestProps10 = function(_a13) {
  var filterValues = _a13.filterValues, label = _a13.label, selectedIds = _a13.selectedIds, rest = __rest44(_a13, ["filterValues", "label", "selectedIds"]);
  return rest;
};
UpdateWithUndoButton.propTypes = {
  label: import_prop_types234.default.string,
  resource: import_prop_types234.default.string,
  record: import_prop_types234.default.object,
  icon: import_prop_types234.default.element,
  data: import_prop_types234.default.any.isRequired
};
var PREFIX31 = "RaUpdateWithUndoButton";
var StyledButton12 = styled_default2(Button5, {
  name: PREFIX31,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    color: theme.palette.primary.main,
    "&:hover": {
      backgroundColor: alpha(theme.palette.primary.main, 0.12),
      // Reset on mouse devices
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  };
});

// node_modules/ra-ui-materialui/dist/esm/button/UpdateButton.js
var __assign48 = function() {
  __assign48 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign48.apply(this, arguments);
};
var __rest45 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var UpdateButton = function(props) {
  var _a13 = props.mutationMode, mutationMode = _a13 === void 0 ? "undoable" : _a13, rest = __rest45(props, ["mutationMode"]);
  return mutationMode === "undoable" ? React349.createElement(UpdateWithUndoButton, __assign48({}, rest)) : React349.createElement(UpdateWithConfirmButton, __assign48({ mutationMode }, rest));
};
UpdateButton.propTypes = {
  label: import_prop_types235.default.string,
  resource: import_prop_types235.default.string,
  selectedIds: import_prop_types235.default.arrayOf(import_prop_types235.default.any),
  mutationMode: import_prop_types235.default.oneOf(["pessimistic", "optimistic", "undoable"]),
  icon: import_prop_types235.default.element
};

// node_modules/ra-ui-materialui/dist/esm/auth/AuthError.js
var __assign49 = function() {
  __assign49 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign49.apply(this, arguments);
};
var __rest46 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var AuthError = function(props) {
  var className = props.className, _a13 = props.title, title = _a13 === void 0 ? "ra.page.error" : _a13, _b = props.message, message = _b === void 0 ? "ra.message.auth_error" : _b, rest = __rest46(props, ["className", "title", "message"]);
  var translate = useTranslate();
  return React350.createElement(
    Root11,
    __assign49({ className }, rest),
    React350.createElement(
      "div",
      { className: AuthErrorClasses.message },
      React350.createElement("h1", null, translate(title, { _: title })),
      React350.createElement("div", null, translate(message, { _: message })),
      React350.createElement(
        Button5,
        { to: "/login", label: "ra.auth.sign_in" },
        React350.createElement(import_Lock.default, null)
      )
    )
  );
};
AuthError.propTypes = {
  className: import_prop_types236.default.string,
  title: import_prop_types236.default.string,
  message: import_prop_types236.default.string
};
var PREFIX32 = "RaAuthError";
var AuthErrorClasses = {
  root: "".concat(PREFIX32, "-root"),
  message: "".concat(PREFIX32, "-message")
};
var Root11 = styled_default2("div", {
  name: PREFIX32,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    flexDirection: "column",
    justifyContent: "center"
  }, _b[theme.breakpoints.up("md")] = {
    height: "100%"
  }, _b[theme.breakpoints.down("xl")] = {
    height: "100vh",
    marginTop: "-3em"
  }, _b["& .".concat(AuthErrorClasses.message)] = {
    textAlign: "center",
    fontFamily: "Roboto, sans-serif",
    opacity: 0.5,
    margin: "0 1em"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/auth/AuthCallback.js
var AuthCallback = function() {
  var error = useHandleAuthCallback().error;
  var hasOneSecondPassed = useTimeout(1e3);
  if (error) {
    return React351.createElement(AuthError, { message: error ? error.message : void 0 });
  }
  return hasOneSecondPassed ? React351.createElement(Loading, null) : null;
};

// node_modules/ra-ui-materialui/dist/esm/auth/Login.js
var React429 = __toESM(require_react());
var import_react106 = __toESM(require_react());
var import_prop_types273 = __toESM(require_prop_types());
var import_Lock2 = __toESM(require_Lock());

// node_modules/ra-ui-materialui/dist/esm/auth/LoginForm.js
var React428 = __toESM(require_react());
var import_prop_types272 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/ArrayInput.js
var React354 = __toESM(require_react());
var import_react56 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/input/InputHelperText.js
var React352 = __toESM(require_react());
var import_react54 = __toESM(require_react());
var InputHelperText = function(props) {
  var helperText = props.helperText, touched = props.touched, error = props.error;
  var translate = useTranslate();
  if (touched && error) {
    return React352.createElement(ValidationError_default, { error });
  }
  if (helperText === false) {
    return null;
  }
  if ((0, import_react54.isValidElement)(helperText)) {
    return helperText;
  }
  if (typeof helperText === "string") {
    return React352.createElement(React352.Fragment, null, translate(helperText, { _: helperText }));
  }
  return React352.createElement("span", { dangerouslySetInnerHTML: defaultInnerHTML });
};
var defaultInnerHTML = { __html: "&#8203;" };

// node_modules/ra-ui-materialui/dist/esm/input/sanitizeInputRestProps.js
var __rest47 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var sanitizeInputRestProps = function(_a13) {
  var afterSubmit = _a13.afterSubmit, allowNull = _a13.allowNull, alwaysOn = _a13.alwaysOn, beforeSubmit = _a13.beforeSubmit, component = _a13.component, data = _a13.data, defaultValue = _a13.defaultValue, error = _a13.error, format = _a13.format, formatOnBlur = _a13.formatOnBlur, formClassName = _a13.formClassName, initialValue = _a13.initialValue, initializeForm = _a13.initializeForm, input = _a13.input, isEqual9 = _a13.isEqual, isRequired2 = _a13.isRequired, label = _a13.label, limitChoicesToValue = _a13.limitChoicesToValue, locale = _a13.locale, meta = _a13.meta, multiple = _a13.multiple, name = _a13.name, options = _a13.options, optionText = _a13.optionText, optionValue = _a13.optionValue, parse2 = _a13.parse, record = _a13.record, ref = _a13.ref, refetch = _a13.refetch, render = _a13.render, resource = _a13.resource, setFilter = _a13.setFilter, setPagination = _a13.setPagination, setSort = _a13.setSort, shouldUnregister = _a13.shouldUnregister, source = _a13.source, submitError = _a13.submitError, subscription = _a13.subscription, textAlign2 = _a13.textAlign, translate = _a13.translate, translateChoice = _a13.translateChoice, validate = _a13.validate, validateFields = _a13.validateFields, value = _a13.value, rest = __rest47(_a13, ["afterSubmit", "allowNull", "alwaysOn", "beforeSubmit", "component", "data", "defaultValue", "error", "format", "formatOnBlur", "formClassName", "initialValue", "initializeForm", "input", "isEqual", "isRequired", "label", "limitChoicesToValue", "locale", "meta", "multiple", "name", "options", "optionText", "optionValue", "parse", "record", "ref", "refetch", "render", "resource", "setFilter", "setPagination", "setSort", "shouldUnregister", "source", "submitError", "subscription", "textAlign", "translate", "translateChoice", "validate", "validateFields", "value"]);
  return rest;
};

// node_modules/ra-ui-materialui/dist/esm/Labeled.js
var React353 = __toESM(require_react());
var __assign50 = function() {
  __assign50 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign50.apply(this, arguments);
};
var __rest48 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a2;
var Labeled = function(_a13) {
  var _b;
  var _c, _d;
  var children2 = _a13.children, _e = _a13.className, className = _e === void 0 ? "" : _e, _f = _a13.color, color2 = _f === void 0 ? "textSecondary" : _f, _g = _a13.component, component = _g === void 0 ? "span" : _g, fullWidth = _a13.fullWidth, isRequired2 = _a13.isRequired, label = _a13.label, resource = _a13.resource, source = _a13.source, rest = __rest48(_a13, ["children", "className", "color", "component", "fullWidth", "isRequired", "label", "resource", "source"]);
  return React353.createElement(
    Root12,
    __assign50({
      // @ts-ignore https://github.com/mui/material-ui/issues/29875
      component,
      className: clsx_m_default(className, (_b = {}, _b[LabeledClasses.fullWidth] = fullWidth, _b))
    }, rest),
    label !== false && children2.props.label !== false && typeof children2.type !== "string" && // @ts-ignore
    ((_c = children2.type) === null || _c === void 0 ? void 0 : _c.displayName) !== "Labeled" && // @ts-ignore
    ((_d = children2.type) === null || _d === void 0 ? void 0 : _d.displayName) !== "Labeled" ? React353.createElement(
      Typography_default,
      { color: color2, className: LabeledClasses.label },
      React353.createElement(FieldTitle_default, { label: label || children2.props.label, source: source || children2.props.source, resource, isRequired: isRequired2 })
    ) : null,
    children2
  );
};
Labeled.displayName = "Labeled";
var PREFIX33 = "RaLabeled";
var LabeledClasses = {
  label: "".concat(PREFIX33, "-label"),
  fullWidth: "".concat(PREFIX33, "-fullWidth")
};
var Root12 = styled_default2(Stack_default2, {
  name: PREFIX33,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a2 = {
  display: "inline-flex",
  marginBottom: "0.2em"
}, _a2["&.".concat(LabeledClasses.fullWidth)] = {
  width: "100%"
}, _a2["& .".concat(LabeledClasses.label)] = {
  fontSize: "0.75em",
  marginBottom: "0.2em"
}, _a2));

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/ArrayInputContext.js
var import_react55 = __toESM(require_react());
var ArrayInputContext = (0, import_react55.createContext)(void 0);

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/ArrayInput.js
var __assign51 = function() {
  __assign51 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign51.apply(this, arguments);
};
var __awaiter2 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator2 = function(thisArg, body2) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_5 = 0)), _5)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __rest49 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ArrayInput = function(props) {
  var _a13, _b;
  var className = props.className, defaultValue = props.defaultValue, label = props.label, isFetching = props.isFetching, isLoading = props.isLoading, children2 = props.children, helperText = props.helperText, record = props.record, resourceFromProps = props.resource, source = props.source, validate = props.validate, variant = props.variant, disabled = props.disabled, _c = props.margin, margin2 = _c === void 0 ? "dense" : _c, rest = __rest49(props, ["className", "defaultValue", "label", "isFetching", "isLoading", "children", "helperText", "record", "resource", "source", "validate", "variant", "disabled", "margin"]);
  var formGroupName = useFormGroupContext();
  var formGroups = useFormGroups();
  var sanitizedValidate = Array.isArray(validate) ? composeSyncValidators(validate) : validate;
  var getValidationErrorMessage = useGetValidationErrorMessage();
  var _d = useFormContext(), getFieldState = _d.getFieldState, formState = _d.formState, getValues = _d.getValues, register = _d.register, unregister = _d.unregister;
  var fieldProps = useFieldArray({
    name: source,
    rules: {
      validate: function(value) {
        return __awaiter2(void 0, void 0, void 0, function() {
          var error2;
          return __generator2(this, function(_a14) {
            switch (_a14.label) {
              case 0:
                if (!sanitizedValidate)
                  return [2, true];
                return [4, sanitizedValidate(value, getValues(), props)];
              case 1:
                error2 = _a14.sent();
                if (!error2)
                  return [2, true];
                return [2, getValidationErrorMessage(error2)];
            }
          });
        });
      }
    }
  });
  var isSubmitted = formState.isSubmitted;
  (0, import_react56.useEffect)(function() {
    register(source);
    formGroups.registerField(source, formGroupName);
    return function() {
      unregister(source, { keepValue: true });
      formGroups.unregisterField(source, formGroupName);
    };
  }, [register, unregister, source, formGroups, formGroupName]);
  useApplyInputDefaultValues({
    inputProps: props,
    isArrayInput: true,
    fieldArrayInputControl: fieldProps
  });
  var _e = getFieldState(source, formState), isDirty = _e.isDirty, error = _e.error;
  if (isLoading) {
    return React354.createElement(
      Labeled,
      { label, className },
      React354.createElement(LinearProgress3, null)
    );
  }
  var renderHelperText = helperText !== false || (isDirty || isSubmitted) && !!error;
  return React354.createElement(
    Root13,
    __assign51({ fullWidth: true, margin: margin2, className: clsx_m_default("ra-input", "ra-input-".concat(source), ArrayInputClasses.root, className), error: (isDirty || isSubmitted) && !!error }, sanitizeInputRestProps(rest)),
    React354.createElement(
      InputLabel_default,
      { htmlFor: source, className: ArrayInputClasses.label, shrink: true, error: (isDirty || isSubmitted) && !!error },
      React354.createElement(FieldTitle_default, { label, source, resource: resourceFromProps, isRequired: isRequired(validate) })
    ),
    React354.createElement(ArrayInputContext.Provider, { value: fieldProps }, (0, import_react56.cloneElement)(import_react56.Children.only(children2), __assign51(__assign51({}, fieldProps), { record, resource: resourceFromProps, source, variant, margin: margin2, disabled }))),
    renderHelperText ? React354.createElement(
      FormHelperText_default,
      { error: (isDirty || isSubmitted) && !!error },
      React354.createElement(InputHelperText, {
        touched: isDirty || isSubmitted,
        // root property is applicable to built-in validation only,
        // Resolvers are yet to support useFieldArray root level validation.
        // Reference: https://react-hook-form.com/docs/usefieldarray
        error: (_b = (_a13 = error === null || error === void 0 ? void 0 : error.root) === null || _a13 === void 0 ? void 0 : _a13.message) !== null && _b !== void 0 ? _b : error === null || error === void 0 ? void 0 : error.message,
        helperText
      })
    ) : null
  );
};
var getArrayInputError = function(error) {
  if (Array.isArray(error)) {
    return void 0;
  }
  return error;
};
var PREFIX34 = "RaArrayInput";
var ArrayInputClasses = {
  root: "".concat(PREFIX34, "-root"),
  label: "".concat(PREFIX34, "-label")
};
var Root13 = styled_default2(FormControl_default, {
  name: PREFIX34,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    marginTop: 0
  }, _b["& .".concat(ArrayInputClasses.label)] = {
    position: "relative",
    top: theme.spacing(0.5),
    left: theme.spacing(-1.5)
  }, _b["& .".concat(ArrayInputClasses.root)] = {
    // nested ArrayInput
    paddingLeft: theme.spacing(2)
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/SimpleFormIterator.js
var React360 = __toESM(require_react());
var import_react63 = __toESM(require_react());
var import_get3 = __toESM(require_get());
var import_prop_types237 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/useArrayInput.js
var import_react57 = __toESM(require_react());
var useArrayInput = function(props) {
  var context = (0, import_react57.useContext)(ArrayInputContext);
  var memo24 = (0, import_react57.useMemo)(function() {
    return {
      append: props === null || props === void 0 ? void 0 : props.append,
      fields: props === null || props === void 0 ? void 0 : props.fields,
      insert: props === null || props === void 0 ? void 0 : props.insert,
      move: props === null || props === void 0 ? void 0 : props.move,
      prepend: props === null || props === void 0 ? void 0 : props.prepend,
      remove: props === null || props === void 0 ? void 0 : props.remove,
      replace: props === null || props === void 0 ? void 0 : props.replace,
      swap: props === null || props === void 0 ? void 0 : props.swap,
      update: props === null || props === void 0 ? void 0 : props.update
    };
  }, [props]);
  if (props === null || props === void 0 ? void 0 : props.fields) {
    return memo24;
  }
  return context;
};

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/useSimpleFormIteratorStyles.js
var SimpleFormIteratorPrefix = "RaSimpleFormIterator";
var SimpleFormIteratorClasses = {
  action: "".concat(SimpleFormIteratorPrefix, "-action"),
  add: "".concat(SimpleFormIteratorPrefix, "-add"),
  clear: "".concat(SimpleFormIteratorPrefix, "-clear"),
  form: "".concat(SimpleFormIteratorPrefix, "-form"),
  index: "".concat(SimpleFormIteratorPrefix, "-index"),
  inline: "".concat(SimpleFormIteratorPrefix, "-inline"),
  line: "".concat(SimpleFormIteratorPrefix, "-line"),
  list: "".concat(SimpleFormIteratorPrefix, "-list"),
  buttons: "".concat(SimpleFormIteratorPrefix, "-buttons")
};

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/SimpleFormIteratorContext.js
var import_react58 = __toESM(require_react());
var SimpleFormIteratorContext = (0, import_react58.createContext)(void 0);

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/SimpleFormIteratorItem.js
var React355 = __toESM(require_react());
var import_react61 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/useSimpleFormIterator.js
var import_react59 = __toESM(require_react());
var useSimpleFormIterator = function() {
  return (0, import_react59.useContext)(SimpleFormIteratorContext);
};

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/SimpleFormIteratorItemContext.js
var import_react60 = __toESM(require_react());
var SimpleFormIteratorItemContext = (0, import_react60.createContext)(void 0);

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/SimpleFormIteratorItem.js
var __assign52 = function() {
  __assign52 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign52.apply(this, arguments);
};
var __rest50 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SimpleFormIteratorItem = React355.forwardRef(function(props, ref) {
  var children2 = props.children, disabled = props.disabled, disableReordering = props.disableReordering, disableRemove = props.disableRemove, getItemLabel = props.getItemLabel, index2 = props.index, _a13 = props.inline, inline2 = _a13 === void 0 ? false : _a13, member = props.member, record = props.record, removeButton = props.removeButton, reOrderButtons = props.reOrderButtons, resource = props.resource, source = props.source;
  var _b = useSimpleFormIterator(), total = _b.total, reOrder = _b.reOrder, remove = _b.remove;
  var disableRemoveField = function(record2) {
    if (typeof disableRemove === "boolean") {
      return disableRemove;
    }
    return disableRemove && disableRemove(record2);
  };
  var handleRemoveButtonClick = function(originalOnClickHandler, index3) {
    return function(event) {
      remove(index3);
      if (originalOnClickHandler) {
        originalOnClickHandler(event);
      }
    };
  };
  var context = (0, import_react61.useMemo)(function() {
    return {
      index: index2,
      total,
      reOrder: function(newIndex) {
        return reOrder(index2, newIndex);
      },
      remove: function() {
        return remove(index2);
      }
    };
  }, [index2, total, reOrder, remove]);
  var label = typeof getItemLabel === "function" ? getItemLabel(index2) : getItemLabel;
  return React355.createElement(
    SimpleFormIteratorItemContext.Provider,
    { value: context },
    React355.createElement(
      "li",
      { className: SimpleFormIteratorClasses.line, ref },
      label && React355.createElement(Typography_default, { variant: "body2", className: SimpleFormIteratorClasses.index }, label),
      React355.createElement("section", { className: clsx_m_default(SimpleFormIteratorClasses.form, inline2 && SimpleFormIteratorClasses.inline) }, import_react61.Children.map(children2, function(input, index22) {
        if (!(0, import_react61.isValidElement)(input)) {
          return null;
        }
        var _a14 = input.props, source2 = _a14.source, inputProps = __rest50(_a14, ["source"]);
        return (0, import_react61.cloneElement)(input, __assign52({ source: source2 ? "".concat(member, ".").concat(source2) : member, index: source2 ? void 0 : index22, resource, disabled }, inputProps));
      })),
      !disabled && React355.createElement(
        "span",
        { className: SimpleFormIteratorClasses.action },
        !disableReordering && (0, import_react61.cloneElement)(reOrderButtons, {
          index: index2,
          max: total,
          reOrder,
          className: clsx_m_default("button-reorder", "button-reorder-".concat(source, "-").concat(index2))
        }),
        !disableRemoveField(record) && (0, import_react61.cloneElement)(removeButton, {
          onClick: handleRemoveButtonClick(removeButton.props.onClick, index2),
          className: clsx_m_default("button-remove", "button-remove-".concat(source, "-").concat(index2))
        })
      )
    )
  );
});

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/AddItemButton.js
var React356 = __toESM(require_react());
var import_AddCircleOutline = __toESM(require_AddCircleOutline());
var __assign53 = function() {
  __assign53 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign53.apply(this, arguments);
};
var AddItemButton = function(props) {
  var add = useSimpleFormIterator().add;
  return React356.createElement(
    IconButtonWithTooltip,
    __assign53({ label: "ra.action.add", size: "small", onClick: function() {
      return add();
    }, color: "primary" }, props),
    React356.createElement(import_AddCircleOutline.default, { fontSize: "small" })
  );
};

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/RemoveItemButton.js
var React357 = __toESM(require_react());
var import_RemoveCircleOutline = __toESM(require_RemoveCircleOutline());

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/useSimpleFormIteratorItem.js
var import_react62 = __toESM(require_react());
var useSimpleFormIteratorItem = function() {
  return (0, import_react62.useContext)(SimpleFormIteratorItemContext);
};

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/RemoveItemButton.js
var __assign54 = function() {
  __assign54 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign54.apply(this, arguments);
};
var RemoveItemButton = function(props) {
  var remove = useSimpleFormIteratorItem().remove;
  return React357.createElement(
    IconButtonWithTooltip,
    __assign54({ label: "ra.action.remove", size: "small", onClick: function() {
      return remove();
    }, color: "warning" }, props),
    React357.createElement(import_RemoveCircleOutline.default, { fontSize: "small" })
  );
};

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/ReOrderButtons.js
var React358 = __toESM(require_react());
var import_ArrowCircleUp = __toESM(require_ArrowCircleUp());
var import_ArrowCircleDown = __toESM(require_ArrowCircleDown());
var ReOrderButtons = function(_a13) {
  var className = _a13.className;
  var _b = useSimpleFormIteratorItem(), index2 = _b.index, total = _b.total, reOrder = _b.reOrder;
  return React358.createElement(
    "span",
    { className },
    React358.createElement(
      IconButtonWithTooltip,
      { label: "ra.action.move_up", size: "small", onClick: function() {
        return reOrder(index2 - 1);
      }, disabled: index2 <= 0, color: "primary" },
      React358.createElement(import_ArrowCircleUp.default, { fontSize: "small" })
    ),
    React358.createElement(
      IconButtonWithTooltip,
      { label: "ra.action.move_down", size: "small", onClick: function() {
        return reOrder(index2 + 1);
      }, disabled: total == null || index2 >= total - 1, color: "primary" },
      React358.createElement(import_ArrowCircleDown.default, { fontSize: "small" })
    )
  );
};

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/ClearArrayButton.js
var React359 = __toESM(require_react());
var import_HighlightOff = __toESM(require_HighlightOff());
var __assign55 = function() {
  __assign55 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign55.apply(this, arguments);
};
var ClearArrayButton = function(props) {
  return React359.createElement(
    IconButtonWithTooltip,
    __assign55({ label: "ra.action.clear_array_input", size: "small", color: "warning" }, props),
    React359.createElement(import_HighlightOff.default, { fontSize: "small" })
  );
};

// node_modules/ra-ui-materialui/dist/esm/input/ArrayInput/SimpleFormIterator.js
var __rest51 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SimpleFormIterator = function(props) {
  var _a13 = props.addButton, addButton = _a13 === void 0 ? React360.createElement(AddItemButton, null) : _a13, _b = props.removeButton, removeButton = _b === void 0 ? React360.createElement(RemoveItemButton, null) : _b, _c = props.reOrderButtons, reOrderButtons = _c === void 0 ? React360.createElement(ReOrderButtons, null) : _c, children2 = props.children, className = props.className, resource = props.resource, source = props.source, disabled = props.disabled, _d = props.disableAdd, disableAdd = _d === void 0 ? false : _d, disableClear = props.disableClear, _e = props.disableRemove, disableRemove = _e === void 0 ? false : _e, disableReordering = props.disableReordering, inline2 = props.inline, _f = props.getItemLabel, getItemLabel = _f === void 0 ? false : _f, fullWidth = props.fullWidth, sx = props.sx;
  var _g = (0, import_react63.useState)(false), confirmIsOpen = _g[0], setConfirmIsOpen = _g[1];
  var _h = useArrayInput(props), append2 = _h.append, fields = _h.fields, move = _h.move, remove = _h.remove, replace2 = _h.replace;
  var resetField = useFormContext().resetField;
  var translate = useTranslate();
  var record = useRecordContext(props);
  var initialDefaultValue = (0, import_react63.useRef)({});
  var removeField = (0, import_react63.useCallback)(function(index2) {
    remove(index2);
  }, [remove]);
  if (fields.length > 0) {
    var _j = fields[0], id = _j.id, rest = __rest51(_j, ["id"]);
    initialDefaultValue.current = rest;
    for (var k in initialDefaultValue.current)
      initialDefaultValue.current[k] = null;
  }
  var addField = (0, import_react63.useCallback)(function(item) {
    if (item === void 0) {
      item = void 0;
    }
    var defaultValue = item;
    if (item == null) {
      defaultValue = initialDefaultValue.current;
      if (import_react63.Children.count(children2) === 1 && React360.isValidElement(import_react63.Children.only(children2)) && // @ts-ignore
      !import_react63.Children.only(children2).props.source && // Make sure it's not a FormDataConsumer
      import_react63.Children.map(children2, function(input) {
        return React360.isValidElement(input) && input.type !== FormDataConsumer_default;
      }).some(Boolean)) {
        defaultValue = "";
      } else {
        defaultValue = defaultValue || {};
        import_react63.Children.forEach(children2, function(input) {
          var _a14;
          if (React360.isValidElement(input) && input.type !== FormDataConsumer_default && input.props.source) {
            defaultValue[input.props.source] = (_a14 = input.props.defaultValue) !== null && _a14 !== void 0 ? _a14 : null;
          }
        });
      }
    }
    append2(defaultValue);
    resetField("".concat(source, ".").concat(fields.length), { defaultValue });
  }, [append2, children2, resetField, source, fields.length]);
  var handleAddButtonClick = function(originalOnClickHandler) {
    return function(event) {
      addField();
      if (originalOnClickHandler) {
        originalOnClickHandler(event);
      }
    };
  };
  var handleReorder = (0, import_react63.useCallback)(function(origin, destination) {
    move(origin, destination);
  }, [move]);
  var handleArrayClear = (0, import_react63.useCallback)(function() {
    replace2([]);
    setConfirmIsOpen(false);
  }, [replace2]);
  var records = (0, import_get3.default)(record, source);
  var context = (0, import_react63.useMemo)(function() {
    return {
      total: fields.length,
      add: addField,
      remove: removeField,
      reOrder: handleReorder,
      source
    };
  }, [addField, fields.length, handleReorder, removeField, source]);
  return fields ? React360.createElement(
    SimpleFormIteratorContext.Provider,
    { value: context },
    React360.createElement(
      Root14,
      { className: clsx_m_default(className, fullWidth && "fullwidth", disabled && "disabled"), sx },
      React360.createElement("ul", { className: SimpleFormIteratorClasses.list }, fields.map(function(member, index2) {
        return React360.createElement(SimpleFormIteratorItem, { key: member.id, disabled, disableRemove, disableReordering, fields, getItemLabel, index: index2, member: "".concat(source, ".").concat(index2), onRemoveField: removeField, onReorder: handleReorder, record: records && records[index2] || {}, removeButton, reOrderButtons, resource, source, inline: inline2 }, children2);
      })),
      !disabled && !(disableAdd && (disableClear || disableRemove)) && React360.createElement(
        "div",
        { className: SimpleFormIteratorClasses.buttons },
        !disableAdd && React360.createElement("div", { className: SimpleFormIteratorClasses.add }, (0, import_react63.cloneElement)(addButton, {
          className: clsx_m_default("button-add", "button-add-".concat(source)),
          onClick: handleAddButtonClick(addButton.props.onClick)
        })),
        fields.length > 0 && !disableClear && !disableRemove && React360.createElement(
          "div",
          { className: SimpleFormIteratorClasses.clear },
          React360.createElement(Confirm, { isOpen: confirmIsOpen, title: translate("ra.action.clear_array_input"), content: translate("ra.message.clear_array_input"), onConfirm: handleArrayClear, onClose: function() {
            return setConfirmIsOpen(false);
          } }),
          React360.createElement(ClearArrayButton, { onClick: function() {
            return setConfirmIsOpen(true);
          } })
        )
      )
    )
  ) : null;
};
SimpleFormIterator.propTypes = {
  addButton: import_prop_types237.default.element,
  removeButton: import_prop_types237.default.element,
  children: import_prop_types237.default.node,
  className: import_prop_types237.default.string,
  field: import_prop_types237.default.object,
  fields: import_prop_types237.default.array,
  fieldState: import_prop_types237.default.object,
  formState: import_prop_types237.default.object,
  fullWidth: import_prop_types237.default.bool,
  inline: import_prop_types237.default.bool,
  record: import_prop_types237.default.object,
  source: import_prop_types237.default.string,
  resource: import_prop_types237.default.string,
  translate: import_prop_types237.default.func,
  disableAdd: import_prop_types237.default.bool,
  disableRemove: import_prop_types237.default.oneOfType([import_prop_types237.default.func, import_prop_types237.default.bool]),
  TransitionProps: import_prop_types237.default.shape({})
};
var Root14 = styled_default2("div", {
  name: SimpleFormIteratorPrefix,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b, _c, _d;
  var theme = _a13.theme;
  return _b = {
    "& > ul": {
      padding: 0,
      marginTop: 0,
      marginBottom: 0
    },
    "& > ul > li:last-child": {
      // hide the last separator
      borderBottom: "none"
    }
  }, _b["& .".concat(SimpleFormIteratorClasses.line)] = (_c = {
    display: "flex",
    listStyleType: "none",
    borderBottom: "solid 1px ".concat(theme.palette.divider)
  }, _c[theme.breakpoints.down("sm")] = { display: "block" }, _c), _b["& .".concat(SimpleFormIteratorClasses.index)] = (_d = {
    display: "flex",
    alignItems: "top",
    marginRight: theme.spacing(1),
    marginTop: theme.spacing(1)
  }, _d[theme.breakpoints.down("md")] = { display: "none" }, _d), _b["& .".concat(SimpleFormIteratorClasses.form)] = {
    alignItems: "flex-start",
    display: "flex",
    flexDirection: "column"
  }, _b["&.fullwidth > ul > li > .".concat(SimpleFormIteratorClasses.form)] = {
    flex: 2
  }, _b["& .".concat(SimpleFormIteratorClasses.inline)] = {
    flexDirection: "row",
    columnGap: "1em",
    flexWrap: "wrap"
  }, _b["& .".concat(SimpleFormIteratorClasses.action)] = {
    marginTop: theme.spacing(0.5),
    visibility: "hidden",
    "@media(hover:none)": {
      visibility: "visible"
    }
  }, _b["& .".concat(SimpleFormIteratorClasses.buttons)] = {
    display: "flex"
  }, _b["& .".concat(SimpleFormIteratorClasses.add)] = {
    borderBottom: "none"
  }, _b["& .".concat(SimpleFormIteratorClasses.clear)] = {
    borderBottom: "none"
  }, _b["& .".concat(SimpleFormIteratorClasses.line, ":hover > .").concat(SimpleFormIteratorClasses.action)] = {
    visibility: "visible"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/input/AutocompleteInput.js
var React362 = __toESM(require_react());
var import_react65 = __toESM(require_react());
var import_debounce9 = __toESM(require_debounce());
var import_get4 = __toESM(require_get());
var import_isEqual3 = __toESM(require_isEqual());

// node_modules/ra-ui-materialui/dist/esm/input/useSupportCreateSuggestion.js
var React361 = __toESM(require_react());
var import_react64 = __toESM(require_react());
var import_set = __toESM(require_set());
var __awaiter3 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator3 = function(thisArg, body2) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_5 = 0)), _5)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __spreadArray3 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var useSupportCreateSuggestion = function(options) {
  var create2 = options.create, _a13 = options.createLabel, createLabel = _a13 === void 0 ? "ra.action.create" : _a13, _b = options.createItemLabel, createItemLabel = _b === void 0 ? "ra.action.create_item" : _b, _c = options.createValue, createValue = _c === void 0 ? "@@ra-create" : _c, _d = options.optionText, optionText = _d === void 0 ? "name" : _d, filter = options.filter, handleChange = options.handleChange, onCreate = options.onCreate;
  var translate = useTranslate();
  var _e = (0, import_react64.useState)(false), renderOnCreate = _e[0], setRenderOnCreate = _e[1];
  var filterRef = (0, import_react64.useRef)(filter);
  (0, import_react64.useEffect)(function() {
    if (filterRef.current !== filter && filter !== "") {
      filterRef.current = filter;
    }
  }, [filter]);
  var context = (0, import_react64.useMemo)(function() {
    return {
      filter: filterRef.current,
      onCancel: function() {
        return setRenderOnCreate(false);
      },
      onCreate: function(item) {
        setRenderOnCreate(false);
        handleChange(item);
      }
    };
  }, [handleChange]);
  return {
    createId: createValue,
    getCreateItem: function() {
      if (typeof optionText !== "string") {
        return {
          id: createValue,
          name: filter && createItemLabel ? translate(createItemLabel, {
            item: filter,
            _: createItemLabel
          }) : translate(createLabel, { _: createLabel })
        };
      }
      return (0, import_set.default)({
        id: createValue
      }, optionText, filter && createItemLabel ? translate(createItemLabel, {
        item: filter,
        _: createItemLabel
      }) : translate(createLabel, { _: createLabel }));
    },
    handleChange: function(eventOrValue) {
      return __awaiter3(void 0, void 0, void 0, function() {
        var value, finalValue, newSuggestion;
        var _a14;
        return __generator3(this, function(_b2) {
          switch (_b2.label) {
            case 0:
              value = ((_a14 = eventOrValue === null || eventOrValue === void 0 ? void 0 : eventOrValue.target) === null || _a14 === void 0 ? void 0 : _a14.value) || eventOrValue;
              finalValue = Array.isArray(value) ? __spreadArray3([], value, true).pop() : value;
              if (!((finalValue === null || finalValue === void 0 ? void 0 : finalValue.id) === createValue || finalValue === createValue))
                return [3, 3];
              if (!!(0, import_react64.isValidElement)(create2))
                return [3, 2];
              return [4, onCreate(filter)];
            case 1:
              newSuggestion = _b2.sent();
              if (newSuggestion) {
                handleChange(newSuggestion);
                return [
                  2
                  /*return*/
                ];
              }
              return [3, 3];
            case 2:
              setRenderOnCreate(true);
              return [
                2
                /*return*/
              ];
            case 3:
              handleChange(eventOrValue);
              return [
                2
                /*return*/
              ];
          }
        });
      });
    },
    createElement: renderOnCreate && (0, import_react64.isValidElement)(create2) ? React361.createElement(CreateSuggestionContext.Provider, { value: context }, create2) : null
  };
};
var CreateSuggestionContext = (0, import_react64.createContext)(void 0);
var useCreateSuggestionContext = function() {
  return (0, import_react64.useContext)(CreateSuggestionContext);
};

// node_modules/ra-ui-materialui/dist/esm/input/AutocompleteInput.js
var __assign56 = function() {
  __assign56 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign56.apply(this, arguments);
};
var __rest52 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray4 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var defaultFilterOptions2 = createFilterOptions();
var AutocompleteInput = function(props) {
  var choicesProp = props.choices, className = props.className, _a13 = props.clearOnBlur, clearOnBlur = _a13 === void 0 ? true : _a13, _b = props.clearText, clearText = _b === void 0 ? "ra.action.clear_input_value" : _b, _c = props.closeText, closeText = _c === void 0 ? "ra.action.close" : _c, create2 = props.create, createLabel = props.createLabel, createItemLabel = props.createItemLabel, createValue = props.createValue, _d = props.debounce, debounceDelay = _d === void 0 ? 250 : _d, defaultValue = props.defaultValue, emptyText = props.emptyText, _e = props.emptyValue, emptyValue = _e === void 0 ? "" : _e, fieldOverride = props.field, format = props.format, helperText = props.helperText, idOverride = props.id, inputText = props.inputText, isFetchingProp = props.isFetching, isLoadingProp = props.isLoading, isRequiredOverride = props.isRequired, label = props.label, limitChoicesToValue = props.limitChoicesToValue, matchSuggestion = props.matchSuggestion, margin2 = props.margin, fieldStateOverride = props.fieldState, _f = props.filterToQuery, filterToQueryProp = _f === void 0 ? DefaultFilterToQuery : _f, formStateOverride = props.formState, _g = props.multiple, multiple = _g === void 0 ? false : _g, noOptionsText = props.noOptionsText, onBlur = props.onBlur, onChange = props.onChange, onCreate = props.onCreate, _h = props.openText, openText = _h === void 0 ? "ra.action.open" : _h, optionText = props.optionText, optionValue = props.optionValue, parse2 = props.parse, resourceProp = props.resource, shouldRenderSuggestions = props.shouldRenderSuggestions, setFilter = props.setFilter, size2 = props.size, sourceProp = props.source, _j = props.suggestionLimit, suggestionLimit = _j === void 0 ? Infinity : _j, TextFieldProps = props.TextFieldProps, translateChoice = props.translateChoice, validate = props.validate, variant = props.variant, rest = __rest52(props, ["choices", "className", "clearOnBlur", "clearText", "closeText", "create", "createLabel", "createItemLabel", "createValue", "debounce", "defaultValue", "emptyText", "emptyValue", "field", "format", "helperText", "id", "inputText", "isFetching", "isLoading", "isRequired", "label", "limitChoicesToValue", "matchSuggestion", "margin", "fieldState", "filterToQuery", "formState", "multiple", "noOptionsText", "onBlur", "onChange", "onCreate", "openText", "optionText", "optionValue", "parse", "resource", "shouldRenderSuggestions", "setFilter", "size", "source", "suggestionLimit", "TextFieldProps", "translateChoice", "validate", "variant"]);
  var filterToQuery = useEvent(filterToQueryProp);
  var _k = useChoicesContext({
    choices: choicesProp,
    isFetching: isFetchingProp,
    isLoading: isLoadingProp,
    resource: resourceProp,
    source: sourceProp
  }), allChoices = _k.allChoices, isLoading = _k.isLoading, fetchError = _k.error, resource = _k.resource, source = _k.source, setFilters = _k.setFilters, isFromReference = _k.isFromReference;
  var translate = useTranslate();
  var _l = useInput(__assign56({ defaultValue, id: idOverride, field: fieldOverride, fieldState: fieldStateOverride, formState: formStateOverride, isRequired: isRequiredOverride, onBlur, onChange, parse: parse2, format, resource, source, validate }, rest)), id = _l.id, field = _l.field, isRequired2 = _l.isRequired, _m = _l.fieldState, error = _m.error, invalid = _m.invalid, isTouched = _m.isTouched, isSubmitted = _l.formState.isSubmitted;
  var finalChoices = (0, import_react65.useMemo)(function() {
    var _a14;
    return emptyText == void 0 || isRequired2 || multiple ? allChoices : [
      (_a14 = {}, _a14[optionValue || "id"] = emptyValue, _a14[typeof optionText === "string" ? optionText : "name"] = translate(emptyText, {
        _: emptyText
      }), _a14)
    ].concat(allChoices);
  }, [
    allChoices,
    emptyValue,
    emptyText,
    isRequired2,
    multiple,
    optionText,
    optionValue,
    translate
  ]);
  var selectedChoice = useSelectedChoice(field.value, {
    choices: finalChoices,
    // @ts-ignore
    multiple,
    optionValue
  });
  (0, import_react65.useEffect)(function() {
    if (emptyValue == null) {
      throw new Error("emptyValue being set to null or undefined is not supported. Use parse to turn the empty string into null.");
    }
  }, [emptyValue]);
  (0, import_react65.useEffect)(function() {
    if ((0, import_react65.isValidElement)(optionText) && emptyText != void 0) {
      throw new Error("optionText of type React element is not supported when setting emptyText");
    }
    if ((0, import_react65.isValidElement)(optionText) && inputText == void 0) {
      throw new Error("\nIf you provided a React element for the optionText prop, you must also provide the inputText prop (used for the text input)");
    }
    if ((0, import_react65.isValidElement)(optionText) && !isFromReference && // eslint-disable-next-line eqeqeq
    matchSuggestion == void 0) {
      throw new Error("\nIf you provided a React element for the optionText prop, you must also provide the matchSuggestion prop (used to match the user input with a choice)");
    }
  }, [optionText, inputText, matchSuggestion, emptyText, isFromReference]);
  (0, import_react65.useEffect)(function() {
    warning_default(
      /* eslint-disable eqeqeq */
      shouldRenderSuggestions != void 0 && noOptionsText == void 0,
      "When providing a shouldRenderSuggestions function, we recommend you also provide the noOptionsText prop and set it to a text explaining users why no options are displayed. It supports translation keys."
    );
  }, [shouldRenderSuggestions, noOptionsText]);
  var getRecordRepresentation = useGetRecordRepresentation(resource);
  var _o = useSuggestions({
    choices: finalChoices,
    limitChoicesToValue,
    matchSuggestion,
    optionText: optionText !== null && optionText !== void 0 ? optionText : isFromReference ? getRecordRepresentation : void 0,
    optionValue,
    selectedItem: selectedChoice,
    suggestionLimit,
    translateChoice: translateChoice !== null && translateChoice !== void 0 ? translateChoice : !isFromReference
  }), getChoiceText = _o.getChoiceText, getChoiceValue = _o.getChoiceValue, getSuggestions = _o.getSuggestions;
  var _p = (0, import_react65.useState)(""), filterValue = _p[0], setFilterValue = _p[1];
  var handleChange = function(newValue) {
    var _a14, _b2;
    if (multiple) {
      if (Array.isArray(newValue)) {
        field.onChange(newValue.map(getChoiceValue));
      } else {
        field.onChange(__spreadArray4(__spreadArray4([], (_a14 = field.value) !== null && _a14 !== void 0 ? _a14 : [], true), [
          getChoiceValue(newValue)
        ], false));
      }
    } else {
      field.onChange((_b2 = getChoiceValue(newValue)) !== null && _b2 !== void 0 ? _b2 : emptyValue);
    }
  };
  var debouncedSetFilter = (0, import_react65.useCallback)((0, import_debounce9.default)(function(filter) {
    if (setFilter) {
      return setFilter(filter);
    }
    if (choicesProp) {
      return;
    }
    setFilters(filterToQuery(filter), void 0, true);
  }, debounceDelay), [debounceDelay, setFilters, setFilter]);
  var currentValue = (0, import_react65.useRef)(field.value);
  (0, import_react65.useEffect)(function() {
    if (!(0, import_isEqual3.default)(currentValue.current, field.value)) {
      currentValue.current = field.value;
      debouncedSetFilter("");
    }
  }, [field.value]);
  var _q = useSupportCreateSuggestion({
    create: create2,
    createLabel,
    createItemLabel,
    createValue,
    handleChange,
    filter: filterValue,
    onCreate,
    optionText
  }), getCreateItem = _q.getCreateItem, handleChangeWithCreateSupport = _q.handleChange, createElement204 = _q.createElement, createId = _q.createId;
  var getOptionLabel = (0, import_react65.useCallback)(function(option, isListItem) {
    if (isListItem === void 0) {
      isListItem = false;
    }
    if (option == void 0) {
      return "";
    }
    if (typeof option === "string") {
      return option;
    }
    if ((option === null || option === void 0 ? void 0 : option.id) === createId) {
      return (0, import_get4.default)(option, typeof optionText === "string" ? optionText : "name");
    }
    if (!isListItem && option[optionValue || "id"] === emptyValue) {
      return (0, import_get4.default)(option, typeof optionText === "string" ? optionText : "name");
    }
    if (!isListItem && inputText !== void 0) {
      return inputText(option);
    }
    return getChoiceText(option);
  }, [
    getChoiceText,
    inputText,
    createId,
    optionText,
    optionValue,
    emptyValue
  ]);
  var finalOnBlur = (0, import_react65.useCallback)(function() {
    if (clearOnBlur && !multiple) {
      var optionLabel = getOptionLabel(selectedChoice);
      if (!(0, import_isEqual3.default)(optionLabel, filterValue)) {
        setFilterValue(optionLabel);
        debouncedSetFilter("");
      }
    }
    field.onBlur();
  }, [
    clearOnBlur,
    field,
    getOptionLabel,
    selectedChoice,
    filterValue,
    debouncedSetFilter,
    multiple
  ]);
  (0, import_react65.useEffect)(function() {
    if (!multiple) {
      var optionLabel = getOptionLabel(selectedChoice);
      if (typeof optionLabel === "string") {
        setFilterValue(optionLabel);
      } else {
        throw new Error("When optionText returns a React element, you must also provide the inputText prop");
      }
    }
  }, [getOptionLabel, multiple, selectedChoice]);
  var handleInputChange = function(event, newInputValue, _reason) {
    if ((event === null || event === void 0 ? void 0 : event.type) === "change" || !doesQueryMatchSelection(newInputValue)) {
      setFilterValue(newInputValue);
      debouncedSetFilter(newInputValue);
    }
  };
  var doesQueryMatchSelection = (0, import_react65.useCallback)(function(filter) {
    var selectedItemTexts;
    if (multiple) {
      selectedItemTexts = selectedChoice.map(function(item) {
        return getOptionLabel(item);
      });
    } else {
      selectedItemTexts = [getOptionLabel(selectedChoice)];
    }
    return selectedItemTexts.includes(filter);
  }, [getOptionLabel, multiple, selectedChoice]);
  var doesQueryMatchSuggestion = (0, import_react65.useCallback)(function(filter) {
    var hasOption = !!finalChoices ? finalChoices.some(function(choice) {
      return getOptionLabel(choice) === filter;
    }) : false;
    return doesQueryMatchSelection(filter) || hasOption;
  }, [finalChoices, getOptionLabel, doesQueryMatchSelection]);
  var filterOptions = function(options, params) {
    var filteredOptions = isFromReference || // When used inside a reference, AutocompleteInput shouldn't do the filtering as it's done by the reference input
    matchSuggestion || // When using element as optionText (and matchSuggestion), options are filtered by getSuggestions, so they shouldn't be filtered here
    limitChoicesToValue ? options : defaultFilterOptions2(options, params);
    var inputValue = params.inputValue;
    if ((onCreate || create2) && inputValue !== "" && !doesQueryMatchSuggestion(filterValue)) {
      filteredOptions = filteredOptions.concat(getCreateItem(inputValue));
    }
    return filteredOptions;
  };
  var handleAutocompleteChange = function(event, newValue, _reason) {
    handleChangeWithCreateSupport(newValue != null ? newValue : emptyValue);
  };
  var oneSecondHasPassed = useTimeout(1e3, filterValue);
  var suggestions = (0, import_react65.useMemo)(function() {
    if (!isFromReference && (matchSuggestion || limitChoicesToValue)) {
      return getSuggestions(filterValue);
    }
    return (finalChoices === null || finalChoices === void 0 ? void 0 : finalChoices.slice(0, suggestionLimit)) || [];
  }, [
    finalChoices,
    filterValue,
    getSuggestions,
    limitChoicesToValue,
    matchSuggestion,
    suggestionLimit,
    isFromReference
  ]);
  var isOptionEqualToValue = function(option, value) {
    return String(getChoiceValue(option)) === String(getChoiceValue(value));
  };
  var renderHelperText = !!fetchError || helperText !== false || (isTouched || isSubmitted) && invalid;
  return React362.createElement(
    React362.Fragment,
    null,
    React362.createElement(StyledAutocomplete, __assign56({ blurOnSelect: true, className: clsx_m_default("ra-input", "ra-input-".concat(source), className), clearText: translate(clearText, { _: clearText }), closeText: translate(closeText, { _: closeText }), openOnFocus: true, openText: translate(openText, { _: openText }), id, isOptionEqualToValue, filterSelectedOptions: true, renderInput: function(params) {
      return React362.createElement(TextField_default, __assign56({ name: field.name, label: React362.createElement(FieldTitle_default, { label, source, resource: resourceProp, isRequired: isRequired2 }), error: !!fetchError || (isTouched || isSubmitted) && invalid, helperText: renderHelperText ? React362.createElement(InputHelperText, { touched: isTouched || isSubmitted || fetchError, error: (error === null || error === void 0 ? void 0 : error.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message), helperText }) : null, margin: margin2, variant, className: AutocompleteInputClasses.textField }, TextFieldProps, params, { size: size2 }));
    }, multiple, renderTags: function(value, getTagProps) {
      return value.map(function(option, index2) {
        return React362.createElement(Chip_default, __assign56({ label: (0, import_react65.isValidElement)(optionText) ? inputText(option) : getChoiceText(option), sx: {
          ".MuiSvgIcon-root": {
            // FIXME: Workaround to allow choices deletion
            // Maybe related to storybook and mui using different versions of emotion
            zIndex: 100
          }
        }, size: "small" }, getTagProps({ index: index2 })));
      });
    }, noOptionsText: typeof noOptionsText === "string" ? translate(noOptionsText, { _: noOptionsText }) : noOptionsText, selectOnFocus: true, clearOnBlur }, sanitizeInputRestProps(rest), { freeSolo: !!create2 || !!onCreate, handleHomeEndKeys: !!create2 || !!onCreate, filterOptions, options: shouldRenderSuggestions == void 0 || // eslint-disable-line eqeqeq
    shouldRenderSuggestions(filterValue) ? suggestions : [], getOptionLabel, inputValue: filterValue, loading: isLoading && (!finalChoices || finalChoices.length === 0) && oneSecondHasPassed, value: selectedChoice, onChange: handleAutocompleteChange, onBlur: finalOnBlur, onInputChange: handleInputChange, renderOption: function(props2, record) {
      props2.key = getChoiceValue(record);
      var optionLabel = getOptionLabel(record, true);
      return React362.createElement("li", __assign56({}, props2), optionLabel === "" ? " " : optionLabel);
    } })),
    createElement204
  );
};
var PREFIX35 = "RaAutocompleteInput";
var AutocompleteInputClasses = {
  textField: "".concat(PREFIX35, "-textField")
};
var StyledAutocomplete = styled_default2(Autocomplete_default, {
  name: PREFIX35,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(AutocompleteInputClasses.textField)] = {
    minWidth: theme.spacing(20)
  }, _b;
});
var useSelectedChoice = function(value, _a13) {
  var choices2 = _a13.choices, multiple = _a13.multiple, optionValue = _a13.optionValue;
  var selectedChoiceRef = (0, import_react65.useRef)(getSelectedItems(choices2, value, optionValue, multiple));
  var _b = (0, import_react65.useState)(function() {
    return getSelectedItems(choices2, value, optionValue, multiple);
  }), selectedChoice = _b[0], setSelectedChoice = _b[1];
  (0, import_react65.useEffect)(function() {
    var newSelectedItems = getSelectedItems(choices2, value, optionValue, multiple);
    if (!areSelectedItemsEqual(selectedChoiceRef.current, newSelectedItems, optionValue, multiple)) {
      selectedChoiceRef.current = newSelectedItems;
      setSelectedChoice(newSelectedItems);
    }
  }, [choices2, value, multiple, optionValue]);
  return selectedChoice || null;
};
var getSelectedItems = function(choices2, value, optionValue, multiple) {
  if (choices2 === void 0) {
    choices2 = [];
  }
  if (optionValue === void 0) {
    optionValue = "id";
  }
  if (multiple) {
    return (Array.isArray(value !== null && value !== void 0 ? value : []) ? value : [value]).map(function(item) {
      return choices2.find(function(choice) {
        return String(item) === String((0, import_get4.default)(choice, optionValue));
      });
    }).filter(function(item) {
      return !!item;
    });
  }
  return choices2.find(function(choice) {
    return String((0, import_get4.default)(choice, optionValue)) === String(value);
  }) || "";
};
var areSelectedItemsEqual = function(selectedChoice, newSelectedChoice, optionValue, multiple) {
  var _a13, _b;
  if (optionValue === void 0) {
    optionValue = "id";
  }
  if (multiple) {
    var selectedChoiceArray = (_a13 = selectedChoice) !== null && _a13 !== void 0 ? _a13 : [];
    var newSelectedChoiceArray_1 = (_b = newSelectedChoice) !== null && _b !== void 0 ? _b : [];
    if (selectedChoiceArray.length !== newSelectedChoiceArray_1.length) {
      return false;
    }
    var equalityArray = selectedChoiceArray.map(function(choice) {
      return newSelectedChoiceArray_1.some(function(newChoice) {
        return (0, import_get4.default)(newChoice, optionValue) === (0, import_get4.default)(choice, optionValue);
      });
    });
    return !equalityArray.some(function(item) {
      return item === false;
    });
  }
  return (0, import_get4.default)(selectedChoice, optionValue) === (0, import_get4.default)(newSelectedChoice, optionValue);
};
var DefaultFilterToQuery = function(searchText) {
  return { q: searchText };
};

// node_modules/ra-ui-materialui/dist/esm/input/AutocompleteArrayInput.js
var React363 = __toESM(require_react());
var __assign57 = function() {
  __assign57 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign57.apply(this, arguments);
};
var __rest53 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var AutocompleteArrayInput = function(_a13) {
  var defaultValue = _a13.defaultValue, props = __rest53(_a13, ["defaultValue"]);
  return React363.createElement(AutocompleteInput, __assign57({}, props, { multiple: true, defaultValue: defaultValue !== null && defaultValue !== void 0 ? defaultValue : [] }));
};

// node_modules/ra-ui-materialui/dist/esm/input/BooleanInput.js
var React364 = __toESM(require_react());
var import_react66 = __toESM(require_react());
var import_prop_types239 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/input/InputPropTypes.js
var import_prop_types238 = __toESM(require_prop_types());
var InputPropTypes = {
  label: import_prop_types238.default.oneOfType([
    import_prop_types238.default.string,
    import_prop_types238.default.bool,
    import_prop_types238.default.element
  ]),
  resource: import_prop_types238.default.string,
  source: import_prop_types238.default.string
};

// node_modules/ra-ui-materialui/dist/esm/input/BooleanInput.js
var __assign58 = function() {
  __assign58 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign58.apply(this, arguments);
};
var __rest54 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BooleanInput = function(props) {
  var className = props.className, _a13 = props.row, row = _a13 === void 0 ? false : _a13, _b = props.defaultValue, defaultValue = _b === void 0 ? false : _b, format = props.format, label = props.label, fullWidth = props.fullWidth, helperText = props.helperText, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, disabled = props.disabled, parse2 = props.parse, resource = props.resource, source = props.source, validate = props.validate, _c = props.options, options = _c === void 0 ? defaultOptions : _c, sx = props.sx, rest = __rest54(props, ["className", "row", "defaultValue", "format", "label", "fullWidth", "helperText", "onBlur", "onChange", "onFocus", "disabled", "parse", "resource", "source", "validate", "options", "sx"]);
  var _d = useInput(__assign58({ defaultValue, format, parse: parse2, resource, source, onBlur, onChange, type: "checkbox", validate }, rest)), id = _d.id, field = _d.field, isRequired2 = _d.isRequired, _e = _d.fieldState, error = _e.error, invalid = _e.invalid, isTouched = _e.isTouched, isSubmitted = _d.formState.isSubmitted;
  var handleChange = (0, import_react66.useCallback)(function(event) {
    field.onChange(event);
    field.onBlur();
  }, [field]);
  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;
  return React364.createElement(
    FormGroup_default,
    { className: clsx_m_default("ra-input", "ra-input-".concat(source), className), row, sx },
    React364.createElement(FormControlLabel_default, { inputRef: field.ref, control: React364.createElement(Switch_default, __assign58({ id, name: field.name, color: "primary", onChange: handleChange, onFocus, checked: Boolean(field.value) }, sanitizeInputRestProps(rest), options, { disabled })), label: React364.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 }) }),
    renderHelperText ? React364.createElement(
      FormHelperText_default,
      { error: (isTouched || isSubmitted) && invalid },
      React364.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText })
    ) : null
  );
};
BooleanInput.propTypes = __assign58(__assign58({}, InputPropTypes), {
  // @ts-ignore
  options: import_prop_types239.default.shape(Switch_default.propTypes),
  disabled: import_prop_types239.default.bool
});
var defaultOptions = {};

// node_modules/ra-ui-materialui/dist/esm/input/CheckboxGroupInput.js
var React366 = __toESM(require_react());
var import_react67 = __toESM(require_react());
var import_prop_types240 = __toESM(require_prop_types());
var import_get5 = __toESM(require_get());

// node_modules/ra-ui-materialui/dist/esm/input/CheckboxGroupInputItem.js
var React365 = __toESM(require_react());
var __assign59 = function() {
  __assign59 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign59.apply(this, arguments);
};
var __rest55 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a3;
var CheckboxGroupInputItem = function(props) {
  var id = props.id, choice = props.choice, className = props.className, fullWidth = props.fullWidth, onChange = props.onChange, optionText = props.optionText, optionValue = props.optionValue, options = props.options, translateChoice = props.translateChoice, value = props.value, labelPlacement = props.labelPlacement, inputRef = props.inputRef, rest = __rest55(props, ["id", "choice", "className", "fullWidth", "onChange", "optionText", "optionValue", "options", "translateChoice", "value", "labelPlacement", "inputRef"]);
  var _a13 = useChoices({
    optionText,
    optionValue,
    translateChoice
  }), getChoiceText = _a13.getChoiceText, getChoiceValue = _a13.getChoiceValue;
  var choiceName = getChoiceText(choice);
  return React365.createElement(StyledFormControlLabel, { htmlFor: "".concat(id, "_").concat(getChoiceValue(choice)), key: getChoiceValue(choice), onChange, className, inputRef, control: React365.createElement(Checkbox_default, __assign59({ id: "".concat(id, "_").concat(getChoiceValue(choice)), color: "primary", className: CheckboxGroupInputItemClasses.checkbox, checked: value ? value.find(function(v) {
    return v == getChoiceValue(choice);
  }) !== // eslint-disable-line eqeqeq
  void 0 : false, value: String(getChoiceValue(choice)) }, options, rest)), label: choiceName, labelPlacement });
};
var PREFIX36 = "RaCheckboxGroupInputItem";
var CheckboxGroupInputItemClasses = {
  checkbox: "".concat(PREFIX36, "-checkbox")
};
var StyledFormControlLabel = styled_default2(FormControlLabel_default, {
  name: PREFIX36,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a3 = {}, _a3["& .".concat(CheckboxGroupInputItemClasses.checkbox)] = {
  height: 32
}, _a3));

// node_modules/ra-ui-materialui/dist/esm/input/CheckboxGroupInput.js
var __assign60 = function() {
  __assign60 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign60.apply(this, arguments);
};
var __rest56 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray5 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var CheckboxGroupInput = function(props) {
  var choicesProp = props.choices, className = props.className, classesOverride = props.classes, format = props.format, helperText = props.helperText, label = props.label, labelPlacement = props.labelPlacement, isLoadingProp = props.isLoading, isFetchingProp = props.isFetching, _a13 = props.margin, margin2 = _a13 === void 0 ? "dense" : _a13, onBlur = props.onBlur, onChange = props.onChange, options = props.options, _b = props.optionText, optionText = _b === void 0 ? "name" : _b, _c = props.optionValue, optionValue = _c === void 0 ? "id" : _c, parse2 = props.parse, resourceProp = props.resource, _d = props.row, row = _d === void 0 ? true : _d, sourceProp = props.source, translateChoice = props.translateChoice, validate = props.validate, rest = __rest56(props, ["choices", "className", "classes", "format", "helperText", "label", "labelPlacement", "isLoading", "isFetching", "margin", "onBlur", "onChange", "options", "optionText", "optionValue", "parse", "resource", "row", "source", "translateChoice", "validate"]);
  var _e = useChoicesContext({
    choices: choicesProp,
    isFetching: isFetchingProp,
    isLoading: isLoadingProp,
    resource: resourceProp,
    source: sourceProp
  }), allChoices = _e.allChoices, isLoading = _e.isLoading, fetchError = _e.error, resource = _e.resource, source = _e.source, isFromReference = _e.isFromReference;
  if (source === void 0) {
    throw new Error("If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the source prop");
  }
  if (!isLoading && !fetchError && allChoices === void 0) {
    throw new Error("If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the choices prop");
  }
  var _f = useInput(__assign60({ format, parse: parse2, resource, source, validate, onChange, onBlur }, rest)), _g = _f.field, formOnChange = _g.onChange, formOnBlur = _g.onBlur, value = _g.value, ref = _g.ref, _h = _f.fieldState, error = _h.error, invalid = _h.invalid, isTouched = _h.isTouched, isSubmitted = _f.formState.isSubmitted, id = _f.id, isRequired2 = _f.isRequired;
  var handleCheck = (0, import_react67.useCallback)(function(event, isChecked) {
    var newValue;
    if (allChoices.every(function(item) {
      return typeof (0, import_get5.default)(item, optionValue) === "number";
    })) {
      try {
        newValue = JSON.parse(event.target.value);
      } catch (e) {
        newValue = event.target.value;
      }
    } else {
      newValue = event.target.value;
    }
    if (isChecked) {
      formOnChange(__spreadArray5(__spreadArray5([], value || [], true), [newValue], false));
    } else {
      formOnChange(value.filter(function(v) {
        return v != newValue;
      }));
    }
    formOnBlur();
  }, [allChoices, formOnChange, formOnBlur, optionValue, value]);
  if (isLoading && (!allChoices || allChoices.length === 0)) {
    return React366.createElement(
      Labeled,
      __assign60({ id, label, source, resource, className: clsx_m_default("ra-input", "ra-input-".concat(source), className), isRequired: isRequired2 }, rest),
      React366.createElement(LinearProgress3, null)
    );
  }
  var renderHelperText = !!fetchError || helperText !== false || (isTouched || isSubmitted) && invalid;
  return React366.createElement(
    StyledFormControl,
    __assign60({ component: "fieldset", margin: margin2, error: fetchError || (isTouched || isSubmitted) && invalid, className: clsx_m_default("ra-input", "ra-input-".concat(source), className) }, sanitizeRestProps11(rest)),
    React366.createElement(
      FormLabel_default,
      { component: "legend", className: CheckboxGroupInputClasses.label },
      React366.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 })
    ),
    React366.createElement(FormGroup_default, { row }, allChoices === null || allChoices === void 0 ? void 0 : allChoices.map(function(choice, index2) {
      return React366.createElement(CheckboxGroupInputItem, __assign60({ key: (0, import_get5.default)(choice, optionValue), choice, id, onChange: handleCheck, options, optionText, optionValue, translateChoice: translateChoice !== null && translateChoice !== void 0 ? translateChoice : !isFromReference, value, labelPlacement, inputRef: index2 === 0 ? ref : void 0 }, sanitizeRestProps11(rest)));
    })),
    renderHelperText ? React366.createElement(
      FormHelperText_default,
      { error: fetchError || (isTouched || isSubmitted) && !!error, className: CheckboxGroupInputClasses.helperText },
      React366.createElement(InputHelperText, { touched: isTouched || isSubmitted || fetchError, error: (error === null || error === void 0 ? void 0 : error.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message), helperText })
    ) : null
  );
};
var sanitizeRestProps11 = function(_a13) {
  var refetch = _a13.refetch, setFilter = _a13.setFilter, setPagination = _a13.setPagination, setSort = _a13.setSort, loaded = _a13.loaded, touched = _a13.touched, rest = __rest56(_a13, ["refetch", "setFilter", "setPagination", "setSort", "loaded", "touched"]);
  return sanitizeInputRestProps(rest);
};
CheckboxGroupInput.propTypes = {
  choices: import_prop_types240.default.arrayOf(import_prop_types240.default.any),
  className: import_prop_types240.default.string,
  source: import_prop_types240.default.string,
  optionText: import_prop_types240.default.oneOfType([
    import_prop_types240.default.string,
    import_prop_types240.default.func,
    import_prop_types240.default.element
  ]),
  optionValue: import_prop_types240.default.string,
  row: import_prop_types240.default.bool,
  resource: import_prop_types240.default.string,
  translateChoice: import_prop_types240.default.bool
};
var PREFIX37 = "RaCheckboxGroupInput";
var CheckboxGroupInputClasses = {
  label: "".concat(PREFIX37, "-label"),
  helperText: "".concat(PREFIX37, "-helperText")
};
var StyledFormControl = styled_default2(FormControl_default, {
  name: PREFIX37,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(CheckboxGroupInputClasses.label)] = {
    transform: "translate(0, 4px) scale(0.75)",
    transformOrigin: "top ".concat(theme.direction === "ltr" ? "left" : "right")
  }, _b["& .".concat(CheckboxGroupInputClasses.helperText)] = {
    marginLeft: 0,
    marginRight: 0
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/input/DatagridInput.js
var React402 = __toESM(require_react());
var import_react95 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridBody.js
var React370 = __toESM(require_react());
var import_react72 = __toESM(require_react());
var import_prop_types243 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/useDatagridStyles.js
var PREFIX38 = "RaDatagrid";
var DatagridClasses = {
  root: "".concat(PREFIX38, "-root"),
  table: "".concat(PREFIX38, "-table"),
  tableWrapper: "".concat(PREFIX38, "-tableWrapper"),
  thead: "".concat(PREFIX38, "-thead"),
  tbody: "".concat(PREFIX38, "-tbody"),
  headerRow: "".concat(PREFIX38, "-headerRow"),
  headerCell: "".concat(PREFIX38, "-headerCell"),
  checkbox: "".concat(PREFIX38, "-checkbox"),
  row: "".concat(PREFIX38, "-row"),
  clickableRow: "".concat(PREFIX38, "-clickableRow"),
  rowEven: "".concat(PREFIX38, "-rowEven"),
  rowOdd: "".concat(PREFIX38, "-rowOdd"),
  rowCell: "".concat(PREFIX38, "-rowCell"),
  selectable: "".concat(PREFIX38, "-selectable"),
  expandHeader: "".concat(PREFIX38, "-expandHeader"),
  expandIconCell: "".concat(PREFIX38, "-expandIconCell"),
  expandIcon: "".concat(PREFIX38, "-expandIcon"),
  expandable: "".concat(PREFIX38, "-expandable"),
  expanded: "".concat(PREFIX38, "-expanded"),
  expandedPanel: "".concat(PREFIX38, "-expandedPanel")
};
var DatagridRoot = styled_default2("div", {
  name: PREFIX38,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(DatagridClasses.table)] = {
    tableLayout: "auto"
  }, _b["& .".concat(DatagridClasses.tableWrapper)] = {}, _b["& .".concat(DatagridClasses.thead)] = {}, _b["& .".concat(DatagridClasses.tbody)] = {}, _b["& .".concat(DatagridClasses.headerRow)] = {}, _b["& .".concat(DatagridClasses.headerCell)] = {
    position: "sticky",
    top: 0,
    zIndex: 2,
    backgroundColor: theme.palette.background.paper,
    "&:first-of-type": {
      borderTopLeftRadius: theme.shape.borderRadius
    },
    "&:last-child": {
      borderTopRightRadius: theme.shape.borderRadius
    }
  }, _b["& .".concat(DatagridClasses.checkbox)] = {}, _b["& .".concat(DatagridClasses.row)] = {}, _b["& .".concat(DatagridClasses.clickableRow)] = {
    cursor: "pointer"
  }, _b["& .".concat(DatagridClasses.rowEven)] = {}, _b["& .".concat(DatagridClasses.rowOdd)] = {}, _b["& .".concat(DatagridClasses.rowCell)] = {}, _b["& .".concat(DatagridClasses.expandHeader)] = {
    padding: 0,
    width: theme.spacing(6)
  }, _b["& .".concat(DatagridClasses.expandIconCell)] = {
    width: theme.spacing(6)
  }, _b["& .".concat(DatagridClasses.expandIcon)] = {
    padding: theme.spacing(1),
    transform: "rotate(-90deg)",
    transition: theme.transitions.create("transform", {
      duration: theme.transitions.duration.shortest
    })
  }, _b["& .".concat(DatagridClasses.expandIcon, ".").concat(DatagridClasses.expanded)] = {
    transform: "rotate(0deg)"
  }, _b["& .".concat(DatagridClasses.expandedPanel)] = {}, _b;
});

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridRow.js
var import_react71 = __toESM(require_react());
var import_react_is13 = __toESM(require_react_is());
var import_prop_types242 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridCell.js
var React367 = __toESM(require_react());
var import_prop_types241 = __toESM(require_prop_types());
var __assign61 = function() {
  __assign61 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign61.apply(this, arguments);
};
var __rest57 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DatagridCell = React367.forwardRef(function(_a13, ref) {
  var className = _a13.className, field = _a13.field, record = _a13.record, resource = _a13.resource, rest = __rest57(_a13, ["className", "field", "record", "resource"]);
  return React367.createElement(TableCell_default, __assign61({ className: clsx_m_default(className, field.props.cellClassName), align: field.props.textAlign, ref }, rest), field);
});
DatagridCell.propTypes = {
  className: import_prop_types241.default.string,
  field: import_prop_types241.default.element,
  // @ts-ignore
  record: import_prop_types241.default.object,
  resource: import_prop_types241.default.string
};
DatagridCell.displayName = "DatagridCell";
var DatagridCell_default = DatagridCell;

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/ExpandRowButton.js
var React368 = __toESM(require_react());
var import_react68 = __toESM(require_react());
var import_ExpandMore3 = __toESM(require_ExpandMore());
var __assign62 = function() {
  __assign62 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign62.apply(this, arguments);
};
var __rest58 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ExpandRowButton = function(_a13) {
  var expanded = _a13.expanded, expandContentId = _a13.expandContentId, props = __rest58(_a13, ["expanded", "expandContentId"]);
  var translate = useTranslate();
  return React368.createElement(
    IconButton_default,
    __assign62({ "aria-label": translate(expanded ? "ra.action.close" : "ra.action.expand"), "aria-expanded": expanded, "aria-controls": expandContentId, tabIndex: -1, "aria-hidden": "true", component: "div" }, props, { size: "small" }),
    React368.createElement(import_ExpandMore3.default, { fontSize: "inherit" })
  );
};
var ExpandRowButton_default = (0, import_react68.memo)(ExpandRowButton);

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/useDatagridContext.js
var import_react70 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridContext.js
var import_react69 = __toESM(require_react());
var DatagridContext = (0, import_react69.createContext)({});
DatagridContext.displayName = "DatagridContext";
var DatagridContext_default = DatagridContext;

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/useDatagridContext.js
var import_defaults = __toESM(require_defaults());
var useDatagridContext = function(props) {
  var context = (0, import_react70.useContext)(DatagridContext_default);
  return (0, import_react70.useMemo)(function() {
    return (0, import_defaults.default)({}, props != null ? { isRowExpandable: props.isRowExpandable } : {}, context);
  }, [context, props]);
};

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridRow.js
var __assign63 = function() {
  __assign63 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign63.apply(this, arguments);
};
var __awaiter4 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator4 = function(thisArg, body2) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_5 = 0)), _5)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __rest59 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var computeNbColumns = function(expand, children2, hasBulkActions) {
  return expand ? 1 + // show expand button
  (hasBulkActions ? 1 : 0) + // checkbox column
  import_react71.default.Children.toArray(children2).filter(function(child) {
    return !!child;
  }).length : 0;
};
var DatagridRow = import_react71.default.forwardRef(function(props, ref) {
  var _a13, _b;
  var children2 = props.children, className = props.className, expand = props.expand, _c = props.hasBulkActions, hasBulkActions = _c === void 0 ? false : _c, _d = props.hover, hover = _d === void 0 ? true : _d, id = props.id, onToggleItem = props.onToggleItem, recordOverride = props.record, rowClick = props.rowClick, _e = props.selected, selected = _e === void 0 ? false : _e, style4 = props.style, _f = props.selectable, selectable = _f === void 0 ? true : _f, rest = __rest59(props, ["children", "className", "expand", "hasBulkActions", "hover", "id", "onToggleItem", "record", "rowClick", "selected", "style", "selectable"]);
  var context = useDatagridContext();
  var translate = useTranslate();
  var record = useRecordContext(props);
  var expandable = (!context || !context.isRowExpandable || context.isRowExpandable(record)) && expand;
  var resource = useResourceContext(props);
  var createPath = useCreatePath();
  var _g = useExpanded(resource, id, context && context.expandSingle), expanded = _g[0], toggleExpanded = _g[1];
  var _h = (0, import_react71.useState)(function() {
    return computeNbColumns(expandable, children2, hasBulkActions);
  }), nbColumns = _h[0], setNbColumns = _h[1];
  (0, import_react71.useEffect)(function() {
    var newNbColumns = computeNbColumns(expandable, children2, hasBulkActions);
    if (newNbColumns !== nbColumns) {
      setNbColumns(newNbColumns);
    }
  }, [expandable, nbColumns, children2, hasBulkActions]);
  var navigate = useNavigate();
  var handleToggleExpand = (0, import_react71.useCallback)(function(event) {
    toggleExpanded();
    event.stopPropagation();
  }, [toggleExpanded]);
  var handleToggleSelection = (0, import_react71.useCallback)(function(event) {
    if (!selectable)
      return;
    onToggleItem(id, event);
    event.stopPropagation();
  }, [id, onToggleItem, selectable]);
  var handleClick2 = (0, import_react71.useCallback)(function(event) {
    return __awaiter4(void 0, void 0, void 0, function() {
      var type, _a14;
      return __generator4(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            event.persist();
            if (!(typeof rowClick === "function"))
              return [3, 2];
            return [4, rowClick(id, resource, record)];
          case 1:
            _a14 = _b2.sent();
            return [3, 3];
          case 2:
            _a14 = rowClick;
            _b2.label = 3;
          case 3:
            type = _a14;
            if (type === false || type == null) {
              return [
                2
                /*return*/
              ];
            }
            if (["edit", "show"].includes(type)) {
              navigate(createPath({ resource, id, type }));
              return [
                2
                /*return*/
              ];
            }
            if (type === "expand") {
              handleToggleExpand(event);
              return [
                2
                /*return*/
              ];
            }
            if (type === "toggleSelection") {
              handleToggleSelection(event);
              return [
                2
                /*return*/
              ];
            }
            navigate(type);
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [
    rowClick,
    id,
    resource,
    record,
    navigate,
    createPath,
    handleToggleExpand,
    handleToggleSelection
  ]);
  return import_react71.default.createElement(
    RecordContextProvider,
    { value: record },
    import_react71.default.createElement(
      TableRow_default,
      __assign63({ ref, className: clsx_m_default(className, (_a13 = {}, _a13[DatagridClasses.expandable] = expandable, _a13[DatagridClasses.selectable] = selectable, _a13[DatagridClasses.clickableRow] = typeof rowClick === "function" ? true : rowClick, _a13)), key: id, style: style4, hover, onClick: handleClick2 }, rest),
      expand && import_react71.default.createElement(TableCell_default, { padding: "none", className: DatagridClasses.expandIconCell }, expandable && import_react71.default.createElement(ExpandRowButton_default, { className: clsx_m_default(DatagridClasses.expandIcon, (_b = {}, _b[DatagridClasses.expanded] = expanded, _b)), expanded, onClick: handleToggleExpand, expandContentId: "".concat(id, "-expand") })),
      hasBulkActions && import_react71.default.createElement(
        TableCell_default,
        { padding: "checkbox" },
        import_react71.default.createElement(Checkbox_default, { "aria-label": translate("ra.action.select_row", {
          _: "Select this row"
        }), color: "primary", className: "select-item ".concat(DatagridClasses.checkbox), checked: selectable && selected, onClick: handleToggleSelection, disabled: !selectable })
      ),
      import_react71.default.Children.map(children2, function(field, index2) {
        return (0, import_react71.isValidElement)(field) ? import_react71.default.createElement(DatagridCell_default, { key: "".concat(id, "-").concat(field.props.source || index2), className: clsx_m_default("column-".concat(field.props.source), DatagridClasses.rowCell), record, field, resource }) : null;
      })
    ),
    expandable && expanded && import_react71.default.createElement(
      TableRow_default,
      { key: "".concat(id, "-expand"), id: "".concat(id, "-expand"), className: DatagridClasses.expandedPanel },
      import_react71.default.createElement(TableCell_default, { colSpan: nbColumns }, (0, import_react_is13.isElement)(expand) ? (0, import_react71.cloneElement)(expand, {
        // @ts-ignore
        record,
        resource,
        id: String(id)
      }) : (0, import_react71.createElement)(expand, {
        record,
        resource,
        id: String(id)
      }))
    )
  );
});
DatagridRow.propTypes = {
  children: import_prop_types242.default.node,
  className: import_prop_types242.default.string,
  // @ts-ignore
  expand: import_prop_types242.default.oneOfType([import_prop_types242.default.element, import_prop_types242.default.elementType]),
  hasBulkActions: import_prop_types242.default.bool,
  hover: import_prop_types242.default.bool,
  id: import_prop_types242.default.any,
  onToggleItem: import_prop_types242.default.func,
  // @ts-ignore
  record: import_prop_types242.default.object,
  resource: import_prop_types242.default.string,
  // @ts-ignore
  rowClick: import_prop_types242.default.oneOfType([
    import_prop_types242.default.string,
    import_prop_types242.default.func,
    import_prop_types242.default.bool
  ]),
  selected: import_prop_types242.default.bool,
  style: import_prop_types242.default.object,
  selectable: import_prop_types242.default.bool
};
var areEqual2 = function(prevProps, nextProps) {
  var _1 = prevProps.children, _22 = prevProps.expand, prevPropsWithoutChildren = __rest59(prevProps, ["children", "expand"]);
  var _32 = nextProps.children, _42 = nextProps.expand, nextPropsWithoutChildren = __rest59(nextProps, ["children", "expand"]);
  return shallowEqual(prevPropsWithoutChildren, nextPropsWithoutChildren);
};
var PureDatagridRow = (0, import_react71.memo)(DatagridRow, areEqual2);
PureDatagridRow.displayName = "PureDatagridRow";
var DatagridRow_default = DatagridRow;

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridBody.js
var __assign64 = function() {
  __assign64 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign64.apply(this, arguments);
};
var __rest60 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DatagridBody = React370.forwardRef(function(_a13, ref) {
  var children2 = _a13.children, className = _a13.className, _b = _a13.data, data = _b === void 0 ? defaultData2 : _b, expand = _a13.expand, _c = _a13.hasBulkActions, hasBulkActions = _c === void 0 ? false : _c, hover = _a13.hover, onToggleItem = _a13.onToggleItem, resource = _a13.resource, _d = _a13.row, row = _d === void 0 ? defaultChildren : _d, rowClick = _a13.rowClick, rowSx = _a13.rowSx, rowStyle = _a13.rowStyle, selectedIds = _a13.selectedIds, isRowSelectable = _a13.isRowSelectable, rest = __rest60(_a13, ["children", "className", "data", "expand", "hasBulkActions", "hover", "onToggleItem", "resource", "row", "rowClick", "rowSx", "rowStyle", "selectedIds", "isRowSelectable"]);
  return React370.createElement(TableBody_default, __assign64({ ref, className: clsx_m_default("datagrid-body", className, DatagridClasses.tbody) }, rest), data.map(function(record, rowIndex) {
    var _a14;
    var _b2, _c2;
    return (0, import_react72.cloneElement)(row, {
      className: clsx_m_default(DatagridClasses.row, (_a14 = {}, _a14[DatagridClasses.rowEven] = rowIndex % 2 === 0, _a14[DatagridClasses.rowOdd] = rowIndex % 2 !== 0, _a14)),
      expand,
      hasBulkActions: hasBulkActions && !!selectedIds,
      hover,
      id: (_b2 = record.id) !== null && _b2 !== void 0 ? _b2 : "row".concat(rowIndex),
      key: (_c2 = record.id) !== null && _c2 !== void 0 ? _c2 : "row".concat(rowIndex),
      onToggleItem,
      record,
      resource,
      rowClick,
      selectable: !isRowSelectable || isRowSelectable(record),
      selected: selectedIds === null || selectedIds === void 0 ? void 0 : selectedIds.includes(record.id),
      sx: rowSx === null || rowSx === void 0 ? void 0 : rowSx(record, rowIndex),
      style: rowStyle === null || rowStyle === void 0 ? void 0 : rowStyle(record, rowIndex)
    }, children2);
  }));
});
var defaultChildren = React370.createElement(DatagridRow_default, null);
DatagridBody.propTypes = {
  className: import_prop_types243.default.string,
  children: import_prop_types243.default.node,
  // @ts-ignore
  data: import_prop_types243.default.arrayOf(import_prop_types243.default.object),
  // @ts-ignore
  expand: import_prop_types243.default.oneOfType([import_prop_types243.default.element, import_prop_types243.default.elementType]),
  hasBulkActions: import_prop_types243.default.bool,
  hover: import_prop_types243.default.bool,
  onToggleItem: import_prop_types243.default.func,
  resource: import_prop_types243.default.string,
  row: import_prop_types243.default.element,
  // @ts-ignore
  rowClick: import_prop_types243.default.oneOfType([
    import_prop_types243.default.string,
    import_prop_types243.default.func,
    import_prop_types243.default.bool
  ]),
  rowSx: import_prop_types243.default.func,
  rowStyle: import_prop_types243.default.func,
  selectedIds: import_prop_types243.default.arrayOf(import_prop_types243.default.any),
  styles: import_prop_types243.default.object,
  isRowSelectable: import_prop_types243.default.func
};
var defaultData2 = [];
DatagridBody.muiName = "TableBody";
var PureDatagridBody = (0, import_react72.memo)(function(props) {
  return React370.createElement(DatagridBody, __assign64({ row: React370.createElement(PureDatagridRow, null) }, props));
});
PureDatagridBody.muiName = "TableBody";
var DatagridBody_default = DatagridBody;

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridHeaderCell.js
var React371 = __toESM(require_react());
var import_react73 = __toESM(require_react());
var import_prop_types244 = __toESM(require_prop_types());
var __assign65 = function() {
  __assign65 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign65.apply(this, arguments);
};
var __rest61 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a4;
var DatagridHeaderCell = function(props) {
  var className = props.className, field = props.field, sort = props.sort, updateSort = props.updateSort, isSorting = props.isSorting, rest = __rest61(props, ["className", "field", "sort", "updateSort", "isSorting"]);
  var resource = useResourceContext(props);
  var translate = useTranslate();
  return React371.createElement(StyledTableCell, __assign65({ className: clsx_m_default(className, field.props.headerClassName), align: field.props.textAlign, variant: "head" }, rest), updateSort && field.props.sortable !== false && (field.props.sortBy || field.props.source) ? React371.createElement(
    Tooltip_default,
    { title: translate("ra.action.sort"), placement: field.props.textAlign === "right" ? "bottom-end" : "bottom-start", enterDelay: 300 },
    React371.createElement(
      TableSortLabel_default,
      { active: sort.field === (field.props.sortBy || field.props.source), direction: sort.order === "ASC" ? "asc" : "desc", "data-field": field.props.sortBy || field.props.source, "data-order": field.props.sortByOrder || "ASC", onClick: updateSort, classes: DatagridHeaderCellClasses },
      React371.createElement(FieldTitle_default, { label: field.props.label, source: field.props.source, resource })
    )
  ) : React371.createElement(FieldTitle_default, { label: field.props.label, source: field.props.source, resource }));
};
DatagridHeaderCell.propTypes = {
  className: import_prop_types244.default.string,
  field: import_prop_types244.default.element,
  sort: import_prop_types244.default.shape({
    field: import_prop_types244.default.string,
    order: import_prop_types244.default.string
  }).isRequired,
  isSorting: import_prop_types244.default.bool,
  resource: import_prop_types244.default.string,
  updateSort: import_prop_types244.default.func
};
var DatagridHeaderCell_default = (0, import_react73.memo)(DatagridHeaderCell, function(props, nextProps) {
  return props.updateSort === nextProps.updateSort && props.sort.field === nextProps.sort.field && props.sort.order === nextProps.sort.order && props.isSorting === nextProps.isSorting && props.resource === nextProps.resource;
});
var PREFIX39 = "RaDatagridHeaderCell";
var DatagridHeaderCellClasses = {
  icon: "".concat(PREFIX39, "-icon")
};
var StyledTableCell = styled_default2(TableCell_default, {
  name: PREFIX39,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a4 = {}, _a4["& .MuiTableSortLabel-icon"] = {
  display: "none"
}, _a4["& .Mui-active .MuiTableSortLabel-icon"] = {
  display: "inline"
}, _a4));

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridLoading.js
var React373 = __toESM(require_react());
var import_react74 = __toESM(require_react());
var import_prop_types245 = __toESM(require_prop_types());
var import_ExpandMore4 = __toESM(require_ExpandMore());

// node_modules/ra-ui-materialui/dist/esm/list/Placeholder.js
var React372 = __toESM(require_react());
var Placeholder = function(props) {
  return React372.createElement(Root15, { className: props.className }, " ");
};
var PREFIX40 = "RaPlaceholder";
var Root15 = styled_default2("span", {
  name: PREFIX40,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    backgroundColor: theme.palette.grey[300],
    display: "flex"
  };
});

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridLoading.js
var times = function(nbChildren, fn2) {
  return Array.from({ length: nbChildren }, function(_5, key) {
    return fn2(key);
  });
};
var DatagridLoading = function(_a13) {
  var className = _a13.className, expand = _a13.expand, hasBulkActions = _a13.hasBulkActions, nbChildren = _a13.nbChildren, _b = _a13.nbFakeLines, nbFakeLines = _b === void 0 ? 5 : _b, size2 = _a13.size;
  var oneSecondHasPassed = useTimeout(1e3);
  return oneSecondHasPassed ? React373.createElement(
    "div",
    { className: DatagridClasses.root },
    React373.createElement(
      Table_default,
      { className: clsx_m_default(DatagridClasses.table, className), size: size2 },
      React373.createElement(
        TableHead_default,
        null,
        React373.createElement(
          TableRow_default,
          { className: DatagridClasses.row },
          expand && React373.createElement(TableCell_default, { padding: "none", className: DatagridClasses.expandHeader }),
          hasBulkActions && React373.createElement(
            TableCell_default,
            { padding: "checkbox", className: DatagridClasses.expandIconCell },
            React373.createElement(Checkbox_default, { className: "select-all", color: "primary", checked: false })
          ),
          times(nbChildren, function(key) {
            return React373.createElement(
              TableCell_default,
              { variant: "head", className: DatagridClasses.headerCell, key },
              React373.createElement(Placeholder, null)
            );
          })
        )
      ),
      React373.createElement(TableBody_default, null, times(nbFakeLines, function(key1) {
        return React373.createElement(
          TableRow_default,
          { key: key1, style: { opacity: 1 / (key1 + 1) } },
          expand && React373.createElement(
            TableCell_default,
            { padding: "none", className: DatagridClasses.expandIconCell },
            React373.createElement(
              IconButton_default,
              { className: DatagridClasses.expandIcon, component: "div", "aria-hidden": "true", size: "large" },
              React373.createElement(import_ExpandMore4.default, null)
            )
          ),
          hasBulkActions && React373.createElement(
            TableCell_default,
            { padding: "checkbox", className: DatagridClasses.expandIconCell },
            React373.createElement(Checkbox_default, { className: "select-all", color: "primary", checked: false })
          ),
          times(nbChildren, function(key2) {
            return React373.createElement(
              TableCell_default,
              { className: DatagridClasses.rowCell, key: key2 },
              React373.createElement(Placeholder, null)
            );
          })
        );
      }))
    )
  ) : null;
};
DatagridLoading.propTypes = {
  className: import_prop_types245.default.string,
  expand: import_prop_types245.default.oneOfType([import_prop_types245.default.element, import_prop_types245.default.elementType]),
  hasBulkActions: import_prop_types245.default.bool,
  nbChildren: import_prop_types245.default.number,
  nbFakeLines: import_prop_types245.default.number,
  size: import_prop_types245.default.oneOf(["small", "medium"])
};
var DatagridLoading_default = (0, import_react74.memo)(DatagridLoading);

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/Datagrid.js
var React379 = __toESM(require_react());
var import_react80 = __toESM(require_react());
var import_prop_types248 = __toESM(require_prop_types());
var import_union = __toESM(require_union());
var import_difference = __toESM(require_difference());

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridHeader.js
var React375 = __toESM(require_react());
var import_react76 = __toESM(require_react());
var import_prop_types246 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/ExpandAllButton.js
var React374 = __toESM(require_react());
var import_react75 = __toESM(require_react());
var import_ExpandMore5 = __toESM(require_ExpandMore());
var ExpandAllButton = function(_a13) {
  var _b;
  var resource = _a13.resource, ids = _a13.ids;
  var translate = useTranslate();
  var _c = useExpandAll(resource, ids), expanded = _c[0], toggleExpanded = _c[1];
  return React374.createElement(
    IconButton_default,
    { className: clsx_m_default(DatagridClasses.expandIcon, (_b = {}, _b[DatagridClasses.expanded] = expanded, _b)), "aria-label": translate(expanded ? "ra.action.close" : "ra.action.expand"), "aria-expanded": expanded, tabIndex: -1, "aria-hidden": "true", onClick: toggleExpanded, size: "small" },
    React374.createElement(import_ExpandMore5.default, { fontSize: "inherit" })
  );
};
var ExpandAllButton_default = (0, import_react75.memo)(ExpandAllButton);

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridHeader.js
var DatagridHeader = function(props) {
  var children2 = props.children, className = props.className, _a13 = props.hasExpand, hasExpand = _a13 === void 0 ? false : _a13, _b = props.hasBulkActions, hasBulkActions = _b === void 0 ? false : _b, isRowSelectable = props.isRowSelectable;
  var resource = useResourceContext(props);
  var translate = useTranslate();
  var _c = useListContext(props), sort = _c.sort, data = _c.data, onSelect = _c.onSelect, selectedIds = _c.selectedIds, setSort = _c.setSort;
  var expandSingle = useDatagridContext().expandSingle;
  var updateSortCallback = (0, import_react76.useCallback)(function(event) {
    event.stopPropagation();
    var newField = event.currentTarget.dataset.field;
    var newOrder = sort.field === newField ? sort.order === "ASC" ? "DESC" : "ASC" : event.currentTarget.dataset.order;
    setSort({ field: newField, order: newOrder });
  }, [sort.field, sort.order, setSort]);
  var updateSort = setSort ? updateSortCallback : null;
  var handleSelectAll = (0, import_react76.useCallback)(function(event) {
    return onSelect(event.target.checked ? selectedIds.concat(data.filter(function(record) {
      return !selectedIds.includes(record.id);
    }).filter(function(record) {
      return isRowSelectable ? isRowSelectable(record) : true;
    }).map(function(record) {
      return record.id;
    })) : []);
  }, [data, onSelect, isRowSelectable, selectedIds]);
  var selectableIds = Array.isArray(data) ? isRowSelectable ? data.filter(function(record) {
    return isRowSelectable(record);
  }).map(function(record) {
    return record.id;
  }) : data.map(function(record) {
    return record.id;
  }) : [];
  return React375.createElement(
    TableHead_default,
    { className: clsx_m_default(className, DatagridClasses.thead) },
    React375.createElement(
      TableRow_default,
      { className: clsx_m_default(DatagridClasses.row, DatagridClasses.headerRow) },
      hasExpand && React375.createElement(TableCell_default, { padding: "none", className: clsx_m_default(DatagridClasses.headerCell, DatagridClasses.expandHeader) }, !expandSingle ? React375.createElement(ExpandAllButton_default, { resource, ids: data.map(function(record) {
        return record.id;
      }) }) : null),
      hasBulkActions && selectedIds && React375.createElement(
        TableCell_default,
        { padding: "checkbox", className: DatagridClasses.headerCell },
        React375.createElement(Checkbox_default, { "aria-label": translate("ra.action.select_all", {
          _: "Select all"
        }), className: "select-all", color: "primary", checked: selectedIds.length > 0 && selectableIds.length > 0 && selectableIds.every(function(id) {
          return selectedIds.includes(id);
        }), onChange: handleSelectAll })
      ),
      import_react76.Children.map(children2, function(field, index2) {
        return (0, import_react76.isValidElement)(field) ? React375.createElement(DatagridHeaderCell_default, { className: clsx_m_default(DatagridClasses.headerCell, "column-".concat(field.props.source)), sort, field, isSorting: sort.field === (field.props.sortBy || field.props.source), key: field.props.source || index2, resource, updateSort }) : null;
      })
    )
  );
};
DatagridHeader.propTypes = {
  children: import_prop_types246.default.node,
  className: import_prop_types246.default.string,
  sort: import_prop_types246.default.exact({
    field: import_prop_types246.default.string,
    order: import_prop_types246.default.string
  }),
  data: import_prop_types246.default.arrayOf(import_prop_types246.default.any),
  hasExpand: import_prop_types246.default.bool,
  hasBulkActions: import_prop_types246.default.bool,
  isRowSelectable: import_prop_types246.default.func,
  isRowExpandable: import_prop_types246.default.func,
  onSelect: import_prop_types246.default.func,
  onToggleItem: import_prop_types246.default.func,
  resource: import_prop_types246.default.string,
  selectedIds: import_prop_types246.default.arrayOf(import_prop_types246.default.any),
  setSort: import_prop_types246.default.func
};
DatagridHeader.displayName = "DatagridHeader";

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridContextProvider.js
var import_react77 = __toESM(require_react());
var DatagridContextProvider = function(_a13) {
  var children2 = _a13.children, value = _a13.value;
  return import_react77.default.createElement(DatagridContext_default.Provider, { value }, children2);
};
var DatagridContextProvider_default = DatagridContextProvider;

// node_modules/ra-ui-materialui/dist/esm/list/BulkActionsToolbar.js
var React377 = __toESM(require_react());
var import_react78 = __toESM(require_react());
var import_prop_types247 = __toESM(require_prop_types());
var import_Close3 = __toESM(require_Close());
var __assign66 = function() {
  __assign66 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign66.apply(this, arguments);
};
var __rest62 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BulkActionsToolbar = function(props) {
  var _a13;
  var _b = props.label, label = _b === void 0 ? "ra.action.bulk_actions" : _b, children2 = props.children, className = props.className, rest = __rest62(props, ["label", "children", "className"]);
  var _c = useListContext(props), filterValues = _c.filterValues, resource = _c.resource, _d = _c.selectedIds, selectedIds = _d === void 0 ? [] : _d, onUnselectItems = _c.onUnselectItems;
  var translate = useTranslate();
  var handleUnselectAllClick = (0, import_react78.useCallback)(function() {
    onUnselectItems();
  }, [onUnselectItems]);
  return React377.createElement(
    Root16,
    { className },
    React377.createElement(
      Toolbar_default,
      __assign66({ "data-test": "bulk-actions-toolbar", className: clsx_m_default(BulkActionsToolbarClasses.toolbar, (_a13 = {}, _a13[BulkActionsToolbarClasses.collapsed] = selectedIds.length === 0, _a13)) }, sanitizeListRestProps(rest)),
      React377.createElement(
        "div",
        { className: BulkActionsToolbarClasses.title },
        React377.createElement(
          IconButton_default,
          { className: BulkActionsToolbarClasses.icon, "aria-label": translate("ra.action.unselect"), title: translate("ra.action.unselect"), onClick: handleUnselectAllClick, size: "small" },
          React377.createElement(import_Close3.default, { fontSize: "small" })
        ),
        React377.createElement(Typography_default, { color: "inherit", variant: "subtitle1" }, translate(label, {
          _: label,
          smart_count: selectedIds.length
        }))
      ),
      React377.createElement(TopToolbar_default, { className: BulkActionsToolbarClasses.topToolbar }, import_react78.Children.map(children2, function(child) {
        return (0, import_react78.isValidElement)(child) ? (0, import_react78.cloneElement)(child, {
          filterValues,
          resource,
          selectedIds
        }) : null;
      }))
    )
  );
};
BulkActionsToolbar.propTypes = {
  children: import_prop_types247.default.node,
  label: import_prop_types247.default.string
};
var PREFIX41 = "RaBulkActionsToolbar";
var BulkActionsToolbarClasses = {
  toolbar: "".concat(PREFIX41, "-toolbar"),
  topToolbar: "".concat(PREFIX41, "-topToolbar"),
  buttons: "".concat(PREFIX41, "-buttons"),
  collapsed: "".concat(PREFIX41, "-collapsed"),
  title: "".concat(PREFIX41, "-title"),
  icon: "".concat(PREFIX41, "-icon")
};
var Root16 = styled_default2("div", {
  name: PREFIX41,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b, _c;
  var theme = _a13.theme;
  return _b = {
    position: "relative"
  }, _b["& .".concat(BulkActionsToolbarClasses.toolbar)] = {
    position: "absolute",
    left: 0,
    right: 0,
    zIndex: 3,
    color: theme.palette.mode === "light" ? theme.palette.primary.main : theme.palette.text.primary,
    justifyContent: "space-between",
    backgroundColor: theme.palette.mode === "light" ? lighten(theme.palette.primary.light, 0.8) : theme.palette.primary.dark,
    minHeight: theme.spacing(6),
    height: theme.spacing(6),
    transform: "translateY(-".concat(theme.spacing(6), ")"),
    transition: "".concat(theme.transitions.create("height"), ", ").concat(theme.transitions.create("min-height"), ", ").concat(theme.transitions.create("transform")),
    borderTopLeftRadius: theme.shape.borderRadius,
    borderTopRightRadius: theme.shape.borderRadius
  }, _b["& .".concat(BulkActionsToolbarClasses.topToolbar)] = (_c = {
    paddingBottom: theme.spacing(1),
    minHeight: "auto"
  }, _c[theme.breakpoints.down("sm")] = {
    backgroundColor: "transparent"
  }, _c), _b["& .".concat(BulkActionsToolbarClasses.buttons)] = {}, _b["& .".concat(BulkActionsToolbarClasses.collapsed)] = {
    minHeight: 0,
    height: 0,
    transform: "translateY(0)",
    overflowY: "hidden"
  }, _b["& .".concat(BulkActionsToolbarClasses.title)] = {
    display: "flex",
    flex: "0 0 auto"
  }, _b["& .".concat(BulkActionsToolbarClasses.icon)] = {
    marginLeft: "-0.5em",
    marginRight: "0.5em"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/list/ListNoResults.js
var React378 = __toESM(require_react());
var import_react79 = __toESM(require_react());
var ListNoResults = (0, import_react79.memo)(function() {
  var translate = useTranslate();
  var resource = useResourceContext();
  return React378.createElement(
    CardContent_default,
    null,
    React378.createElement(Typography_default, { variant: "body2" }, translate("ra.navigation.no_results", { resource }))
  );
});

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/Datagrid.js
var __assign67 = function() {
  __assign67 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign67.apply(this, arguments);
};
var __rest63 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var defaultBulkActionButtons = React379.createElement(BulkDeleteButton, null);
var Datagrid = React379.forwardRef(function(props, ref) {
  var _a13 = props.optimized, optimized = _a13 === void 0 ? false : _a13, _b = props.body, body2 = _b === void 0 ? optimized ? PureDatagridBody : DatagridBody_default : _b, _c = props.header, header = _c === void 0 ? DatagridHeader : _c, children2 = props.children, className = props.className, _d = props.empty, empty = _d === void 0 ? DefaultEmpty : _d, expand = props.expand, _e = props.bulkActionButtons, bulkActionButtons = _e === void 0 ? defaultBulkActionButtons : _e, hover = props.hover, isRowSelectable = props.isRowSelectable, isRowExpandable = props.isRowExpandable, resource = props.resource, rowClick = props.rowClick, rowSx = props.rowSx, rowStyle = props.rowStyle, _f = props.size, size2 = _f === void 0 ? "small" : _f, sx = props.sx, _g = props.expandSingle, expandSingle = _g === void 0 ? false : _g, rest = __rest63(props, ["optimized", "body", "header", "children", "className", "empty", "expand", "bulkActionButtons", "hover", "isRowSelectable", "isRowExpandable", "resource", "rowClick", "rowSx", "rowStyle", "size", "sx", "expandSingle"]);
  var _h = useListContext(props), sort = _h.sort, data = _h.data, isLoading = _h.isLoading, onSelect = _h.onSelect, onToggleItem = _h.onToggleItem, selectedIds = _h.selectedIds, setSort = _h.setSort, total = _h.total;
  var hasBulkActions = !!bulkActionButtons !== false;
  var contextValue = (0, import_react80.useMemo)(function() {
    return { isRowExpandable, expandSingle };
  }, [
    isRowExpandable,
    expandSingle
  ]);
  var lastSelected = (0, import_react80.useRef)(null);
  (0, import_react80.useEffect)(function() {
    if (!selectedIds || selectedIds.length === 0) {
      lastSelected.current = null;
    }
  }, [JSON.stringify(selectedIds)]);
  var handleToggleItem = (0, import_react80.useCallback)(function(id, event) {
    var ids = data.map(function(record) {
      return record.id;
    });
    var lastSelectedIndex = ids.indexOf(lastSelected.current);
    lastSelected.current = event.target.checked ? id : null;
    if (event.shiftKey && lastSelectedIndex !== -1) {
      var index2 = ids.indexOf(id);
      var idsBetweenSelections = ids.slice(Math.min(lastSelectedIndex, index2), Math.max(lastSelectedIndex, index2) + 1);
      var newSelectedIds = event.target.checked ? (0, import_union.default)(selectedIds, idsBetweenSelections) : (0, import_difference.default)(selectedIds, idsBetweenSelections);
      onSelect(isRowSelectable ? newSelectedIds.filter(function(id2) {
        return isRowSelectable(data.find(function(record) {
          return record.id === id2;
        }));
      }) : newSelectedIds);
    } else {
      onToggleItem(id);
    }
  }, [data, isRowSelectable, onSelect, onToggleItem, selectedIds]);
  if (isLoading === true) {
    return React379.createElement(DatagridLoading_default, { className, expand, hasBulkActions, nbChildren: React379.Children.count(children2), size: size2 });
  }
  if (data == null || data.length === 0 || total === 0) {
    if (empty) {
      return empty;
    }
    return null;
  }
  return React379.createElement(
    DatagridContextProvider_default,
    { value: contextValue },
    React379.createElement(
      DatagridRoot,
      { sx, className: clsx_m_default(DatagridClasses.root, className) },
      bulkActionButtons !== false ? React379.createElement(BulkActionsToolbar, { selectedIds }, (0, import_react80.isValidElement)(bulkActionButtons) ? bulkActionButtons : defaultBulkActionButtons) : null,
      React379.createElement(
        "div",
        { className: DatagridClasses.tableWrapper },
        React379.createElement(
          Table_default,
          __assign67({ ref, className: DatagridClasses.table, size: size2 }, sanitizeRestProps12(rest)),
          createOrCloneElement(header, {
            children: children2,
            sort,
            data,
            hasExpand: !!expand,
            hasBulkActions,
            isRowSelectable,
            onSelect,
            resource,
            selectedIds,
            setSort
          }, children2),
          createOrCloneElement(body2, {
            expand,
            rowClick,
            data,
            hasBulkActions,
            hover,
            onToggleItem: handleToggleItem,
            resource,
            rowSx,
            rowStyle,
            selectedIds,
            isRowSelectable
          }, children2)
        )
      )
    )
  );
});
var createOrCloneElement = function(element, props, children2) {
  return (0, import_react80.isValidElement)(element) ? (0, import_react80.cloneElement)(element, props, children2) : (0, import_react80.createElement)(element, props, children2);
};
Datagrid.propTypes = {
  // @ts-ignore
  body: import_prop_types248.default.oneOfType([import_prop_types248.default.element, import_prop_types248.default.elementType]),
  // @ts-ignore-line
  bulkActionButtons: import_prop_types248.default.oneOfType([import_prop_types248.default.bool, import_prop_types248.default.element]),
  children: import_prop_types248.default.node.isRequired,
  className: import_prop_types248.default.string,
  sort: import_prop_types248.default.exact({
    field: import_prop_types248.default.string,
    order: import_prop_types248.default.string
  }),
  data: import_prop_types248.default.arrayOf(import_prop_types248.default.any),
  empty: import_prop_types248.default.element,
  // @ts-ignore
  expand: import_prop_types248.default.oneOfType([import_prop_types248.default.element, import_prop_types248.default.elementType]),
  // @ts-ignore
  header: import_prop_types248.default.oneOfType([import_prop_types248.default.element, import_prop_types248.default.elementType]),
  hover: import_prop_types248.default.bool,
  isLoading: import_prop_types248.default.bool,
  onSelect: import_prop_types248.default.func,
  onToggleItem: import_prop_types248.default.func,
  resource: import_prop_types248.default.string,
  // @ts-ignore
  rowClick: import_prop_types248.default.oneOfType([
    import_prop_types248.default.string,
    import_prop_types248.default.func,
    import_prop_types248.default.bool
  ]),
  rowSx: import_prop_types248.default.func,
  rowStyle: import_prop_types248.default.func,
  selectedIds: import_prop_types248.default.arrayOf(import_prop_types248.default.any),
  setSort: import_prop_types248.default.func,
  total: import_prop_types248.default.number,
  isRowSelectable: import_prop_types248.default.func,
  isRowExpandable: import_prop_types248.default.func,
  expandSingle: import_prop_types248.default.bool
};
var injectedProps2 = [
  "isRequired",
  "setFilter",
  "setPagination",
  "limitChoicesToValue",
  "translateChoice",
  // Datagrid may be used as an alternative to SelectInput
  "field",
  "fieldState",
  "formState"
];
var sanitizeRestProps12 = function(props) {
  return Object.keys(sanitizeListRestProps(props)).filter(function(propName) {
    return !injectedProps2.includes(propName);
  }).reduce(function(acc, key) {
    var _a13;
    return __assign67(__assign67({}, acc), (_a13 = {}, _a13[key] = props[key], _a13));
  }, {});
};
Datagrid.displayName = "Datagrid";
var DefaultEmpty = React379.createElement(ListNoResults, null);

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridConfigurable.js
var React381 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridEditor.js
var React380 = __toESM(require_react());
var DatagridEditor = function() {
  useSetInspectorTitle("ra.inspector.Datagrid.title", { _: "Datagrid" });
  return React380.createElement(FieldsSelector, { name: "columns", availableName: "availableColumns" });
};

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridConfigurable.js
var __assign68 = function() {
  __assign68 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign68.apply(this, arguments);
};
var __rest64 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DatagridConfigurable = function(_a13) {
  var preferenceKey = _a13.preferenceKey, omit = _a13.omit, props = __rest64(_a13, ["preferenceKey", "omit"]);
  if (props.optimized) {
    throw new Error("DatagridConfigurable does not support the optimized prop");
  }
  var translate = useTranslate();
  var resource = useResourceContext(props);
  var finalPreferenceKey = preferenceKey || "".concat(resource, ".datagrid");
  var _b = useStore("preferences.".concat(finalPreferenceKey, ".availableColumns"), []), availableColumns = _b[0], setAvailableColumns = _b[1];
  var _c = useStore("preferences.".concat(finalPreferenceKey, ".omit"), omit), _5 = _c[0], setOmit = _c[1];
  React381.useEffect(function() {
    var columns = React381.Children.toArray(props.children).filter(function(child) {
      return React381.isValidElement(child);
    }).map(function(child, index2) {
      return {
        index: String(index2),
        source: child.props.source,
        label: child.props.label && typeof child.props.label === "string" ? child.props.label : child.props.source ? (
          //  force the label to be the source
          void 0
        ) : (
          // no source or label, generate a label
          translate("ra.configurable.Datagrid.unlabeled", {
            column: index2,
            _: "Unlabeled column #%{column}"
          })
        )
      };
    });
    if (columns.length !== availableColumns.length) {
      setAvailableColumns(columns);
      setOmit(omit);
    }
  }, [availableColumns]);
  return React381.createElement(
    Configurable,
    { editor: React381.createElement(DatagridEditor, null), preferenceKey: finalPreferenceKey, sx: { display: "block", minHeight: 2 } },
    React381.createElement(DatagridWithPreferences, __assign68({}, props))
  );
};
DatagridConfigurable.propTypes = Datagrid.propTypes;
var DatagridWithPreferences = function(_a13) {
  var children2 = _a13.children, props = __rest64(_a13, ["children"]);
  var availableColumns = usePreference("availableColumns", [])[0];
  var omit = usePreference("omit", [])[0];
  var columns = usePreference("columns", availableColumns.filter(function(column2) {
    return !(omit === null || omit === void 0 ? void 0 : omit.includes(column2.source));
  }).map(function(column2) {
    return column2.index;
  }))[0];
  var childrenArray = React381.Children.toArray(children2);
  return React381.createElement(Datagrid, __assign68({}, props), columns === void 0 ? children2 : columns.map(function(index2) {
    return childrenArray[index2];
  }));
};

// node_modules/ra-ui-materialui/dist/esm/list/datagrid/SelectColumnsButton.js
var React382 = __toESM(require_react());
var import_ViewWeek = __toESM(require_ViewWeek());
var __assign69 = function() {
  __assign69 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign69.apply(this, arguments);
};
var __rest65 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray6 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var SelectColumnsButton = function(props) {
  var preferenceKey = props.preferenceKey;
  var resource = useResourceContext(props);
  var finalPreferenceKey = preferenceKey || "".concat(resource, ".datagrid");
  var _a13 = React382.useState(null), anchorEl = _a13[0], setAnchorEl = _a13[1];
  var _b = useStore("preferences.".concat(finalPreferenceKey, ".availableColumns"), []), availableColumns = _b[0], setAvailableColumns = _b[1];
  var omit = useStore("preferences.".concat(finalPreferenceKey, ".omit"), [])[0];
  var _c = useStore("preferences.".concat(finalPreferenceKey, ".columns"), availableColumns.filter(function(column2) {
    return !(omit === null || omit === void 0 ? void 0 : omit.includes(column2.source));
  }).map(function(column2) {
    return column2.index;
  })), columns = _c[0], setColumns = _c[1];
  var translate = useTranslate();
  var isXSmall = useMediaQuery(function(theme) {
    return theme.breakpoints.down("sm");
  });
  var title = translate("ra.action.select_columns", { _: "Columns" });
  var handleClick2 = function(event) {
    setAnchorEl(event.currentTarget);
  };
  var handleClose = function() {
    setAnchorEl(null);
  };
  var handleToggle = function(event) {
    if (event.target.checked) {
      setColumns(availableColumns.filter(function(column2) {
        return column2.index === event.target.name || columns.includes(column2.index);
      }).map(function(column2) {
        return column2.index;
      }));
    } else {
      setColumns(columns.filter(function(index2) {
        return index2 !== event.target.name;
      }));
    }
  };
  var handleMove = function(index1, index2) {
    var index1Pos = availableColumns.findIndex(
      // eslint-disable-next-line eqeqeq
      function(field) {
        return field.index == index1;
      }
    );
    var index2Pos = availableColumns.findIndex(
      // eslint-disable-next-line eqeqeq
      function(field) {
        return field.index == index2;
      }
    );
    if (index1Pos === -1 || index2Pos === -1) {
      return;
    }
    var newAvailableColumns;
    if (index1Pos > index2Pos) {
      newAvailableColumns = __spreadArray6(__spreadArray6(__spreadArray6(__spreadArray6([], availableColumns.slice(0, index2Pos), true), [
        availableColumns[index1Pos]
      ], false), availableColumns.slice(index2Pos, index1Pos), true), availableColumns.slice(index1Pos + 1), true);
    } else {
      newAvailableColumns = __spreadArray6(__spreadArray6(__spreadArray6(__spreadArray6([], availableColumns.slice(0, index1Pos), true), availableColumns.slice(index1Pos + 1, index2Pos + 1), true), [
        availableColumns[index1Pos]
      ], false), availableColumns.slice(index2Pos + 1), true);
    }
    setAvailableColumns(newAvailableColumns);
    setColumns(function(columns2) {
      return newAvailableColumns.filter(function(column2) {
        return columns2.includes(column2.index);
      }).map(function(column2) {
        return column2.index;
      });
    });
  };
  return React382.createElement(
    React382.Fragment,
    null,
    isXSmall ? React382.createElement(
      Tooltip_default,
      { title },
      React382.createElement(
        IconButton_default,
        __assign69({ "aria-label": title, color: "primary", onClick: handleClick2, size: "large" }, sanitizeRestProps13(props)),
        React382.createElement(import_ViewWeek.default, null)
      )
    ) : React382.createElement(StyledButton13, __assign69({ size: "small", onClick: handleClick2, startIcon: React382.createElement(import_ViewWeek.default, null) }, sanitizeRestProps13(props)), title),
    React382.createElement(
      Popover_default,
      { open: Boolean(anchorEl), anchorEl, onClose: handleClose, anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      }, transformOrigin: {
        vertical: "top",
        horizontal: "center"
      } },
      React382.createElement(Box_default2, { p: 1 }, availableColumns.map(function(column2) {
        return React382.createElement(FieldToggle, { key: column2.index, source: column2.source, label: column2.label, index: column2.index, selected: columns.includes(column2.index), onToggle: handleToggle, onMove: handleMove });
      }))
    )
  );
};
var StyledButton13 = styled_default2(Button_default, {
  name: "RaSelectColumnsButton",
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})({
  "&.MuiButton-sizeSmall": {
    // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240
    lineHeight: 1.5
  }
});
var sanitizeRestProps13 = function(_a13) {
  var _b = _a13.resource, resource = _b === void 0 ? null : _b, _c = _a13.preferenceKey, preferenceKey = _c === void 0 ? null : _c, rest = __rest65(_a13, ["resource", "preferenceKey"]);
  return rest;
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/Filter.js
var React390 = __toESM(require_react());
var import_react85 = __toESM(require_react());
var import_prop_types253 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/list/filter/FilterForm.js
var React385 = __toESM(require_react());
var import_react81 = __toESM(require_react());
var import_prop_types250 = __toESM(require_prop_types());
var import_set2 = __toESM(require_set());
var import_unset = __toESM(require_unset());
var import_get6 = __toESM(require_get());
var import_cloneDeep = __toESM(require_cloneDeep());
var import_isEqual4 = __toESM(require_isEqual());

// node_modules/ra-ui-materialui/dist/esm/list/filter/FilterFormInput.js
var React383 = __toESM(require_react());
var import_prop_types249 = __toESM(require_prop_types());
var import_HighlightOff2 = __toESM(require_HighlightOff());
var FilterFormInput = function(props) {
  var _a13;
  var filterElement = props.filterElement, handleHide = props.handleHide, className = props.className;
  var resource = useResourceContext(props);
  var translate = useTranslate();
  return React383.createElement(
    Root17,
    { "data-source": filterElement.props.source, className: clsx_m_default("filter-field", className) },
    !filterElement.props.alwaysOn && React383.createElement(
      IconButton_default,
      { className: clsx_m_default("hide-filter", FilterFormInputClasses.hideButton), onClick: handleHide, "data-key": filterElement.props.source, title: translate("ra.action.remove_filter"), size: "small" },
      React383.createElement(import_HighlightOff2.default, null)
    ),
    React383.cloneElement(filterElement, {
      resource,
      record: emptyRecord,
      size: (_a13 = filterElement.props.size) !== null && _a13 !== void 0 ? _a13 : "small",
      helperText: false,
      // ignore defaultValue in Field because it was already set in Form (via mergedInitialValuesWithDefaultValues)
      defaultValue: void 0
    }),
    React383.createElement("div", { className: FilterFormInputClasses.spacer }, " ")
  );
};
FilterFormInput.propTypes = {
  filterElement: import_prop_types249.default.node,
  handleHide: import_prop_types249.default.func,
  resource: import_prop_types249.default.string,
  className: import_prop_types249.default.string
};
var PREFIX42 = "RaFilterFormInput";
var FilterFormInputClasses = {
  spacer: "".concat(PREFIX42, "-spacer"),
  hideButton: "".concat(PREFIX42, "-hideButton")
};
var Root17 = styled_default2("div", {
  name: PREFIX42,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    alignItems: "flex-end",
    pointerEvents: "auto"
  }, _b[theme.breakpoints.down("sm")] = {
    width: "100%"
  }, _b["& .".concat(FilterFormInputClasses.spacer)] = { width: theme.spacing(2) }, _b["& .".concat(FilterFormInputClasses.hideButton)] = {
    marginBottom: theme.spacing(1)
  }, _b;
});
var emptyRecord = {};

// node_modules/ra-ui-materialui/dist/esm/list/FilterContext.js
var React384 = __toESM(require_react());
var FilterContext = React384.createContext(void 0);

// node_modules/ra-ui-materialui/dist/esm/list/filter/FilterForm.js
var __assign70 = function() {
  __assign70 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign70.apply(this, arguments);
};
var __awaiter5 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator5 = function(thisArg, body2) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_5 = 0)), _5)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __rest66 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FilterForm = function(props) {
  var defaultValues = props.defaultValues, filtersProps = props.filters, rest = __rest66(props, ["defaultValues", "filters"]);
  var _a13 = useListContext(props), setFilters = _a13.setFilters, displayedFilters = _a13.displayedFilters, filterValues = _a13.filterValues;
  var filters = (0, import_react81.useContext)(FilterContext) || filtersProps;
  var mergedInitialValuesWithDefaultValues = mergeInitialValuesWithDefaultValues(defaultValues || filterValues, filters);
  var form = useForm({
    defaultValues: mergedInitialValuesWithDefaultValues
  });
  (0, import_react81.useEffect)(function() {
    var newValues = getFilterFormValues(form.getValues(), filterValues);
    if (!(0, import_isEqual4.default)(newValues, form.getValues())) {
      form.reset(newValues);
    }
  }, [filterValues, form]);
  (0, import_react81.useEffect)(function() {
    var subscription = form.watch(function(values3, _a14) {
      var name = _a14.name;
      return __awaiter5(void 0, void 0, void 0, function() {
        var isFormValid, newValues;
        return __generator5(this, function(_b) {
          switch (_b.label) {
            case 0:
              return [4, form.trigger()];
            case 1:
              isFormValid = _b.sent();
              if (isFormValid) {
                if ((0, import_get6.default)(values3, name) === "") {
                  newValues = (0, import_cloneDeep.default)(values3);
                  (0, import_unset.default)(newValues, name);
                  setFilters(newValues, displayedFilters);
                } else {
                  setFilters(values3, displayedFilters);
                }
              }
              return [
                2
                /*return*/
              ];
          }
        });
      });
    });
    return function() {
      return subscription.unsubscribe();
    };
  }, [displayedFilters, form, setFilters]);
  return React385.createElement(
    FormProvider,
    __assign70({}, form),
    React385.createElement(FilterFormBase, __assign70({ onSubmit: handleFormSubmit, filters }, rest))
  );
};
var FilterFormBase = function(props) {
  var className = props.className, filters = props.filters, rest = __rest66(props, ["className", "filters"]);
  var resource = useResourceContext(props);
  var form = useFormContext();
  var _a13 = useListContext(props), _b = _a13.displayedFilters, displayedFilters = _b === void 0 ? {} : _b, hideFilter = _a13.hideFilter;
  (0, import_react81.useEffect)(function() {
    filters.forEach(function(filter) {
      if (filter.props.alwaysOn && filter.props.defaultValue) {
        throw new Error("Cannot use alwaysOn and defaultValue on a filter input. Please set the filterDefaultValues props on the <List> element instead.");
      }
    });
  }, [filters]);
  var getShownFilters = function() {
    var values3 = form.getValues();
    return filters.filter(function(filterElement) {
      var filterValue = (0, import_get6.default)(values3, filterElement.props.source);
      return filterElement.props.alwaysOn || displayedFilters[filterElement.props.source] || filterValue !== "" && typeof filterValue !== "undefined";
    });
  };
  var handleHide = (0, import_react81.useCallback)(function(event) {
    return hideFilter(event.currentTarget.dataset.key);
  }, [hideFilter]);
  return React385.createElement(
    LabelPrefixContextProvider,
    { prefix: "resources.".concat(resource, ".fields") },
    React385.createElement(
      StyledForm,
      __assign70({ className }, sanitizeRestProps14(rest), { onSubmit: handleSubmit }),
      getShownFilters().map(function(filterElement) {
        return React385.createElement(FilterFormInput, { key: filterElement.props.source, filterElement, handleHide, resource, className: FilterFormClasses.filterFormInput });
      }),
      React385.createElement("div", { className: FilterFormClasses.clearFix })
    )
  );
};
var handleSubmit = function(event) {
  event.preventDefault();
  return false;
};
FilterFormBase.propTypes = {
  resource: import_prop_types250.default.string,
  filters: import_prop_types250.default.arrayOf(import_prop_types250.default.node).isRequired,
  displayedFilters: import_prop_types250.default.object,
  hideFilter: import_prop_types250.default.func,
  initialValues: import_prop_types250.default.object,
  className: import_prop_types250.default.string
};
var sanitizeRestProps14 = function(_a13) {
  var displayedFilters = _a13.displayedFilters, filterValues = _a13.filterValues, hasCreate = _a13.hasCreate, hideFilter = _a13.hideFilter, setFilters = _a13.setFilters, resource = _a13.resource, props = __rest66(_a13, ["displayedFilters", "filterValues", "hasCreate", "hideFilter", "setFilters", "resource"]);
  return props;
};
var mergeInitialValuesWithDefaultValues = function(initialValues, filters) {
  return __assign70(__assign70({}, filters.filter(function(filterElement) {
    return filterElement.props.alwaysOn && filterElement.props.defaultValue;
  }).reduce(function(acc, filterElement) {
    return (0, import_set2.default)(__assign70({}, acc), filterElement.props.source, filterElement.props.defaultValue);
  }, {})), initialValues);
};
var handleFormSubmit = function() {
};
var PREFIX43 = "RaFilterForm";
var FilterFormClasses = {
  clearFix: "".concat(PREFIX43, "-clearFix"),
  filterFormInput: "".concat(PREFIX43, "-filterFormInput")
};
var StyledForm = styled_default2("form", {
  name: PREFIX43,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    flex: "0 1 auto"
  }, _b[theme.breakpoints.down("sm")] = {
    width: "100%"
  }, _b[theme.breakpoints.up("md")] = {
    flex: "0 1 100%"
  }, _b.flexWrap = "wrap", _b.alignItems = "flex-end", _b.pointerEvents = "none", _b.padding = "0 0 ".concat(theme.spacing(0.5), " 0"), _b["& .MuiFormHelperText-root"] = { display: "none" }, _b["& .".concat(FilterFormClasses.clearFix)] = { clear: "right" }, _b["& .".concat(FilterFormClasses.filterFormInput, " .MuiFormControl-root")] = {
    marginTop: "".concat(theme.spacing(1))
  }, _b;
});
var getFilterFormValues = function(formValues, filterValues) {
  var _a13;
  return Object.keys(formValues).reduce(function(acc, key) {
    acc[key] = getInputValue(formValues, key, filterValues);
    return acc;
  }, (_a13 = (0, import_cloneDeep.default)(filterValues)) !== null && _a13 !== void 0 ? _a13 : {});
};
var getInputValue = function(formValues, key, filterValues) {
  if (formValues[key] === void 0 || formValues[key] === null) {
    return "";
  }
  if (Array.isArray(formValues[key])) {
    return (0, import_get6.default)(filterValues, key, "");
  }
  if (formValues[key] instanceof Date) {
    return (0, import_get6.default)(filterValues, key, "");
  }
  if (typeof formValues[key] === "object") {
    var inputValues = Object.keys(formValues[key]).reduce(function(acc, innerKey) {
      var _a13;
      var nestedInputValue = getInputValue(formValues[key], innerKey, (_a13 = (filterValues || {})[key]) !== null && _a13 !== void 0 ? _a13 : {});
      if (nestedInputValue === "") {
        return acc;
      }
      acc[innerKey] = nestedInputValue;
      return acc;
    }, {});
    if (!Object.keys(inputValues).length)
      return "";
    return inputValues;
  }
  return (0, import_get6.default)(filterValues, key, "");
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/FilterButton.js
var React389 = __toESM(require_react());
var import_react84 = __toESM(require_react());
var import_prop_types252 = __toESM(require_prop_types());
var import_FilterList = __toESM(require_FilterList());
var import_get7 = __toESM(require_get());
var import_isEqual6 = __toESM(require_isEqual());
var import_query_string2 = __toESM(require_query_string());

// node_modules/ra-ui-materialui/dist/esm/list/filter/FilterButtonMenuItem.js
var React386 = __toESM(require_react());
var import_react82 = __toESM(require_react());
var import_prop_types251 = __toESM(require_prop_types());
var FilterButtonMenuItem = (0, import_react82.forwardRef)(function(props, ref) {
  var filter = props.filter, onShow = props.onShow, autoFocus = props.autoFocus;
  var resource = useResourceContext(props);
  var handleShow = (0, import_react82.useCallback)(function() {
    onShow({
      source: filter.props.source,
      defaultValue: filter.props.defaultValue
    });
  }, [filter.props.defaultValue, filter.props.source, onShow]);
  return React386.createElement(
    MenuItem_default,
    { className: "new-filter-item", "data-key": filter.props.source, "data-default-value": filter.props.defaultValue, key: filter.props.source, onClick: handleShow, autoFocus, ref, disabled: filter.props.disabled },
    React386.createElement(FieldTitle_default, { label: filter.props.label, source: filter.props.source, resource })
  );
});
FilterButtonMenuItem.propTypes = {
  filter: import_prop_types251.default.element.isRequired,
  onShow: import_prop_types251.default.func.isRequired,
  resource: import_prop_types251.default.string,
  autoFocus: import_prop_types251.default.bool
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/useSavedQueries.js
var useSavedQueries = function(resource) {
  return useStore("".concat(resource, ".savedQueries"), []);
};
var extractValidSavedQueries = function(savedQueries) {
  if (Array.isArray(savedQueries)) {
    return savedQueries.filter(function(query) {
      return isValidSavedQuery(query);
    });
  }
  return [];
};
var areValidSavedQueries = function(savedQueries) {
  if (Array.isArray(savedQueries) && savedQueries.every(function(query) {
    return isValidSavedQuery(query);
  })) {
    return true;
  }
};
var isValidSavedQuery = function(savedQuery) {
  var _a13, _b;
  if (savedQuery.label && typeof savedQuery.label === "string" && savedQuery.value && typeof Array.isArray(savedQuery.value.displayedFilters) && typeof savedQuery.value.perPage === "number" && typeof ((_a13 = savedQuery.value.sort) === null || _a13 === void 0 ? void 0 : _a13.field) === "string" && typeof ((_b = savedQuery.value.sort) === null || _b === void 0 ? void 0 : _b.order) === "string" && typeof savedQuery.value.filter === "object") {
    return true;
  }
  return false;
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/AddSavedQueryDialog.js
var React387 = __toESM(require_react());
var import_react83 = __toESM(require_react());
var AddSavedQueryDialog = function(_a13) {
  var open = _a13.open, onClose = _a13.onClose;
  var translate = useTranslate();
  var _b = useListContext(), resource = _b.resource, filterValues = _b.filterValues, displayedFilters = _b.displayedFilters, sort = _b.sort, perPage = _b.perPage;
  var _c = useSavedQueries(resource), savedQueries = _c[0], setSavedQueries = _c[1];
  var _d = (0, import_react83.useState)(""), queryName = _d[0], setQueryName = _d[1];
  var handleQueryNameChange = function(event) {
    setQueryName(event.target.value);
  };
  var handleFormSubmit2 = function(e) {
    e.preventDefault();
    addQuery();
  };
  var addQuery = function() {
    var newSavedQuery = {
      label: queryName,
      value: {
        filter: filterValues,
        sort,
        perPage,
        displayedFilters
      }
    };
    var newSavedQueries = extractValidSavedQueries(savedQueries);
    setSavedQueries(newSavedQueries.concat(newSavedQuery));
    setQueryName("");
    onClose();
  };
  return React387.createElement(
    Dialog_default,
    { open, onClose, "aria-labelledby": "form-dialog-title" },
    React387.createElement(DialogTitle_default, { id: "form-dialog-title" }, translate("ra.saved_queries.new_dialog_title", {
      _: "Save current query as"
    })),
    React387.createElement(
      DialogContent_default,
      null,
      React387.createElement(
        "form",
        { onSubmit: handleFormSubmit2 },
        React387.createElement(
          TextField_default,
          {
            // eslint-disable-next-line jsx-a11y/no-autofocus
            autoFocus: true,
            margin: "dense",
            id: "name",
            label: translate("ra.saved_queries.query_name", {
              _: "Query name"
            }),
            fullWidth: true,
            value: queryName,
            onChange: handleQueryNameChange
          }
        )
      )
    ),
    React387.createElement(
      DialogActions_default,
      null,
      React387.createElement(Button_default, { onClick: onClose }, translate("ra.action.cancel")),
      React387.createElement(Button_default, { onClick: addQuery, color: "primary" }, translate("ra.action.save"))
    )
  );
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/RemoveSavedQueryDialog.js
var React388 = __toESM(require_react());
var import_isEqual5 = __toESM(require_isEqual());
var __spreadArray7 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var RemoveSavedQueryDialog = function(_a13) {
  var open = _a13.open, onClose = _a13.onClose;
  var translate = useTranslate();
  var _b = useListContext(), resource = _b.resource, filterValues = _b.filterValues, sort = _b.sort, perPage = _b.perPage, displayedFilters = _b.displayedFilters;
  var _c = useSavedQueries(resource), savedQueries = _c[0], setSavedQueries = _c[1];
  var removeQuery = function() {
    var savedQueryToRemove = {
      filter: filterValues,
      sort,
      perPage,
      displayedFilters
    };
    var newSavedQueries = extractValidSavedQueries(savedQueries);
    var index2 = newSavedQueries.findIndex(function(savedFilter) {
      return (0, import_isEqual5.default)(savedFilter.value, savedQueryToRemove);
    });
    setSavedQueries(__spreadArray7(__spreadArray7([], newSavedQueries.slice(0, index2), true), newSavedQueries.slice(index2 + 1), true));
    onClose();
  };
  return React388.createElement(
    Dialog_default,
    { open, onClose, "aria-labelledby": "alert-dialog-title", "aria-describedby": "alert-dialog-description" },
    React388.createElement(DialogTitle_default, { id: "alert-dialog-title" }, translate("ra.saved_queries.remove_dialog_title", {
      _: "Remove saved query?"
    })),
    React388.createElement(
      DialogContent_default,
      null,
      React388.createElement(DialogContentText_default, null, translate("ra.saved_queries.remove_message", {
        _: "Are you sure you want to remove that item from your list of saved queries?"
      }))
    ),
    React388.createElement(
      DialogActions_default,
      null,
      React388.createElement(Button_default, { onClick: onClose }, translate("ra.action.cancel")),
      React388.createElement(Button_default, {
        onClick: removeQuery,
        color: "primary",
        // eslint-disable-next-line jsx-a11y/no-autofocus
        autoFocus: true
      }, translate("ra.action.confirm"))
    )
  );
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/FilterButton.js
var __assign71 = function() {
  __assign71 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign71.apply(this, arguments);
};
var __rest67 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FilterButton = function(props) {
  var filtersProp = props.filters, className = props.className, disableSaveQuery = props.disableSaveQuery, rest = __rest67(props, ["filters", "className", "disableSaveQuery"]);
  var filters = (0, import_react84.useContext)(FilterContext) || filtersProp;
  var resource = useResourceContext(props);
  var translate = useTranslate();
  var savedQueries = useSavedQueries(resource)[0];
  var navigate = useNavigate();
  var _a13 = useListContext(props), _b = _a13.displayedFilters, displayedFilters = _b === void 0 ? {} : _b, filterValues = _a13.filterValues, perPage = _a13.perPage, setFilters = _a13.setFilters, showFilter = _a13.showFilter, sort = _a13.sort;
  var hasFilterValues = !(0, import_isEqual6.default)(filterValues, {});
  var validSavedQueries = extractValidSavedQueries(savedQueries);
  var hasSavedCurrentQuery = validSavedQueries.some(function(savedQuery) {
    return (0, import_isEqual6.default)(savedQuery.value, {
      filter: filterValues,
      sort,
      perPage,
      displayedFilters
    });
  });
  var _c = (0, import_react84.useState)(false), open = _c[0], setOpen = _c[1];
  var anchorEl = (0, import_react84.useRef)();
  if (filters === void 0) {
    throw new Error("The <FilterButton> component requires the <List filters> prop to be set");
  }
  var hiddenFilters = filters.filter(function(filterElement) {
    return !filterElement.props.alwaysOn && !displayedFilters[filterElement.props.source] && typeof (0, import_get7.default)(filterValues, filterElement.props.source) === "undefined";
  });
  var handleClickButton = (0, import_react84.useCallback)(function(event) {
    event.preventDefault();
    setOpen(true);
    anchorEl.current = event.currentTarget;
  }, [anchorEl, setOpen]);
  var handleRequestClose = (0, import_react84.useCallback)(function() {
    setOpen(false);
  }, [setOpen]);
  var handleShow = (0, import_react84.useCallback)(function(_a14) {
    var source = _a14.source, defaultValue = _a14.defaultValue;
    showFilter(source, defaultValue === "" ? void 0 : defaultValue);
    setOpen(false);
  }, [showFilter, setOpen]);
  var _d = (0, import_react84.useState)(false), addSavedQueryDialogOpen = _d[0], setAddSavedQueryDialogOpen = _d[1];
  var hideAddSavedQueryDialog = function() {
    setAddSavedQueryDialogOpen(false);
  };
  var showAddSavedQueryDialog = function() {
    setOpen(false);
    setAddSavedQueryDialogOpen(true);
  };
  var _e = (0, import_react84.useState)(false), removeSavedQueryDialogOpen = _e[0], setRemoveSavedQueryDialogOpen = _e[1];
  var hideRemoveSavedQueryDialog = function() {
    setRemoveSavedQueryDialogOpen(false);
  };
  var showRemoveSavedQueryDialog = function() {
    setOpen(false);
    setRemoveSavedQueryDialogOpen(true);
  };
  if (hiddenFilters.length === 0 && validSavedQueries.length === 0 && !hasFilterValues) {
    return null;
  }
  return React389.createElement(
    Root18,
    __assign71({ className }, sanitizeRestProps15(rest)),
    React389.createElement(
      Button5,
      { className: "add-filter", label: "ra.action.add_filter", "aria-haspopup": "true", onClick: handleClickButton },
      React389.createElement(import_FilterList.default, null)
    ),
    React389.createElement(
      Menu_default,
      { open, anchorEl: anchorEl.current, onClose: handleRequestClose },
      hiddenFilters.map(function(filterElement, index2) {
        return React389.createElement(FilterButtonMenuItem, { key: filterElement.props.source, filter: filterElement, resource, onShow: handleShow, autoFocus: index2 === 0 });
      }),
      validSavedQueries.map(function(savedQuery, index2) {
        return (0, import_isEqual6.default)(savedQuery.value, {
          filter: filterValues,
          sort,
          perPage,
          displayedFilters
        }) ? React389.createElement(MenuItem_default, { onClick: showRemoveSavedQueryDialog, key: index2 }, translate("ra.saved_queries.remove_label_with_name", {
          _: 'Remove query "%{name}"',
          name: savedQuery.label
        })) : React389.createElement(MenuItem_default, { onClick: function() {
          navigate({
            search: (0, import_query_string2.stringify)({
              filter: JSON.stringify(savedQuery.value.filter),
              sort: savedQuery.value.sort.field,
              order: savedQuery.value.sort.order,
              page: 1,
              perPage: savedQuery.value.perPage,
              displayedFilters: JSON.stringify(savedQuery.value.displayedFilters)
            })
          });
          setOpen(false);
        }, key: index2 }, savedQuery.label);
      }),
      hasFilterValues && !hasSavedCurrentQuery && !disableSaveQuery && React389.createElement(MenuItem_default, { onClick: showAddSavedQueryDialog }, translate("ra.saved_queries.new_label", {
        _: "Save current query..."
      })),
      hasFilterValues && React389.createElement(MenuItem_default, { onClick: function() {
        return setFilters({}, {}, false);
      } }, translate("ra.action.remove_all_filters", {
        _: "Remove all filters"
      }))
    ),
    !disableSaveQuery && React389.createElement(
      React389.Fragment,
      null,
      React389.createElement(AddSavedQueryDialog, { open: addSavedQueryDialogOpen, onClose: hideAddSavedQueryDialog }),
      React389.createElement(RemoveSavedQueryDialog, { open: removeSavedQueryDialogOpen, onClose: hideRemoveSavedQueryDialog })
    )
  );
};
var sanitizeRestProps15 = function(_a13) {
  var _b = _a13.displayedFilters, displayedFilters = _b === void 0 ? null : _b, _c = _a13.filterValues, filterValues = _c === void 0 ? null : _c, _d = _a13.showFilter, showFilter = _d === void 0 ? null : _d, rest = __rest67(_a13, ["displayedFilters", "filterValues", "showFilter"]);
  return rest;
};
FilterButton.propTypes = {
  resource: import_prop_types252.default.string,
  filters: import_prop_types252.default.arrayOf(import_prop_types252.default.node),
  displayedFilters: import_prop_types252.default.object,
  filterValues: import_prop_types252.default.object,
  showFilter: import_prop_types252.default.func,
  className: import_prop_types252.default.string
};
var PREFIX44 = "RaFilterButton";
var Root18 = styled_default2("div", {
  name: PREFIX44,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})({
  display: "inline-block"
});

// node_modules/ra-ui-materialui/dist/esm/list/filter/Filter.js
var Filter = function(props) {
  var children2 = props.children;
  var renderButton = function() {
    return React390.createElement(FilterButton, { className: FilterClasses.button });
  };
  var renderForm = function() {
    return React390.createElement(FilterForm, { className: FilterClasses.form });
  };
  return React390.createElement(FilterContext.Provider, { value: import_react85.Children.toArray(children2) }, props.context === "button" ? renderButton() : renderForm());
};
Filter.propTypes = {
  children: import_prop_types253.default.node,
  classes: import_prop_types253.default.object,
  context: import_prop_types253.default.oneOf(["form", "button"])
};
var PREFIX45 = "RaFilter";
var FilterClasses = {
  button: "".concat(PREFIX45, "-button"),
  form: "".concat(PREFIX45, "-form")
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/FilterList.js
var React391 = __toESM(require_react());
var __assign72 = function() {
  __assign72 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign72.apply(this, arguments);
};
var __rest68 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FilterList = function(props) {
  var label = props.label, icon = props.icon, children2 = props.children, rest = __rest68(props, ["label", "icon", "children"]);
  var translate = useTranslate();
  return React391.createElement(
    Box_default2,
    __assign72({}, rest),
    React391.createElement(
      Box_default2,
      { mt: 2, display: "flex", alignItems: "center" },
      React391.createElement(Box_default2, { mr: 1 }, icon),
      React391.createElement(Typography_default, { variant: "overline" }, translate(label, { _: label }))
    ),
    React391.createElement(List_default, { dense: true, disablePadding: true }, children2)
  );
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/FilterListItem.js
var React392 = __toESM(require_react());
var import_react_is14 = __toESM(require_react_is());
var import_react86 = __toESM(require_react());
var import_CancelOutlined2 = __toESM(require_CancelOutlined());
var import_matches = __toESM(require_matches());
var import_pickBy = __toESM(require_pickBy());
var __assign73 = function() {
  __assign73 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign73.apply(this, arguments);
};
var __rest69 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a5;
var arePropsEqual2 = function(prevProps, nextProps) {
  return prevProps.label === nextProps.label && shallowEqual(prevProps.value, nextProps.value);
};
var FilterListItem = (0, import_react86.memo)(function(props) {
  var label = props.label, value = props.value, icon = props.icon, _a13 = props.isSelected, getIsSelected = _a13 === void 0 ? DefaultIsSelected : _a13, _b = props.toggleFilter, userToggleFilter = _b === void 0 ? DefaultToggleFilter : _b, rest = __rest69(props, ["label", "value", "icon", "isSelected", "toggleFilter"]);
  var _c = useListFilterContext(), filterValues = _c.filterValues, setFilters = _c.setFilters;
  var translate = useTranslate();
  var toggleFilter = useEvent(userToggleFilter);
  var isSelected = getIsSelected(value, filterValues);
  var handleClick2 = function() {
    return setFilters(toggleFilter(value, filterValues), null, false);
  };
  return React392.createElement(
    StyledListItem,
    __assign73({ onClick: handleClick2, selected: isSelected, disablePadding: true }, rest),
    React392.createElement(
      ListItemButton_default,
      { disableGutters: true, className: FilterListItemClasses.listItemButton },
      icon && React392.createElement(ListItemIcon_default, { className: FilterListItemClasses.listItemIcon }, icon),
      React392.createElement(ListItemText_default, { primary: (0, import_react_is14.isElement)(label) ? label : translate(label, { _: label }), className: FilterListItemClasses.listItemText, "data-selected": isSelected ? "true" : "false" }),
      isSelected && React392.createElement(
        ListItemSecondaryAction_default,
        { onClick: function(event) {
          event.stopPropagation();
          handleClick2();
        } },
        React392.createElement(
          IconButton_default,
          { size: "small" },
          React392.createElement(import_CancelOutlined2.default, null)
        )
      )
    )
  );
}, arePropsEqual2);
var DefaultIsSelected = function(value, filters) {
  return (0, import_matches.default)((0, import_pickBy.default)(value, function(val) {
    return typeof val !== "undefined";
  }))(filters);
};
var DefaultToggleFilter = function(value, filters) {
  var isSelected = (0, import_matches.default)((0, import_pickBy.default)(value, function(val) {
    return typeof val !== "undefined";
  }))(filters);
  if (isSelected) {
    var keysToRemove_1 = Object.keys(value);
    return Object.keys(filters).reduce(function(acc, key) {
      var _a13;
      return keysToRemove_1.includes(key) ? acc : __assign73(__assign73({}, acc), (_a13 = {}, _a13[key] = filters[key], _a13));
    }, {});
  }
  return __assign73(__assign73({}, filters), value);
};
var PREFIX46 = "RaFilterListItem";
var FilterListItemClasses = {
  listItemButton: "".concat(PREFIX46, "-listItemButton"),
  listItemText: "".concat(PREFIX46, "-listItemText"),
  listItemIcon: "".concat(PREFIX46, "-listItemIcon")
};
var StyledListItem = styled_default2(ListItem_default, {
  name: PREFIX46,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a5 = {}, _a5["& .".concat(FilterListItemClasses.listItemButton)] = {
  paddingRight: "2em",
  paddingLeft: "2em"
}, _a5["& .".concat(FilterListItemClasses.listItemText)] = {
  margin: 0
}, _a5["& .".concat(FilterListItemClasses.listItemIcon)] = {
  minWidth: 0,
  marginRight: "0.5em"
}, _a5));

// node_modules/ra-ui-materialui/dist/esm/list/filter/FilterLiveSearch.js
var React393 = __toESM(require_react());
var import_react87 = __toESM(require_react());
var import_Search = __toESM(require_Search());
var __assign74 = function() {
  __assign74 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign74.apply(this, arguments);
};
var __rest70 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FilterLiveSearch = (0, import_react87.memo)(function(props) {
  var _a13 = useListFilterContext(), filterValues = _a13.filterValues, setFilters = _a13.setFilters;
  var translate = useTranslate();
  var _b = props.source, source = _b === void 0 ? "q" : _b, _c = props.label, label = _c === void 0 ? translate("ra.action.search") : _c, placeholder = props.placeholder, rest = __rest70(props, ["source", "label", "placeholder"]);
  var handleChange = function(event) {
    var _a14;
    if (event.target) {
      setFilters(__assign74(__assign74({}, filterValues), (_a14 = {}, _a14[source] = event.target.value, _a14)), null);
    } else {
      var _b2 = filterValues, _c2 = source, _1 = _b2[_c2], filters = __rest70(_b2, [typeof _c2 === "symbol" ? _c2 : _c2 + ""]);
      setFilters(filters, null, false);
    }
  };
  var initialValues = (0, import_react87.useMemo)(function() {
    var _a14;
    return _a14 = {}, _a14[source] = filterValues[source], _a14;
  }, [filterValues, source]);
  var form = useForm({ defaultValues: initialValues });
  var onSubmit = function() {
    return void 0;
  };
  return React393.createElement(
    FormProvider,
    __assign74({}, form),
    React393.createElement(
      "form",
      { onSubmit },
      React393.createElement(TextInput, __assign74({ resettable: true, helperText: false, source, InputProps: {
        endAdornment: React393.createElement(
          InputAdornment_default,
          { position: "end" },
          React393.createElement(import_Search.default, { color: "disabled" })
        )
      }, onChange: handleChange, size: "small", label: rest.hiddenLabel ? false : label, placeholder: placeholder !== null && placeholder !== void 0 ? placeholder : rest.hiddenLabel ? label : void 0 }, rest))
    )
  );
});

// node_modules/ra-ui-materialui/dist/esm/list/filter/AddSavedQueryIconButton.js
var React394 = __toESM(require_react());
var import_react88 = __toESM(require_react());
var import_AddCircleOutline2 = __toESM(require_AddCircleOutline());
var __assign75 = function() {
  __assign75 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign75.apply(this, arguments);
};
var AddSavedQueryIconButton = function(props) {
  var _a13 = (0, import_react88.useState)(false), open = _a13[0], setOpen = _a13[1];
  var handleOpen = function() {
    setOpen(true);
  };
  var handleClose = function() {
    setOpen(false);
  };
  var translate = useTranslate();
  return React394.createElement(
    React394.Fragment,
    null,
    React394.createElement(
      IconButton_default,
      __assign75({ "aria-label": translate("ra.saved_queries.new_label", {
        _: "Save current query..."
      }), size: "small", onClick: handleOpen }, props),
      React394.createElement(import_AddCircleOutline2.default, null)
    ),
    React394.createElement(AddSavedQueryDialog, { open, onClose: handleClose })
  );
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/RemoveSavedQueryIconButton.js
var React395 = __toESM(require_react());
var import_react89 = __toESM(require_react());
var import_RemoveCircleOutline2 = __toESM(require_RemoveCircleOutline());
var __assign76 = function() {
  __assign76 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign76.apply(this, arguments);
};
var RemoveSavedQueryIconButton = function(props) {
  var _a13 = (0, import_react89.useState)(false), confirmationOpen = _a13[0], setConfirmationOpen = _a13[1];
  var handleConfirmationClose = function() {
    setConfirmationOpen(false);
  };
  var handleRemoveQueryClick = function() {
    setConfirmationOpen(true);
  };
  var translate = useTranslate();
  return React395.createElement(
    React395.Fragment,
    null,
    React395.createElement(
      IconButton_default,
      __assign76({ "aria-label": translate("ra.saved_queries.remove_label", {
        _: "Remove saved query"
      }), size: "small", onClick: handleRemoveQueryClick }, props),
      React395.createElement(import_RemoveCircleOutline2.default, null)
    ),
    React395.createElement(RemoveSavedQueryDialog, { open: confirmationOpen, onClose: handleConfirmationClose })
  );
};

// node_modules/ra-ui-materialui/dist/esm/list/filter/SavedQueriesList.js
var React397 = __toESM(require_react());
var import_BookmarkBorder = __toESM(require_BookmarkBorder());
var import_HelpOutline = __toESM(require_HelpOutline());
var import_isEqual8 = __toESM(require_isEqual());

// node_modules/ra-ui-materialui/dist/esm/list/filter/SavedQueryFilterListItem.js
var React396 = __toESM(require_react());
var import_react90 = __toESM(require_react());
var import_CancelOutlined3 = __toESM(require_CancelOutlined());
var import_isEqual7 = __toESM(require_isEqual());
var import_query_string3 = __toESM(require_query_string());
var arePropsEqual3 = function(prevProps, nextProps) {
  return prevProps.label === nextProps.label && (0, import_isEqual7.default)(prevProps.value, nextProps.value);
};
var SavedQueryFilterListItem = (0, import_react90.memo)(function(props) {
  var className = props.className, label = props.label, sx = props.sx, value = props.value;
  var _a13 = useListContext(), filterValues = _a13.filterValues, sort = _a13.sort, perPage = _a13.perPage, displayedFilters = _a13.displayedFilters;
  var navigate = useNavigate();
  var isSelected = (0, import_isEqual7.default)(value, {
    filter: filterValues,
    sort,
    perPage,
    displayedFilters
  });
  var addFilter = function() {
    navigate({
      search: (0, import_query_string3.stringify)({
        filter: JSON.stringify(value.filter),
        sort: value.sort.field,
        order: value.sort.order,
        page: 1,
        perPage: value.perPage,
        displayedFilters: JSON.stringify(value.displayedFilters)
      })
    });
  };
  var removeFilter = function() {
    navigate({
      search: (0, import_query_string3.stringify)({
        filter: JSON.stringify({})
      })
    });
  };
  var toggleFilter = function() {
    return isSelected ? removeFilter() : addFilter();
  };
  return (
    // @ts-ignore
    React396.createElement(
      StyledListItem2,
      { onClick: toggleFilter, selected: isSelected, className, sx, disablePadding: true },
      React396.createElement(
        ListItemButton_default,
        { disableGutters: true, className: SavedQueryFilterListItemClasses.listItemButton },
        React396.createElement(ListItemText_default, { primary: label, className: SavedQueryFilterListItemClasses.listItemText }),
        isSelected && React396.createElement(
          ListItemSecondaryAction_default,
          null,
          React396.createElement(
            IconButton_default,
            { size: "small", onClick: toggleFilter },
            React396.createElement(import_CancelOutlined3.default, null)
          )
        )
      )
    )
  );
}, arePropsEqual3);
var PREFIX47 = "RaSavedQueryFilterListItem";
var SavedQueryFilterListItemClasses = {
  listItemButton: "".concat(PREFIX47, "-listItemButton"),
  listItemText: "".concat(PREFIX47, "-listItemText")
};
var StyledListItem2 = styled_default2(ListItem_default, {
  name: PREFIX47,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function() {
  var _a13;
  return _a13 = {}, _a13["& .".concat(SavedQueryFilterListItemClasses.listItemButton)] = {
    paddingRight: "2em",
    paddingLeft: "2em"
  }, _a13["& .".concat(SavedQueryFilterListItemClasses.listItemText)] = {
    margin: 0
  }, _a13;
});

// node_modules/ra-ui-materialui/dist/esm/list/filter/SavedQueriesList.js
var SavedQueriesList = function(_a13) {
  var _b = _a13.icon, icon = _b === void 0 ? defaultIcon24 : _b;
  var translate = useTranslate();
  var _c = useListContext(), resource = _c.resource, filterValues = _c.filterValues, displayedFilters = _c.displayedFilters, sort = _c.sort, perPage = _c.perPage;
  var savedQueries = useSavedQueries(resource)[0];
  var validSavedQueries = extractValidSavedQueries(savedQueries);
  var hasSavedCurrentFilterValue = validSavedQueries.some(function(savedQuery) {
    return (0, import_isEqual8.default)(savedQuery.value, {
      filter: filterValues,
      sort,
      perPage,
      displayedFilters
    });
  });
  var hasFilterValues = !(0, import_isEqual8.default)(filterValues, {});
  return React397.createElement(
    Root19,
    { label: "ra.saved_queries.label", icon },
    hasSavedCurrentFilterValue ? React397.createElement(RemoveSavedQueryIconButton, { className: SavedQueriesListClasses.floatingIcon }) : hasFilterValues ? React397.createElement(AddSavedQueryIconButton, { className: SavedQueriesListClasses.floatingIcon }) : React397.createElement(
      Tooltip_default,
      { title: translate("ra.saved_queries.help"), className: SavedQueriesListClasses.floatingTooltip },
      React397.createElement(import_HelpOutline.default, null)
    ),
    validSavedQueries.map(function(savedQuery, index2) {
      return React397.createElement(SavedQueryFilterListItem, { label: savedQuery.label, value: savedQuery.value, key: index2 });
    })
  );
};
var PREFIX48 = "RaSavedQueriesList";
var SavedQueriesListClasses = {
  floatingIcon: "".concat(PREFIX48, "-floatingIcon"),
  floatingTooltip: "".concat(PREFIX48, "-floatingTooltip"),
  titleContainer: "".concat(PREFIX48, "-titleContainer"),
  titleIcon: "".concat(PREFIX48, "-titleIcon")
};
var Root19 = styled_default2(FilterList, {
  name: PREFIX48,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(SavedQueriesListClasses.floatingIcon)] = {
    position: "absolute",
    top: "-1.8em",
    right: 0
  }, _b["& .".concat(SavedQueriesListClasses.floatingTooltip)] = {
    position: "absolute",
    top: "-1.2em",
    right: 3,
    color: theme.palette.action.disabled
  }, _b;
});
var defaultIcon24 = React397.createElement(import_BookmarkBorder.default, null);

// node_modules/ra-ui-materialui/dist/esm/list/pagination/InfinitePagination.js
var React398 = __toESM(require_react());
var import_react91 = __toESM(require_react());
var InfinitePagination = function(_a13) {
  var _b = _a13.options, options = _b === void 0 ? defaultOptions2 : _b, sx = _a13.sx;
  var isLoading = useListContext().isLoading;
  var _c = useInfinitePaginationContext(), fetchNextPage = _c.fetchNextPage, hasNextPage = _c.hasNextPage, isFetchingNextPage = _c.isFetchingNextPage;
  if (!fetchNextPage) {
    throw new Error("InfinitePagination must be used inside an InfinitePaginationContext, usually created by <InfiniteList>. You cannot use it as child of a <List> component.");
  }
  var observerElem = (0, import_react91.useRef)(null);
  var handleObserver = useEvent(function(entries) {
    var target = entries[0];
    if (target.isIntersecting && hasNextPage && !isFetchingNextPage) {
      fetchNextPage();
    }
  });
  (0, import_react91.useEffect)(function() {
    var element = observerElem.current;
    if (!element)
      return;
    var observer = new IntersectionObserver(handleObserver, options);
    observer.observe(element);
    return function() {
      return observer.unobserve(element);
    };
  }, [
    fetchNextPage,
    hasNextPage,
    handleObserver,
    options,
    isLoading,
    isFetchingNextPage
  ]);
  if (isLoading)
    return null;
  return React398.createElement(Box_default2, { ref: observerElem, py: 2, textAlign: "center", sx }, isFetchingNextPage && hasNextPage && React398.createElement(CircularProgress_default, { size: "1.5em" }));
};
var defaultOptions2 = { threshold: 0 };

// node_modules/ra-ui-materialui/dist/esm/list/pagination/Pagination.js
var React400 = __toESM(require_react());
var import_react93 = __toESM(require_react());
var import_prop_types255 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/list/pagination/PaginationActions.js
var React399 = __toESM(require_react());
var import_react92 = __toESM(require_react());
var import_prop_types254 = __toESM(require_prop_types());
var __assign77 = function() {
  __assign77 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign77.apply(this, arguments);
};
var __rest71 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var PaginationActions = (0, import_react92.memo)(function(props) {
  var page = props.page, rowsPerPage = props.rowsPerPage, count = props.count, onPageChange = props.onPageChange, _a13 = props.size, size2 = _a13 === void 0 ? "small" : _a13, className = props.className, rest = __rest71(props, ["page", "rowsPerPage", "count", "onPageChange", "size", "className"]);
  var translate = useTranslate();
  var nbPages = Math.ceil(count / rowsPerPage) || 1;
  if (nbPages === 1) {
    return React399.createElement(Root20, { className });
  }
  var getItemAriaLabel = function(type, page2, selected) {
    if (type === "page") {
      return selected ? translate("ra.navigation.current_page", {
        page: page2,
        _: "page ".concat(page2)
      }) : translate("ra.navigation.page", {
        page: page2,
        _: "Go to page ".concat(page2)
      });
    }
    return translate("ra.navigation.".concat(type), { _: "Go to ".concat(type, " page") });
  };
  return React399.createElement(
    Root20,
    { className },
    React399.createElement(Pagination_default, __assign77({
      size: size2,
      count: nbPages,
      // <TablePagination>, the parent, uses 0-based pagination
      // while <Pagination> uses 1-based pagination
      page: page + 1,
      onChange: function(e, page2) {
        return onPageChange(e, page2 - 1);
      }
    }, sanitizeRestProps16(rest), { getItemAriaLabel }))
  );
});
PaginationActions.propTypes = {
  count: import_prop_types254.default.number.isRequired,
  onPageChange: import_prop_types254.default.func.isRequired,
  page: import_prop_types254.default.number.isRequired,
  rowsPerPage: import_prop_types254.default.number.isRequired,
  color: import_prop_types254.default.oneOf(["primary", "secondary", "standard"]),
  size: import_prop_types254.default.oneOf(["small", "medium", "large"])
};
var PREFIX49 = "RaPaginationActions";
var Root20 = styled_default2("div", {
  name: PREFIX49,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function() {
  return {
    flexShrink: 0,
    ml: 4
  };
});
var sanitizeRestProps16 = function(_a13) {
  var nextIconButtonProps = _a13.nextIconButtonProps, backIconButtonProps = _a13.backIconButtonProps, rest = __rest71(_a13, ["nextIconButtonProps", "backIconButtonProps"]);
  return rest;
};

// node_modules/ra-ui-materialui/dist/esm/list/pagination/Pagination.js
var __assign78 = function() {
  __assign78 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign78.apply(this, arguments);
};
var __rest72 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Pagination3 = (0, import_react93.memo)(function(props) {
  var _a13 = props.rowsPerPageOptions, rowsPerPageOptions = _a13 === void 0 ? DefaultRowsPerPageOptions : _a13, actions = props.actions, _b = props.limit, limit = _b === void 0 ? null : _b, rest = __rest72(props, ["rowsPerPageOptions", "actions", "limit"]);
  var _c = useListPaginationContext(props), isLoading = _c.isLoading, hasNextPage = _c.hasNextPage, page = _c.page, perPage = _c.perPage, total = _c.total, setPage = _c.setPage, setPerPage = _c.setPerPage;
  var translate = useTranslate();
  var isSmall = useMediaQuery(function(theme) {
    return theme.breakpoints.down("md");
  });
  var totalPages = (0, import_react93.useMemo)(function() {
    return total != null ? Math.ceil(total / perPage) : void 0;
  }, [perPage, total]);
  var handlePageChange = (0, import_react93.useCallback)(function(event, page2) {
    event && event.stopPropagation();
    if (page2 < 0 || page2 > totalPages - 1) {
      throw new Error(translate("ra.navigation.page_out_of_boundaries", {
        page: page2 + 1
      }));
    }
    setPage(page2 + 1);
  }, [totalPages, setPage, translate]);
  var handlePerPageChange = (0, import_react93.useCallback)(function(event) {
    setPerPage(event.target.value);
  }, [setPerPage]);
  var labelDisplayedRows = (0, import_react93.useCallback)(function(_a14) {
    var from2 = _a14.from, to = _a14.to, count = _a14.count;
    return count === -1 && hasNextPage ? translate("ra.navigation.partial_page_range_info", {
      offsetBegin: from2,
      offsetEnd: to,
      _: "%{from}-%{to} of more than %{to}"
    }) : translate("ra.navigation.page_range_info", {
      offsetBegin: from2,
      offsetEnd: to,
      total: count === -1 ? to : count,
      _: "%{from}-%{to} of %{count === -1 ? to : count}"
    });
  }, [translate, hasNextPage]);
  var labelItem = (0, import_react93.useCallback)(function(type) {
    return translate("ra.navigation.".concat(type), { _: "Go to ".concat(type, " page") });
  }, [translate]);
  if (isLoading) {
    return React400.createElement(Toolbar_default, { variant: "dense" });
  }
  if (total === 0 || page < 1 || total != null && page > totalPages) {
    if (limit != null && true) {
      console.warn("The Pagination limit prop is deprecated. Empty state should be handled by the component displaying data (Datagrid, SimpleList).");
    }
    return null;
  }
  if (isSmall) {
    return React400.createElement(TablePagination_default, __assign78({ count: total == null ? -1 : total, rowsPerPage: perPage, page: page - 1, onPageChange: handlePageChange, rowsPerPageOptions: emptyArray, component: "span", labelDisplayedRows }, sanitizeListRestProps(rest)));
  }
  var ActionsComponent = actions ? actions : !isLoading && total != null ? PaginationActions : void 0;
  return React400.createElement(TablePagination_default, __assign78({
    count: total == null ? -1 : total,
    rowsPerPage: perPage,
    page: page - 1,
    onPageChange: handlePageChange,
    onRowsPerPageChange: handlePerPageChange,
    // @ts-ignore
    ActionsComponent,
    nextIconButtonProps: {
      disabled: !hasNextPage
    },
    component: "span",
    labelRowsPerPage: translate("ra.navigation.page_rows_per_page"),
    labelDisplayedRows,
    getItemAriaLabel: labelItem,
    rowsPerPageOptions
  }, sanitizeListRestProps(rest)));
});
Pagination3.propTypes = {
  actions: ComponentPropType_default,
  limit: import_prop_types255.default.element,
  rowsPerPageOptions: import_prop_types255.default.arrayOf(import_prop_types255.default.number)
};
var DefaultRowsPerPageOptions = [5, 10, 25, 50];
var emptyArray = [];

// node_modules/ra-ui-materialui/dist/esm/list/pagination/PaginationLimit.js
var React401 = __toESM(require_react());
var import_react94 = __toESM(require_react());
var PaginationLimit = (0, import_react94.memo)(function() {
  var translate = useTranslate();
  return React401.createElement(
    CardContent_default,
    null,
    React401.createElement(Typography_default, { variant: "body2" }, translate("ra.navigation.no_results"))
  );
});

// node_modules/ra-ui-materialui/dist/esm/input/DatagridInput.js
var __assign79 = function() {
  __assign79 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign79.apply(this, arguments);
};
var __rest73 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray8 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var defaultPagination = React402.createElement(Pagination3, null);
var DatagridInput = function(props) {
  var _a13;
  var choices2 = props.choices, className = props.className, _b = props.pagination, pagination = _b === void 0 ? defaultPagination : _b, filters = props.filters, sourceProp = props.source, resourceProp = props.resource, rest = __rest73(props, ["choices", "className", "pagination", "filters", "source", "resource"]);
  var _c = useChoicesContext({
    choices: choices2,
    resource: resourceProp,
    source: sourceProp
  }), allChoices = _c.allChoices, availableChoices = _c.availableChoices, selectedChoices = _c.selectedChoices, fetchError = _c.error, source = _c.source, choicesContext = __rest73(_c, ["allChoices", "availableChoices", "selectedChoices", "error", "source"]);
  var _d = useInput(__assign79(__assign79(__assign79({}, props), choicesContext), { source })), field = _d.field, fieldState = _d.fieldState, formState = _d.formState;
  var onSelect = (0, import_react95.useCallback)(function(idsToAdd) {
    field.onChange(idsToAdd);
  }, [field]);
  var onToggleItem = (0, import_react95.useCallback)(function(id) {
    if (field.value.includes(id)) {
      field.onChange(field.value.filter(function(item) {
        return item !== id;
      }));
    } else {
      field.onChange(__spreadArray8(__spreadArray8([], field.value, true), [id], false));
    }
  }, [field]);
  var onUnselectItems = (0, import_react95.useCallback)(function() {
    field.onChange([]);
  }, [field]);
  var listContext = React402.useMemo(function() {
    return __assign79(__assign79({}, choicesContext), { data: availableChoices, onSelect, onToggleItem, onUnselectItems, selectedIds: field.value });
  }, [
    availableChoices,
    choicesContext,
    field,
    onSelect,
    onToggleItem,
    onUnselectItems
  ]);
  return React402.createElement(
    "div",
    { className: clsx_m_default("ra-input", "ra-input-".concat(source), className) },
    React402.createElement(
      ListContextProvider,
      { value: listContext },
      filters ? Array.isArray(filters) ? React402.createElement(
        FilterContext.Provider,
        { value: filters },
        React402.createElement(
          React402.Fragment,
          null,
          React402.createElement(FilterForm, null),
          React402.createElement(FilterButton, null)
        )
      ) : React402.createElement(
        React402.Fragment,
        null,
        (0, import_react95.cloneElement)(filters, {
          context: "form"
        }),
        (0, import_react95.cloneElement)(filters, {
          context: "button"
        })
      ) : null,
      !fieldState.error && !fetchError && React402.createElement(
        React402.Fragment,
        null,
        React402.createElement(Datagrid, __assign79({}, rest)),
        pagination !== false && pagination
      ),
      React402.createElement(InputHelperText, { touched: fieldState.isTouched || formState.isSubmitted || fetchError, error: ((_a13 = fieldState.error) === null || _a13 === void 0 ? void 0 : _a13.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message) })
    )
  );
};

// node_modules/ra-ui-materialui/dist/esm/input/DateInput.js
var React403 = __toESM(require_react());
var import_prop_types256 = __toESM(require_prop_types());
var __assign80 = function() {
  __assign80 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign80.apply(this, arguments);
};
var __rest74 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DateInput = function(_a13) {
  var className = _a13.className, defaultValue = _a13.defaultValue, _b = _a13.format, format = _b === void 0 ? getStringFromDate : _b, label = _a13.label, name = _a13.name, source = _a13.source, resource = _a13.resource, helperText = _a13.helperText, margin2 = _a13.margin, onBlur = _a13.onBlur, onChange = _a13.onChange, parse2 = _a13.parse, validate = _a13.validate, variant = _a13.variant, rest = __rest74(_a13, ["className", "defaultValue", "format", "label", "name", "source", "resource", "helperText", "margin", "onBlur", "onChange", "parse", "validate", "variant"]);
  var _c = useInput(__assign80({ defaultValue, name, format, parse: parse2, onBlur, onChange, resource, source, validate }, rest)), field = _c.field, fieldState = _c.fieldState, formState = _c.formState, id = _c.id, isRequired2 = _c.isRequired;
  var error = fieldState.error, invalid = fieldState.invalid, isTouched = fieldState.isTouched;
  var isSubmitted = formState.isSubmitted;
  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;
  return React403.createElement(TextField_default, __assign80({ id }, field, { className: clsx_m_default("ra-input", "ra-input-".concat(source), className), type: "date", size: "small", variant, margin: margin2, error: (isTouched || isSubmitted) && invalid, helperText: renderHelperText ? React403.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText }) : null, label: React403.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 }), InputLabelProps: defaultInputLabelProps }, sanitizeInputRestProps(rest)));
};
DateInput.propTypes = {
  label: import_prop_types256.default.oneOfType([
    import_prop_types256.default.string,
    import_prop_types256.default.bool,
    import_prop_types256.default.element
  ]),
  resource: import_prop_types256.default.string,
  source: import_prop_types256.default.string
};
var convertDateToString = function(value) {
  if (!(value instanceof Date) || isNaN(value.getDate()))
    return "";
  var pad = "00";
  var yyyy = value.getFullYear().toString();
  var MM = (value.getMonth() + 1).toString();
  var dd = value.getDate().toString();
  return "".concat(yyyy, "-").concat((pad + MM).slice(-2), "-").concat((pad + dd).slice(-2));
};
var dateRegex = /^\d{4}-\d{2}-\d{2}$/;
var defaultInputLabelProps = { shrink: true };
var getStringFromDate = function(value) {
  if (value == null || value === "") {
    return "";
  }
  if (value instanceof Date) {
    return convertDateToString(value);
  }
  if (dateRegex.test(value)) {
    return value;
  }
  return convertDateToString(new Date(value));
};

// node_modules/ra-ui-materialui/dist/esm/input/DateTimeInput.js
var React404 = __toESM(require_react());
var import_prop_types257 = __toESM(require_prop_types());
var __assign81 = function() {
  __assign81 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign81.apply(this, arguments);
};
var __rest75 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var parseDateTime = function(value) {
  return value ? new Date(value) : value === "" ? null : value;
};
var DateTimeInput = function(_a13) {
  var className = _a13.className, defaultValue = _a13.defaultValue, _b = _a13.format, format = _b === void 0 ? formatDateTime : _b, label = _a13.label, helperText = _a13.helperText, margin2 = _a13.margin, onBlur = _a13.onBlur, onChange = _a13.onChange, source = _a13.source, resource = _a13.resource, _c = _a13.parse, parse2 = _c === void 0 ? parseDateTime : _c, validate = _a13.validate, variant = _a13.variant, rest = __rest75(_a13, ["className", "defaultValue", "format", "label", "helperText", "margin", "onBlur", "onChange", "source", "resource", "parse", "validate", "variant"]);
  var _d = useInput(__assign81({ defaultValue, format, parse: parse2, onBlur, onChange, resource, source, validate }, rest)), field = _d.field, fieldState = _d.fieldState, formState = _d.formState, id = _d.id, isRequired2 = _d.isRequired;
  var error = fieldState.error, invalid = fieldState.invalid, isTouched = fieldState.isTouched;
  var isSubmitted = formState.isSubmitted;
  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;
  return React404.createElement(TextField_default, __assign81({ id }, field, { className: clsx_m_default("ra-input", "ra-input-".concat(source), className), type: "datetime-local", size: "small", variant, margin: margin2, error: (isTouched || isSubmitted) && invalid, helperText: renderHelperText ? React404.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText }) : null, label: React404.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 }), InputLabelProps: defaultInputLabelProps2 }, sanitizeInputRestProps(rest)));
};
DateTimeInput.propTypes = {
  label: import_prop_types257.default.oneOfType([
    import_prop_types257.default.string,
    import_prop_types257.default.bool,
    import_prop_types257.default.element
  ]),
  resource: import_prop_types257.default.string,
  source: import_prop_types257.default.string
};
var leftPad = function(nb) {
  if (nb === void 0) {
    nb = 2;
  }
  return function(value) {
    return ("0".repeat(nb) + value).slice(-nb);
  };
};
var leftPad4 = leftPad(4);
var leftPad2 = leftPad(2);
var convertDateToString2 = function(value) {
  if (!(value instanceof Date) || isNaN(value.getDate()))
    return "";
  var yyyy = leftPad4(value.getFullYear());
  var MM = leftPad2(value.getMonth() + 1);
  var dd = leftPad2(value.getDate());
  var hh = leftPad2(value.getHours());
  var mm = leftPad2(value.getMinutes());
  return "".concat(yyyy, "-").concat(MM, "-").concat(dd, "T").concat(hh, ":").concat(mm);
};
var dateTimeRegex = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}$/;
var defaultInputLabelProps2 = { shrink: true };
var formatDateTime = function(value) {
  if (value == null || value === "") {
    return "";
  }
  if (value instanceof Date) {
    return convertDateToString2(value);
  }
  if (dateTimeRegex.test(value)) {
    return value;
  }
  return convertDateToString2(new Date(value));
};

// node_modules/ra-ui-materialui/dist/esm/input/TimeInput.js
var React405 = __toESM(require_react());
var import_prop_types258 = __toESM(require_prop_types());
var __assign82 = function() {
  __assign82 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign82.apply(this, arguments);
};
var __rest76 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var parseTime = function(value) {
  var _a13, _b;
  if (!value)
    return null;
  var timeTokens = value.split(":").map(function(v) {
    return parseInt(v);
  });
  var today = /* @__PURE__ */ new Date();
  today.setHours((_a13 = timeTokens[0]) !== null && _a13 !== void 0 ? _a13 : 0);
  today.setMinutes((_b = timeTokens[1]) !== null && _b !== void 0 ? _b : 0);
  return today;
};
var TimeInput = function(_a13) {
  var className = _a13.className, defaultValue = _a13.defaultValue, _b = _a13.format, format = _b === void 0 ? formatTime : _b, label = _a13.label, helperText = _a13.helperText, margin2 = _a13.margin, onBlur = _a13.onBlur, onChange = _a13.onChange, source = _a13.source, resource = _a13.resource, _c = _a13.parse, parse2 = _c === void 0 ? parseTime : _c, validate = _a13.validate, variant = _a13.variant, rest = __rest76(_a13, ["className", "defaultValue", "format", "label", "helperText", "margin", "onBlur", "onChange", "source", "resource", "parse", "validate", "variant"]);
  var _d = useInput(__assign82({ defaultValue, format, parse: parse2, onBlur, onChange, resource, source, validate }, rest)), field = _d.field, fieldState = _d.fieldState, formState = _d.formState, id = _d.id, isRequired2 = _d.isRequired;
  var error = fieldState.error, invalid = fieldState.invalid, isTouched = fieldState.isTouched;
  var isSubmitted = formState.isSubmitted;
  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;
  return React405.createElement(TextField_default, __assign82({ id }, field, { className: clsx_m_default("ra-input", "ra-input-".concat(source), className), type: "time", size: "small", variant, margin: margin2, error: (isTouched || isSubmitted) && invalid, helperText: renderHelperText ? React405.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText }) : null, label: React405.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 }), InputLabelProps: defaultInputLabelProps3 }, sanitizeInputRestProps(rest)));
};
TimeInput.propTypes = {
  label: import_prop_types258.default.oneOfType([import_prop_types258.default.string, import_prop_types258.default.bool]),
  resource: import_prop_types258.default.string,
  source: import_prop_types258.default.string
};
var leftPad3 = function(nb) {
  if (nb === void 0) {
    nb = 2;
  }
  return function(value) {
    return ("0".repeat(nb) + value).slice(-nb);
  };
};
var leftPad22 = leftPad3(2);
var convertDateToString3 = function(value) {
  if (!(value instanceof Date) || isNaN(value.getDate()))
    return "";
  var hh = leftPad22(value.getHours());
  var mm = leftPad22(value.getMinutes());
  return "".concat(hh, ":").concat(mm);
};
var timeRegex = /^\d{2}:\d{2}$/;
var defaultInputLabelProps3 = { shrink: true };
var formatTime = function(value) {
  if (value == null || value === "") {
    return "";
  }
  if (value instanceof Date) {
    return convertDateToString3(value);
  }
  if (timeRegex.test(value)) {
    return value;
  }
  return convertDateToString3(new Date(value));
};

// node_modules/ra-ui-materialui/dist/esm/input/FileInput.js
var import_react98 = __toESM(require_react());
var import_prop_types261 = __toESM(require_prop_types());

// node_modules/react-dropzone/dist/es/index.js
var import_react96 = __toESM(require_react());
var import_prop_types259 = __toESM(require_prop_types());

// node_modules/tslib/tslib.es6.mjs
function __awaiter6(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator6(thisArg, body2) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_5 = 0)), _5)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r5, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r5 = i.next()).done)
      ar.push(r5.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r5 && !r5.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
    ar = ar.concat(__read(arguments[i]));
  return ar;
}

// node_modules/file-selector/dist/es5/file.js
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
  ["aac", "audio/aac"],
  ["abw", "application/x-abiword"],
  ["arc", "application/x-freearc"],
  ["avif", "image/avif"],
  ["avi", "video/x-msvideo"],
  ["azw", "application/vnd.amazon.ebook"],
  ["bin", "application/octet-stream"],
  ["bmp", "image/bmp"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["cda", "application/x-cdf"],
  ["csh", "application/x-csh"],
  ["css", "text/css"],
  ["csv", "text/csv"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["eot", "application/vnd.ms-fontobject"],
  ["epub", "application/epub+zip"],
  ["gz", "application/gzip"],
  ["gif", "image/gif"],
  ["heic", "image/heic"],
  ["heif", "image/heif"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["ico", "image/vnd.microsoft.icon"],
  ["ics", "text/calendar"],
  ["jar", "application/java-archive"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["js", "text/javascript"],
  ["json", "application/json"],
  ["jsonld", "application/ld+json"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mjs", "text/javascript"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mpeg", "video/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["opus", "audio/opus"],
  ["otf", "font/otf"],
  ["png", "image/png"],
  ["pdf", "application/pdf"],
  ["php", "application/x-httpd-php"],
  ["ppt", "application/vnd.ms-powerpoint"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["rar", "application/vnd.rar"],
  ["rtf", "application/rtf"],
  ["sh", "application/x-sh"],
  ["svg", "image/svg+xml"],
  ["swf", "application/x-shockwave-flash"],
  ["tar", "application/x-tar"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["ts", "video/mp2t"],
  ["ttf", "font/ttf"],
  ["txt", "text/plain"],
  ["vsd", "application/vnd.visio"],
  ["wav", "audio/wav"],
  ["weba", "audio/webm"],
  ["webm", "video/webm"],
  ["webp", "image/webp"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["xhtml", "application/xhtml+xml"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xml", "application/xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["zip", "application/zip"],
  ["7z", "application/x-7z-compressed"],
  // Others
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["msg", "application/vnd.ms-outlook"]
]);
function toFileWithPath(file, path) {
  var f = withMimeType(file);
  if (typeof f.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f;
}
function withMimeType(file) {
  var name = file.name;
  var hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}

// node_modules/file-selector/dist/es5/file-selector.js
var FILES_TO_IGNORE = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  "Thumbs.db"
  // Windows
];
function fromEvent(evt) {
  return __awaiter6(this, void 0, void 0, function() {
    return __generator6(this, function(_a13) {
      if (isObject(evt) && isDataTransfer(evt)) {
        return [2, getDataTransferFiles(evt.dataTransfer, evt.type)];
      } else if (isChangeEvt(evt)) {
        return [2, getInputFiles(evt)];
      } else if (Array.isArray(evt) && evt.every(function(item) {
        return "getFile" in item && typeof item.getFile === "function";
      })) {
        return [2, getFsHandleFiles(evt)];
      }
      return [2, []];
    });
  });
}
function isDataTransfer(value) {
  return isObject(value.dataTransfer);
}
function isChangeEvt(value) {
  return isObject(value) && isObject(value.target);
}
function isObject(v) {
  return typeof v === "object" && v !== null;
}
function getInputFiles(evt) {
  return fromList(evt.target.files).map(function(file) {
    return toFileWithPath(file);
  });
}
function getFsHandleFiles(handles) {
  return __awaiter6(this, void 0, void 0, function() {
    var files;
    return __generator6(this, function(_a13) {
      switch (_a13.label) {
        case 0:
          return [4, Promise.all(handles.map(function(h) {
            return h.getFile();
          }))];
        case 1:
          files = _a13.sent();
          return [2, files.map(function(file) {
            return toFileWithPath(file);
          })];
      }
    });
  });
}
function getDataTransferFiles(dt, type) {
  return __awaiter6(this, void 0, void 0, function() {
    var items, files;
    return __generator6(this, function(_a13) {
      switch (_a13.label) {
        case 0:
          if (dt === null) {
            return [2, []];
          }
          if (!dt.items)
            return [3, 2];
          items = fromList(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises))];
        case 1:
          files = _a13.sent();
          return [2, noIgnoredFiles(flatten(files))];
        case 2:
          return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
            return toFileWithPath(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE.indexOf(file.name) === -1;
  });
}
function fromList(items) {
  if (items === null) {
    return [];
  }
  var files = [];
  for (var i = 0; i < items.length; i++) {
    var file = items[i];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce(function(acc, files) {
    return __spread(acc, Array.isArray(files) ? flatten(files) : [files]);
  }, []);
}
function fromDataTransferItem(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject(item + " is not a File");
  }
  var fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
function fromEntry(entry) {
  return __awaiter6(this, void 0, void 0, function() {
    return __generator6(this, function(_a13) {
      return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
    });
  });
}
function fromDirEntry(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch) {
        return __awaiter6(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator6(this, function(_a13) {
            switch (_a13.label) {
              case 0:
                if (!!batch.length)
                  return [3, 5];
                _a13.label = 1;
              case 1:
                _a13.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a13.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a13.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch.map(fromEntry));
                entries.push(items);
                readEntries();
                _a13.label = 6;
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter6(this, void 0, void 0, function() {
    return __generator6(this, function(_a13) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}

// node_modules/react-dropzone/dist/es/utils/index.js
var import_attr_accept = __toESM(require_es());
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
var FILE_INVALID_TYPE = "file-invalid-type";
var FILE_TOO_LARGE = "file-too-large";
var FILE_TOO_SMALL = "file-too-small";
var TOO_MANY_FILES = "too-many-files";
var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr2(accept) {
  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
  var messageSuffix = Array.isArray(accept) ? "one of ".concat(accept.join(", ")) : accept;
  return {
    code: FILE_INVALID_TYPE,
    message: "File type must be ".concat(messageSuffix)
  };
};
var getTooLargeRejectionErr = function getTooLargeRejectionErr2(maxSize) {
  return {
    code: FILE_TOO_LARGE,
    message: "File is larger than ".concat(maxSize, " ").concat(maxSize === 1 ? "byte" : "bytes")
  };
};
var getTooSmallRejectionErr = function getTooSmallRejectionErr2(minSize) {
  return {
    code: FILE_TOO_SMALL,
    message: "File is smaller than ".concat(minSize, " ").concat(minSize === 1 ? "byte" : "bytes")
  };
};
var TOO_MANY_FILES_REJECTION = {
  code: TOO_MANY_FILES,
  message: "Too many files"
};
function fileAccepted(file, accept) {
  var isAcceptable = file.type === "application/x-moz-file" || (0, import_attr_accept.default)(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
}
function fileMatchSize(file, minSize, maxSize) {
  if (isDefined(file.size)) {
    if (isDefined(minSize) && isDefined(maxSize)) {
      if (file.size > maxSize)
        return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize)
        return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(minSize) && file.size < minSize)
      return [false, getTooSmallRejectionErr(minSize)];
    else if (isDefined(maxSize) && file.size > maxSize)
      return [false, getTooLargeRejectionErr(maxSize)];
  }
  return [true, null];
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function allFilesAccepted(_ref2) {
  var files = _ref2.files, accept = _ref2.accept, minSize = _ref2.minSize, maxSize = _ref2.maxSize, multiple = _ref2.multiple, maxFiles = _ref2.maxFiles;
  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
    return false;
  }
  return files.every(function(file) {
    var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray(_fileAccepted, 1), accepted = _fileAccepted2[0];
    var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1), sizeMatch = _fileMatchSize2[0];
    return accepted && sizeMatch;
  });
}
function isPropagationStopped(event) {
  if (typeof event.isPropagationStopped === "function") {
    return event.isPropagationStopped();
  } else if (typeof event.cancelBubble !== "undefined") {
    return event.cancelBubble;
  }
  return false;
}
function isEvtWithFiles(event) {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  }
  return Array.prototype.some.call(event.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(event) {
  event.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn2) {
      if (!isPropagationStopped(event) && fn2) {
        fn2.apply(void 0, [event].concat(args));
      }
      return isPropagationStopped(event);
    });
  };
}
function canUseFileSystemAccessAPI() {
  return "showOpenFilePicker" in window;
}
function filePickerOptionsTypes(accept) {
  accept = typeof accept === "string" ? accept.split(",") : accept;
  return [{
    description: "everything",
    // TODO: Need to handle filtering more elegantly than this!
    accept: Array.isArray(accept) ? (
      // Accept just MIME types as per spec
      // NOTE: accept can be https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers
      accept.filter(function(item) {
        return item === "audio/*" || item === "video/*" || item === "image/*" || item === "text/*" || /\w+\/[-+.\w]+/g.test(item);
      }).reduce(function(a, b) {
        return _objectSpread(_objectSpread({}, a), {}, _defineProperty({}, b, []));
      }, {})
    ) : {}
  }];
}
function isAbort(v) {
  return v instanceof DOMException && (v.name === "AbortError" || v.code === v.ABORT_ERR);
}
function isSecurityError(v) {
  return v instanceof DOMException && (v.name === "SecurityError" || v.code === v.SECURITY_ERR);
}

// node_modules/react-dropzone/dist/es/index.js
var _excluded177 = ["children"];
var _excluded222 = ["open"];
var _excluded312 = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"];
var _excluded410 = ["refKey", "onChange", "onClick"];
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Dropzone = (0, import_react96.forwardRef)(function(_ref2, ref) {
  var children2 = _ref2.children, params = _objectWithoutProperties(_ref2, _excluded177);
  var _useDropzone = useDropzone(params), open = _useDropzone.open, props = _objectWithoutProperties(_useDropzone, _excluded222);
  (0, import_react96.useImperativeHandle)(ref, function() {
    return {
      open
    };
  }, [open]);
  return import_react96.default.createElement(import_react96.Fragment, null, children2(_objectSpread2(_objectSpread2({}, props), {}, {
    open
  })));
});
Dropzone.displayName = "Dropzone";
var defaultProps2 = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  maxFiles: 0,
  preventDropOnDocument: true,
  noClick: false,
  noKeyboard: false,
  noDrag: false,
  noDragEventsBubbling: false,
  validator: null,
  useFsAccessApi: true
};
Dropzone.defaultProps = defaultProps2;
Dropzone.propTypes = {
  /**
   * Render function that exposes the dropzone state and prop getter fns
   *
   * @param {object} params
   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} params.open Open the native file selection dialog
   * @param {boolean} params.isFocused Dropzone area is in focus
   * @param {boolean} params.isFileDialogActive File dialog is opened
   * @param {boolean} params.isDragActive Active drag is in progress
   * @param {boolean} params.isDragAccept Dragged files are accepted
   * @param {boolean} params.isDragReject Some dragged files are rejected
   * @param {File[]} params.draggedFiles Files in active drag
   * @param {File[]} params.acceptedFiles Accepted files
   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
   */
  children: import_prop_types259.default.func,
  /**
   * Set accepted file types.
   * See https://github.com/okonet/attr-accept for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all.
   * See: https://github.com/react-dropzone/react-dropzone/issues/276
   */
  accept: import_prop_types259.default.oneOfType([import_prop_types259.default.string, import_prop_types259.default.arrayOf(import_prop_types259.default.string)]),
  /**
   * Allow drag 'n' drop (or selection from the file dialog) of multiple files
   */
  multiple: import_prop_types259.default.bool,
  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: import_prop_types259.default.bool,
  /**
   * If true, disables click to open the native file selection dialog
   */
  noClick: import_prop_types259.default.bool,
  /**
   * If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   */
  noKeyboard: import_prop_types259.default.bool,
  /**
   * If true, disables drag 'n' drop
   */
  noDrag: import_prop_types259.default.bool,
  /**
   * If true, stops drag event propagation to parents
   */
  noDragEventsBubbling: import_prop_types259.default.bool,
  /**
   * Minimum file size (in bytes)
   */
  minSize: import_prop_types259.default.number,
  /**
   * Maximum file size (in bytes)
   */
  maxSize: import_prop_types259.default.number,
  /**
   * Maximum accepted number of files
   * The default value is 0 which means there is no limitation to how many files are accepted.
   */
  maxFiles: import_prop_types259.default.number,
  /**
   * Enable/disable the dropzone
   */
  disabled: import_prop_types259.default.bool,
  /**
   * Use this to provide a custom file aggregator
   *
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  getFilesFromEvent: import_prop_types259.default.func,
  /**
   * Cb for when closing the file dialog with no selection
   */
  onFileDialogCancel: import_prop_types259.default.func,
  /**
   * Cb for when opening the file dialog
   */
  onFileDialogOpen: import_prop_types259.default.func,
  /**
   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API
   * to open the file picker instead of using an `<input type="file">` click event.
   */
  useFsAccessApi: import_prop_types259.default.bool,
  /**
   * Cb for when the `dragenter` event occurs.
   *
   * @param {DragEvent} event
   */
  onDragEnter: import_prop_types259.default.func,
  /**
   * Cb for when the `dragleave` event occurs
   *
   * @param {DragEvent} event
   */
  onDragLeave: import_prop_types259.default.func,
  /**
   * Cb for when the `dragover` event occurs
   *
   * @param {DragEvent} event
   */
  onDragOver: import_prop_types259.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   *
   * @param {File[]} acceptedFiles
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  onDrop: import_prop_types259.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are accepted, this callback is not invoked.
   *
   * @param {File[]} files
   * @param {(DragEvent|Event)} event
   */
  onDropAccepted: import_prop_types259.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are rejected, this callback is not invoked.
   *
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event
   */
  onDropRejected: import_prop_types259.default.func,
  /**
   * Custom validation function
   * @param {File} file
   * @returns {FileError|FileError[]}
   */
  validator: import_prop_types259.default.func
};
var initialState2 = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  draggedFiles: [],
  acceptedFiles: [],
  fileRejections: []
};
function useDropzone() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _defaultProps$options = _objectSpread2(_objectSpread2({}, defaultProps2), options), accept = _defaultProps$options.accept, disabled = _defaultProps$options.disabled, getFilesFromEvent = _defaultProps$options.getFilesFromEvent, maxSize = _defaultProps$options.maxSize, minSize = _defaultProps$options.minSize, multiple = _defaultProps$options.multiple, maxFiles = _defaultProps$options.maxFiles, onDragEnter = _defaultProps$options.onDragEnter, onDragLeave = _defaultProps$options.onDragLeave, onDragOver = _defaultProps$options.onDragOver, onDrop = _defaultProps$options.onDrop, onDropAccepted = _defaultProps$options.onDropAccepted, onDropRejected = _defaultProps$options.onDropRejected, onFileDialogCancel = _defaultProps$options.onFileDialogCancel, onFileDialogOpen = _defaultProps$options.onFileDialogOpen, useFsAccessApi = _defaultProps$options.useFsAccessApi, preventDropOnDocument = _defaultProps$options.preventDropOnDocument, noClick = _defaultProps$options.noClick, noKeyboard = _defaultProps$options.noKeyboard, noDrag = _defaultProps$options.noDrag, noDragEventsBubbling = _defaultProps$options.noDragEventsBubbling, validator2 = _defaultProps$options.validator;
  var onFileDialogOpenCb = (0, import_react96.useMemo)(function() {
    return typeof onFileDialogOpen === "function" ? onFileDialogOpen : noop3;
  }, [onFileDialogOpen]);
  var onFileDialogCancelCb = (0, import_react96.useMemo)(function() {
    return typeof onFileDialogCancel === "function" ? onFileDialogCancel : noop3;
  }, [onFileDialogCancel]);
  var rootRef = (0, import_react96.useRef)(null);
  var inputRef = (0, import_react96.useRef)(null);
  var _useReducer = (0, import_react96.useReducer)(reducer, initialState2), _useReducer2 = _slicedToArray2(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
  var isFocused = state.isFocused, isFileDialogActive = state.isFileDialogActive, draggedFiles = state.draggedFiles;
  var fsAccessApiWorksRef = (0, import_react96.useRef)(typeof window !== "undefined" && window.isSecureContext && useFsAccessApi && canUseFileSystemAccessAPI());
  var onWindowFocus = function onWindowFocus2() {
    if (!fsAccessApiWorksRef.current && isFileDialogActive) {
      setTimeout(function() {
        if (inputRef.current) {
          var files = inputRef.current.files;
          if (!files.length) {
            dispatch({
              type: "closeDialog"
            });
            onFileDialogCancelCb();
          }
        }
      }, 300);
    }
  };
  (0, import_react96.useEffect)(function() {
    window.addEventListener("focus", onWindowFocus, false);
    return function() {
      window.removeEventListener("focus", onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);
  var dragTargetsRef = (0, import_react96.useRef)([]);
  var onDocumentDrop = function onDocumentDrop2(event) {
    if (rootRef.current && rootRef.current.contains(event.target)) {
      return;
    }
    event.preventDefault();
    dragTargetsRef.current = [];
  };
  (0, import_react96.useEffect)(function() {
    if (preventDropOnDocument) {
      document.addEventListener("dragover", onDocumentDragOver, false);
      document.addEventListener("drop", onDocumentDrop, false);
    }
    return function() {
      if (preventDropOnDocument) {
        document.removeEventListener("dragover", onDocumentDragOver);
        document.removeEventListener("drop", onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  var onDragEnterCb = (0, import_react96.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation8(event);
    dragTargetsRef.current = [].concat(_toConsumableArray(dragTargetsRef.current), [event.target]);
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(draggedFiles2) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        dispatch({
          draggedFiles: draggedFiles2,
          isDragActive: true,
          type: "setDraggedFiles"
        });
        if (onDragEnter) {
          onDragEnter(event);
        }
      });
    }
  }, [getFilesFromEvent, onDragEnter, noDragEventsBubbling]);
  var onDragOverCb = (0, import_react96.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation8(event);
    var hasFiles = isEvtWithFiles(event);
    if (hasFiles && event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = "copy";
      } catch (_unused) {
      }
    }
    if (hasFiles && onDragOver) {
      onDragOver(event);
    }
    return false;
  }, [onDragOver, noDragEventsBubbling]);
  var onDragLeaveCb = (0, import_react96.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation8(event);
    var targets = dragTargetsRef.current.filter(function(target) {
      return rootRef.current && rootRef.current.contains(target);
    });
    var targetIdx = targets.indexOf(event.target);
    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }
    dragTargetsRef.current = targets;
    if (targets.length > 0) {
      return;
    }
    dispatch({
      isDragActive: false,
      type: "setDraggedFiles",
      draggedFiles: []
    });
    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave, noDragEventsBubbling]);
  var setFiles = (0, import_react96.useCallback)(function(files, event) {
    var acceptedFiles = [];
    var fileRejections = [];
    files.forEach(function(file) {
      var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray2(_fileAccepted, 2), accepted = _fileAccepted2[0], acceptError = _fileAccepted2[1];
      var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray2(_fileMatchSize, 2), sizeMatch = _fileMatchSize2[0], sizeError = _fileMatchSize2[1];
      var customErrors = validator2 ? validator2(file) : null;
      if (accepted && sizeMatch && !customErrors) {
        acceptedFiles.push(file);
      } else {
        var errors = [acceptError, sizeError];
        if (customErrors) {
          errors = errors.concat(customErrors);
        }
        fileRejections.push({
          file,
          errors: errors.filter(function(e) {
            return e;
          })
        });
      }
    });
    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
      acceptedFiles.forEach(function(file) {
        fileRejections.push({
          file,
          errors: [TOO_MANY_FILES_REJECTION]
        });
      });
      acceptedFiles.splice(0);
    }
    dispatch({
      acceptedFiles,
      fileRejections,
      type: "setFiles"
    });
    if (onDrop) {
      onDrop(acceptedFiles, fileRejections, event);
    }
    if (fileRejections.length > 0 && onDropRejected) {
      onDropRejected(fileRejections, event);
    }
    if (acceptedFiles.length > 0 && onDropAccepted) {
      onDropAccepted(acceptedFiles, event);
    }
  }, [dispatch, multiple, accept, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator2]);
  var onDropCb = (0, import_react96.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation8(event);
    dragTargetsRef.current = [];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        setFiles(files, event);
      });
    }
    dispatch({
      type: "reset"
    });
  }, [getFilesFromEvent, setFiles, noDragEventsBubbling]);
  var openFileDialog = (0, import_react96.useCallback)(function() {
    if (fsAccessApiWorksRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      var opts = {
        multiple,
        types: filePickerOptionsTypes(accept)
      };
      window.showOpenFilePicker(opts).then(function(handles) {
        return getFilesFromEvent(handles);
      }).then(function(files) {
        setFiles(files, null);
        dispatch({
          type: "closeDialog"
        });
      }).catch(function(e) {
        if (isAbort(e)) {
          onFileDialogCancelCb(e);
          dispatch({
            type: "closeDialog"
          });
        } else if (isSecurityError(e)) {
          fsAccessApiWorksRef.current = false;
          if (inputRef.current) {
            inputRef.current.value = null;
            inputRef.current.click();
          }
        }
      });
      return;
    }
    if (inputRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      inputRef.current.value = null;
      inputRef.current.click();
    }
  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, accept, multiple]);
  var onKeyDownCb = (0, import_react96.useCallback)(function(event) {
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }
    if (event.key === " " || event.key === "Enter" || event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, openFileDialog]);
  var onFocusCb = (0, import_react96.useCallback)(function() {
    dispatch({
      type: "focus"
    });
  }, []);
  var onBlurCb = (0, import_react96.useCallback)(function() {
    dispatch({
      type: "blur"
    });
  }, []);
  var onClickCb = (0, import_react96.useCallback)(function() {
    if (noClick) {
      return;
    }
    if (isIeOrEdge()) {
      setTimeout(openFileDialog, 0);
    } else {
      openFileDialog();
    }
  }, [noClick, openFileDialog]);
  var composeHandler = function composeHandler2(fn2) {
    return disabled ? null : fn2;
  };
  var composeKeyboardHandler = function composeKeyboardHandler2(fn2) {
    return noKeyboard ? null : composeHandler(fn2);
  };
  var composeDragHandler = function composeDragHandler2(fn2) {
    return noDrag ? null : composeHandler(fn2);
  };
  var stopPropagation8 = function stopPropagation9(event) {
    if (noDragEventsBubbling) {
      event.stopPropagation();
    }
  };
  var getRootProps = (0, import_react96.useMemo)(function() {
    return function() {
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, role = _ref2.role, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragEnter2 = _ref2.onDragEnter, onDragOver2 = _ref2.onDragOver, onDragLeave2 = _ref2.onDragLeave, onDrop2 = _ref2.onDrop, rest = _objectWithoutProperties(_ref2, _excluded312);
      return _objectSpread2(_objectSpread2(_defineProperty2({
        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),
        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),
        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),
        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter2, onDragEnterCb)),
        onDragOver: composeDragHandler(composeEventHandlers(onDragOver2, onDragOverCb)),
        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave2, onDragLeaveCb)),
        onDrop: composeDragHandler(composeEventHandlers(onDrop2, onDropCb)),
        role: typeof role === "string" && role !== "" ? role : "button"
      }, refKey, rootRef), !disabled && !noKeyboard ? {
        tabIndex: 0
      } : {}), rest);
    };
  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
  var onInputElementClick = (0, import_react96.useCallback)(function(event) {
    event.stopPropagation();
  }, []);
  var getInputProps = (0, import_react96.useMemo)(function() {
    return function() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest = _objectWithoutProperties(_ref3, _excluded410);
      var inputProps = _defineProperty2({
        accept,
        multiple,
        type: "file",
        style: {
          display: "none"
        },
        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),
        tabIndex: -1
      }, refKey, inputRef);
      return _objectSpread2(_objectSpread2({}, inputProps), rest);
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  var fileCount = draggedFiles.length;
  var isDragAccept = fileCount > 0 && allFilesAccepted({
    files: draggedFiles,
    accept,
    minSize,
    maxSize,
    multiple,
    maxFiles
  });
  var isDragReject = fileCount > 0 && !isDragAccept;
  return _objectSpread2(_objectSpread2({}, state), {}, {
    isDragAccept,
    isDragReject,
    isFocused: isFocused && !disabled,
    getRootProps,
    getInputProps,
    rootRef,
    inputRef,
    open: composeHandler(openFileDialog)
  });
}
function reducer(state, action) {
  switch (action.type) {
    case "focus":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: true
      });
    case "blur":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: false
      });
    case "openDialog":
      return _objectSpread2(_objectSpread2({}, initialState2), {}, {
        isFileDialogActive: true
      });
    case "closeDialog":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFileDialogActive: false
      });
    case "setDraggedFiles":
      var isDragActive = action.isDragActive, draggedFiles = action.draggedFiles;
      return _objectSpread2(_objectSpread2({}, state), {}, {
        draggedFiles,
        isDragActive
      });
    case "setFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections
      });
    case "reset":
      return _objectSpread2({}, initialState2);
    default:
      return state;
  }
}
function noop3() {
}

// node_modules/ra-ui-materialui/dist/esm/input/FileInputPreview.js
var React407 = __toESM(require_react());
var import_react97 = __toESM(require_react());
var import_prop_types260 = __toESM(require_prop_types());
var import_RemoveCircle = __toESM(require_RemoveCircle());
var __assign83 = function() {
  __assign83 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign83.apply(this, arguments);
};
var __rest77 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FileInputPreview = function(props) {
  var children2 = props.children, className = props.className, onRemove = props.onRemove, file = props.file, _a13 = props.removeIcon, RemoveIcon2 = _a13 === void 0 ? import_RemoveCircle.default : _a13, rest = __rest77(props, ["children", "className", "onRemove", "file", "removeIcon"]);
  var translate = useTranslate();
  (0, import_react97.useEffect)(function() {
    return function() {
      var preview = file.rawFile ? file.rawFile.preview : file.preview;
      if (preview) {
        window.URL.revokeObjectURL(preview);
      }
    };
  }, [file]);
  return React407.createElement(
    Root21,
    __assign83({ className }, rest),
    React407.createElement(
      IconButton_default,
      { className: FileInputPreviewClasses.removeButton, onClick: onRemove, "aria-label": translate("ra.action.delete"), title: translate("ra.action.delete"), size: "small" },
      React407.createElement(RemoveIcon2, { className: FileInputPreviewClasses.removeIcon })
    ),
    children2
  );
};
FileInputPreview.propTypes = {
  children: import_prop_types260.default.element.isRequired,
  className: import_prop_types260.default.string,
  file: import_prop_types260.default.object,
  onRemove: import_prop_types260.default.func.isRequired,
  removeIcon: import_prop_types260.default.element
};
var PREFIX50 = "RaFileInputPreview";
var FileInputPreviewClasses = {
  removeButton: "".concat(PREFIX50, "-removeButton"),
  removeIcon: "".concat(PREFIX50, "-removeIcon")
};
var Root21 = styled_default2("div", {
  name: PREFIX50,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(FileInputPreviewClasses.removeButton)] = {}, _b["& .".concat(FileInputPreviewClasses.removeIcon)] = {
    color: theme.palette.error.main
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/input/FileInput.js
var __assign84 = function() {
  __assign84 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign84.apply(this, arguments);
};
var __awaiter7 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator7 = function(thisArg, body2) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_5 = 0)), _5)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __rest78 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray9 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var FileInput = function(props) {
  var accept = props.accept, children2 = props.children, className = props.className, format = props.format, helperText = props.helperText, inputPropsOptions = props.inputProps, maxSize = props.maxSize, minSize = props.minSize, _a13 = props.multiple, multiple = _a13 === void 0 ? false : _a13, label = props.label, _b = props.labelMultiple, labelMultiple = _b === void 0 ? "ra.input.file.upload_several" : _b, _c = props.labelSingle, labelSingle = _c === void 0 ? "ra.input.file.upload_single" : _c, _d = props.options, options = _d === void 0 ? {} : _d, onRemoveProp = props.onRemove, parse2 = props.parse, placeholder = props.placeholder, removeIcon = props.removeIcon, resource = props.resource, source = props.source, validate = props.validate, validateFileRemoval = props.validateFileRemoval, rest = __rest78(props, ["accept", "children", "className", "format", "helperText", "inputProps", "maxSize", "minSize", "multiple", "label", "labelMultiple", "labelSingle", "options", "onRemove", "parse", "placeholder", "removeIcon", "resource", "source", "validate", "validateFileRemoval"]);
  var onDropProp = options.onDrop;
  var translate = useTranslate();
  var transformFile = function(file) {
    if (!(file instanceof File)) {
      return file;
    }
    var preview = URL.createObjectURL(file);
    var transformedFile = {
      rawFile: file,
      src: preview,
      title: file.name
    };
    return transformedFile;
  };
  var transformFiles = function(files2) {
    if (!files2) {
      return multiple ? [] : null;
    }
    if (Array.isArray(files2)) {
      return files2.map(transformFile);
    }
    return transformFile(files2);
  };
  var _e = useInput(__assign84({ format: format || transformFiles, parse: parse2 || transformFiles, source, validate }, rest)), id = _e.id, _f = _e.field, onChange = _f.onChange, value = _f.value, fieldState = _e.fieldState, isSubmitted = _e.formState.isSubmitted, isRequired2 = _e.isRequired;
  var isTouched = fieldState.isTouched, error = fieldState.error, invalid = fieldState.invalid;
  var files = value ? Array.isArray(value) ? value : [value] : [];
  var onDrop = function(newFiles, rejectedFiles, event) {
    var updatedFiles = multiple ? __spreadArray9(__spreadArray9([], files, true), newFiles, true) : __spreadArray9([], newFiles, true);
    if (multiple) {
      onChange(updatedFiles);
    } else {
      onChange(updatedFiles[0]);
    }
    if (onDropProp) {
      onDropProp(newFiles, rejectedFiles, event);
    }
  };
  var onRemove = function(file) {
    return function() {
      return __awaiter7(void 0, void 0, void 0, function() {
        var e_1, filteredFiles;
        return __generator7(this, function(_a14) {
          switch (_a14.label) {
            case 0:
              if (!validateFileRemoval)
                return [3, 4];
              _a14.label = 1;
            case 1:
              _a14.trys.push([1, 3, , 4]);
              return [4, validateFileRemoval(file)];
            case 2:
              _a14.sent();
              return [3, 4];
            case 3:
              e_1 = _a14.sent();
              return [
                2
                /*return*/
              ];
            case 4:
              if (multiple) {
                filteredFiles = files.filter(function(stateFile) {
                  return !shallowEqual(stateFile, file);
                });
                onChange(filteredFiles);
              } else {
                onChange(null);
              }
              if (onRemoveProp) {
                onRemoveProp(file);
              }
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
  };
  var childrenElement = children2 && (0, import_react98.isValidElement)(import_react98.Children.only(children2)) ? import_react98.Children.only(children2) : void 0;
  var _g = useDropzone(__assign84(__assign84({ accept, maxSize, minSize, multiple }, options), { onDrop })), getRootProps = _g.getRootProps, getInputProps = _g.getInputProps;
  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;
  return import_react98.default.createElement(
    StyledLabeled,
    __assign84({ htmlFor: id, label, className: clsx_m_default("ra-input", "ra-input-".concat(source), className), source, resource, isRequired: isRequired2, color: (isTouched || isSubmitted) && invalid ? "error" : void 0 }, sanitizeInputRestProps(rest)),
    import_react98.default.createElement(
      import_react98.default.Fragment,
      null,
      import_react98.default.createElement(
        "div",
        __assign84({}, getRootProps({
          className: FileInputClasses.dropZone,
          "data-testid": "dropzone"
        })),
        import_react98.default.createElement("input", __assign84({ id, name: id }, getInputProps(__assign84({}, inputPropsOptions)))),
        placeholder ? placeholder : multiple ? import_react98.default.createElement("p", null, translate(labelMultiple)) : import_react98.default.createElement("p", null, translate(labelSingle))
      ),
      renderHelperText ? import_react98.default.createElement(
        FormHelperText_default,
        { error: (isTouched || isSubmitted) && invalid },
        import_react98.default.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText })
      ) : null,
      children2 && import_react98.default.createElement("div", { className: "previews" }, files.map(function(file, index2) {
        return import_react98.default.createElement(
          FileInputPreview,
          { key: index2, file, onRemove: onRemove(file), className: FileInputClasses.removeButton, removeIcon },
          import_react98.default.createElement(RecordContextProvider, { value: file }, childrenElement)
        );
      }))
    )
  );
};
FileInput.propTypes = {
  accept: import_prop_types261.default.string,
  children: import_prop_types261.default.element,
  className: import_prop_types261.default.string,
  id: import_prop_types261.default.string,
  isRequired: import_prop_types261.default.bool,
  label: import_prop_types261.default.oneOfType([
    import_prop_types261.default.string,
    import_prop_types261.default.bool,
    import_prop_types261.default.element
  ]),
  labelMultiple: import_prop_types261.default.string,
  labelSingle: import_prop_types261.default.string,
  maxSize: import_prop_types261.default.number,
  minSize: import_prop_types261.default.number,
  multiple: import_prop_types261.default.bool,
  validateFileRemoval: import_prop_types261.default.func,
  options: import_prop_types261.default.object,
  removeIcon: import_prop_types261.default.elementType,
  resource: import_prop_types261.default.string,
  source: import_prop_types261.default.string,
  placeholder: import_prop_types261.default.node
};
var PREFIX51 = "RaFileInput";
var FileInputClasses = {
  dropZone: "".concat(PREFIX51, "-dropZone"),
  removeButton: "".concat(PREFIX51, "-removeButton")
};
var StyledLabeled = styled_default2(Labeled, {
  name: PREFIX51,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    width: "100%"
  }, _b["& .".concat(FileInputClasses.dropZone)] = {
    background: theme.palette.background.default,
    borderRadius: theme.shape.borderRadius,
    fontFamily: theme.typography.fontFamily,
    cursor: "pointer",
    padding: theme.spacing(1),
    textAlign: "center",
    color: theme.palette.getContrastText(theme.palette.background.default)
  }, _b["& .".concat(FileInputClasses.removeButton)] = {}, _b;
});

// node_modules/ra-ui-materialui/dist/esm/input/ImageInput.js
var React409 = __toESM(require_react());
var __assign85 = function() {
  __assign85 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign85.apply(this, arguments);
};
var ImageInput = function(props) {
  return React409.createElement(StyledFileInput, __assign85({ labelMultiple: "ra.input.image.upload_several", labelSingle: "ra.input.image.upload_single" }, props));
};
var PREFIX52 = "RaImageInput";
var StyledFileInput = styled_default2(FileInput, {
  name: PREFIX52,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    width: "100%"
  }, _b["& .".concat(FileInputClasses.dropZone)] = {
    background: theme.palette.background.default,
    borderRadius: theme.shape.borderRadius,
    fontFamily: theme.typography.fontFamily,
    cursor: "pointer",
    padding: theme.spacing(1),
    textAlign: "center",
    color: theme.palette.getContrastText(theme.palette.background.default)
  }, _b["& .".concat(FileInputClasses.removeButton)] = {
    display: "inline-block",
    position: "relative",
    "& button": {
      position: "absolute",
      top: theme.spacing(1),
      right: theme.spacing(1),
      minWidth: theme.spacing(2),
      opacity: 0
    },
    "&:hover button": {
      opacity: 1
    }
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/input/LoadingInput.js
var React411 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/input/ResettableTextField.js
var React410 = __toESM(require_react());
var import_react99 = __toESM(require_react());
var import_prop_types262 = __toESM(require_prop_types());
var import_Clear = __toESM(require_Clear());
var __assign86 = function() {
  __assign86 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign86.apply(this, arguments);
};
var __rest79 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a6;
var ResettableTextField = (0, import_react99.forwardRef)(function(props, ref) {
  var clearAlwaysVisible = props.clearAlwaysVisible, InputProps = props.InputProps, value = props.value, resettable = props.resettable, disabled = props.disabled, variant = props.variant, margin2 = props.margin, className = props.className, rest = __rest79(props, ["clearAlwaysVisible", "InputProps", "value", "resettable", "disabled", "variant", "margin", "className"]);
  var translate = useTranslate();
  var onChange = props.onChange, onFocus = props.onFocus, onBlur = props.onBlur;
  var handleClickClearButton = (0, import_react99.useCallback)(function(event) {
    event.preventDefault();
    onChange("");
  }, [onChange]);
  var handleFocus = (0, import_react99.useCallback)(function(event) {
    onFocus && onFocus(event);
  }, [onFocus]);
  var handleBlur2 = (0, import_react99.useCallback)(function(event) {
    onBlur && onBlur(event);
  }, [onBlur]);
  var clearButton = ResettableTextFieldClasses.clearButton, clearIcon = ResettableTextFieldClasses.clearIcon, inputAdornedEnd = ResettableTextFieldClasses.inputAdornedEnd, selectAdornment = ResettableTextFieldClasses.selectAdornment, visibleClearIcon = ResettableTextFieldClasses.visibleClearIcon;
  var _a13 = InputProps || {}, endAdornment = _a13.endAdornment, InputPropsWithoutEndAdornment = __rest79(_a13, ["endAdornment"]);
  if (clearAlwaysVisible && endAdornment) {
    throw new Error("ResettableTextField cannot display both an endAdornment and a clear button always visible");
  }
  var getEndAdornment = function() {
    var _a14;
    if (!resettable) {
      return endAdornment;
    } else if (!value) {
      if (clearAlwaysVisible) {
        return React410.createElement(
          InputAdornment_default,
          { position: "end", classes: {
            root: props.select ? selectAdornment : null
          } },
          React410.createElement(
            IconButton_default,
            { className: clearButton, "aria-label": translate("ra.action.clear_input_value"), title: translate("ra.action.clear_input_value"), disabled: true, size: "large" },
            React410.createElement(import_Clear.default, { className: clsx_m_default(clearIcon, visibleClearIcon) })
          )
        );
      } else {
        if (endAdornment) {
          return endAdornment;
        } else {
          return React410.createElement(
            InputAdornment_default,
            { position: "end", classes: {
              root: props.select ? selectAdornment : null
            } },
            React410.createElement("span", { className: clearButton }, " ")
          );
        }
      }
    } else {
      return React410.createElement(
        InputAdornment_default,
        { position: "end", classes: {
          root: props.select ? selectAdornment : null
        } },
        React410.createElement(
          IconButton_default,
          { className: clearButton, "aria-label": translate("ra.action.clear_input_value"), title: translate("ra.action.clear_input_value"), onClick: handleClickClearButton, onMouseDown: handleMouseDownClearButton, disabled, size: "large" },
          React410.createElement(import_Clear.default, { className: clsx_m_default(clearIcon, (_a14 = {}, _a14[visibleClearIcon] = clearAlwaysVisible || value, _a14)) })
        )
      );
    }
  };
  return React410.createElement(StyledTextField, __assign86({ value, InputProps: __assign86({ classes: props.select && variant === "filled" ? { adornedEnd: inputAdornedEnd } : {}, endAdornment: getEndAdornment() }, InputPropsWithoutEndAdornment), disabled, variant, margin: margin2, className, size: "small" }, rest, { onFocus: handleFocus, onBlur: handleBlur2, inputRef: ref }));
});
ResettableTextField.displayName = "ResettableTextField";
var handleMouseDownClearButton = function(event) {
  event.preventDefault();
};
ResettableTextField.propTypes = {
  clearAlwaysVisible: import_prop_types262.default.bool,
  disabled: import_prop_types262.default.bool,
  InputProps: import_prop_types262.default.object,
  onBlur: import_prop_types262.default.func,
  onChange: import_prop_types262.default.func.isRequired,
  onFocus: import_prop_types262.default.func,
  resettable: import_prop_types262.default.bool,
  value: import_prop_types262.default.any
};
var PREFIX53 = "RaResettableTextField";
var ResettableTextFieldClasses = {
  clearIcon: "".concat(PREFIX53, "-clearIcon"),
  visibleClearIcon: "".concat(PREFIX53, "-visibleClearIcon"),
  clearButton: "".concat(PREFIX53, "-clearButton"),
  selectAdornment: "".concat(PREFIX53, "-selectAdornment"),
  inputAdornedEnd: "".concat(PREFIX53, "-inputAdornedEnd")
};
var ResettableTextFieldStyles = (_a6 = {}, _a6["& .".concat(ResettableTextFieldClasses.clearIcon)] = {
  height: 16,
  width: 0
}, _a6["& .".concat(ResettableTextFieldClasses.visibleClearIcon)] = {
  width: 16
}, _a6["& .".concat(ResettableTextFieldClasses.clearButton)] = {
  height: 24,
  width: 24,
  padding: 0
}, _a6["& .".concat(ResettableTextFieldClasses.selectAdornment)] = {
  position: "absolute",
  right: 24
}, _a6["& .".concat(ResettableTextFieldClasses.inputAdornedEnd)] = {
  paddingRight: 0
}, _a6);
var StyledTextField = styled_default2(TextField_default, {
  name: PREFIX53,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(ResettableTextFieldStyles);

// node_modules/ra-ui-materialui/dist/esm/input/LoadingInput.js
var LoadingInput = function(_a13) {
  var fullWidth = _a13.fullWidth, label = _a13.label, helperText = _a13.helperText, margin2 = _a13.margin, size2 = _a13.size, sx = _a13.sx, _b = _a13.timeout, timeout2 = _b === void 0 ? 1e3 : _b, variant = _a13.variant;
  var oneSecondHasPassed = useTimeout(timeout2);
  return React411.createElement(StyledResettableTextField, { sx, label, helperText, fullWidth, variant, margin: margin2, size: size2, disabled: true, onChange: function() {
  }, InputProps: {
    endAdornment: React411.createElement(InputAdornment_default, { position: "end" }, oneSecondHasPassed ? React411.createElement(CircularProgress_default, { color: "inherit", size: 20 }) : (
      // use an adornment of the same size to avoid visual jumps
      React411.createElement("span", { style: { width: 20 } }, " ")
    ))
  } });
};
var PREFIX54 = "RaLoadingInput";
var StyledResettableTextField = styled_default2(ResettableTextField, {
  name: PREFIX54,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    "& .MuiInputLabel-root.Mui-disabled": {
      color: theme.palette.text.secondary
    },
    "& .MuiFilledInput-root.Mui-disabled": {
      background: theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.04)" : "rgba(255, 255, 255, 0.09)"
    },
    "& .MuiFilledInput-root.Mui-disabled:before": {
      borderBottomStyle: "solid"
    }
  };
});

// node_modules/ra-ui-materialui/dist/esm/input/NullableBooleanInput.js
var React412 = __toESM(require_react());
var import_prop_types263 = __toESM(require_prop_types());
var __assign87 = function() {
  __assign87 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign87.apply(this, arguments);
};
var __rest80 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var NullableBooleanInput = function(props) {
  var className = props.className, _a13 = props.format, format = _a13 === void 0 ? getStringFromBoolean : _a13, helperText = props.helperText, label = props.label, margin2 = props.margin, onBlur = props.onBlur, onChange = props.onChange, _b = props.parse, parse2 = _b === void 0 ? getBooleanFromString : _b, resource = props.resource, source = props.source, validate = props.validate, variant = props.variant, _c = props.nullLabel, nullLabel = _c === void 0 ? "ra.boolean.null" : _c, _d = props.falseLabel, falseLabel = _d === void 0 ? "ra.boolean.false" : _d, _e = props.trueLabel, trueLabel = _e === void 0 ? "ra.boolean.true" : _e, rest = __rest80(props, ["className", "format", "helperText", "label", "margin", "onBlur", "onChange", "parse", "resource", "source", "validate", "variant", "nullLabel", "falseLabel", "trueLabel"]);
  var translate = useTranslate();
  var _f = useInput(__assign87({ format, parse: parse2, onBlur, onChange, resource, source, validate }, rest)), field = _f.field, _g = _f.fieldState, error = _g.error, invalid = _g.invalid, isTouched = _g.isTouched, isSubmitted = _f.formState.isSubmitted, id = _f.id, isRequired2 = _f.isRequired;
  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;
  return React412.createElement(
    StyledTextField2,
    __assign87({ id, size: "small" }, field, { className: clsx_m_default("ra-input", "ra-input-".concat(source), NullableBooleanInputClasses.input, className), select: true, margin: margin2, label: React412.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 }), error: (isTouched || isSubmitted) && invalid, helperText: renderHelperText ? React412.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText }) : null, variant }, sanitizeInputRestProps(rest)),
    React412.createElement(MenuItem_default, { value: "" }, translate(nullLabel)),
    React412.createElement(MenuItem_default, { value: "false" }, translate(falseLabel)),
    React412.createElement(MenuItem_default, { value: "true" }, translate(trueLabel))
  );
};
NullableBooleanInput.propTypes = {
  label: import_prop_types263.default.oneOfType([
    import_prop_types263.default.string,
    import_prop_types263.default.bool,
    import_prop_types263.default.element
  ]),
  options: import_prop_types263.default.object,
  resource: import_prop_types263.default.string,
  source: import_prop_types263.default.string,
  nullLabel: import_prop_types263.default.string,
  falseLabel: import_prop_types263.default.string,
  trueLabel: import_prop_types263.default.string
};
var PREFIX55 = "RaNullableBooleanInput";
var NullableBooleanInputClasses = {
  input: "".concat(PREFIX55, "-input")
};
var StyledTextField2 = styled_default2(TextField_default, {
  name: PREFIX55,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b, _c;
  var theme = _a13.theme, fullWidth = _a13.fullWidth;
  return _b = {}, _b["&.".concat(NullableBooleanInputClasses.input)] = {
    width: fullWidth ? "100%" : theme.spacing(16)
  }, _b[theme.breakpoints.down("sm")] = (_c = {}, _c["&.".concat(NullableBooleanInputClasses.input)] = {
    width: "100%"
  }, _c), _b;
});
var getBooleanFromString = function(value) {
  if (value === "true")
    return true;
  if (value === "false")
    return false;
  return null;
};
var getStringFromBoolean = function(value) {
  if (value === true)
    return "true";
  if (value === false)
    return "false";
  return "";
};

// node_modules/ra-ui-materialui/dist/esm/input/NumberInput.js
var React413 = __toESM(require_react());
var import_prop_types264 = __toESM(require_prop_types());
var __assign88 = function() {
  __assign88 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign88.apply(this, arguments);
};
var __rest81 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var NumberInput3 = function(_a13) {
  var className = _a13.className, _b = _a13.defaultValue, defaultValue = _b === void 0 ? null : _b, _c = _a13.format, format = _c === void 0 ? convertNumberToString : _c, helperText = _a13.helperText, label = _a13.label, margin2 = _a13.margin, onChange = _a13.onChange, onBlur = _a13.onBlur, onFocus = _a13.onFocus, parse2 = _a13.parse, resource = _a13.resource, source = _a13.source, _d = _a13.step, step = _d === void 0 ? "any" : _d, min3 = _a13.min, max3 = _a13.max, validate = _a13.validate, variant = _a13.variant, overrideInputProps = _a13.inputProps, rest = __rest81(_a13, ["className", "defaultValue", "format", "helperText", "label", "margin", "onChange", "onBlur", "onFocus", "parse", "resource", "source", "step", "min", "max", "validate", "variant", "inputProps"]);
  var _e = useInput(__assign88({ defaultValue, onBlur, resource, source, validate }, rest)), field = _e.field, _f = _e.fieldState, error = _f.error, invalid = _f.invalid, isTouched = _f.isTouched, isSubmitted = _e.formState.isSubmitted, id = _e.id, isRequired2 = _e.isRequired;
  var onBlurFromField = field.onBlur;
  var inputProps = __assign88(__assign88({}, overrideInputProps), { step, min: min3, max: max3 });
  var _g = React413.useState(format(field.value)), value = _g[0], setValue = _g[1];
  var hasFocus = React413.useRef(false);
  React413.useEffect(function() {
    if (!hasFocus.current) {
      var stringValue_1 = format(field.value);
      setValue(function(value2) {
        return value2 !== stringValue_1 ? stringValue_1 : value2;
      });
    }
  }, [field.value, format]);
  var handleChange = function(event) {
    if (onChange) {
      onChange(event);
    }
    if (typeof event.target === "undefined" || typeof event.target.value === "undefined") {
      return;
    }
    var target = event.target;
    setValue(target.value);
    var newValue = target.valueAsNumber !== void 0 && target.valueAsNumber !== null && !isNaN(target.valueAsNumber) ? parse2 ? parse2(target.valueAsNumber) : target.valueAsNumber : parse2 ? parse2(target.value) : convertStringToNumber(target.value);
    field.onChange(newValue);
  };
  var handleFocus = function(event) {
    if (onFocus) {
      onFocus(event);
    }
    hasFocus.current = true;
  };
  var handleBlur2 = function() {
    if (onBlurFromField) {
      onBlurFromField();
    }
    hasFocus.current = false;
    var stringValue = format(field.value);
    setValue(function(value2) {
      return value2 !== stringValue ? stringValue : value2;
    });
  };
  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;
  var ref = field.ref, fieldWithoutRef = __rest81(field, ["ref"]);
  return React413.createElement(TextField_default, __assign88({ id }, fieldWithoutRef, {
    inputRef: ref,
    // use the locally controlled state instead of the react-hook-form field state
    value,
    onChange: handleChange,
    onFocus: handleFocus,
    onBlur: handleBlur2,
    className: clsx_m_default("ra-input", "ra-input-".concat(source), className),
    type: "number",
    size: "small",
    variant,
    error: (isTouched || isSubmitted) && invalid,
    helperText: renderHelperText ? React413.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText }) : null,
    label: React413.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 }),
    margin: margin2,
    inputProps
  }, sanitizeInputRestProps(rest)));
};
NumberInput3.propTypes = {
  label: import_prop_types264.default.oneOfType([
    import_prop_types264.default.string,
    import_prop_types264.default.bool,
    import_prop_types264.default.element
  ]),
  resource: import_prop_types264.default.string,
  source: import_prop_types264.default.string,
  step: import_prop_types264.default.oneOfType([import_prop_types264.default.string, import_prop_types264.default.number])
};
NumberInput3.defaultProps = {
  step: "any",
  textAlign: "right"
};
var convertStringToNumber = function(value) {
  if (value == null || value === "") {
    return null;
  }
  var float = parseFloat(value);
  return isNaN(float) ? 0 : float;
};
var convertNumberToString = function(value) {
  return value == null || isNaN(value) ? "" : value.toString();
};

// node_modules/ra-ui-materialui/dist/esm/input/PasswordInput.js
var React415 = __toESM(require_react());
var import_react100 = __toESM(require_react());
var import_Visibility = __toESM(require_Visibility());
var import_VisibilityOff = __toESM(require_VisibilityOff());

// node_modules/ra-ui-materialui/dist/esm/input/TextInput.js
var React414 = __toESM(require_react());
var import_prop_types265 = __toESM(require_prop_types());
var __assign89 = function() {
  __assign89 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign89.apply(this, arguments);
};
var __rest82 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TextInput = function(props) {
  var className = props.className, defaultValue = props.defaultValue, label = props.label, format = props.format, helperText = props.helperText, onBlur = props.onBlur, onChange = props.onChange, parse2 = props.parse, resource = props.resource, source = props.source, validate = props.validate, rest = __rest82(props, ["className", "defaultValue", "label", "format", "helperText", "onBlur", "onChange", "parse", "resource", "source", "validate"]);
  var _a13 = useInput(__assign89({ defaultValue, format, parse: parse2, resource, source, type: "text", validate, onBlur, onChange }, rest)), field = _a13.field, _b = _a13.fieldState, error = _b.error, invalid = _b.invalid, isTouched = _b.isTouched, isSubmitted = _a13.formState.isSubmitted, id = _a13.id, isRequired2 = _a13.isRequired;
  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;
  return React414.createElement(ResettableTextField, __assign89({ id }, field, { className: clsx_m_default("ra-input", "ra-input-".concat(source), className), label: label !== "" && label !== false ? React414.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 }) : null, error: (isTouched || isSubmitted) && invalid, helperText: renderHelperText ? React414.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText }) : null }, sanitizeInputRestProps(rest)));
};
TextInput.propTypes = {
  className: import_prop_types265.default.string,
  label: import_prop_types265.default.oneOfType([
    import_prop_types265.default.string,
    import_prop_types265.default.bool,
    import_prop_types265.default.element
  ]),
  resource: import_prop_types265.default.string,
  source: import_prop_types265.default.string
};

// node_modules/ra-ui-materialui/dist/esm/input/PasswordInput.js
var __assign90 = function() {
  __assign90 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign90.apply(this, arguments);
};
var __rest83 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var PasswordInput = function(props) {
  var _a13 = props.initiallyVisible, initiallyVisible = _a13 === void 0 ? false : _a13, rest = __rest83(props, ["initiallyVisible"]);
  var _b = (0, import_react100.useState)(initiallyVisible), visible = _b[0], setVisible = _b[1];
  var translate = useTranslate();
  var handleClick2 = function() {
    setVisible(!visible);
  };
  return React415.createElement(TextInput, __assign90({ type: visible ? "text" : "password", size: "small", InputProps: {
    endAdornment: React415.createElement(
      InputAdornment_default,
      { position: "end" },
      React415.createElement(IconButton_default, { "aria-label": translate(visible ? "ra.input.password.toggle_visible" : "ra.input.password.toggle_hidden"), onClick: handleClick2, size: "large" }, visible ? React415.createElement(import_Visibility.default, null) : React415.createElement(import_VisibilityOff.default, null))
    )
  } }, rest));
};

// node_modules/ra-ui-materialui/dist/esm/input/RadioButtonGroupInput.js
var React417 = __toESM(require_react());
var import_prop_types266 = __toESM(require_prop_types());
var import_get8 = __toESM(require_get());

// node_modules/ra-ui-materialui/dist/esm/input/RadioButtonGroupInputItem.js
var React416 = __toESM(require_react());
var RadioButtonGroupInputItem = function(_a13) {
  var choice = _a13.choice, optionText = _a13.optionText, optionValue = _a13.optionValue, source = _a13.source, translateChoice = _a13.translateChoice;
  var _b = useChoices({
    optionText,
    optionValue,
    translateChoice
  }), getChoiceText = _b.getChoiceText, getChoiceValue = _b.getChoiceValue;
  var label = getChoiceText(choice);
  var value = getChoiceValue(choice);
  var nodeId = "".concat(source, "_").concat(value);
  return React416.createElement(FormControlLabel_default, { label, htmlFor: nodeId, value, control: React416.createElement(Radio_default, { id: nodeId, color: "primary" }) });
};

// node_modules/ra-ui-materialui/dist/esm/input/RadioButtonGroupInput.js
var __assign91 = function() {
  __assign91 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign91.apply(this, arguments);
};
var __rest84 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var RadioButtonGroupInput = function(props) {
  var choicesProp = props.choices, className = props.className, format = props.format, helperText = props.helperText, isFetchingProp = props.isFetching, isLoadingProp = props.isLoading, label = props.label, _a13 = props.margin, margin2 = _a13 === void 0 ? "dense" : _a13, onBlur = props.onBlur, onChange = props.onChange, _b = props.options, options = _b === void 0 ? defaultOptions3 : _b, _c = props.optionText, optionText = _c === void 0 ? "name" : _c, _d = props.optionValue, optionValue = _d === void 0 ? "id" : _d, parse2 = props.parse, resourceProp = props.resource, _e = props.row, row = _e === void 0 ? true : _e, sourceProp = props.source, translateChoice = props.translateChoice, validate = props.validate, rest = __rest84(props, ["choices", "className", "format", "helperText", "isFetching", "isLoading", "label", "margin", "onBlur", "onChange", "options", "optionText", "optionValue", "parse", "resource", "row", "source", "translateChoice", "validate"]);
  var _f = useChoicesContext({
    choices: choicesProp,
    isFetching: isFetchingProp,
    isLoading: isLoadingProp,
    resource: resourceProp,
    source: sourceProp
  }), allChoices = _f.allChoices, isLoading = _f.isLoading, fetchError = _f.error, resource = _f.resource, source = _f.source, isFromReference = _f.isFromReference;
  if (source === void 0) {
    throw new Error("If you're not wrapping the RadioButtonGroupInput inside a ReferenceArrayInput, you must provide the source prop");
  }
  if (!isLoading && !fetchError && allChoices === void 0) {
    throw new Error("If you're not wrapping the RadioButtonGroupInput inside a ReferenceArrayInput, you must provide the choices prop");
  }
  var _g = useInput(__assign91({ format, onBlur, onChange, parse: parse2, resource, source, validate }, rest)), id = _g.id, isRequired2 = _g.isRequired, fieldState = _g.fieldState, field = _g.field, formState = _g.formState;
  var error = fieldState.error, invalid = fieldState.invalid, isTouched = fieldState.isTouched;
  var isSubmitted = formState.isSubmitted;
  if (isLoading) {
    return React417.createElement(
      Labeled,
      { htmlFor: id, label, source, resource, className: clsx_m_default("ra-input", "ra-input-".concat(source), className), isRequired: isRequired2 },
      React417.createElement(LinearProgress3, null)
    );
  }
  var renderHelperText = !!fetchError || helperText !== false || (isTouched || isSubmitted) && invalid;
  return React417.createElement(
    StyledFormControl2,
    __assign91({ component: "fieldset", className: clsx_m_default("ra-input", "ra-input-".concat(source), className), margin: margin2, error: fetchError || (isTouched || isSubmitted) && invalid }, sanitizeRestProps17(rest)),
    React417.createElement(
      FormLabel_default,
      { component: "legend", className: RadioButtonGroupInputClasses.label },
      React417.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 })
    ),
    React417.createElement(RadioGroup_default, __assign91({ id, row }, field, options, sanitizeRestProps17(rest)), allChoices === null || allChoices === void 0 ? void 0 : allChoices.map(function(choice) {
      return React417.createElement(RadioButtonGroupInputItem, { key: (0, import_get8.default)(choice, optionValue), choice, optionText, optionValue, source: id, translateChoice: translateChoice !== null && translateChoice !== void 0 ? translateChoice : !isFromReference });
    })),
    renderHelperText ? React417.createElement(
      FormHelperText_default,
      null,
      React417.createElement(InputHelperText, { touched: isTouched || isSubmitted || fetchError, error: (error === null || error === void 0 ? void 0 : error.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message), helperText })
    ) : null
  );
};
RadioButtonGroupInput.propTypes = {
  choices: import_prop_types266.default.arrayOf(import_prop_types266.default.any),
  label: import_prop_types266.default.oneOfType([
    import_prop_types266.default.string,
    import_prop_types266.default.bool,
    import_prop_types266.default.element
  ]),
  options: import_prop_types266.default.object,
  optionText: import_prop_types266.default.oneOfType([
    import_prop_types266.default.string,
    import_prop_types266.default.func,
    import_prop_types266.default.element
  ]),
  optionValue: import_prop_types266.default.string,
  resource: import_prop_types266.default.string,
  source: import_prop_types266.default.string,
  translateChoice: import_prop_types266.default.bool
};
var sanitizeRestProps17 = function(_a13) {
  var afterSubmit = _a13.afterSubmit, allowNull = _a13.allowNull, beforeSubmit = _a13.beforeSubmit, choices2 = _a13.choices, className = _a13.className, crudGetMatching = _a13.crudGetMatching, crudGetOne = _a13.crudGetOne, data = _a13.data, filter = _a13.filter, filterToQuery = _a13.filterToQuery, formatOnBlur = _a13.formatOnBlur, isEqual9 = _a13.isEqual, limitChoicesToValue = _a13.limitChoicesToValue, multiple = _a13.multiple, name = _a13.name, pagination = _a13.pagination, perPage = _a13.perPage, ref = _a13.ref, reference2 = _a13.reference, refetch = _a13.refetch, render = _a13.render, setFilter = _a13.setFilter, setPagination = _a13.setPagination, setSort = _a13.setSort, sort = _a13.sort, subscription = _a13.subscription, type = _a13.type, validateFields = _a13.validateFields, validation = _a13.validation, value = _a13.value, rest = __rest84(_a13, ["afterSubmit", "allowNull", "beforeSubmit", "choices", "className", "crudGetMatching", "crudGetOne", "data", "filter", "filterToQuery", "formatOnBlur", "isEqual", "limitChoicesToValue", "multiple", "name", "pagination", "perPage", "ref", "reference", "refetch", "render", "setFilter", "setPagination", "setSort", "sort", "subscription", "type", "validateFields", "validation", "value"]);
  return sanitizeInputRestProps(rest);
};
var PREFIX56 = "RaRadioButtonGroupInput";
var RadioButtonGroupInputClasses = {
  label: "".concat(PREFIX56, "-label")
};
var StyledFormControl2 = styled_default2(FormControl_default, {
  name: PREFIX56,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(RadioButtonGroupInputClasses.label)] = {
    transform: "translate(0, 5px) scale(0.75)",
    transformOrigin: "top ".concat(theme.direction === "ltr" ? "left" : "right")
  }, _b;
});
var defaultOptions3 = {};

// node_modules/ra-ui-materialui/dist/esm/input/ReferenceArrayInput.js
var React418 = __toESM(require_react());
var import_prop_types267 = __toESM(require_prop_types());
var __assign92 = function() {
  __assign92 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign92.apply(this, arguments);
};
var ReferenceArrayInput = function(props) {
  var _a13 = props.children, children2 = _a13 === void 0 ? defaultChildren2 : _a13, reference2 = props.reference, sort = props.sort, _b = props.filter, filter = _b === void 0 ? defaultFilter : _b;
  if (React418.Children.count(children2) !== 1) {
    throw new Error("<ReferenceArrayInput> only accepts a single child (like <Datagrid>)");
  }
  var controllerProps = useReferenceArrayInputController(__assign92(__assign92({}, props), { sort, filter }));
  return React418.createElement(
    ResourceContextProvider,
    { value: reference2 },
    React418.createElement(ChoicesContextProvider, { value: controllerProps }, children2)
  );
};
ReferenceArrayInput.propTypes = {
  children: import_prop_types267.default.element,
  filter: import_prop_types267.default.object,
  label: import_prop_types267.default.string,
  page: import_prop_types267.default.number,
  perPage: import_prop_types267.default.number,
  reference: import_prop_types267.default.string.isRequired,
  resource: import_prop_types267.default.string,
  sort: import_prop_types267.default.shape({
    field: import_prop_types267.default.string,
    order: import_prop_types267.default.oneOf(["ASC", "DESC"])
  }),
  source: import_prop_types267.default.string
};
var defaultChildren2 = React418.createElement(AutocompleteArrayInput, null);
var defaultFilter = {};

// node_modules/ra-ui-materialui/dist/esm/input/ReferenceError.js
var React419 = __toESM(require_react());
var import_prop_types268 = __toESM(require_prop_types());
var ReferenceError2 = function(_a13) {
  var label = _a13.label, error = _a13.error;
  return React419.createElement(TextField_default, { error: true, disabled: true, label, helperText: error === null || error === void 0 ? void 0 : error.message, margin: "normal" });
};
ReferenceError2.propTypes = {
  error: import_prop_types268.default.object.isRequired,
  label: import_prop_types268.default.oneOfType([
    import_prop_types268.default.string,
    import_prop_types268.default.element,
    import_prop_types268.default.bool
  ])
};

// node_modules/ra-ui-materialui/dist/esm/input/ReferenceInput.js
var import_react101 = __toESM(require_react());
var import_prop_types269 = __toESM(require_prop_types());
var __assign93 = function() {
  __assign93 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign93.apply(this, arguments);
};
var ReferenceInput = function(props) {
  var _a13 = props.children, children2 = _a13 === void 0 ? defaultChildren3 : _a13, reference2 = props.reference, _b = props.sort, sort = _b === void 0 ? { field: "id", order: "DESC" } : _b, _c = props.filter, filter = _c === void 0 ? {} : _c;
  var controllerProps = useReferenceInputController(__assign93(__assign93({}, props), { sort, filter }));
  if (import_react101.Children.count(children2) !== 1) {
    throw new Error("<ReferenceInput> only accepts a single child");
  }
  return import_react101.default.createElement(
    ResourceContextProvider,
    { value: reference2 },
    import_react101.default.createElement(ChoicesContextProvider, { value: controllerProps }, children2)
  );
};
ReferenceInput.propTypes = {
  children: import_prop_types269.default.element,
  filter: import_prop_types269.default.object,
  label: import_prop_types269.default.string,
  page: import_prop_types269.default.number,
  perPage: import_prop_types269.default.number,
  record: import_prop_types269.default.object,
  reference: import_prop_types269.default.string.isRequired,
  resource: import_prop_types269.default.string,
  sort: import_prop_types269.default.shape({
    field: import_prop_types269.default.string,
    order: import_prop_types269.default.oneOf(["ASC", "DESC"])
  }),
  source: import_prop_types269.default.string
};
var defaultChildren3 = import_react101.default.createElement(AutocompleteInput, null);

// node_modules/ra-ui-materialui/dist/esm/input/SearchInput.js
var React421 = __toESM(require_react());
var import_Search2 = __toESM(require_Search());
var __assign94 = function() {
  __assign94 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign94.apply(this, arguments);
};
var __rest85 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SearchInput = function(props) {
  var label = props.label, rest = __rest85(props, ["label"]);
  var translate = useTranslate();
  if (label) {
    throw new Error("<SearchInput> isn't designed to be used with a label prop. Use <TextInput> if you need a label.");
  }
  return React421.createElement(StyledTextInput, __assign94({ hiddenLabel: true, label: "", resettable: true, placeholder: translate("ra.action.search"), InputProps: {
    endAdornment: React421.createElement(
      InputAdornment_default,
      { position: "end" },
      React421.createElement(import_Search2.default, { color: "disabled" })
    )
  }, size: "small" }, rest));
};
var PREFIX57 = "RaSearchInput";
var StyledTextInput = styled_default2(TextInput, {
  name: PREFIX57,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})({
  marginTop: 0
});

// node_modules/ra-ui-materialui/dist/esm/input/SelectArrayInput.js
var React422 = __toESM(require_react());
var import_react102 = __toESM(require_react());
var import_prop_types270 = __toESM(require_prop_types());
var __assign95 = function() {
  __assign95 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign95.apply(this, arguments);
};
var __rest86 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray10 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var SelectArrayInput = function(props) {
  var _a13;
  var choicesProp = props.choices, className = props.className, create2 = props.create, createLabel = props.createLabel, createValue = props.createValue, _b = props.disableValue, disableValue = _b === void 0 ? "disabled" : _b, format = props.format, helperText = props.helperText, label = props.label, isFetchingProp = props.isFetching, isLoadingProp = props.isLoading, margin2 = props.margin, onBlur = props.onBlur, onChange = props.onChange, onCreate = props.onCreate, _c = props.options, options = _c === void 0 ? defaultOptions4 : _c, _d = props.optionText, optionText = _d === void 0 ? "name" : _d, _e = props.optionValue, optionValue = _e === void 0 ? "id" : _e, parse2 = props.parse, resourceProp = props.resource, _f = props.size, size2 = _f === void 0 ? "small" : _f, sourceProp = props.source, translateChoice = props.translateChoice, validate = props.validate, variant = props.variant, rest = __rest86(props, ["choices", "className", "create", "createLabel", "createValue", "disableValue", "format", "helperText", "label", "isFetching", "isLoading", "margin", "onBlur", "onChange", "onCreate", "options", "optionText", "optionValue", "parse", "resource", "size", "source", "translateChoice", "validate", "variant"]);
  var inputLabel = (0, import_react102.useRef)(null);
  var _g = useChoicesContext({
    choices: choicesProp,
    isLoading: isLoadingProp,
    isFetching: isFetchingProp,
    resource: resourceProp,
    source: sourceProp
  }), allChoices = _g.allChoices, isLoading = _g.isLoading, fetchError = _g.error, source = _g.source, resource = _g.resource, isFromReference = _g.isFromReference;
  var _h = useChoices({
    optionText,
    optionValue,
    disableValue,
    translateChoice: translateChoice !== null && translateChoice !== void 0 ? translateChoice : !isFromReference
  }), getChoiceText = _h.getChoiceText, getChoiceValue = _h.getChoiceValue, getDisableValue = _h.getDisableValue;
  var _j = useInput(__assign95({ format, onBlur, onChange, parse: parse2, resource, source, validate }, rest)), field = _j.field, isRequired2 = _j.isRequired, _k = _j.fieldState, error = _k.error, invalid = _k.invalid, isTouched = _k.isTouched, isSubmitted = _j.formState.isSubmitted, id = _j.id;
  var handleChange = (0, import_react102.useCallback)(function(eventOrChoice) {
    if (eventOrChoice === null || eventOrChoice === void 0 ? void 0 : eventOrChoice.target) {
      eventOrChoice.target.value = eventOrChoice.target.value.reduce(function(acc, value) {
        var index2 = acc.findIndex(function(v) {
          return v == value;
        });
        return index2 < 0 ? __spreadArray10(__spreadArray10([], acc, true), [value], false) : __spreadArray10(__spreadArray10([], acc.slice(0, index2), true), acc.slice(index2 + 1), true);
      }, []);
      field.onChange(eventOrChoice);
    } else {
      field.onChange(__spreadArray10(__spreadArray10([], field.value || [], true), [
        getChoiceValue(eventOrChoice)
      ], false));
    }
  }, [field, getChoiceValue]);
  var _l = useSupportCreateSuggestion({
    create: create2,
    createLabel,
    createValue,
    handleChange,
    onCreate,
    optionText
  }), getCreateItem = _l.getCreateItem, handleChangeWithCreateSupport = _l.handleChange, createElement204 = _l.createElement;
  var createItem = create2 || onCreate ? getCreateItem() : null;
  var finalChoices = create2 || onCreate ? __spreadArray10(__spreadArray10([], allChoices || [], true), [createItem], false) : allChoices || [];
  var renderMenuItemOption = (0, import_react102.useCallback)(function(choice) {
    return !!createItem && (choice === null || choice === void 0 ? void 0 : choice.id) === createItem.id && typeof optionText === "function" ? createItem.name : getChoiceText(choice);
  }, [createItem, getChoiceText, optionText]);
  var renderMenuItem = (0, import_react102.useCallback)(function(choice) {
    return choice ? React422.createElement(MenuItem_default, { key: getChoiceValue(choice), value: getChoiceValue(choice), disabled: getDisableValue(choice) }, renderMenuItemOption(!!createItem && (choice === null || choice === void 0 ? void 0 : choice.id) === createItem.id ? createItem : choice)) : null;
  }, [getChoiceValue, getDisableValue, renderMenuItemOption, createItem]);
  if (isLoading) {
    return React422.createElement(
      Labeled,
      { label, source, resource, className: clsx_m_default("ra-input", "ra-input-".concat(source), className), isRequired: isRequired2 },
      React422.createElement(LinearProgress3, null)
    );
  }
  var finalValue = Array.isArray((_a13 = field.value) !== null && _a13 !== void 0 ? _a13 : []) ? field.value : field.value ? [field.value] : [];
  var outlinedInputProps = variant === "outlined" ? {
    input: React422.createElement(OutlinedInput_default, { id: "select-multiple-chip", label: React422.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 }) })
  } : {};
  var renderHelperText = !!fetchError || helperText !== false || (isTouched || isSubmitted) && invalid;
  return React422.createElement(
    React422.Fragment,
    null,
    React422.createElement(
      StyledFormControl3,
      __assign95({ margin: margin2, className: clsx_m_default("ra-input", "ra-input-".concat(source), className), error: fetchError || (isTouched || isSubmitted) && invalid, variant }, sanitizeRestProps18(rest)),
      React422.createElement(
        InputLabel_default,
        { ref: inputLabel, id: "".concat(id, "-outlined-label"), htmlFor: id },
        React422.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 })
      ),
      React422.createElement(Select_default, __assign95({ id, autoWidth: true, labelId: "".concat(id, "-outlined-label"), label: React422.createElement(FieldTitle_default, { label, source, resource, isRequired: isRequired2 }), multiple: true, error: !!fetchError || (isTouched || isSubmitted) && invalid, renderValue: function(selected) {
        return React422.createElement("div", { className: SelectArrayInputClasses.chips }, (Array.isArray(selected) ? selected : []).map(function(item) {
          return (allChoices || []).find(
            // eslint-disable-next-line eqeqeq
            function(choice) {
              return getChoiceValue(choice) == item;
            }
          );
        }).filter(function(item) {
          return !!item;
        }).map(function(item) {
          return React422.createElement(Chip_default, { key: getChoiceValue(item), label: renderMenuItemOption(item), className: SelectArrayInputClasses.chip, size: "small" });
        }));
      }, "data-testid": "selectArray", size: size2 }, field, options, { onChange: handleChangeWithCreateSupport, value: finalValue }, outlinedInputProps), finalChoices.map(renderMenuItem)),
      renderHelperText ? React422.createElement(
        FormHelperText_default,
        { error: fetchError || isTouched && !!error },
        React422.createElement(InputHelperText, { touched: isTouched || isSubmitted || fetchError, error: (error === null || error === void 0 ? void 0 : error.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message), helperText })
      ) : null
    ),
    createElement204
  );
};
SelectArrayInput.propTypes = {
  choices: import_prop_types270.default.arrayOf(import_prop_types270.default.object),
  className: import_prop_types270.default.string,
  children: import_prop_types270.default.node,
  label: import_prop_types270.default.oneOfType([
    import_prop_types270.default.string,
    import_prop_types270.default.bool,
    import_prop_types270.default.element
  ]),
  options: import_prop_types270.default.object,
  optionText: import_prop_types270.default.oneOfType([
    import_prop_types270.default.string,
    import_prop_types270.default.func,
    import_prop_types270.default.element
  ]),
  optionValue: import_prop_types270.default.string,
  disableValue: import_prop_types270.default.string,
  resource: import_prop_types270.default.string,
  source: import_prop_types270.default.string,
  translateChoice: import_prop_types270.default.bool
};
var sanitizeRestProps18 = function(_a13) {
  var alwaysOn = _a13.alwaysOn, choices2 = _a13.choices, classNamInputWithOptionsPropse = _a13.classNamInputWithOptionsPropse, componenInputWithOptionsPropst = _a13.componenInputWithOptionsPropst, crudGetMInputWithOptionsPropsatching = _a13.crudGetMInputWithOptionsPropsatching, crudGetOInputWithOptionsPropsne = _a13.crudGetOInputWithOptionsPropsne, defaultValue = _a13.defaultValue, disableValue = _a13.disableValue, emptyText = _a13.emptyText, enableGetChoices = _a13.enableGetChoices, filter = _a13.filter, filterToQuery = _a13.filterToQuery, formClassName = _a13.formClassName, initializeForm = _a13.initializeForm, initialValue = _a13.initialValue, input = _a13.input, isRequired2 = _a13.isRequired, label = _a13.label, limitChoicesToValue = _a13.limitChoicesToValue, loaded = _a13.loaded, locale = _a13.locale, meta = _a13.meta, onChange = _a13.onChange, options = _a13.options, optionValue = _a13.optionValue, optionText = _a13.optionText, perPage = _a13.perPage, record = _a13.record, reference2 = _a13.reference, resource = _a13.resource, setFilter = _a13.setFilter, setPagination = _a13.setPagination, setSort = _a13.setSort, sort = _a13.sort, source = _a13.source, textAlign2 = _a13.textAlign, translate = _a13.translate, translateChoice = _a13.translateChoice, validation = _a13.validation, rest = __rest86(_a13, ["alwaysOn", "choices", "classNamInputWithOptionsPropse", "componenInputWithOptionsPropst", "crudGetMInputWithOptionsPropsatching", "crudGetOInputWithOptionsPropsne", "defaultValue", "disableValue", "emptyText", "enableGetChoices", "filter", "filterToQuery", "formClassName", "initializeForm", "initialValue", "input", "isRequired", "label", "limitChoicesToValue", "loaded", "locale", "meta", "onChange", "options", "optionValue", "optionText", "perPage", "record", "reference", "resource", "setFilter", "setPagination", "setSort", "sort", "source", "textAlign", "translate", "translateChoice", "validation"]);
  return rest;
};
var PREFIX58 = "RaSelectArrayInput";
var SelectArrayInputClasses = {
  chips: "".concat(PREFIX58, "-chips"),
  chip: "".concat(PREFIX58, "-chip")
};
var StyledFormControl3 = styled_default2(FormControl_default, {
  name: PREFIX58,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    minWidth: theme.spacing(20)
  }, _b[theme.breakpoints.down("sm")] = {
    width: "100%"
  }, _b["& .".concat(SelectArrayInputClasses.chips)] = {
    display: "flex",
    flexWrap: "wrap"
  }, _b["& .".concat(SelectArrayInputClasses.chip)] = {
    marginTop: theme.spacing(0.5),
    marginRight: theme.spacing(0.5)
  }, _b;
});
var defaultOptions4 = {};

// node_modules/ra-ui-materialui/dist/esm/input/SelectInput.js
var React423 = __toESM(require_react());
var import_react103 = __toESM(require_react());
var import_react_is15 = __toESM(require_react_is());
var import_prop_types271 = __toESM(require_prop_types());
var __assign96 = function() {
  __assign96 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign96.apply(this, arguments);
};
var __awaiter8 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator8 = function(thisArg, body2) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_5 = 0)), _5)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __rest87 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray11 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var SelectInput3 = function(props) {
  var choicesProp = props.choices, className = props.className, create2 = props.create, createLabel = props.createLabel, createValue = props.createValue, defaultValue = props.defaultValue, _a13 = props.disableValue, disableValue = _a13 === void 0 ? "disabled" : _a13, _b = props.emptyText, emptyText = _b === void 0 ? "" : _b, _c = props.emptyValue, emptyValue = _c === void 0 ? "" : _c, format = props.format, filter = props.filter, helperText = props.helperText, isFetchingProp = props.isFetching, isLoadingProp = props.isLoading, label = props.label, _d = props.margin, margin2 = _d === void 0 ? "dense" : _d, onBlur = props.onBlur, onChange = props.onChange, onCreate = props.onCreate, optionText = props.optionText, optionValue = props.optionValue, parse2 = props.parse, resourceProp = props.resource, sourceProp = props.source, translateChoice = props.translateChoice, validate = props.validate, rest = __rest87(props, ["choices", "className", "create", "createLabel", "createValue", "defaultValue", "disableValue", "emptyText", "emptyValue", "format", "filter", "helperText", "isFetching", "isLoading", "label", "margin", "onBlur", "onChange", "onCreate", "optionText", "optionValue", "parse", "resource", "source", "translateChoice", "validate"]);
  var translate = useTranslate();
  (0, import_react103.useEffect)(function() {
    if (emptyValue == null) {
      throw new Error("emptyValue being set to null or undefined is not supported. Use parse to turn the empty string into null.");
    }
  }, [emptyValue]);
  var _e = useChoicesContext({
    choices: choicesProp,
    isLoading: isLoadingProp,
    isFetching: isFetchingProp,
    resource: resourceProp,
    source: sourceProp
  }), allChoices = _e.allChoices, isLoading = _e.isLoading, fetchError = _e.error, source = _e.source, resource = _e.resource, isFromReference = _e.isFromReference;
  if (source === void 0) {
    throw new Error("If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the source prop");
  }
  if (!isLoading && !fetchError && allChoices === void 0) {
    throw new Error("If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the choices prop");
  }
  var getRecordRepresentation = useGetRecordRepresentation(resource);
  var _f = useChoices({
    optionText: optionText !== null && optionText !== void 0 ? optionText : isFromReference ? getRecordRepresentation : void 0,
    optionValue,
    disableValue,
    translateChoice: translateChoice !== null && translateChoice !== void 0 ? translateChoice : !isFromReference
  }), getChoiceText = _f.getChoiceText, getChoiceValue = _f.getChoiceValue, getDisableValue = _f.getDisableValue;
  var _g = useInput(__assign96({ defaultValue, parse: parse2, format, onBlur, onChange, resource, source, validate }, rest)), field = _g.field, fieldState = _g.fieldState, id = _g.id, isRequired2 = _g.isRequired, isSubmitted = _g.formState.isSubmitted;
  var error = fieldState.error, invalid = fieldState.invalid, isTouched = fieldState.isTouched;
  var renderEmptyItemOption = (0, import_react103.useCallback)(function() {
    return (0, import_react_is15.isElement)(emptyText) ? emptyText : emptyText === "" ? " " : translate(emptyText, { _: emptyText });
  }, [emptyText, translate]);
  var renderMenuItemOption = (0, import_react103.useCallback)(function(choice) {
    return getChoiceText(choice);
  }, [
    getChoiceText
  ]);
  var handleChange = (0, import_react103.useCallback)(function(eventOrChoice) {
    return __awaiter8(void 0, void 0, void 0, function() {
      return __generator8(this, function(_a14) {
        if (eventOrChoice === null || eventOrChoice === void 0 ? void 0 : eventOrChoice.target) {
          field.onChange(eventOrChoice);
        } else {
          field.onChange(getChoiceValue(eventOrChoice));
        }
        return [
          2
          /*return*/
        ];
      });
    });
  }, [field, getChoiceValue]);
  var _h = useSupportCreateSuggestion({
    create: create2,
    createLabel,
    createValue,
    handleChange,
    onCreate,
    optionText
  }), getCreateItem = _h.getCreateItem, handleChangeWithCreateSupport = _h.handleChange, createElement204 = _h.createElement;
  var createItem = create2 || onCreate ? getCreateItem() : null;
  var finalChoices = allChoices;
  if (create2 || onCreate) {
    finalChoices = __spreadArray11(__spreadArray11([], finalChoices, true), [createItem], false);
  }
  var renderMenuItem = (0, import_react103.useCallback)(function(choice) {
    return choice ? React423.createElement(MenuItem_default, { key: getChoiceValue(choice), value: getChoiceValue(choice), disabled: getDisableValue(choice) }, renderMenuItemOption(!!createItem && (choice === null || choice === void 0 ? void 0 : choice.id) === createItem.id ? createItem : choice)) : null;
  }, [getChoiceValue, getDisableValue, renderMenuItemOption, createItem]);
  if (isLoading) {
    return React423.createElement(LoadingInput, { label: label !== "" && label !== false && React423.createElement(FieldTitle_default, { label, source, resource: resourceProp, isRequired: isRequired2 }), sx: props.sx, helperText: React423.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText }), variant: props.variant, size: props.size, margin: props.margin, fullWidth: props.fullWidth });
  }
  var renderHelperText = !!fetchError || helperText !== false || (isTouched || isSubmitted) && invalid;
  return React423.createElement(
    React423.Fragment,
    null,
    React423.createElement(
      StyledResettableTextField2,
      __assign96({ id }, field, { className: clsx_m_default("ra-input", "ra-input-".concat(source), className), onChange: handleChangeWithCreateSupport, select: true, label: label !== "" && label !== false && React423.createElement(FieldTitle_default, { label, source, resource: resourceProp, isRequired: isRequired2 }), clearAlwaysVisible: true, error: !!fetchError || (isTouched || isSubmitted) && invalid, helperText: renderHelperText ? React423.createElement(InputHelperText, { touched: isTouched || isSubmitted || fetchError, error: (error === null || error === void 0 ? void 0 : error.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message), helperText }) : null, margin: margin2 }, sanitizeRestProps19(rest)),
      !isRequired2 && React423.createElement(MenuItem_default, { value: emptyValue, key: "null", "aria-label": translate("ra.action.clear_input_value"), title: translate("ra.action.clear_input_value") }, renderEmptyItemOption()),
      finalChoices.map(renderMenuItem)
    ),
    createElement204
  );
};
SelectInput3.propTypes = {
  emptyText: import_prop_types271.default.oneOfType([import_prop_types271.default.string, import_prop_types271.default.element]),
  emptyValue: import_prop_types271.default.any,
  choices: import_prop_types271.default.arrayOf(import_prop_types271.default.object),
  className: import_prop_types271.default.string,
  label: import_prop_types271.default.oneOfType([
    import_prop_types271.default.string,
    import_prop_types271.default.bool,
    import_prop_types271.default.element
  ]),
  optionText: import_prop_types271.default.oneOfType([
    import_prop_types271.default.string,
    import_prop_types271.default.func,
    import_prop_types271.default.element
  ]),
  optionValue: import_prop_types271.default.string,
  disableValue: import_prop_types271.default.string,
  resettable: import_prop_types271.default.bool,
  resource: import_prop_types271.default.string,
  source: import_prop_types271.default.string,
  translateChoice: import_prop_types271.default.bool
};
var sanitizeRestProps19 = function(_a13) {
  var afterSubmit = _a13.afterSubmit, allowNull = _a13.allowNull, beforeSubmit = _a13.beforeSubmit, choices2 = _a13.choices, className = _a13.className, crudGetMatching = _a13.crudGetMatching, crudGetOne = _a13.crudGetOne, data = _a13.data, field = _a13.field, fieldState = _a13.fieldState, formState = _a13.formState, filter = _a13.filter, filterToQuery = _a13.filterToQuery, formatOnBlur = _a13.formatOnBlur, isEqual9 = _a13.isEqual, limitChoicesToValue = _a13.limitChoicesToValue, multiple = _a13.multiple, name = _a13.name, pagination = _a13.pagination, perPage = _a13.perPage, ref = _a13.ref, reference2 = _a13.reference, refetch = _a13.refetch, render = _a13.render, setFilter = _a13.setFilter, setPagination = _a13.setPagination, setSort = _a13.setSort, shouldUnregister = _a13.shouldUnregister, sort = _a13.sort, subscription = _a13.subscription, type = _a13.type, validateFields = _a13.validateFields, validation = _a13.validation, value = _a13.value, rest = __rest87(_a13, ["afterSubmit", "allowNull", "beforeSubmit", "choices", "className", "crudGetMatching", "crudGetOne", "data", "field", "fieldState", "formState", "filter", "filterToQuery", "formatOnBlur", "isEqual", "limitChoicesToValue", "multiple", "name", "pagination", "perPage", "ref", "reference", "refetch", "render", "setFilter", "setPagination", "setSort", "shouldUnregister", "sort", "subscription", "type", "validateFields", "validation", "value"]);
  return sanitizeInputRestProps(rest);
};
var PREFIX59 = "RaSelectInput";
var StyledResettableTextField2 = styled_default2(ResettableTextField, {
  name: PREFIX59,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return __assign96(__assign96({}, ResettableTextFieldStyles), { minWidth: theme.spacing(20), "& .MuiFilledInput-root": { paddingRight: 0 } });
});

// node_modules/ra-ui-materialui/dist/esm/input/TranslatableInputs.js
var React427 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/input/TranslatableInputsTabs.js
var React425 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/input/TranslatableInputsTab.js
var import_react104 = __toESM(require_react());
var import_inflection5 = __toESM(require_inflection());
var __assign97 = function() {
  __assign97 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign97.apply(this, arguments);
};
var __rest88 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TranslatableInputsTab = function(props) {
  var _a13;
  var _b = props.groupKey, groupKey = _b === void 0 ? "" : _b, locale = props.locale, rest = __rest88(props, ["groupKey", "locale"]);
  var _c = useFormGroup("".concat(groupKey).concat(locale)), isValid = _c.isValid, isTouched = _c.isTouched;
  var translate = useTranslate();
  return import_react104.default.createElement(StyledTab, __assign97({ id: "translatable-header-".concat(groupKey).concat(locale), label: translate("ra.locales.".concat(locale), {
    _: (0, import_inflection5.capitalize)(locale)
  }), className: clsx_m_default(TranslatableInputsTabClasses.root, (_a13 = {}, _a13[TranslatableInputsTabClasses.error] = !isValid && isTouched, _a13)) }, rest));
};
var PREFIX60 = "RaTranslatableInputsTab";
var TranslatableInputsTabClasses = {
  root: "".concat(PREFIX60, "-root"),
  error: "".concat(PREFIX60, "-error")
};
var StyledTab = styled_default2(Tab_default, { name: PREFIX60 })(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["&.".concat(TranslatableInputsTabClasses.root)] = {
    fontSize: "0.8em",
    minHeight: theme.spacing(3),
    minWidth: theme.spacing(6)
  }, _b["&.".concat(TranslatableInputsTabClasses.error)] = {
    color: theme.palette.error.main
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/input/TranslatableInputsTabs.js
var __assign98 = function() {
  __assign98 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign98.apply(this, arguments);
};
var TranslatableInputsTabs = function(props) {
  var groupKey = props.groupKey, tabsProps = props.TabsProps;
  var _a13 = useTranslatableContext(), locales = _a13.locales, selectLocale = _a13.selectLocale, selectedLocale = _a13.selectedLocale;
  var handleChange = function(event, newLocale) {
    selectLocale(newLocale);
  };
  return React425.createElement(
    StyledAppBar2,
    { color: "default", position: "static", className: TranslatableInputsTabsClasses.root },
    React425.createElement(Tabs_default, __assign98({ value: selectedLocale, onChange: handleChange, indicatorColor: "primary", textColor: "primary", className: TranslatableInputsTabsClasses.tabs }, tabsProps), locales.map(function(locale) {
      return React425.createElement(TranslatableInputsTab, { key: locale, value: locale, locale, groupKey });
    }))
  );
};
var PREFIX61 = "RaTranslatableInputsTabs";
var TranslatableInputsTabsClasses = {
  root: "".concat(PREFIX61, "-root"),
  tabs: "".concat(PREFIX61, "-tabs")
};
var StyledAppBar2 = styled_default2(AppBar_default, { name: PREFIX61 })(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["&.".concat(TranslatableInputsTabsClasses.root)] = {
    boxShadow: "none",
    borderRadius: 0,
    borderTopLeftRadius: theme.shape.borderRadius,
    borderTopRightRadius: theme.shape.borderRadius,
    border: "1px solid ".concat(theme.palette.divider)
  }, _b["& .".concat(TranslatableInputsTabsClasses.tabs)] = {
    minHeight: theme.spacing(3)
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/input/TranslatableInputsTabContent.js
var React426 = __toESM(require_react());
var import_react105 = __toESM(require_react());
var __assign99 = function() {
  __assign99 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign99.apply(this, arguments);
};
var __rest89 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TranslatableInputsTabContent = function(props) {
  var _a13;
  var children2 = props.children, _b = props.groupKey, groupKey = _b === void 0 ? "" : _b, locale = props.locale, other = __rest89(props, ["children", "groupKey", "locale"]);
  var _c = useTranslatableContext(), selectedLocale = _c.selectedLocale, getLabel = _c.getLabel, getSource = _c.getSource;
  return React426.createElement(
    FormGroupContextProvider,
    { name: "".concat(groupKey).concat(locale) },
    React426.createElement(Root22, __assign99({ role: "tabpanel", id: "translatable-content-".concat(groupKey).concat(locale), "aria-labelledby": "translatable-header-".concat(groupKey).concat(locale), className: clsx_m_default(TranslatableInputsTabContentClasses.root, (_a13 = {}, _a13[TranslatableInputsTabContentClasses.hidden] = selectedLocale !== locale, _a13)) }, other), import_react105.Children.map(children2, function(child) {
      return (0, import_react105.isValidElement)(child) ? (0, import_react105.cloneElement)(child, __assign99(__assign99({}, child.props), { label: getLabel(child.props.source, child.props.label), source: getSource(child.props.source, locale) })) : null;
    }))
  );
};
var PREFIX62 = "RaTranslatableInputsTabContent";
var TranslatableInputsTabContentClasses = {
  root: "".concat(PREFIX62, "-root"),
  hidden: "".concat(PREFIX62, "-hidden")
};
var Root22 = styled_default2(Stack_default2, { name: PREFIX62 })(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["&.".concat(TranslatableInputsTabContentClasses.root)] = {
    flexGrow: 1,
    paddingLeft: theme.spacing(2),
    paddingRight: theme.spacing(2),
    paddingTop: theme.spacing(1),
    paddingBottom: theme.spacing(1),
    borderRadius: 0,
    borderBottomLeftRadius: theme.shape.borderRadius,
    borderBottomRightRadius: theme.shape.borderRadius,
    border: "1px solid ".concat(theme.palette.divider),
    borderTop: 0
  }, _b["&.".concat(TranslatableInputsTabContentClasses.hidden)] = {
    display: "none"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/input/TranslatableInputs.js
var __assign100 = function() {
  __assign100 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign100.apply(this, arguments);
};
var TranslatableInputs = function(props) {
  var _a13;
  var className = props.className, defaultLocale = props.defaultLocale, fullWidth = props.fullWidth, locales = props.locales, _b = props.groupKey, groupKey = _b === void 0 ? "" : _b, _c = props.selector, selector = _c === void 0 ? React427.createElement(TranslatableInputsTabs, { groupKey }) : _c, children2 = props.children, margin2 = props.margin, sx = props.sx, _d = props.StackProps, StackProps = _d === void 0 ? {} : _d;
  var context = useTranslatable({ defaultLocale, locales });
  return React427.createElement(
    Root23,
    { className: clsx_m_default(className, TranslatableInputsClasses.root, (_a13 = {}, _a13[TranslatableInputsClasses.fullWidth] = fullWidth, _a13)), sx },
    React427.createElement(
      TranslatableContextProvider,
      { value: context },
      selector,
      locales.map(function(locale) {
        return React427.createElement(TranslatableInputsTabContent, __assign100({ key: locale, locale, groupKey, margin: margin2 }, StackProps), children2);
      })
    )
  );
};
var PREFIX63 = "RaTranslatableInputs";
var TranslatableInputsClasses = {
  root: "".concat(PREFIX63, "-root"),
  fullWidth: "".concat(PREFIX63, "-fullWidth")
};
var Root23 = styled_default2("div", {
  name: PREFIX63,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    flexGrow: 1,
    marginTop: theme.spacing(1),
    marginBottom: theme.spacing(0.5)
  }, _b["&.".concat(TranslatableInputsClasses.fullWidth)] = {
    width: "100%"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/auth/LoginForm.js
var LoginForm = function(props) {
  var redirectTo = props.redirectTo, className = props.className;
  var _a13 = useSafeSetState(false), loading = _a13[0], setLoading = _a13[1];
  var login = useLogin_default();
  var translate = useTranslate();
  var notify = useNotify();
  var submit = function(values3) {
    setLoading(true);
    login(values3, redirectTo).then(function() {
      setLoading(false);
    }).catch(function(error) {
      setLoading(false);
      notify(typeof error === "string" ? error : typeof error === "undefined" || !error.message ? "ra.auth.sign_in_error" : error.message, {
        type: "error",
        messageArgs: {
          _: typeof error === "string" ? error : error && error.message ? error.message : void 0
        }
      });
    });
  };
  return React428.createElement(
    StyledForm2,
    { onSubmit: submit, mode: "onChange", noValidate: true, className },
    React428.createElement(
      CardContent_default,
      { className: LoginFormClasses.content },
      React428.createElement(TextInput, { autoFocus: true, source: "username", label: translate("ra.auth.username"), autoComplete: "username", validate: required(), fullWidth: true }),
      React428.createElement(TextInput, { source: "password", label: translate("ra.auth.password"), type: "password", autoComplete: "current-password", validate: required(), fullWidth: true }),
      React428.createElement(Button_default, { variant: "contained", type: "submit", color: "primary", disabled: loading, fullWidth: true, className: LoginFormClasses.button }, loading ? React428.createElement(CircularProgress_default, { className: LoginFormClasses.icon, size: 19, thickness: 3 }) : translate("ra.auth.sign_in"))
    )
  );
};
var PREFIX64 = "RaLoginForm";
var LoginFormClasses = {
  content: "".concat(PREFIX64, "-content"),
  button: "".concat(PREFIX64, "-button"),
  icon: "".concat(PREFIX64, "-icon")
};
var StyledForm2 = styled_default2(Form, {
  name: PREFIX64,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(LoginFormClasses.content)] = {
    width: 300
  }, _b["& .".concat(LoginFormClasses.button)] = {
    marginTop: theme.spacing(2)
  }, _b["& .".concat(LoginFormClasses.icon)] = {
    margin: theme.spacing(0.3)
  }, _b;
});
LoginForm.propTypes = {
  redirectTo: import_prop_types272.default.string
};

// node_modules/ra-ui-materialui/dist/esm/auth/Login.js
var __assign101 = function() {
  __assign101 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign101.apply(this, arguments);
};
var __rest90 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Login = function(props) {
  var _a13 = props.children, children2 = _a13 === void 0 ? defaultLoginForm : _a13, backgroundImage = props.backgroundImage, rest = __rest90(props, ["children", "backgroundImage"]);
  var containerRef = (0, import_react106.useRef)();
  var backgroundImageLoaded = false;
  var checkAuth = useCheckAuth();
  var navigate = useNavigate();
  (0, import_react106.useEffect)(function() {
    checkAuth({}, false).then(function() {
      navigate("/");
    }).catch(function() {
    });
  }, [checkAuth, navigate]);
  var updateBackgroundImage = function() {
    if (!backgroundImageLoaded && containerRef.current) {
      containerRef.current.style.backgroundImage = "url(".concat(backgroundImage, ")");
      backgroundImageLoaded = true;
    }
  };
  var lazyLoadBackgroundImage = function() {
    if (backgroundImage) {
      var img = new Image();
      img.onload = updateBackgroundImage;
      img.src = backgroundImage;
    }
  };
  (0, import_react106.useEffect)(function() {
    if (!backgroundImageLoaded) {
      lazyLoadBackgroundImage();
    }
  });
  return React429.createElement(
    Root24,
    __assign101({}, rest, { ref: containerRef }),
    React429.createElement(
      Card_default,
      { className: LoginClasses.card },
      React429.createElement(
        "div",
        { className: LoginClasses.avatar },
        React429.createElement(
          Avatar_default,
          { className: LoginClasses.icon },
          React429.createElement(import_Lock2.default, null)
        )
      ),
      children2
    )
  );
};
var defaultLoginForm = React429.createElement(LoginForm, null);
var PREFIX65 = "RaLogin";
var LoginClasses = {
  card: "".concat(PREFIX65, "-card"),
  avatar: "".concat(PREFIX65, "-avatar"),
  icon: "".concat(PREFIX65, "-icon")
};
var Root24 = styled_default2("div", {
  name: PREFIX65,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    flexDirection: "column",
    minHeight: "100vh",
    height: "1px",
    alignItems: "center",
    justifyContent: "flex-start",
    backgroundRepeat: "no-repeat",
    backgroundSize: "cover",
    backgroundImage: "radial-gradient(circle at 50% 14em, #313264 0%, #00023b 60%, #00023b 100%)"
  }, _b["& .".concat(LoginClasses.card)] = {
    minWidth: 300,
    marginTop: "6em"
  }, _b["& .".concat(LoginClasses.avatar)] = {
    margin: "1em",
    display: "flex",
    justifyContent: "center"
  }, _b["& .".concat(LoginClasses.icon)] = {
    backgroundColor: theme.palette.secondary[500]
  }, _b;
});
Login.propTypes = {
  backgroundImage: import_prop_types273.default.string,
  children: import_prop_types273.default.node,
  className: import_prop_types273.default.string
};

// node_modules/ra-ui-materialui/dist/esm/defaultTheme.js
var __assign102 = function() {
  __assign102 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign102.apply(this, arguments);
};
var defaultThemeInvariants = {
  typography: {
    h6: {
      fontWeight: 400
    }
  },
  sidebar: {
    width: 240,
    closedWidth: 50
  },
  components: {
    MuiAutocomplete: {
      variants: [
        {
          props: {},
          style: function(_a13) {
            var _b;
            var theme = _a13.theme;
            return _b = {}, _b[theme.breakpoints.down("sm")] = { width: "100%" }, _b;
          }
        }
      ]
    },
    MuiTextField: {
      defaultProps: {
        variant: "filled",
        margin: "dense",
        size: "small"
      },
      variants: [
        {
          props: {},
          style: function(_a13) {
            var _b;
            var theme = _a13.theme;
            return _b = {}, _b[theme.breakpoints.down("sm")] = { width: "100%" }, _b;
          }
        }
      ]
    },
    MuiFormControl: {
      defaultProps: {
        variant: "filled",
        margin: "dense",
        size: "small"
      }
    }
  }
};
var defaultLightTheme = __assign102(__assign102({ palette: {
  background: {
    default: "#fafafb"
  },
  secondary: {
    light: "#6ec6ff",
    main: "#2196f3",
    dark: "#0069c0",
    contrastText: "#fff"
  }
} }, defaultThemeInvariants), { components: __assign102(__assign102({}, defaultThemeInvariants.components), { MuiFilledInput: {
  styleOverrides: {
    root: {
      backgroundColor: "rgba(0, 0, 0, 0.04)",
      "&$disabled": {
        backgroundColor: "rgba(0, 0, 0, 0.04)"
      }
    }
  }
} }) });
var defaultDarkTheme = __assign102({ palette: {
  mode: "dark",
  primary: {
    main: "#90caf9"
  },
  background: {
    default: "#313131"
  }
} }, defaultThemeInvariants);
var defaultTheme7 = defaultLightTheme;

// node_modules/ra-ui-materialui/dist/esm/detail/Create.js
var React431 = __toESM(require_react());
var import_prop_types275 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/detail/CreateView.js
var React430 = __toESM(require_react());
var import_prop_types274 = __toESM(require_prop_types());
var __assign103 = function() {
  __assign103 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign103.apply(this, arguments);
};
var __rest91 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var CreateView = function(props) {
  var _a13;
  var actions = props.actions, aside = props.aside, children2 = props.children, className = props.className, _b = props.component, Content = _b === void 0 ? Card_default : _b, title = props.title, rest = __rest91(props, ["actions", "aside", "children", "className", "component", "title"]);
  var _c = useCreateContext(props), resource = _c.resource, defaultTitle = _c.defaultTitle;
  return React430.createElement(
    Root25,
    __assign103({ className: clsx_m_default("create-page", className) }, sanitizeRestProps20(rest)),
    React430.createElement(Title, { title, defaultTitle, preferenceKey: "".concat(resource, ".create.title") }),
    actions,
    React430.createElement(
      "div",
      { className: clsx_m_default(CreateClasses.main, (_a13 = {}, _a13[CreateClasses.noActions] = !actions, _a13)) },
      React430.createElement(Content, { className: CreateClasses.card }, children2),
      aside
    )
  );
};
CreateView.propTypes = {
  actions: import_prop_types274.default.oneOfType([import_prop_types274.default.element, import_prop_types274.default.bool]),
  aside: import_prop_types274.default.element,
  children: import_prop_types274.default.node,
  className: import_prop_types274.default.string,
  defaultTitle: import_prop_types274.default.any,
  hasList: import_prop_types274.default.bool,
  hasShow: import_prop_types274.default.bool,
  mutationOptions: import_prop_types274.default.object,
  record: import_prop_types274.default.object,
  redirect: import_prop_types274.default.oneOfType([
    import_prop_types274.default.string,
    import_prop_types274.default.bool,
    import_prop_types274.default.func
  ]),
  resource: import_prop_types274.default.string,
  save: import_prop_types274.default.func,
  title: import_prop_types274.default.node
};
var sanitizeRestProps20 = function(_a13) {
  var _b = _a13.addMiddleware, addMiddleware = _b === void 0 ? null : _b, _c = _a13.defaultTitle, defaultTitle = _c === void 0 ? null : _c, _d = _a13.hasCreate, hasCreate = _d === void 0 ? null : _d, _e = _a13.hasEdit, hasEdit = _e === void 0 ? null : _e, _f = _a13.hasList, hasList = _f === void 0 ? null : _f, _g = _a13.hasShow, hasShow = _g === void 0 ? null : _g, _h = _a13.history, history = _h === void 0 ? null : _h, _j = _a13.isFetching, isFetching = _j === void 0 ? null : _j, _k = _a13.isLoading, isLoading = _k === void 0 ? null : _k, _l = _a13.location, location = _l === void 0 ? null : _l, _m = _a13.match, match2 = _m === void 0 ? null : _m, _o = _a13.mutationOptions, mutationOptions = _o === void 0 ? null : _o, _p = _a13.options, options = _p === void 0 ? null : _p, _q = _a13.permissions, permissions = _q === void 0 ? null : _q, _r = _a13.save, save = _r === void 0 ? null : _r, _s = _a13.saving, saving = _s === void 0 ? null : _s, _t8 = _a13.transform, transform = _t8 === void 0 ? null : _t8, _u = _a13.removeMiddleware, removeMiddleware = _u === void 0 ? null : _u, rest = __rest91(_a13, ["addMiddleware", "defaultTitle", "hasCreate", "hasEdit", "hasList", "hasShow", "history", "isFetching", "isLoading", "location", "match", "mutationOptions", "options", "permissions", "save", "saving", "transform", "removeMiddleware"]);
  return rest;
};
var PREFIX66 = "RaCreate";
var CreateClasses = {
  main: "".concat(PREFIX66, "-main"),
  noActions: "".concat(PREFIX66, "-noActions"),
  card: "".concat(PREFIX66, "-card")
};
var Root25 = styled_default2("div", {
  name: PREFIX66,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b, _c;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(CreateClasses.main)] = {
    display: "flex"
  }, _b["& .".concat(CreateClasses.noActions)] = (_c = {}, _c[theme.breakpoints.up("sm")] = {
    marginTop: "1em"
  }, _c), _b["& .".concat(CreateClasses.card)] = {
    flex: "1 1 auto"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/detail/Create.js
var __assign104 = function() {
  __assign104 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign104.apply(this, arguments);
};
var __rest92 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Create = function(props) {
  useCheckMinimumRequiredProps("Create", ["children"], props);
  var resource = props.resource, record = props.record, redirect = props.redirect, transform = props.transform, mutationOptions = props.mutationOptions, disableAuthentication = props.disableAuthentication, hasEdit = props.hasEdit, hasShow = props.hasShow, rest = __rest92(props, ["resource", "record", "redirect", "transform", "mutationOptions", "disableAuthentication", "hasEdit", "hasShow"]);
  return React431.createElement(
    CreateBase,
    { resource, record, redirect, transform, mutationOptions, disableAuthentication, hasEdit, hasShow },
    React431.createElement(CreateView, __assign104({}, rest))
  );
};
Create.propTypes = {
  actions: import_prop_types275.default.oneOfType([import_prop_types275.default.element, import_prop_types275.default.bool]),
  aside: import_prop_types275.default.element,
  children: import_prop_types275.default.node,
  className: import_prop_types275.default.string,
  disableAuthentication: import_prop_types275.default.bool,
  hasEdit: import_prop_types275.default.bool,
  hasShow: import_prop_types275.default.bool,
  redirect: import_prop_types275.default.oneOfType([
    import_prop_types275.default.string,
    import_prop_types275.default.bool,
    import_prop_types275.default.func
  ]),
  resource: import_prop_types275.default.string,
  title: import_prop_types275.default.node,
  record: import_prop_types275.default.object,
  mutationOptions: import_prop_types275.default.object,
  transform: import_prop_types275.default.func,
  sx: import_prop_types275.default.any
};

// node_modules/ra-ui-materialui/dist/esm/detail/CreateActions.js
var React432 = __toESM(require_react());
var import_prop_types276 = __toESM(require_prop_types());
var __assign105 = function() {
  __assign105 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign105.apply(this, arguments);
};
var __rest93 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var CreateActions = function(_a13) {
  var className = _a13.className, rest = __rest93(_a13, ["className"]);
  var hasList = useResourceDefinition(rest).hasList;
  return React432.createElement(TopToolbar_default, __assign105({ className }, sanitizeRestProps21(rest)), hasList && React432.createElement(ListButton, null));
};
var sanitizeRestProps21 = function(_a13) {
  var _b = _a13.className, className = _b === void 0 ? null : _b, _c = _a13.hasList, hasList = _c === void 0 ? null : _c, _d = _a13.resource, resource = _d === void 0 ? null : _d, rest = __rest93(_a13, ["className", "hasList", "resource"]);
  return rest;
};
CreateActions.propTypes = {
  className: import_prop_types276.default.string,
  hasCreate: import_prop_types276.default.bool,
  hasEdit: import_prop_types276.default.bool,
  hasShow: import_prop_types276.default.bool,
  hasList: import_prop_types276.default.bool,
  resource: import_prop_types276.default.string
};

// node_modules/ra-ui-materialui/dist/esm/detail/Edit.js
var React435 = __toESM(require_react());
var import_prop_types279 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/detail/EditView.js
var React434 = __toESM(require_react());
var import_prop_types278 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/detail/EditActions.js
var React433 = __toESM(require_react());
var import_prop_types277 = __toESM(require_prop_types());
var __assign106 = function() {
  __assign106 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign106.apply(this, arguments);
};
var __rest94 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var EditActions = function(_a13) {
  var className = _a13.className, rest = __rest94(_a13, ["className"]);
  var record = useEditContext(rest).record;
  var hasShow = useResourceDefinition(rest).hasShow;
  return React433.createElement(TopToolbar_default, __assign106({ className }, sanitizeRestProps22(rest)), hasShow && React433.createElement(ShowButton_default, { record }));
};
var sanitizeRestProps22 = function(_a13) {
  var _b = _a13.hasCreate, hasCreate = _b === void 0 ? null : _b, _c = _a13.hasEdit, hasEdit = _c === void 0 ? null : _c, _d = _a13.hasShow, hasShow = _d === void 0 ? null : _d, _e = _a13.hasList, hasList = _e === void 0 ? null : _e, rest = __rest94(_a13, ["hasCreate", "hasEdit", "hasShow", "hasList"]);
  return rest;
};
EditActions.propTypes = {
  className: import_prop_types277.default.string,
  data: import_prop_types277.default.object,
  hasCreate: import_prop_types277.default.bool,
  hasEdit: import_prop_types277.default.bool,
  hasShow: import_prop_types277.default.bool,
  hasList: import_prop_types277.default.bool,
  resource: import_prop_types277.default.string
};

// node_modules/ra-ui-materialui/dist/esm/detail/EditView.js
var __assign107 = function() {
  __assign107 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign107.apply(this, arguments);
};
var __rest95 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a7;
var EditView = function(props) {
  var _a13;
  var actions = props.actions, aside = props.aside, children2 = props.children, className = props.className, _b = props.component, Content = _b === void 0 ? Card_default : _b, title = props.title, mutationMode = props.mutationMode, rest = __rest95(props, ["actions", "aside", "children", "className", "component", "title", "mutationMode"]);
  var hasShow = useResourceDefinition().hasShow;
  var _c = useEditContext(props), resource = _c.resource, defaultTitle = _c.defaultTitle, record = _c.record;
  var finalActions = typeof actions === "undefined" && hasShow ? React434.createElement(EditActions, null) : actions;
  if (!children2) {
    return null;
  }
  return React434.createElement(
    Root26,
    __assign107({ className: clsx_m_default("edit-page", className) }, sanitizeRestProps23(rest)),
    React434.createElement(Title, { title, defaultTitle, preferenceKey: "".concat(resource, ".edit.title") }),
    finalActions,
    React434.createElement(
      "div",
      { className: clsx_m_default(EditClasses.main, (_a13 = {}, _a13[EditClasses.noActions] = !finalActions, _a13)) },
      React434.createElement(Content, { className: EditClasses.card }, record ? children2 : React434.createElement(CardContent_default, null, " ")),
      aside
    )
  );
};
EditView.propTypes = {
  actions: import_prop_types278.default.oneOfType([import_prop_types278.default.element, import_prop_types278.default.bool]),
  aside: import_prop_types278.default.element,
  className: import_prop_types278.default.string,
  component: ComponentPropType_default,
  defaultTitle: import_prop_types278.default.any,
  hasList: import_prop_types278.default.bool,
  hasShow: import_prop_types278.default.bool,
  mutationMode: import_prop_types278.default.oneOf(["pessimistic", "optimistic", "undoable"]),
  mutationOptions: import_prop_types278.default.object,
  record: import_prop_types278.default.object,
  redirect: import_prop_types278.default.oneOfType([
    import_prop_types278.default.string,
    import_prop_types278.default.bool,
    import_prop_types278.default.func
  ]),
  resource: import_prop_types278.default.string,
  save: import_prop_types278.default.func,
  title: import_prop_types278.default.node
};
var sanitizeRestProps23 = function(_a13) {
  var _b = _a13.addMiddleware, addMiddleware = _b === void 0 ? null : _b, _c = _a13.defaultTitle, defaultTitle = _c === void 0 ? null : _c, _d = _a13.hasCreate, hasCreate = _d === void 0 ? null : _d, _e = _a13.hasEdit, hasEdit = _e === void 0 ? null : _e, _f = _a13.hasList, hasList = _f === void 0 ? null : _f, _g = _a13.hasShow, hasShow = _g === void 0 ? null : _g, _h = _a13.history, history = _h === void 0 ? null : _h, _j = _a13.id, id = _j === void 0 ? null : _j, _k = _a13.isFetching, isFetching = _k === void 0 ? null : _k, _l = _a13.isLoading, isLoading = _l === void 0 ? null : _l, _m = _a13.location, location = _m === void 0 ? null : _m, _o = _a13.match, match2 = _o === void 0 ? null : _o, _p = _a13.options, options = _p === void 0 ? null : _p, _q = _a13.queryOptions, queryOptions = _q === void 0 ? null : _q, _r = _a13.mutationOptions, mutationOptions = _r === void 0 ? null : _r, _s = _a13.permissions, permissions = _s === void 0 ? null : _s, _t8 = _a13.refetch, refetch = _t8 === void 0 ? null : _t8, _u = _a13.removeMiddleware, removeMiddleware = _u === void 0 ? null : _u, _v = _a13.resource, resource = _v === void 0 ? null : _v, _w = _a13.save, save = _w === void 0 ? null : _w, _x = _a13.saving, saving = _x === void 0 ? null : _x, _y = _a13.transform, transform = _y === void 0 ? null : _y, rest = __rest95(_a13, ["addMiddleware", "defaultTitle", "hasCreate", "hasEdit", "hasList", "hasShow", "history", "id", "isFetching", "isLoading", "location", "match", "options", "queryOptions", "mutationOptions", "permissions", "refetch", "removeMiddleware", "resource", "save", "saving", "transform"]);
  return rest;
};
var PREFIX67 = "RaEdit";
var EditClasses = {
  main: "".concat(PREFIX67, "-main"),
  noActions: "".concat(PREFIX67, "-noActions"),
  card: "".concat(PREFIX67, "-card")
};
var Root26 = styled_default2("div", {
  name: PREFIX67,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a7 = {}, _a7["& .".concat(EditClasses.main)] = {
  display: "flex",
  alignItems: "flex-start"
}, _a7["& .".concat(EditClasses.noActions)] = {
  marginTop: "1em"
}, _a7["& .".concat(EditClasses.card)] = {
  flex: "1 1 auto"
}, _a7));

// node_modules/ra-ui-materialui/dist/esm/detail/Edit.js
var __assign108 = function() {
  __assign108 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign108.apply(this, arguments);
};
var __rest96 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Edit = function(props) {
  useCheckMinimumRequiredProps("Edit", ["children"], props);
  var resource = props.resource, id = props.id, mutationMode = props.mutationMode, mutationOptions = props.mutationOptions, queryOptions = props.queryOptions, redirect = props.redirect, transform = props.transform, disableAuthentication = props.disableAuthentication, rest = __rest96(props, ["resource", "id", "mutationMode", "mutationOptions", "queryOptions", "redirect", "transform", "disableAuthentication"]);
  return React435.createElement(
    EditBase,
    { resource, id, mutationMode, mutationOptions, queryOptions, redirect, transform, disableAuthentication },
    React435.createElement(EditView, __assign108({}, rest))
  );
};
Edit.propTypes = {
  actions: import_prop_types279.default.oneOfType([import_prop_types279.default.element, import_prop_types279.default.bool]),
  aside: import_prop_types279.default.element,
  children: import_prop_types279.default.node,
  className: import_prop_types279.default.string,
  disableAuthentication: import_prop_types279.default.bool,
  hasCreate: import_prop_types279.default.bool,
  hasEdit: import_prop_types279.default.bool,
  hasShow: import_prop_types279.default.bool,
  hasList: import_prop_types279.default.bool,
  id: import_prop_types279.default.any,
  mutationMode: import_prop_types279.default.oneOf(["pessimistic", "optimistic", "undoable"]),
  mutationOptions: import_prop_types279.default.object,
  queryOptions: import_prop_types279.default.object,
  redirect: import_prop_types279.default.oneOfType([
    import_prop_types279.default.string,
    import_prop_types279.default.bool,
    import_prop_types279.default.func
  ]),
  resource: import_prop_types279.default.string,
  title: import_prop_types279.default.node,
  transform: import_prop_types279.default.func,
  sx: import_prop_types279.default.any
};

// node_modules/ra-ui-materialui/dist/esm/detail/editFieldTypes.js
var React445 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/form/TabbedForm.js
var React441 = __toESM(require_react());
var import_react110 = __toESM(require_react());
var import_prop_types285 = __toESM(require_prop_types());
var import_get9 = __toESM(require_get());

// node_modules/ra-ui-materialui/dist/esm/form/TabbedFormView.js
var React438 = __toESM(require_react());
var import_react109 = __toESM(require_react());
var import_prop_types282 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/form/Toolbar.js
var React436 = __toESM(require_react());
var import_react107 = __toESM(require_react());
var import_prop_types280 = __toESM(require_prop_types());
var __assign109 = function() {
  __assign109 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign109.apply(this, arguments);
};
var __rest97 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Toolbar3 = function(props) {
  var _a13;
  var children2 = props.children, className = props.className, resource = props.resource, rest = __rest97(props, ["children", "className", "resource"]);
  var isXs = useMediaQuery(function(theme) {
    return theme.breakpoints.down("sm");
  });
  return React436.createElement(StyledToolbar2, __assign109({ className: clsx_m_default((_a13 = {}, _a13[ToolbarClasses.mobileToolbar] = isXs, _a13[ToolbarClasses.desktopToolbar] = !isXs, _a13), className), role: "toolbar" }, rest), import_react107.Children.count(children2) === 0 ? React436.createElement(
    "div",
    { className: ToolbarClasses.defaultToolbar },
    React436.createElement(SaveButton, null),
    React436.createElement(DeleteButton, { resource })
  ) : children2);
};
Toolbar3.propTypes = {
  children: import_prop_types280.default.node,
  className: import_prop_types280.default.string,
  resource: import_prop_types280.default.string
};
var PREFIX68 = "RaToolbar";
var ToolbarClasses = {
  desktopToolbar: "".concat(PREFIX68, "-desktopToolbar"),
  mobileToolbar: "".concat(PREFIX68, "-mobileToolbar"),
  defaultToolbar: "".concat(PREFIX68, "-defaultToolbar")
};
var StyledToolbar2 = styled_default2(Toolbar_default, {
  name: PREFIX68,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    backgroundColor: theme.palette.mode === "light" ? theme.palette.grey[100] : theme.palette.grey[900]
  }, _b["&.".concat(ToolbarClasses.desktopToolbar)] = {}, _b["&.".concat(ToolbarClasses.mobileToolbar)] = {
    position: "fixed",
    bottom: 0,
    left: 0,
    right: 0,
    padding: "16px",
    width: "100%",
    boxSizing: "border-box",
    flexShrink: 0,
    zIndex: 2
  }, _b["& .".concat(ToolbarClasses.defaultToolbar)] = {
    flex: 1,
    display: "flex",
    justifyContent: "space-between"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/form/TabbedFormTabs.js
var React437 = __toESM(require_react());
var import_react108 = __toESM(require_react());
var import_prop_types281 = __toESM(require_prop_types());
var __assign110 = function() {
  __assign110 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign110.apply(this, arguments);
};
var __rest98 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TabbedFormTabs = function(props) {
  var children2 = props.children, url = props.url, syncWithLocation = props.syncWithLocation, value = props.value, rest = __rest98(props, ["children", "url", "syncWithLocation", "value"]);
  var params = useParams();
  var tabValue = params["*"];
  return React437.createElement(Tabs_default, __assign110({ value: syncWithLocation ? tabValue : value, indicatorColor: "primary" }, rest), import_react108.Children.map(children2, function(tab, index2) {
    if (!(0, import_react108.isValidElement)(tab))
      return null;
    var tabPath = getTabbedFormTabFullPath(tab, index2);
    return (0, import_react108.cloneElement)(tab, {
      intent: "header",
      value: syncWithLocation ? tabPath : index2,
      syncWithLocation
    });
  }));
};
TabbedFormTabs.propTypes = {
  children: import_prop_types281.default.node,
  url: import_prop_types281.default.string,
  tabsWithErrors: import_prop_types281.default.arrayOf(import_prop_types281.default.string)
};
var getTabbedFormTabFullPath = function(tab, index2) {
  return tab.props.path != null ? tab.props.path : index2 > 0 ? index2.toString() : "";
};

// node_modules/ra-ui-materialui/dist/esm/form/TabbedFormView.js
var __assign111 = function() {
  __assign111 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign111.apply(this, arguments);
};
var __rest99 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TabbedFormView = function(props) {
  var children2 = props.children, className = props.className, _a13 = props.component, Component2 = _a13 === void 0 ? DefaultComponent : _a13, formRootPathname = props.formRootPathname, _b = props.syncWithLocation, syncWithLocation = _b === void 0 ? true : _b, _c = props.tabs, tabs = _c === void 0 ? DefaultTabs : _c, _d = props.toolbar, toolbar = _d === void 0 ? DefaultToolbar2 : _d, rest = __rest99(props, ["children", "className", "component", "formRootPathname", "syncWithLocation", "tabs", "toolbar"]);
  var location = useLocation();
  var resolvedPath = useResolvedPath("");
  var resource = useResourceContext(props);
  var _e = (0, import_react109.useState)(0), tabValue = _e[0], setTabValue = _e[1];
  var handleTabChange = function(event, value) {
    if (!syncWithLocation) {
      setTabValue(value);
    }
  };
  var renderTabHeaders = function() {
    return (0, import_react109.cloneElement)(tabs, {
      onChange: handleTabChange,
      syncWithLocation,
      url: formRootPathname,
      value: tabValue
    }, children2);
  };
  return React438.createElement(
    Root27,
    __assign111({ className: clsx_m_default("tabbed-form", className) }, sanitizeRestProps24(rest)),
    syncWithLocation ? React438.createElement(
      Routes,
      null,
      React438.createElement(Route, { path: "/*", element: renderTabHeaders() })
    ) : renderTabHeaders(),
    React438.createElement(Divider_default, null),
    React438.createElement(Component2, null, import_react109.Children.map(children2, function(tab, index2) {
      if (!tab) {
        return null;
      }
      var tabPath = getTabbedFormTabFullPath(tab, index2);
      var hidden = syncWithLocation ? !matchPath("".concat(resolvedPath.pathname, "/").concat(tabPath), location.pathname) : tabValue !== index2;
      return (0, import_react109.isValidElement)(tab) ? React438.cloneElement(tab, {
        intent: "content",
        resource,
        hidden,
        value: syncWithLocation ? tabPath : index2
      }) : null;
    })),
    toolbar !== false ? toolbar : null
  );
};
TabbedFormView.propTypes = {
  children: import_prop_types282.default.node,
  className: import_prop_types282.default.string,
  location: import_prop_types282.default.object,
  match: import_prop_types282.default.object,
  // @ts-ignore
  resource: import_prop_types282.default.string,
  tabs: import_prop_types282.default.element,
  toolbar: import_prop_types282.default.oneOfType([import_prop_types282.default.element, import_prop_types282.default.oneOf([false])]),
  validate: import_prop_types282.default.func,
  value: import_prop_types282.default.number
};
var DefaultTabs = React438.createElement(TabbedFormTabs, null);
var DefaultComponent = function(_a13) {
  var children2 = _a13.children;
  return React438.createElement(CardContent_default, null, children2);
};
var DefaultToolbar2 = React438.createElement(Toolbar3, null);
var PREFIX69 = "RaTabbedForm";
var TabbedFormClasses = {
  errorTabButton: "".concat(PREFIX69, "-errorTabButton")
};
var Root27 = styled_default2("div", {
  name: PREFIX69,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .MuiTab-root.".concat(TabbedFormClasses.errorTabButton)] = {
    color: theme.palette.error.main
  }, _b;
});
var sanitizeRestProps24 = function(_a13) {
  var record = _a13.record, resource = _a13.resource, rest = __rest99(_a13, ["record", "resource"]);
  return rest;
};

// node_modules/ra-ui-materialui/dist/esm/form/useFormRootPath.js
var useFormRootPath = function() {
  var location = useLocation();
  var createMatch = matchPath(":resource/create/*", location.pathname);
  var editMatch = matchPath(":resource/:id/*", location.pathname);
  if (createMatch) {
    return createMatch.pathnameBase;
  }
  if (editMatch) {
    return editMatch.pathnameBase;
  }
  return "";
};

// node_modules/ra-ui-materialui/dist/esm/form/FormTab.js
var React440 = __toESM(require_react());
var import_prop_types284 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/form/FormTabHeader.js
var React439 = __toESM(require_react());
var import_react_is16 = __toESM(require_react_is());
var import_prop_types283 = __toESM(require_prop_types());
var __assign112 = function() {
  __assign112 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign112.apply(this, arguments);
};
var __rest100 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FormTabHeader = function(_a13) {
  var _b;
  var count = _a13.count, label = _a13.label, value = _a13.value, icon = _a13.icon, className = _a13.className, onChange = _a13.onChange, syncWithLocation = _a13.syncWithLocation, rest = __rest100(_a13, ["count", "label", "value", "icon", "className", "onChange", "syncWithLocation"]);
  var translate = useTranslate();
  var location = useLocation();
  var isSubmitted = useFormState().isSubmitted;
  var formGroup = useFormGroup(value.toString());
  var propsForLink = {
    component: Link,
    to: __assign112(__assign112({}, location), { pathname: value })
  };
  var tabLabel = (0, import_react_is16.isElement)(label) ? label : translate(label, { _: label });
  if (count !== void 0) {
    tabLabel = React439.createElement(
      "span",
      null,
      tabLabel,
      " (",
      count,
      ")"
    );
  }
  return React439.createElement(Tab_default, __assign112({ label: tabLabel, value, icon, className: clsx_m_default("form-tab", className, (_b = {}, _b[TabbedFormClasses.errorTabButton] = !formGroup.isValid && (formGroup.isTouched || isSubmitted), _b.error = !formGroup.isValid && (formGroup.isTouched || isSubmitted), _b)) }, syncWithLocation ? propsForLink : {}, { id: "tabheader-".concat(value), "aria-controls": "tabpanel-".concat(value), onChange }, rest));
};
FormTabHeader.propTypes = {
  className: import_prop_types283.default.string,
  contentClassName: import_prop_types283.default.string,
  count: import_prop_types283.default.node,
  children: import_prop_types283.default.node,
  intent: import_prop_types283.default.oneOf(["header", "content"]),
  hidden: import_prop_types283.default.bool,
  icon: import_prop_types283.default.element,
  label: import_prop_types283.default.oneOfType([import_prop_types283.default.string, import_prop_types283.default.element]).isRequired,
  margin: import_prop_types283.default.oneOf(["none", "dense", "normal"]),
  path: import_prop_types283.default.string,
  // @ts-ignore
  record: import_prop_types283.default.object,
  resource: import_prop_types283.default.string,
  value: import_prop_types283.default.oneOfType([import_prop_types283.default.string, import_prop_types283.default.number]),
  variant: import_prop_types283.default.oneOf(["standard", "outlined", "filled"])
};

// node_modules/ra-ui-materialui/dist/esm/form/FormTab.js
var __assign113 = function() {
  __assign113 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign113.apply(this, arguments);
};
var __rest101 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FormTab = function(props) {
  var children2 = props.children, className = props.className, contentClassName = props.contentClassName, count = props.count, hidden = props.hidden, icon = props.icon, intent = props.intent, label = props.label, onChange = props.onChange, path = props.path, resource = props.resource, syncWithLocation = props.syncWithLocation, value = props.value, rest = __rest101(props, ["children", "className", "contentClassName", "count", "hidden", "icon", "intent", "label", "onChange", "path", "resource", "syncWithLocation", "value"]);
  var renderHeader = function() {
    return React440.createElement(FormTabHeader, __assign113({ label, count, value, icon, className, syncWithLocation, onChange }, sanitizeRestProps25(rest)));
  };
  var renderContent = function() {
    return React440.createElement(
      FormGroupContextProvider,
      { name: value.toString() },
      React440.createElement(Stack_default2, __assign113({ alignItems: "flex-start", style: hidden ? hiddenStyle : null, className: contentClassName, id: "tabpanel-".concat(value), "aria-labelledby": "tabheader-".concat(value), "aria-hidden": hidden || void 0 }, rest), children2)
    );
  };
  return intent === "header" ? renderHeader() : renderContent();
};
FormTab.propTypes = {
  className: import_prop_types284.default.string,
  contentClassName: import_prop_types284.default.string,
  children: import_prop_types284.default.node,
  count: import_prop_types284.default.node,
  intent: import_prop_types284.default.oneOf(["header", "content"]),
  hidden: import_prop_types284.default.bool,
  icon: import_prop_types284.default.element,
  label: import_prop_types284.default.oneOfType([import_prop_types284.default.string, import_prop_types284.default.element]).isRequired,
  path: import_prop_types284.default.string,
  // @ts-ignore
  resource: import_prop_types284.default.string,
  value: import_prop_types284.default.oneOfType([import_prop_types284.default.string, import_prop_types284.default.number])
};
FormTab.displayName = "FormTab";
var hiddenStyle = { display: "none" };
var sanitizeRestProps25 = function(_a13) {
  var classes2 = _a13.classes, ref = _a13.ref, margin2 = _a13.margin, rest = __rest101(_a13, ["classes", "ref", "margin"]);
  return rest;
};

// node_modules/ra-ui-materialui/dist/esm/form/TabbedForm.js
var __assign114 = function() {
  __assign114 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign114.apply(this, arguments);
};
var __rest102 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray12 = function(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from2.length, ar; i < l; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
};
var TabbedForm = function(props) {
  var formRootPathname = useFormRootPath();
  return React441.createElement(
    Form,
    __assign114({ formRootPathname }, props),
    React441.createElement(TabbedFormView, __assign114({ formRootPathname }, sanitizeRestProps26(props)))
  );
};
TabbedForm.Tab = FormTab;
var sanitizeRestProps26 = function(_a13) {
  var criteriaMode = _a13.criteriaMode, defaultValues = _a13.defaultValues, delayError = _a13.delayError, formRootPathname = _a13.formRootPathname, mode = _a13.mode, noValidate = _a13.noValidate, onSubmit = _a13.onSubmit, record = _a13.record, resetOptions = _a13.resetOptions, resolver = _a13.resolver, reValidateMode = _a13.reValidateMode, sanitizeEmptyValues = _a13.sanitizeEmptyValues, shouldFocusError = _a13.shouldFocusError, shouldUnregister = _a13.shouldUnregister, shouldUseNativeValidation = _a13.shouldUseNativeValidation, validate = _a13.validate, warnWhenUnsavedChanges = _a13.warnWhenUnsavedChanges, rest = __rest102(_a13, ["criteriaMode", "defaultValues", "delayError", "formRootPathname", "mode", "noValidate", "onSubmit", "record", "resetOptions", "resolver", "reValidateMode", "sanitizeEmptyValues", "shouldFocusError", "shouldUnregister", "shouldUseNativeValidation", "validate", "warnWhenUnsavedChanges"]);
  return rest;
};
TabbedForm.propTypes = {
  children: import_prop_types285.default.node,
  defaultValues: import_prop_types285.default.oneOfType([import_prop_types285.default.object, import_prop_types285.default.func]),
  formRootPathname: import_prop_types285.default.string,
  mutationMode: import_prop_types285.default.oneOf(["pessimistic", "optimistic", "undoable"]),
  // @ts-ignore
  record: import_prop_types285.default.object,
  saving: import_prop_types285.default.bool,
  validate: import_prop_types285.default.func
};
var findTabsWithErrors = function(children2, errors) {
  console.warn("Deprecated. FormTab now wrap their content inside a FormGroupContextProvider. If you implemented custom forms with tabs, please use the FormGroupContextProvider. See https://marmelab.com/react-admin/EditTutorial.html#grouping-inputs");
  return import_react110.Children.toArray(children2).reduce(function(acc, child) {
    if (!(0, import_react110.isValidElement)(child)) {
      return acc;
    }
    var inputs = import_react110.Children.toArray(child.props.children);
    if (inputs.some(function(input) {
      return (0, import_react110.isValidElement)(input) && (0, import_get9.default)(errors, input.props.source);
    })) {
      return __spreadArray12(__spreadArray12([], acc, true), [child.props.label], false);
    }
    return acc;
  }, []);
};

// node_modules/ra-ui-materialui/dist/esm/form/SimpleForm.js
var React442 = __toESM(require_react());
var import_prop_types286 = __toESM(require_prop_types());
var __assign115 = function() {
  __assign115 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign115.apply(this, arguments);
};
var __rest103 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SimpleForm = function(props) {
  var children2 = props.children, className = props.className, _a13 = props.component, Component2 = _a13 === void 0 ? DefaultComponent2 : _a13, sx = props.sx, _b = props.toolbar, toolbar = _b === void 0 ? DefaultToolbar3 : _b, rest = __rest103(props, ["children", "className", "component", "sx", "toolbar"]);
  return React442.createElement(
    Form,
    __assign115({}, rest),
    React442.createElement(
      Component2,
      { className, sx },
      React442.createElement(Stack_default2, __assign115({ alignItems: "flex-start" }, sanitizeRestProps27(props)), children2)
    ),
    toolbar !== false ? toolbar : null
  );
};
SimpleForm.propTypes = {
  children: import_prop_types286.default.node,
  defaultValues: import_prop_types286.default.oneOfType([import_prop_types286.default.object, import_prop_types286.default.func]),
  // @ts-ignore
  record: import_prop_types286.default.object,
  toolbar: import_prop_types286.default.oneOfType([import_prop_types286.default.element, import_prop_types286.default.oneOf([false])]),
  validate: import_prop_types286.default.func
};
var PREFIX70 = "RaSimpleForm";
var DefaultComponent2 = styled_default2(CardContent_default, {
  name: PREFIX70,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b[theme.breakpoints.down("sm")] = {
    paddingBottom: "5em"
  }, _b;
});
var DefaultToolbar3 = React442.createElement(Toolbar3, null);
var sanitizeRestProps27 = function(_a13) {
  var children2 = _a13.children, className = _a13.className, component = _a13.component, criteriaMode = _a13.criteriaMode, defaultValues = _a13.defaultValues, delayError = _a13.delayError, onSubmit = _a13.onSubmit, record = _a13.record, resource = _a13.resource, reValidateMode = _a13.reValidateMode, sx = _a13.sx, toolbar = _a13.toolbar, validate = _a13.validate, resetOptions = _a13.resetOptions, resolver = _a13.resolver, sanitizeEmptyValues = _a13.sanitizeEmptyValues, shouldFocusError = _a13.shouldFocusError, shouldUnregister = _a13.shouldUnregister, shouldUseNativeValidation = _a13.shouldUseNativeValidation, warnWhenUnsavedChanges = _a13.warnWhenUnsavedChanges, props = __rest103(_a13, ["children", "className", "component", "criteriaMode", "defaultValues", "delayError", "onSubmit", "record", "resource", "reValidateMode", "sx", "toolbar", "validate", "resetOptions", "resolver", "sanitizeEmptyValues", "shouldFocusError", "shouldUnregister", "shouldUseNativeValidation", "warnWhenUnsavedChanges"]);
  return props;
};

// node_modules/ra-ui-materialui/dist/esm/form/SimpleFormConfigurable.js
var React444 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/form/SimpleFormEditor.js
var React443 = __toESM(require_react());
var SimpleFormEditor = function() {
  useSetInspectorTitle("ra.inspector.SimpleForm.title", { _: "Form" });
  return React443.createElement(FieldsSelector, { name: "inputs", availableName: "availableInputs" });
};

// node_modules/ra-ui-materialui/dist/esm/form/SimpleFormConfigurable.js
var __assign116 = function() {
  __assign116 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign116.apply(this, arguments);
};
var __rest104 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SimpleFormConfigurable = function(_a13) {
  var preferenceKey = _a13.preferenceKey, omit = _a13.omit, props = __rest104(_a13, ["preferenceKey", "omit"]);
  var translate = useTranslate();
  var resource = useResourceContext(props);
  var finalPreferenceKey = preferenceKey || "".concat(resource, ".simpleForm");
  var _b = useStore("preferences.".concat(finalPreferenceKey, ".availableInputs"), []), availableInputs = _b[0], setAvailableInputs = _b[1];
  var _c = useStore("preferences.".concat(finalPreferenceKey, ".omit"), omit), _5 = _c[0], setOmit = _c[1];
  React444.useEffect(function() {
    var inputs = React444.Children.map(props.children, function(child, index2) {
      return React444.isValidElement(child) ? {
        index: String(index2),
        source: child.props.source,
        label: child.props.source || child.props.label ? child.props.label : translate("ra.configurable.SimpleForm.unlabeled", {
          input: index2,
          _: "Unlabeled input #%{input}"
        })
      } : null;
    }).filter(function(column2) {
      return column2 != null;
    });
    if (inputs.length !== availableInputs.length) {
      setAvailableInputs(inputs);
      setOmit(omit);
    }
  }, [availableInputs]);
  return React444.createElement(
    Configurable,
    { editor: React444.createElement(SimpleFormEditor, null), preferenceKey: finalPreferenceKey, sx: {
      display: "block",
      "&.RaConfigurable-editMode": {
        margin: "2px"
      }
    } },
    React444.createElement(SimpleFormWithPreferences, __assign116({}, props))
  );
};
var SimpleFormWithPreferences = function(_a13) {
  var children2 = _a13.children, props = __rest104(_a13, ["children"]);
  var availableInputs = usePreference("availableInputs", [])[0];
  var omit = usePreference("omit", [])[0];
  var inputs = usePreference("inputs", availableInputs.filter(function(input) {
    return !(omit === null || omit === void 0 ? void 0 : omit.includes(input.source));
  }).map(function(input) {
    return input.index;
  }))[0];
  var childrenArray = React444.Children.toArray(children2);
  return React444.createElement(SimpleForm, __assign116({}, props), inputs === void 0 ? children2 : inputs.map(function(index2) {
    return childrenArray[index2];
  }));
};

// node_modules/ra-ui-materialui/dist/esm/detail/editFieldTypes.js
var __assign117 = function() {
  __assign117 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign117.apply(this, arguments);
};
var __rest105 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var editFieldTypes = {
  form: {
    component: SimpleForm,
    representation: function(_5, children2) {
      return "        <SimpleForm>\n".concat(children2.map(function(child) {
        return "            ".concat(child.getRepresentation());
      }).join("\n"), "\n        </SimpleForm>");
    }
  },
  array: {
    // eslint-disable-next-line react/display-name
    component: function(_a13) {
      var children2 = _a13.children, props = __rest105(_a13, ["children"]);
      return React445.createElement(
        ArrayInput,
        __assign117({}, props),
        React445.createElement(SimpleFormIterator, null, children2)
      );
    },
    representation: function(props, children2) {
      return '<ArrayInput source="'.concat(props.source, '"><SimpleFormIterator>').concat(children2.map(function(child) {
        return child.getRepresentation();
      }).join("\n"), "</SimpleFormIterator></ArrayInput>");
    }
  },
  boolean: {
    component: BooleanInput,
    representation: function(props) {
      return '<BooleanInput source="'.concat(props.source, '" />');
    }
  },
  date: {
    component: DateInput,
    representation: function(props) {
      return '<DateInput source="'.concat(props.source, '" />');
    }
  },
  email: {
    component: TextInput,
    representation: function(props) {
      return '<TextInput source="'.concat(props.source, '" />');
    }
  },
  id: {
    component: TextInput,
    representation: function(props) {
      return '<TextInput source="'.concat(props.source, '" />');
    }
  },
  number: {
    component: NumberInput3,
    representation: function(props) {
      return '<NumberInput source="'.concat(props.source, '" />');
    }
  },
  reference: {
    component: ReferenceInput,
    representation: function(props) {
      return '<ReferenceInput source="'.concat(props.source, '" reference="').concat(props.reference, '" />');
    }
  },
  referenceArray: {
    component: ReferenceArrayInput,
    representation: function(props) {
      return '<ReferenceArrayInput source="'.concat(props.source, '" reference="').concat(props.reference, '"><TextInput source="id" /></ReferenceArrayInput>');
    }
  },
  referenceArrayChild: {
    component: function(props) {
      return React445.createElement(SelectInput3, __assign117({ optionText: "id" }, props));
    },
    representation: function() {
      return '<SelectInput optionText="id" />';
    }
  },
  richText: {
    component: TextInput,
    representation: function(props) {
      return '<TextInput source="'.concat(props.source, '" />');
    }
  },
  string: {
    component: TextInput,
    representation: function(props) {
      return '<TextInput source="'.concat(props.source, '" />');
    }
  },
  url: {
    component: TextInput,
    representation: function(props) {
      return '<TextInput source="'.concat(props.source, '" />');
    }
  }
};

// node_modules/ra-ui-materialui/dist/esm/detail/EditGuesser.js
var React446 = __toESM(require_react());
var import_react111 = __toESM(require_react());
var import_inflection6 = __toESM(require_inflection());
var __assign118 = function() {
  __assign118 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign118.apply(this, arguments);
};
var __rest106 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var EditGuesser = function(props) {
  var resource = props.resource, id = props.id, mutationMode = props.mutationMode, mutationOptions = props.mutationOptions, queryOptions = props.queryOptions, redirect = props.redirect, transform = props.transform, disableAuthentication = props.disableAuthentication, rest = __rest106(props, ["resource", "id", "mutationMode", "mutationOptions", "queryOptions", "redirect", "transform", "disableAuthentication"]);
  return React446.createElement(
    EditBase,
    { resource, id, mutationMode, mutationOptions, queryOptions, redirect, transform, disableAuthentication },
    React446.createElement(EditViewGuesser, __assign118({}, rest))
  );
};
var EditViewGuesser = function(props) {
  var resource = useResourceContext(props);
  var record = useEditContext().record;
  var _a13 = (0, import_react111.useState)(null), child = _a13[0], setChild = _a13[1];
  var _b = props.enableLog, enableLog = _b === void 0 ? true : _b, rest = __rest106(props, ["enableLog"]);
  (0, import_react111.useEffect)(function() {
    setChild(null);
  }, [resource]);
  (0, import_react111.useEffect)(function() {
    if (record && !child) {
      var inferredElements = getElementsFromRecords_default([record], editFieldTypes);
      var inferredChild = new InferredElement_default(editFieldTypes.form, null, inferredElements);
      setChild(inferredChild.getElement());
      if (!enableLog)
        return;
      var representation = inferredChild.getRepresentation();
      var components = ["Edit"].concat(Array.from(new Set(Array.from(representation.matchAll(/<([^/\s>]+)/g)).map(function(match2) {
        return match2[1];
      }).filter(function(component) {
        return component !== "span";
      })))).sort();
      console.log("Guessed Edit:\n\nimport { ".concat(components.join(", "), " } from 'react-admin';\n\nexport const ").concat(import_inflection6.default.capitalize(import_inflection6.default.singularize(resource)), "Edit = () => (\n    <Edit>\n").concat(representation, "\n    </Edit>\n);"));
    }
  }, [record, child, resource, enableLog]);
  return React446.createElement(EditView, __assign118({}, rest), child);
};
EditViewGuesser.propTypes = EditView.propTypes;

// node_modules/ra-ui-materialui/dist/esm/detail/Show.js
var React449 = __toESM(require_react());
var import_prop_types289 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/detail/ShowView.js
var React448 = __toESM(require_react());
var import_prop_types288 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/detail/ShowActions.js
var React447 = __toESM(require_react());
var import_prop_types287 = __toESM(require_prop_types());
var ShowActions = function(props) {
  var record = useRecordContext(props);
  var hasEdit = useResourceDefinition().hasEdit;
  if (!hasEdit) {
    return null;
  }
  return React447.createElement(
    TopToolbar_default,
    { className: props.className },
    React447.createElement(EditButton, { record })
  );
};
ShowActions.propTypes = {
  className: import_prop_types287.default.string,
  record: import_prop_types287.default.any
};

// node_modules/ra-ui-materialui/dist/esm/detail/ShowView.js
var __assign119 = function() {
  __assign119 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign119.apply(this, arguments);
};
var __rest107 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a8;
var defaultActions = React448.createElement(ShowActions, null);
var ShowView = function(props) {
  var _a13;
  var actions = props.actions, aside = props.aside, children2 = props.children, className = props.className, _b = props.component, Content = _b === void 0 ? Card_default : _b, _c = props.emptyWhileLoading, emptyWhileLoading = _c === void 0 ? false : _c, title = props.title, rest = __rest107(props, ["actions", "aside", "children", "className", "component", "emptyWhileLoading", "title"]);
  var _d = useShowContext(props), resource = _d.resource, defaultTitle = _d.defaultTitle, record = _d.record;
  var hasEdit = useResourceDefinition(props).hasEdit;
  var finalActions = typeof actions === "undefined" && hasEdit ? defaultActions : actions;
  if (!children2 || !record && emptyWhileLoading) {
    return null;
  }
  return React448.createElement(
    Root28,
    __assign119({ className: clsx_m_default("show-page", className) }, sanitizeRestProps28(rest)),
    React448.createElement(Title, { title, defaultTitle, preferenceKey: "".concat(resource, ".show.title") }),
    finalActions !== false && finalActions,
    React448.createElement(
      "div",
      { className: clsx_m_default(ShowClasses.main, (_a13 = {}, _a13[ShowClasses.noActions] = !finalActions, _a13)) },
      React448.createElement(Content, { className: ShowClasses.card }, children2),
      aside
    )
  );
};
ShowView.propTypes = {
  actions: import_prop_types288.default.oneOfType([import_prop_types288.default.element, import_prop_types288.default.bool]),
  children: import_prop_types288.default.node,
  className: import_prop_types288.default.string,
  emptyWhileLoading: import_prop_types288.default.bool,
  title: import_prop_types288.default.any
};
var sanitizeRestProps28 = function(_a13) {
  var _b = _a13.defaultTitle, defaultTitle = _b === void 0 ? null : _b, _c = _a13.hasCreate, hasCreate = _c === void 0 ? null : _c, _d = _a13.hasEdit, hasEdit = _d === void 0 ? null : _d, _e = _a13.hasList, hasList = _e === void 0 ? null : _e, _f = _a13.hasShow, hasShow = _f === void 0 ? null : _f, _g = _a13.history, history = _g === void 0 ? null : _g, _h = _a13.id, id = _h === void 0 ? null : _h, _j = _a13.isLoading, isLoading = _j === void 0 ? null : _j, _k = _a13.isFetching, isFetching = _k === void 0 ? null : _k, _l = _a13.location, location = _l === void 0 ? null : _l, _m = _a13.match, match2 = _m === void 0 ? null : _m, _o = _a13.options, options = _o === void 0 ? null : _o, _p = _a13.refetch, refetch = _p === void 0 ? null : _p, _q = _a13.permissions, permissions = _q === void 0 ? null : _q, rest = __rest107(_a13, ["defaultTitle", "hasCreate", "hasEdit", "hasList", "hasShow", "history", "id", "isLoading", "isFetching", "location", "match", "options", "refetch", "permissions"]);
  return rest;
};
var PREFIX71 = "RaShow";
var ShowClasses = {
  main: "".concat(PREFIX71, "-main"),
  noActions: "".concat(PREFIX71, "-noActions"),
  card: "".concat(PREFIX71, "-card")
};
var Root28 = styled_default2("div", {
  name: PREFIX71,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a8 = {}, _a8["& .".concat(ShowClasses.main)] = {
  display: "flex"
}, _a8["& .".concat(ShowClasses.noActions)] = {
  marginTop: "1em"
}, _a8["& .".concat(ShowClasses.card)] = {
  flex: "1 1 auto"
}, _a8));

// node_modules/ra-ui-materialui/dist/esm/detail/Show.js
var __assign120 = function() {
  __assign120 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign120.apply(this, arguments);
};
var __rest108 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Show = function(_a13) {
  var id = _a13.id, resource = _a13.resource, queryOptions = _a13.queryOptions, disableAuthentication = _a13.disableAuthentication, rest = __rest108(_a13, ["id", "resource", "queryOptions", "disableAuthentication"]);
  return React449.createElement(
    ShowBase,
    { id, disableAuthentication, queryOptions, resource },
    React449.createElement(ShowView, __assign120({}, rest))
  );
};
Show.propTypes = {
  actions: import_prop_types289.default.oneOfType([import_prop_types289.default.element, import_prop_types289.default.bool]),
  children: import_prop_types289.default.node.isRequired,
  className: import_prop_types289.default.string,
  disableAuthentication: import_prop_types289.default.bool,
  emptyWhileLoading: import_prop_types289.default.bool,
  component: import_prop_types289.default.elementType,
  resource: import_prop_types289.default.string,
  title: import_prop_types289.default.node,
  sx: import_prop_types289.default.any
};

// node_modules/ra-ui-materialui/dist/esm/detail/showFieldTypes.js
var React476 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/field/ArrayField.js
var React450 = __toESM(require_react());
var import_get10 = __toESM(require_get());

// node_modules/ra-ui-materialui/dist/esm/field/types.js
var import_prop_types290 = __toESM(require_prop_types());
var fieldPropTypes = {
  sortBy: import_prop_types290.default.string,
  sortByOrder: import_prop_types290.default.oneOf(["ASC", "DESC"]),
  source: import_prop_types290.default.string,
  label: import_prop_types290.default.oneOfType([
    import_prop_types290.default.string,
    import_prop_types290.default.element,
    import_prop_types290.default.bool
  ]),
  sortable: import_prop_types290.default.bool,
  className: import_prop_types290.default.string,
  cellClassName: import_prop_types290.default.string,
  headerClassName: import_prop_types290.default.string,
  textAlign: import_prop_types290.default.oneOf([
    "inherit",
    "left",
    "center",
    "right",
    "justify"
  ]),
  emptyText: import_prop_types290.default.string
};

// node_modules/ra-ui-materialui/dist/esm/field/genericMemo.js
var import_react112 = __toESM(require_react());
var genericMemo = function(component) {
  var _a13;
  var result = (0, import_react112.memo)(component);
  result.propTypes = component.propTypes;
  result.defaultProps = component.defaultProps;
  result.displayName = (_a13 = component.displayName) === null || _a13 === void 0 ? void 0 : _a13.replace("Impl", "");
  return result;
};

// node_modules/ra-ui-materialui/dist/esm/field/ArrayField.js
var __assign121 = function() {
  __assign121 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign121.apply(this, arguments);
};
var ArrayFieldImpl = function(props) {
  var children2 = props.children, resource = props.resource, source = props.source, perPage = props.perPage, sort = props.sort, filter = props.filter;
  var record = useRecordContext(props);
  var data = (0, import_get10.default)(record, source, emptyArray2) || emptyArray2;
  var listContext = useList({ data, resource, perPage, sort, filter });
  return React450.createElement(ListContextProvider, { value: listContext }, children2);
};
ArrayFieldImpl.propTypes = __assign121({}, fieldPropTypes);
ArrayFieldImpl.displayName = "ArrayFieldImpl";
var ArrayField = genericMemo(ArrayFieldImpl);
var emptyArray2 = [];

// node_modules/ra-ui-materialui/dist/esm/field/BooleanField.js
var React451 = __toESM(require_react());
var import_prop_types291 = __toESM(require_prop_types());
var import_get11 = __toESM(require_get());
var import_Done = __toESM(require_Done());
var import_Clear2 = __toESM(require_Clear());

// node_modules/ra-ui-materialui/dist/esm/field/sanitizeFieldRestProps.js
var __rest109 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var sanitizeFieldRestProps = function(_a13) {
  var cellClassName = _a13.cellClassName, className = _a13.className, emptyText = _a13.emptyText, formClassName = _a13.formClassName, fullWidth = _a13.fullWidth, headerClassName = _a13.headerClassName, label = _a13.label, linkType = _a13.linkType, link = _a13.link, locale = _a13.locale, record = _a13.record, refetch = _a13.refetch, resource = _a13.resource, sortable = _a13.sortable, sortBy = _a13.sortBy, sortByOrder = _a13.sortByOrder, source = _a13.source, textAlign2 = _a13.textAlign, translateChoice = _a13.translateChoice, props = __rest109(_a13, ["cellClassName", "className", "emptyText", "formClassName", "fullWidth", "headerClassName", "label", "linkType", "link", "locale", "record", "refetch", "resource", "sortable", "sortBy", "sortByOrder", "source", "textAlign", "translateChoice"]);
  return props;
};

// node_modules/ra-ui-materialui/dist/esm/field/BooleanField.js
var __assign122 = function() {
  __assign122 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign122.apply(this, arguments);
};
var __rest110 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a9;
var BooleanFieldImpl = function(props) {
  var className = props.className, emptyText = props.emptyText, source = props.source, valueLabelTrue = props.valueLabelTrue, valueLabelFalse = props.valueLabelFalse, _a13 = props.TrueIcon, TrueIcon = _a13 === void 0 ? import_Done.default : _a13, _b = props.FalseIcon, FalseIcon = _b === void 0 ? import_Clear2.default : _b, _c = props.looseValue, looseValue = _c === void 0 ? false : _c, rest = __rest110(props, ["className", "emptyText", "source", "valueLabelTrue", "valueLabelFalse", "TrueIcon", "FalseIcon", "looseValue"]);
  var record = useRecordContext(props);
  var translate = useTranslate();
  var value = (0, import_get11.default)(record, source);
  var isTruthyValue = value === true || looseValue && value;
  var ariaLabel = value ? valueLabelTrue : valueLabelFalse;
  if (!ariaLabel) {
    ariaLabel = isTruthyValue ? "ra.boolean.true" : "ra.boolean.false";
  }
  if (looseValue || value === false || value === true) {
    return React451.createElement(
      StyledTypography,
      __assign122({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)),
      React451.createElement(Tooltip_default, { title: translate(ariaLabel, { _: ariaLabel }) }, isTruthyValue ? TrueIcon ? React451.createElement(TrueIcon, { "data-testid": "true", fontSize: "small", className: classes.trueIcon }) : React451.createElement(React451.Fragment, null) : FalseIcon ? React451.createElement(FalseIcon, { "data-testid": "false", fontSize: "small", className: classes.falseIcon }) : React451.createElement(React451.Fragment, null))
    );
  }
  return React451.createElement(Typography_default, __assign122({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, { _: emptyText }));
};
BooleanFieldImpl.propTypes = __assign122(__assign122(__assign122({}, Typography_default.propTypes), fieldPropTypes), { valueLabelFalse: import_prop_types291.default.string, valueLabelTrue: import_prop_types291.default.string, TrueIcon: import_prop_types291.default.elementType, FalseIcon: import_prop_types291.default.elementType, looseValue: import_prop_types291.default.bool });
BooleanFieldImpl.displayName = "BooleanFieldImpl";
var BooleanField = genericMemo(BooleanFieldImpl);
var PREFIX72 = "RaBooleanField";
var classes = {
  trueIcon: "".concat(PREFIX72, "-trueIcon"),
  falseIcon: "".concat(PREFIX72, "-falseIcon")
};
var StyledTypography = styled_default2(Typography_default, {
  name: PREFIX72,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a9 = {
  display: "inline-flex",
  verticalAlign: "middle",
  lineHeight: 0
}, _a9["& .".concat(classes.trueIcon)] = {}, _a9["& .".concat(classes.falseIcon)] = {}, _a9));

// node_modules/ra-ui-materialui/dist/esm/field/ChipField.js
var React452 = __toESM(require_react());
var import_get12 = __toESM(require_get());
var __assign123 = function() {
  __assign123 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign123.apply(this, arguments);
};
var __rest111 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a10;
var ChipFieldImpl = function(props) {
  var className = props.className, source = props.source, emptyText = props.emptyText, rest = __rest111(props, ["className", "source", "emptyText"]);
  var record = useRecordContext(props);
  var value = (0, import_get12.default)(record, source);
  var translate = useTranslate();
  if (value == null && emptyText) {
    return React452.createElement(Typography_default, __assign123({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, { _: emptyText }));
  }
  return React452.createElement(StyledChip, __assign123({ className: clsx_m_default(ChipFieldClasses.chip, className), label: value }, sanitizeFieldRestProps(rest)));
};
ChipFieldImpl.propTypes = __assign123(__assign123({}, Chip_default.propTypes), fieldPropTypes);
ChipFieldImpl.displayName = "ChipFieldImpl";
var ChipField = genericMemo(ChipFieldImpl);
var PREFIX73 = "RaChipField";
var ChipFieldClasses = {
  chip: "".concat(PREFIX73, "-chip")
};
var StyledChip = styled_default2(Chip_default, {
  name: PREFIX73,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a10 = {}, _a10["&.".concat(ChipFieldClasses.chip)] = { margin: 4, cursor: "inherit" }, _a10));

// node_modules/ra-ui-materialui/dist/esm/field/DateField.js
var React453 = __toESM(require_react());
var import_prop_types292 = __toESM(require_prop_types());
var import_get13 = __toESM(require_get());
var __assign124 = function() {
  __assign124 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign124.apply(this, arguments);
};
var __rest112 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DateFieldImpl = function(props) {
  var className = props.className, emptyText = props.emptyText, locales = props.locales, options = props.options, _a13 = props.showTime, showTime = _a13 === void 0 ? false : _a13, _b = props.showDate, showDate = _b === void 0 ? true : _b, source = props.source, _c = props.transform, transform = _c === void 0 ? defaultTransform : _c, rest = __rest112(props, ["className", "emptyText", "locales", "options", "showTime", "showDate", "source", "transform"]);
  var translate = useTranslate();
  if (!showTime && !showDate) {
    throw new Error("<DateField> cannot have showTime and showDate false at the same time");
  }
  var record = useRecordContext(props);
  if (!record) {
    return null;
  }
  var value = (0, import_get13.default)(record, source);
  if (value == null || value === "") {
    return emptyText ? React453.createElement(Typography_default, __assign124({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, { _: emptyText })) : null;
  }
  var date = transform(value);
  var dateString = "";
  if (showTime && showDate) {
    dateString = toLocaleStringSupportsLocales ? date.toLocaleString(locales, options) : date.toLocaleString();
  } else if (showDate) {
    var dateOptions = options !== null && options !== void 0 ? options : typeof value === "string" && value.length <= 10 ? { timeZone: "UTC" } : void 0;
    dateString = toLocaleStringSupportsLocales ? date.toLocaleDateString(locales, dateOptions) : date.toLocaleDateString();
  } else if (showTime) {
    dateString = toLocaleStringSupportsLocales ? date.toLocaleTimeString(locales, options) : date.toLocaleTimeString();
  }
  return React453.createElement(Typography_default, __assign124({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), dateString);
};
DateFieldImpl.propTypes = __assign124(__assign124(__assign124({}, Typography_default.propTypes), fieldPropTypes), { locales: import_prop_types292.default.oneOfType([
  import_prop_types292.default.string,
  import_prop_types292.default.arrayOf(import_prop_types292.default.string)
]), options: import_prop_types292.default.object, showTime: import_prop_types292.default.bool, showDate: import_prop_types292.default.bool });
DateFieldImpl.displayName = "DateFieldImpl";
var DateField = genericMemo(DateFieldImpl);
var defaultTransform = function(value) {
  return value instanceof Date ? value : typeof value === "string" || typeof value === "number" ? new Date(value) : void 0;
};
var toLocaleStringSupportsLocales = function() {
  try {
    (/* @__PURE__ */ new Date()).toLocaleString("i");
  } catch (error) {
    return error instanceof RangeError;
  }
  return false;
}();

// node_modules/ra-ui-materialui/dist/esm/field/EmailField.js
var React454 = __toESM(require_react());
var import_get14 = __toESM(require_get());
var __assign125 = function() {
  __assign125 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign125.apply(this, arguments);
};
var __rest113 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var EmailFieldImpl = function(props) {
  var className = props.className, source = props.source, emptyText = props.emptyText, rest = __rest113(props, ["className", "source", "emptyText"]);
  var record = useRecordContext(props);
  var value = (0, import_get14.default)(record, source);
  var translate = useTranslate();
  if (value == null) {
    return emptyText ? React454.createElement(Typography_default, __assign125({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, { _: emptyText })) : null;
  }
  return React454.createElement(Link_default, __assign125({ className, href: "mailto:".concat(value), onClick: stopPropagation4, variant: "body2" }, sanitizeFieldRestProps(rest)), value);
};
EmailFieldImpl.propTypes = fieldPropTypes;
EmailFieldImpl.displayName = "EmailFieldImpl";
var EmailField = genericMemo(EmailFieldImpl);
var stopPropagation4 = function(e) {
  return e.stopPropagation();
};

// node_modules/ra-ui-materialui/dist/esm/field/FileField.js
var React455 = __toESM(require_react());
var import_prop_types293 = __toESM(require_prop_types());
var import_get15 = __toESM(require_get());
var __assign126 = function() {
  __assign126 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign126.apply(this, arguments);
};
var __rest114 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FileField = function(props) {
  var _a13;
  var className = props.className, emptyText = props.emptyText, source = props.source, title = props.title, src = props.src, target = props.target, download = props.download, ping = props.ping, rel = props.rel, rest = __rest114(props, ["className", "emptyText", "source", "title", "src", "target", "download", "ping", "rel"]);
  var record = useRecordContext(props);
  var sourceValue = (0, import_get15.default)(record, source);
  var translate = useTranslate();
  if (!sourceValue) {
    return emptyText ? React455.createElement(Typography_default, __assign126({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, { _: emptyText })) : React455.createElement(Root29, __assign126({ className }, sanitizeFieldRestProps(rest)));
  }
  if (Array.isArray(sourceValue)) {
    return React455.createElement(StyledList, __assign126({ className }, sanitizeFieldRestProps(rest)), sourceValue.map(function(file, index2) {
      var fileTitleValue = (0, import_get15.default)(file, title) || title;
      var srcValue = (0, import_get15.default)(file, src) || title;
      return React455.createElement(
        "li",
        { key: index2 },
        React455.createElement(Link_default, { href: srcValue, title: fileTitleValue, target, download, ping, rel, variant: "body2", onClick: function(e) {
          return e.stopPropagation();
        } }, fileTitleValue)
      );
    }));
  }
  var titleValue = ((_a13 = (0, import_get15.default)(record, title)) === null || _a13 === void 0 ? void 0 : _a13.toString()) || title;
  return React455.createElement(
    Root29,
    __assign126({ className }, sanitizeFieldRestProps(rest)),
    React455.createElement(Link_default, { href: sourceValue === null || sourceValue === void 0 ? void 0 : sourceValue.toString(), title: titleValue, target, download, ping, rel, variant: "body2" }, titleValue)
  );
};
FileField.propTypes = __assign126(__assign126({}, fieldPropTypes), { src: import_prop_types293.default.string, title: import_prop_types293.default.string, target: import_prop_types293.default.string, download: import_prop_types293.default.oneOfType([import_prop_types293.default.bool, import_prop_types293.default.string]), ping: import_prop_types293.default.string, rel: import_prop_types293.default.string });
var PREFIX74 = "RaFileField";
var Root29 = styled_default2("div", {
  name: PREFIX74,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})({
  display: "inline-block"
});
var StyledList = styled_default2("ul")({
  display: "inline-block"
});

// node_modules/ra-ui-materialui/dist/esm/field/FunctionField.js
var React456 = __toESM(require_react());
var import_react113 = __toESM(require_react());
var import_prop_types294 = __toESM(require_prop_types());
var __assign127 = function() {
  __assign127 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign127.apply(this, arguments);
};
var __rest115 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FunctionField = function(props) {
  var className = props.className, _a13 = props.source, source = _a13 === void 0 ? "" : _a13, render = props.render, rest = __rest115(props, ["className", "source", "render"]);
  var record = useRecordContext(props);
  return (0, import_react113.useMemo)(function() {
    return record ? React456.createElement(Typography_default, __assign127({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), render(record, source)) : null;
  }, [className, record, source, render, rest]);
};
FunctionField.propTypes = __assign127(__assign127(__assign127({}, Typography_default.propTypes), fieldPropTypes), { render: import_prop_types294.default.func.isRequired });

// node_modules/ra-ui-materialui/dist/esm/field/ImageField.js
var React457 = __toESM(require_react());
var import_prop_types295 = __toESM(require_prop_types());
var import_get16 = __toESM(require_get());
var __assign128 = function() {
  __assign128 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign128.apply(this, arguments);
};
var __rest116 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a11;
var ImageField = function(props) {
  var _a13;
  var className = props.className, emptyText = props.emptyText, source = props.source, src = props.src, title = props.title, rest = __rest116(props, ["className", "emptyText", "source", "src", "title"]);
  var record = useRecordContext(props);
  var sourceValue = (0, import_get16.default)(record, source);
  var translate = useTranslate();
  if (!sourceValue) {
    return emptyText ? React457.createElement(Typography_default, __assign128({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, { _: emptyText })) : React457.createElement(Typography_default, __assign128({ component: "div", className }, sanitizeFieldRestProps(rest)));
  }
  if (Array.isArray(sourceValue)) {
    return React457.createElement(
      Root30,
      __assign128({ className }, sanitizeFieldRestProps(rest)),
      React457.createElement("ul", { className: ImageFieldClasses.list }, sourceValue.map(function(file, index2) {
        var fileTitleValue = (0, import_get16.default)(file, title) || title;
        var srcValue = (0, import_get16.default)(file, src) || title;
        return React457.createElement(
          "li",
          { key: index2 },
          React457.createElement("img", { alt: fileTitleValue, title: fileTitleValue, src: srcValue, className: ImageFieldClasses.image })
        );
      }))
    );
  }
  var titleValue = ((_a13 = (0, import_get16.default)(record, title)) === null || _a13 === void 0 ? void 0 : _a13.toString()) || title;
  return React457.createElement(
    Root30,
    __assign128({ className }, sanitizeFieldRestProps(rest)),
    React457.createElement("img", { title: titleValue, alt: titleValue, src: sourceValue === null || sourceValue === void 0 ? void 0 : sourceValue.toString(), className: ImageFieldClasses.image })
  );
};
ImageField.displayName = "ImageField";
ImageField.propTypes = __assign128(__assign128({}, fieldPropTypes), { src: import_prop_types295.default.string, title: import_prop_types295.default.string });
var PREFIX75 = "RaImageField";
var ImageFieldClasses = {
  list: "".concat(PREFIX75, "-list"),
  image: "".concat(PREFIX75, "-image")
};
var Root30 = styled_default2(Box_default2, {
  name: PREFIX75,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a11 = {}, _a11["& .".concat(ImageFieldClasses.list)] = {
  display: "flex",
  listStyleType: "none"
}, _a11["& .".concat(ImageFieldClasses.image)] = {
  margin: "0.25rem",
  width: 200,
  height: 100,
  objectFit: "contain"
}, _a11));

// node_modules/ra-ui-materialui/dist/esm/field/NumberField.js
var React458 = __toESM(require_react());
var import_prop_types296 = __toESM(require_prop_types());
var import_get17 = __toESM(require_get());
var __assign129 = function() {
  __assign129 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign129.apply(this, arguments);
};
var __rest117 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var NumberFieldImpl = function(props) {
  var className = props.className, emptyText = props.emptyText, source = props.source, locales = props.locales, options = props.options, textAlign2 = props.textAlign, _a13 = props.transform, transform = _a13 === void 0 ? defaultTransform2 : _a13, rest = __rest117(props, ["className", "emptyText", "source", "locales", "options", "textAlign", "transform"]);
  var record = useRecordContext(props);
  var translate = useTranslate();
  if (!record) {
    return null;
  }
  var value = (0, import_get17.default)(record, source);
  if (value == null) {
    return emptyText ? React458.createElement(Typography_default, __assign129({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, { _: emptyText })) : null;
  }
  if (transform) {
    value = transform(value);
  }
  return React458.createElement(Typography_default, __assign129({ variant: "body2", component: "span", className }, sanitizeFieldRestProps(rest)), hasNumberFormat && typeof value === "number" ? value.toLocaleString(locales, options) : value);
};
var defaultTransform2 = function(value) {
  return value && typeof value === "string" && !isNaN(value) ? +value : value;
};
NumberFieldImpl.propTypes = __assign129(__assign129(__assign129({}, Typography_default.propTypes), fieldPropTypes), { locales: import_prop_types296.default.oneOfType([
  import_prop_types296.default.string,
  import_prop_types296.default.arrayOf(import_prop_types296.default.string)
]), options: import_prop_types296.default.object });
NumberFieldImpl.displayName = "NumberFieldImpl";
NumberFieldImpl.defaultProps = {
  textAlign: "right"
};
var NumberField = genericMemo(NumberFieldImpl);
var hasNumberFormat = !!(typeof Intl === "object" && Intl && typeof Intl.NumberFormat === "function");

// node_modules/ra-ui-materialui/dist/esm/field/ReferenceArrayField.js
var React461 = __toESM(require_react());
var import_react115 = __toESM(require_react());
var import_prop_types299 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/list/SingleFieldList.js
var React460 = __toESM(require_react());
var import_react114 = __toESM(require_react());
var import_prop_types298 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/Link.js
var React459 = __toESM(require_react());
var import_prop_types297 = __toESM(require_prop_types());
var __assign130 = function() {
  __assign130 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign130.apply(this, arguments);
};
var __rest118 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Link4 = function(props) {
  var to = props.to, children2 = props.children, className = props.className, rest = __rest118(props, ["to", "children", "className"]);
  return React459.createElement(StyledMuiLink, __assign130({ component: Link, to, className: clsx_m_default(LinkClasses.link, className), underline: "none" }, rest), children2);
};
var PREFIX76 = "RaLink";
var LinkClasses = {
  link: "".concat(PREFIX76, "-link")
};
var StyledMuiLink = styled_default2(Link_default)({});
Link4.propTypes = {
  className: import_prop_types297.default.string,
  children: import_prop_types297.default.node,
  to: import_prop_types297.default.oneOfType([import_prop_types297.default.string, import_prop_types297.default.object])
};

// node_modules/ra-ui-materialui/dist/esm/list/SingleFieldList.js
var __assign131 = function() {
  __assign131 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign131.apply(this, arguments);
};
var __rest119 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SingleFieldList = function(props) {
  var className = props.className, children2 = props.children, _a13 = props.linkType, linkType = _a13 === void 0 ? "edit" : _a13, _b = props.component, Component2 = _b === void 0 ? Root31 : _b, rest = __rest119(props, ["className", "children", "linkType", "component"]);
  var _c = useListContext(props), data = _c.data, isLoading = _c.isLoading;
  var resource = useResourceContext(props);
  var createPath = useCreatePath();
  if (isLoading === true) {
    return React460.createElement(LinearProgress_default, null);
  }
  return React460.createElement(Component2, __assign131({ className }, sanitizeListRestProps(rest)), data.map(function(record, rowIndex) {
    var _a14, _b2;
    var resourceLinkPath = !linkType ? false : createPath({
      resource,
      type: linkType,
      id: record.id
    });
    if (resourceLinkPath) {
      return React460.createElement(
        RecordContextProvider,
        { value: record, key: (_a14 = record.id) !== null && _a14 !== void 0 ? _a14 : "row".concat(rowIndex) },
        React460.createElement(Link4, { className: SingleFieldListClasses.link, to: resourceLinkPath, onClick: stopPropagation5 }, (0, import_react114.cloneElement)(import_react114.Children.only(children2), {
          record,
          resource,
          // Workaround to force ChipField to be clickable
          onClick: handleClick
        }))
      );
    }
    return React460.createElement(RecordContextProvider, { value: record, key: (_b2 = record.id) !== null && _b2 !== void 0 ? _b2 : "row".concat(rowIndex) }, children2);
  }));
};
SingleFieldList.propTypes = {
  children: import_prop_types298.default.element.isRequired,
  classes: import_prop_types298.default.object,
  className: import_prop_types298.default.string,
  component: ComponentPropType_default,
  data: import_prop_types298.default.any,
  ids: import_prop_types298.default.array,
  // @ts-ignore
  linkType: import_prop_types298.default.oneOfType([import_prop_types298.default.string, import_prop_types298.default.bool]),
  resource: import_prop_types298.default.string,
  sx: import_prop_types298.default.oneOfType([
    import_prop_types298.default.arrayOf(import_prop_types298.default.oneOfType([
      import_prop_types298.default.func,
      import_prop_types298.default.object,
      import_prop_types298.default.bool
    ])),
    import_prop_types298.default.func,
    import_prop_types298.default.object
  ])
};
var PREFIX77 = "RaSingleFieldList";
var SingleFieldListClasses = {
  link: "".concat(PREFIX77, "-link")
};
var Root31 = styled_default2("div", {
  name: PREFIX77,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    display: "flex",
    flexWrap: "wrap"
  }, _b["& .".concat(SingleFieldListClasses.link)] = {
    textDecoration: "none",
    "& > *": {
      color: theme.palette.primary.main
    }
  }, _b;
});
var stopPropagation5 = function(e) {
  return e.stopPropagation();
};
var handleClick = function() {
};

// node_modules/ra-ui-materialui/dist/esm/field/ReferenceArrayField.js
var __assign132 = function() {
  __assign132 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign132.apply(this, arguments);
};
var ReferenceArrayField = function(props) {
  var filter = props.filter, _a13 = props.page, page = _a13 === void 0 ? 1 : _a13, perPage = props.perPage, reference2 = props.reference, resource = props.resource, sort = props.sort, source = props.source;
  var record = useRecordContext(props);
  var controllerProps = useReferenceArrayFieldController({
    filter,
    page,
    perPage,
    record,
    reference: reference2,
    resource,
    sort,
    source
  });
  return React461.createElement(
    ResourceContextProvider,
    { value: reference2 },
    React461.createElement(
      ListContextProvider,
      { value: controllerProps },
      React461.createElement(PureReferenceArrayFieldView, __assign132({}, props))
    )
  );
};
ReferenceArrayField.propTypes = __assign132(__assign132({}, fieldPropTypes), { className: import_prop_types299.default.string, children: import_prop_types299.default.node, label: fieldPropTypes.label, record: import_prop_types299.default.any, reference: import_prop_types299.default.string.isRequired, resource: import_prop_types299.default.string, sortBy: import_prop_types299.default.string, sortByOrder: fieldPropTypes.sortByOrder, source: import_prop_types299.default.string.isRequired });
var ReferenceArrayFieldView = function(props) {
  var children2 = props.children, pagination = props.pagination, reference2 = props.reference, className = props.className, sx = props.sx;
  var _a13 = useListContext(props), isLoading = _a13.isLoading, total = _a13.total;
  var recordRepresentation = useResourceDefinition({
    resource: reference2
  }).recordRepresentation;
  var child = children2 ? children2 : React461.createElement(
    SingleFieldList,
    null,
    React461.createElement(ChipField, { source: typeof recordRepresentation === "string" ? recordRepresentation : "id", size: "small" })
  );
  return React461.createElement(Root32, { className, sx }, isLoading ? React461.createElement(LinearProgress3, { className: ReferenceArrayFieldClasses.progress }) : React461.createElement(
    "span",
    null,
    child,
    pagination && total !== void 0 ? pagination : null
  ));
};
ReferenceArrayFieldView.propTypes = {
  className: import_prop_types299.default.string,
  children: import_prop_types299.default.node,
  reference: import_prop_types299.default.string.isRequired
};
var PREFIX78 = "RaReferenceArrayField";
var ReferenceArrayFieldClasses = {
  progress: "".concat(PREFIX78, "-progress")
};
var Root32 = styled_default2("div", {
  name: PREFIX78,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(ReferenceArrayFieldClasses.progress)] = {
    marginTop: theme.spacing(2)
  }, _b;
});
var PureReferenceArrayFieldView = (0, import_react115.memo)(ReferenceArrayFieldView);

// node_modules/ra-ui-materialui/dist/esm/field/ReferenceField.js
var React462 = __toESM(require_react());
var import_prop_types300 = __toESM(require_prop_types());
var import_get18 = __toESM(require_get());
var import_Error2 = __toESM(require_Error());
var __assign133 = function() {
  __assign133 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign133.apply(this, arguments);
};
var __rest120 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ReferenceField = function(props) {
  var source = props.source, emptyText = props.emptyText, _a13 = props.link, link = _a13 === void 0 ? "edit" : _a13, rest = __rest120(props, ["source", "emptyText", "link"]);
  var record = useRecordContext(props);
  var id = (0, import_get18.default)(record, source);
  var translate = useTranslate();
  return id == null ? emptyText ? React462.createElement(Typography_default, { component: "span", variant: "body2" }, emptyText && translate(emptyText, { _: emptyText })) : null : React462.createElement(NonEmptyReferenceField, __assign133({}, rest, { link, emptyText, record, id }));
};
ReferenceField.propTypes = {
  children: import_prop_types300.default.node,
  className: import_prop_types300.default.string,
  cellClassName: import_prop_types300.default.string,
  headerClassName: import_prop_types300.default.string,
  label: fieldPropTypes.label,
  record: import_prop_types300.default.any,
  reference: import_prop_types300.default.string.isRequired,
  resource: import_prop_types300.default.string,
  sortBy: import_prop_types300.default.string,
  sortByOrder: fieldPropTypes.sortByOrder,
  source: import_prop_types300.default.string.isRequired,
  translateChoice: import_prop_types300.default.oneOfType([import_prop_types300.default.func, import_prop_types300.default.bool]),
  // @ts-ignore
  link: import_prop_types300.default.oneOfType([
    import_prop_types300.default.string,
    import_prop_types300.default.bool,
    import_prop_types300.default.func
  ])
};
var NonEmptyReferenceField = function(_a13) {
  var children2 = _a13.children, id = _a13.id, reference2 = _a13.reference, queryOptions = _a13.queryOptions, link = _a13.link, props = __rest120(_a13, ["children", "id", "reference", "queryOptions", "link"]);
  return React462.createElement(
    ResourceContextProvider,
    { value: reference2 },
    React462.createElement(PureReferenceFieldView, __assign133({ reference: reference2 }, props, useReference({
      reference: reference2,
      id,
      options: queryOptions
    }), { resourceLinkPath: link }), children2)
  );
};
var stopPropagation6 = function(e) {
  return e.stopPropagation();
};
var ReferenceFieldView = function(props) {
  var children2 = props.children, className = props.className, emptyText = props.emptyText, error = props.error, isLoading = props.isLoading, reference2 = props.reference, referenceRecord = props.referenceRecord, resourceLinkPath = props.resourceLinkPath, sx = props.sx;
  var getRecordRepresentation = useGetRecordRepresentation(reference2);
  var translate = useTranslate();
  var createPath = useCreatePath();
  var resourceDefinition = useResourceDefinition({ resource: reference2 });
  if (error) {
    return (
      /* eslint-disable jsx-a11y/role-supports-aria-props */
      React462.createElement(import_Error2.default, { "aria-errormessage": error.message ? error.message : error, role: "presentation", color: "error", fontSize: "small" })
    );
  }
  if (isLoading) {
    return React462.createElement(LinearProgress3, null);
  }
  if (!referenceRecord) {
    return emptyText ? React462.createElement(React462.Fragment, null, emptyText && translate(emptyText, { _: emptyText })) : null;
  }
  var link = resourceLinkPath === false || resourceLinkPath === "edit" && !resourceDefinition.hasEdit || resourceLinkPath === "show" && !resourceDefinition.hasShow ? false : createPath({
    resource: reference2,
    id: referenceRecord.id,
    type: typeof resourceLinkPath === "function" ? resourceLinkPath(referenceRecord, reference2) : resourceLinkPath
  });
  var child = children2 || React462.createElement(Typography_default, { component: "span", variant: "body2" }, getRecordRepresentation(referenceRecord));
  if (link) {
    return React462.createElement(
      Root33,
      { className, sx },
      React462.createElement(
        RecordContextProvider,
        { value: referenceRecord },
        React462.createElement(Link4, { to: link, className: ReferenceFieldClasses.link, onClick: stopPropagation6 }, child)
      )
    );
  }
  return React462.createElement(RecordContextProvider, { value: referenceRecord }, child);
};
ReferenceFieldView.propTypes = {
  children: import_prop_types300.default.element,
  className: import_prop_types300.default.string,
  isLoading: import_prop_types300.default.bool,
  record: import_prop_types300.default.any,
  reference: import_prop_types300.default.string,
  referenceRecord: import_prop_types300.default.any,
  resource: import_prop_types300.default.string,
  // @ts-ignore
  resourceLinkPath: import_prop_types300.default.oneOfType([
    import_prop_types300.default.string,
    import_prop_types300.default.bool,
    import_prop_types300.default.func
  ]).isRequired,
  source: import_prop_types300.default.string,
  translateChoice: import_prop_types300.default.oneOfType([import_prop_types300.default.func, import_prop_types300.default.bool])
};
var PureReferenceFieldView = genericMemo(ReferenceFieldView);
var PREFIX79 = "RaReferenceField";
var ReferenceFieldClasses = {
  link: "".concat(PREFIX79, "-link")
};
var Root33 = styled_default2("span", {
  name: PREFIX79,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    lineHeight: "initial"
  }, _b["& .".concat(ReferenceFieldClasses.link)] = {
    "& > *": {
      color: theme.palette.primary.main
    }
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/field/ReferenceManyCount.js
var import_react116 = __toESM(require_react());
var import_Error3 = __toESM(require_Error());
var __assign134 = function() {
  __assign134 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign134.apply(this, arguments);
};
var __rest121 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ReferenceManyCount = function(props) {
  var _a13;
  var reference2 = props.reference, target = props.target, filter = props.filter, sort = props.sort, link = props.link, resource = props.resource, _b = props.source, source = _b === void 0 ? "id" : _b, _c = props.timeout, timeout2 = _c === void 0 ? 1e3 : _c, rest = __rest121(props, ["reference", "target", "filter", "sort", "link", "resource", "source", "timeout"]);
  var record = useRecordContext(props);
  var oneSecondHasPassed = useTimeout(timeout2);
  var createPath = useCreatePath();
  var _d = useReferenceManyFieldController({
    filter,
    sort,
    page: 1,
    perPage: 1,
    record,
    reference: reference2,
    // @ts-ignore remove when #8491 is released
    resource,
    source,
    target
  }), isLoading = _d.isLoading, error = _d.error, total = _d.total;
  var body2 = isLoading ? oneSecondHasPassed ? import_react116.default.createElement(CircularProgress_default, { size: 14 }) : "" : error ? import_react116.default.createElement(import_Error3.default, { color: "error", fontSize: "small", titleAccess: "error" }) : total;
  return link ? import_react116.default.createElement(Link4, __assign134({ to: {
    pathname: createPath({ resource: reference2, type: "list" }),
    search: "filter=".concat(JSON.stringify(__assign134(__assign134({}, filter || {}), (_a13 = {}, _a13[target] = record[source], _a13))))
  }, variant: "body2", onClick: function(e) {
    return e.stopPropagation();
  } }, sanitizeFieldRestProps(rest)), body2) : import_react116.default.createElement(Typography_default, __assign134({ component: "span", variant: "body2" }, sanitizeFieldRestProps(rest)), body2);
};

// node_modules/ra-ui-materialui/dist/esm/field/ReferenceManyField.js
var import_react117 = __toESM(require_react());
var import_prop_types301 = __toESM(require_prop_types());
var ReferenceManyField = function(props) {
  var children2 = props.children, _a13 = props.filter, filter = _a13 === void 0 ? defaultFilter2 : _a13, _b = props.page, page = _b === void 0 ? 1 : _b, _c = props.pagination, pagination = _c === void 0 ? null : _c, _d = props.perPage, perPage = _d === void 0 ? 25 : _d, reference2 = props.reference, resource = props.resource, _e = props.sort, sort = _e === void 0 ? defaultSort : _e, _f = props.source, source = _f === void 0 ? "id" : _f, target = props.target;
  var record = useRecordContext(props);
  var controllerProps = useReferenceManyFieldController({
    filter,
    page,
    perPage,
    record,
    reference: reference2,
    resource,
    sort,
    source,
    target
  });
  return import_react117.default.createElement(
    ResourceContextProvider,
    { value: reference2 },
    import_react117.default.createElement(
      ListContextProvider,
      { value: controllerProps },
      children2,
      pagination
    )
  );
};
ReferenceManyField.propTypes = {
  children: import_prop_types301.default.node.isRequired,
  className: import_prop_types301.default.string,
  filter: import_prop_types301.default.object,
  label: fieldPropTypes.label,
  perPage: import_prop_types301.default.number,
  record: import_prop_types301.default.any,
  reference: import_prop_types301.default.string.isRequired,
  resource: import_prop_types301.default.string,
  sortBy: import_prop_types301.default.string,
  sortByOrder: fieldPropTypes.sortByOrder,
  source: import_prop_types301.default.string,
  sort: import_prop_types301.default.exact({
    field: import_prop_types301.default.string,
    order: import_prop_types301.default.string
  }),
  target: import_prop_types301.default.string.isRequired
};
var ReferenceManyFieldView = function(props) {
  var children2 = props.children, pagination = props.pagination;
  if (true) {
    console.error("<ReferenceManyFieldView> is deprecated, use <ReferenceManyField> directly");
  }
  return import_react117.default.createElement(
    import_react117.default.Fragment,
    null,
    children2,
    pagination && props.total !== void 0 ? pagination : null
  );
};
ReferenceManyFieldView.propTypes = {
  children: import_prop_types301.default.element,
  className: import_prop_types301.default.string,
  sort: import_prop_types301.default.exact({
    field: import_prop_types301.default.string,
    order: import_prop_types301.default.string
  }),
  data: import_prop_types301.default.any,
  isLoading: import_prop_types301.default.bool,
  pagination: import_prop_types301.default.element,
  reference: import_prop_types301.default.string,
  setSort: import_prop_types301.default.func
};
var defaultFilter2 = {};
var defaultSort = { field: "id", order: "DESC" };

// node_modules/ra-ui-materialui/dist/esm/field/ReferenceOneField.js
var import_react118 = __toESM(require_react());
var import_prop_types302 = __toESM(require_prop_types());
var ReferenceOneField = function(props) {
  var children2 = props.children, reference2 = props.reference, _a13 = props.source, source = _a13 === void 0 ? "id" : _a13, target = props.target, emptyText = props.emptyText, sort = props.sort, filter = props.filter, _b = props.link, link = _b === void 0 ? false : _b, queryOptions = props.queryOptions;
  var record = useRecordContext(props);
  var createPath = useCreatePath();
  var translate = useTranslate();
  var _c = useReferenceOneFieldController({
    record,
    reference: reference2,
    source,
    target,
    sort,
    filter,
    queryOptions
  }), isLoading = _c.isLoading, isFetching = _c.isFetching, referenceRecord = _c.referenceRecord, error = _c.error, refetch = _c.refetch;
  var resourceLinkPath = link === false ? false : createPath({
    resource: reference2,
    id: referenceRecord === null || referenceRecord === void 0 ? void 0 : referenceRecord.id,
    type: typeof link === "function" ? link(record, reference2) : link
  });
  return !record || !isLoading && referenceRecord == null ? emptyText ? import_react118.default.createElement(Typography_default, { component: "span", variant: "body2" }, emptyText && translate(emptyText, { _: emptyText })) : null : import_react118.default.createElement(
    ResourceContextProvider,
    { value: reference2 },
    import_react118.default.createElement(ReferenceFieldView, { isLoading, isFetching, referenceRecord, resourceLinkPath, reference: reference2, refetch, error }, children2)
  );
};
ReferenceOneField.propTypes = {
  children: import_prop_types302.default.node,
  className: import_prop_types302.default.string,
  label: fieldPropTypes.label,
  record: import_prop_types302.default.any,
  reference: import_prop_types302.default.string.isRequired,
  source: import_prop_types302.default.string,
  target: import_prop_types302.default.string.isRequired,
  queryOptions: import_prop_types302.default.any
};
ReferenceOneField.defaultProps = {
  // disable sorting on this field by default as its default source prop ('id')
  // will match the default sort ({ field: 'id', order: 'DESC'})
  // leading to an incorrect sort indicator in a datagrid header
  sortable: false
};

// node_modules/ra-ui-materialui/dist/esm/field/RichTextField.js
var React466 = __toESM(require_react());
var import_prop_types303 = __toESM(require_prop_types());
var import_get19 = __toESM(require_get());

// node_modules/dompurify/dist/purify.es.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray3(arr) || _nonIterableSpread2();
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray3(arr);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var hasOwnProperty2 = Object.hasOwnProperty;
var setPrototypeOf = Object.setPrototypeOf;
var isFrozen = Object.isFrozen;
var getPrototypeOf = Object.getPrototypeOf;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var freeze = Object.freeze;
var seal = Object.seal;
var create = Object.create;
var _ref = typeof Reflect !== "undefined" && Reflect;
var apply = _ref.apply;
var construct = _ref.construct;
if (!apply) {
  apply = function apply2(fun, thisValue, args) {
    return fun.apply(thisValue, args);
  };
}
if (!freeze) {
  freeze = function freeze2(x) {
    return x;
  };
}
if (!seal) {
  seal = function seal2(x) {
    return x;
  };
}
if (!construct) {
  construct = function construct2(Func, args) {
    return _construct(Func, _toConsumableArray2(args));
  };
}
var arrayForEach = unapply(Array.prototype.forEach);
var arrayPop = unapply(Array.prototype.pop);
var arrayPush = unapply(Array.prototype.push);
var stringToLowerCase = unapply(String.prototype.toLowerCase);
var stringToString = unapply(String.prototype.toString);
var stringMatch = unapply(String.prototype.match);
var stringReplace = unapply(String.prototype.replace);
var stringIndexOf = unapply(String.prototype.indexOf);
var stringTrim = unapply(String.prototype.trim);
var regExpTest = unapply(RegExp.prototype.test);
var typeErrorCreate = unconstruct(TypeError);
function unapply(func) {
  return function(thisArg) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return apply(func, thisArg, args);
  };
}
function unconstruct(func) {
  return function() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return construct(func, args);
  };
}
function addToSet(set3, array, transformCaseFunc) {
  var _transformCaseFunc;
  transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;
  if (setPrototypeOf) {
    setPrototypeOf(set3, null);
  }
  var l = array.length;
  while (l--) {
    var element = array[l];
    if (typeof element === "string") {
      var lcElement = transformCaseFunc(element);
      if (lcElement !== element) {
        if (!isFrozen(array)) {
          array[l] = lcElement;
        }
        element = lcElement;
      }
    }
    set3[element] = true;
  }
  return set3;
}
function clone(object) {
  var newObject = create(null);
  var property;
  for (property in object) {
    if (apply(hasOwnProperty2, object, [property]) === true) {
      newObject[property] = object[property];
    }
  }
  return newObject;
}
function lookupGetter(object, prop) {
  while (object !== null) {
    var desc = getOwnPropertyDescriptor(object, prop);
    if (desc) {
      if (desc.get) {
        return unapply(desc.get);
      }
      if (typeof desc.value === "function") {
        return unapply(desc.value);
      }
    }
    object = getPrototypeOf(object);
  }
  function fallbackValue(element) {
    console.warn("fallback value for", element);
    return null;
  }
  return fallbackValue;
}
var html$1 = freeze(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]);
var svg$1 = freeze(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]);
var svgFilters = freeze(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]);
var svgDisallowed = freeze(["animate", "color-profile", "cursor", "discard", "fedropshadow", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]);
var mathMl$1 = freeze(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover"]);
var mathMlDisallowed = freeze(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]);
var text = freeze(["#text"]);
var html2 = freeze(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "xmlns", "slot"]);
var svg = freeze(["accent-height", "accumulate", "additive", "alignment-baseline", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]);
var mathMl = freeze(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]);
var xml = freeze(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]);
var MUSTACHE_EXPR = seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm);
var ERB_EXPR = seal(/<%[\w\W]*|[\w\W]*%>/gm);
var TMPLIT_EXPR = seal(/\${[\w\W]*}/gm);
var DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]/);
var ARIA_ATTR = seal(/^aria-[\-\w]+$/);
var IS_ALLOWED_URI = seal(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
);
var IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
var ATTR_WHITESPACE = seal(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
);
var DOCTYPE_NAME = seal(/^html$/i);
var getGlobal = function getGlobal2() {
  return typeof window === "undefined" ? null : window;
};
var _createTrustedTypesPolicy = function _createTrustedTypesPolicy2(trustedTypes, document2) {
  if (_typeof(trustedTypes) !== "object" || typeof trustedTypes.createPolicy !== "function") {
    return null;
  }
  var suffix = null;
  var ATTR_NAME = "data-tt-policy-suffix";
  if (document2.currentScript && document2.currentScript.hasAttribute(ATTR_NAME)) {
    suffix = document2.currentScript.getAttribute(ATTR_NAME);
  }
  var policyName = "dompurify" + (suffix ? "#" + suffix : "");
  try {
    return trustedTypes.createPolicy(policyName, {
      createHTML: function createHTML(html3) {
        return html3;
      },
      createScriptURL: function createScriptURL(scriptUrl) {
        return scriptUrl;
      }
    });
  } catch (_5) {
    console.warn("TrustedTypes policy " + policyName + " could not be created.");
    return null;
  }
};
function createDOMPurify() {
  var window2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : getGlobal();
  var DOMPurify = function DOMPurify2(root) {
    return createDOMPurify(root);
  };
  DOMPurify.version = "2.4.7";
  DOMPurify.removed = [];
  if (!window2 || !window2.document || window2.document.nodeType !== 9) {
    DOMPurify.isSupported = false;
    return DOMPurify;
  }
  var originalDocument = window2.document;
  var document2 = window2.document;
  var DocumentFragment2 = window2.DocumentFragment, HTMLTemplateElement = window2.HTMLTemplateElement, Node2 = window2.Node, Element2 = window2.Element, NodeFilter = window2.NodeFilter, _window$NamedNodeMap = window2.NamedNodeMap, NamedNodeMap = _window$NamedNodeMap === void 0 ? window2.NamedNodeMap || window2.MozNamedAttrMap : _window$NamedNodeMap, HTMLFormElement = window2.HTMLFormElement, DOMParser = window2.DOMParser, trustedTypes = window2.trustedTypes;
  var ElementPrototype = Element2.prototype;
  var cloneNode = lookupGetter(ElementPrototype, "cloneNode");
  var getNextSibling = lookupGetter(ElementPrototype, "nextSibling");
  var getChildNodes = lookupGetter(ElementPrototype, "childNodes");
  var getParentNode3 = lookupGetter(ElementPrototype, "parentNode");
  if (typeof HTMLTemplateElement === "function") {
    var template = document2.createElement("template");
    if (template.content && template.content.ownerDocument) {
      document2 = template.content.ownerDocument;
    }
  }
  var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);
  var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML("") : "";
  var _document = document2, implementation = _document.implementation, createNodeIterator = _document.createNodeIterator, createDocumentFragment = _document.createDocumentFragment, getElementsByTagName = _document.getElementsByTagName;
  var importNode = originalDocument.importNode;
  var documentMode = {};
  try {
    documentMode = clone(document2).documentMode ? document2.documentMode : {};
  } catch (_5) {
  }
  var hooks = {};
  DOMPurify.isSupported = typeof getParentNode3 === "function" && implementation && implementation.createHTMLDocument !== void 0 && documentMode !== 9;
  var MUSTACHE_EXPR$1 = MUSTACHE_EXPR, ERB_EXPR$1 = ERB_EXPR, TMPLIT_EXPR$1 = TMPLIT_EXPR, DATA_ATTR$1 = DATA_ATTR, ARIA_ATTR$1 = ARIA_ATTR, IS_SCRIPT_OR_DATA$1 = IS_SCRIPT_OR_DATA, ATTR_WHITESPACE$1 = ATTR_WHITESPACE;
  var IS_ALLOWED_URI$1 = IS_ALLOWED_URI;
  var ALLOWED_TAGS = null;
  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray2(html$1), _toConsumableArray2(svg$1), _toConsumableArray2(svgFilters), _toConsumableArray2(mathMl$1), _toConsumableArray2(text)));
  var ALLOWED_ATTR = null;
  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray2(html2), _toConsumableArray2(svg), _toConsumableArray2(mathMl), _toConsumableArray2(xml)));
  var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {
    tagNameCheck: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: null
    },
    attributeNameCheck: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: false
    }
  }));
  var FORBID_TAGS = null;
  var FORBID_ATTR = null;
  var ALLOW_ARIA_ATTR = true;
  var ALLOW_DATA_ATTR = true;
  var ALLOW_UNKNOWN_PROTOCOLS = false;
  var ALLOW_SELF_CLOSE_IN_ATTR = true;
  var SAFE_FOR_TEMPLATES = false;
  var WHOLE_DOCUMENT = false;
  var SET_CONFIG = false;
  var FORCE_BODY = false;
  var RETURN_DOM = false;
  var RETURN_DOM_FRAGMENT = false;
  var RETURN_TRUSTED_TYPE = false;
  var SANITIZE_DOM = true;
  var SANITIZE_NAMED_PROPS = false;
  var SANITIZE_NAMED_PROPS_PREFIX = "user-content-";
  var KEEP_CONTENT = true;
  var IN_PLACE = false;
  var USE_PROFILES = {};
  var FORBID_CONTENTS = null;
  var DEFAULT_FORBID_CONTENTS = addToSet({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  var DATA_URI_TAGS = null;
  var DEFAULT_DATA_URI_TAGS = addToSet({}, ["audio", "video", "img", "source", "image", "track"]);
  var URI_SAFE_ATTRIBUTES = null;
  var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]);
  var MATHML_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
  var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
  var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
  var NAMESPACE = HTML_NAMESPACE;
  var IS_EMPTY_INPUT = false;
  var ALLOWED_NAMESPACES = null;
  var DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);
  var PARSER_MEDIA_TYPE;
  var SUPPORTED_PARSER_MEDIA_TYPES = ["application/xhtml+xml", "text/html"];
  var DEFAULT_PARSER_MEDIA_TYPE = "text/html";
  var transformCaseFunc;
  var CONFIG = null;
  var formElement = document2.createElement("form");
  var isRegexOrFunction = function isRegexOrFunction2(testValue) {
    return testValue instanceof RegExp || testValue instanceof Function;
  };
  var _parseConfig = function _parseConfig2(cfg) {
    if (CONFIG && CONFIG === cfg) {
      return;
    }
    if (!cfg || _typeof(cfg) !== "object") {
      cfg = {};
    }
    cfg = clone(cfg);
    PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes
    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;
    transformCaseFunc = PARSER_MEDIA_TYPE === "application/xhtml+xml" ? stringToString : stringToLowerCase;
    ALLOWED_TAGS = "ALLOWED_TAGS" in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;
    ALLOWED_ATTR = "ALLOWED_ATTR" in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;
    ALLOWED_NAMESPACES = "ALLOWED_NAMESPACES" in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;
    URI_SAFE_ATTRIBUTES = "ADD_URI_SAFE_ATTR" in cfg ? addToSet(
      clone(DEFAULT_URI_SAFE_ATTRIBUTES),
      // eslint-disable-line indent
      cfg.ADD_URI_SAFE_ATTR,
      // eslint-disable-line indent
      transformCaseFunc
      // eslint-disable-line indent
    ) : DEFAULT_URI_SAFE_ATTRIBUTES;
    DATA_URI_TAGS = "ADD_DATA_URI_TAGS" in cfg ? addToSet(
      clone(DEFAULT_DATA_URI_TAGS),
      // eslint-disable-line indent
      cfg.ADD_DATA_URI_TAGS,
      // eslint-disable-line indent
      transformCaseFunc
      // eslint-disable-line indent
    ) : DEFAULT_DATA_URI_TAGS;
    FORBID_CONTENTS = "FORBID_CONTENTS" in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;
    FORBID_TAGS = "FORBID_TAGS" in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};
    FORBID_ATTR = "FORBID_ATTR" in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};
    USE_PROFILES = "USE_PROFILES" in cfg ? cfg.USE_PROFILES : false;
    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false;
    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false;
    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false;
    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false;
    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false;
    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false;
    RETURN_DOM = cfg.RETURN_DOM || false;
    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false;
    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false;
    FORCE_BODY = cfg.FORCE_BODY || false;
    SANITIZE_DOM = cfg.SANITIZE_DOM !== false;
    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false;
    KEEP_CONTENT = cfg.KEEP_CONTENT !== false;
    IN_PLACE = cfg.IN_PLACE || false;
    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$1;
    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};
    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {
      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;
    }
    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {
      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;
    }
    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === "boolean") {
      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;
    }
    if (SAFE_FOR_TEMPLATES) {
      ALLOW_DATA_ATTR = false;
    }
    if (RETURN_DOM_FRAGMENT) {
      RETURN_DOM = true;
    }
    if (USE_PROFILES) {
      ALLOWED_TAGS = addToSet({}, _toConsumableArray2(text));
      ALLOWED_ATTR = [];
      if (USE_PROFILES.html === true) {
        addToSet(ALLOWED_TAGS, html$1);
        addToSet(ALLOWED_ATTR, html2);
      }
      if (USE_PROFILES.svg === true) {
        addToSet(ALLOWED_TAGS, svg$1);
        addToSet(ALLOWED_ATTR, svg);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.svgFilters === true) {
        addToSet(ALLOWED_TAGS, svgFilters);
        addToSet(ALLOWED_ATTR, svg);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.mathMl === true) {
        addToSet(ALLOWED_TAGS, mathMl$1);
        addToSet(ALLOWED_ATTR, mathMl);
        addToSet(ALLOWED_ATTR, xml);
      }
    }
    if (cfg.ADD_TAGS) {
      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
        ALLOWED_TAGS = clone(ALLOWED_TAGS);
      }
      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);
    }
    if (cfg.ADD_ATTR) {
      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
        ALLOWED_ATTR = clone(ALLOWED_ATTR);
      }
      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);
    }
    if (cfg.ADD_URI_SAFE_ATTR) {
      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);
    }
    if (cfg.FORBID_CONTENTS) {
      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
        FORBID_CONTENTS = clone(FORBID_CONTENTS);
      }
      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);
    }
    if (KEEP_CONTENT) {
      ALLOWED_TAGS["#text"] = true;
    }
    if (WHOLE_DOCUMENT) {
      addToSet(ALLOWED_TAGS, ["html", "head", "body"]);
    }
    if (ALLOWED_TAGS.table) {
      addToSet(ALLOWED_TAGS, ["tbody"]);
      delete FORBID_TAGS.tbody;
    }
    if (freeze) {
      freeze(cfg);
    }
    CONFIG = cfg;
  };
  var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ["mi", "mo", "mn", "ms", "mtext"]);
  var HTML_INTEGRATION_POINTS = addToSet({}, ["foreignobject", "desc", "title", "annotation-xml"]);
  var COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ["title", "style", "font", "a", "script"]);
  var ALL_SVG_TAGS = addToSet({}, svg$1);
  addToSet(ALL_SVG_TAGS, svgFilters);
  addToSet(ALL_SVG_TAGS, svgDisallowed);
  var ALL_MATHML_TAGS = addToSet({}, mathMl$1);
  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);
  var _checkValidNamespace = function _checkValidNamespace2(element) {
    var parent = getParentNode3(element);
    if (!parent || !parent.tagName) {
      parent = {
        namespaceURI: NAMESPACE,
        tagName: "template"
      };
    }
    var tagName = stringToLowerCase(element.tagName);
    var parentTagName = stringToLowerCase(parent.tagName);
    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {
      return false;
    }
    if (element.namespaceURI === SVG_NAMESPACE) {
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === "svg";
      }
      if (parent.namespaceURI === MATHML_NAMESPACE) {
        return tagName === "svg" && (parentTagName === "annotation-xml" || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
      }
      return Boolean(ALL_SVG_TAGS[tagName]);
    }
    if (element.namespaceURI === MATHML_NAMESPACE) {
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === "math";
      }
      if (parent.namespaceURI === SVG_NAMESPACE) {
        return tagName === "math" && HTML_INTEGRATION_POINTS[parentTagName];
      }
      return Boolean(ALL_MATHML_TAGS[tagName]);
    }
    if (element.namespaceURI === HTML_NAMESPACE) {
      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }
      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }
      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);
    }
    if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && ALLOWED_NAMESPACES[element.namespaceURI]) {
      return true;
    }
    return false;
  };
  var _forceRemove = function _forceRemove2(node2) {
    arrayPush(DOMPurify.removed, {
      element: node2
    });
    try {
      node2.parentNode.removeChild(node2);
    } catch (_5) {
      try {
        node2.outerHTML = emptyHTML;
      } catch (_6) {
        node2.remove();
      }
    }
  };
  var _removeAttribute = function _removeAttribute2(name, node2) {
    try {
      arrayPush(DOMPurify.removed, {
        attribute: node2.getAttributeNode(name),
        from: node2
      });
    } catch (_5) {
      arrayPush(DOMPurify.removed, {
        attribute: null,
        from: node2
      });
    }
    node2.removeAttribute(name);
    if (name === "is" && !ALLOWED_ATTR[name]) {
      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
        try {
          _forceRemove(node2);
        } catch (_5) {
        }
      } else {
        try {
          node2.setAttribute(name, "");
        } catch (_5) {
        }
      }
    }
  };
  var _initDocument = function _initDocument2(dirty) {
    var doc;
    var leadingWhitespace;
    if (FORCE_BODY) {
      dirty = "<remove></remove>" + dirty;
    } else {
      var matches2 = stringMatch(dirty, /^[\r\n\t ]+/);
      leadingWhitespace = matches2 && matches2[0];
    }
    if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && NAMESPACE === HTML_NAMESPACE) {
      dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + "</body></html>";
    }
    var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
    if (NAMESPACE === HTML_NAMESPACE) {
      try {
        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
      } catch (_5) {
      }
    }
    if (!doc || !doc.documentElement) {
      doc = implementation.createDocument(NAMESPACE, "template", null);
      try {
        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;
      } catch (_5) {
      }
    }
    var body2 = doc.body || doc.documentElement;
    if (dirty && leadingWhitespace) {
      body2.insertBefore(document2.createTextNode(leadingWhitespace), body2.childNodes[0] || null);
    }
    if (NAMESPACE === HTML_NAMESPACE) {
      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? "html" : "body")[0];
    }
    return WHOLE_DOCUMENT ? doc.documentElement : body2;
  };
  var _createIterator = function _createIterator2(root) {
    return createNodeIterator.call(
      root.ownerDocument || root,
      root,
      // eslint-disable-next-line no-bitwise
      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,
      null,
      false
    );
  };
  var _isClobbered = function _isClobbered2(elm) {
    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== "string" || typeof elm.textContent !== "string" || typeof elm.removeChild !== "function" || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== "function" || typeof elm.setAttribute !== "function" || typeof elm.namespaceURI !== "string" || typeof elm.insertBefore !== "function" || typeof elm.hasChildNodes !== "function");
  };
  var _isNode = function _isNode2(object) {
    return _typeof(Node2) === "object" ? object instanceof Node2 : object && _typeof(object) === "object" && typeof object.nodeType === "number" && typeof object.nodeName === "string";
  };
  var _executeHook = function _executeHook2(entryPoint, currentNode, data) {
    if (!hooks[entryPoint]) {
      return;
    }
    arrayForEach(hooks[entryPoint], function(hook) {
      hook.call(DOMPurify, currentNode, data, CONFIG);
    });
  };
  var _sanitizeElements = function _sanitizeElements2(currentNode) {
    var content;
    _executeHook("beforeSanitizeElements", currentNode, null);
    if (_isClobbered(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }
    if (regExpTest(/[\u0080-\uFFFF]/, currentNode.nodeName)) {
      _forceRemove(currentNode);
      return true;
    }
    var tagName = transformCaseFunc(currentNode.nodeName);
    _executeHook("uponSanitizeElement", currentNode, {
      tagName,
      allowedTags: ALLOWED_TAGS
    });
    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
      _forceRemove(currentNode);
      return true;
    }
    if (tagName === "select" && regExpTest(/<template/i, currentNode.innerHTML)) {
      _forceRemove(currentNode);
      return true;
    }
    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {
        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName))
          return false;
        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName))
          return false;
      }
      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
        var parentNode = getParentNode3(currentNode) || currentNode.parentNode;
        var childNodes = getChildNodes(currentNode) || currentNode.childNodes;
        if (childNodes && parentNode) {
          var childCount = childNodes.length;
          for (var i = childCount - 1; i >= 0; --i) {
            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));
          }
        }
      }
      _forceRemove(currentNode);
      return true;
    }
    if (currentNode instanceof Element2 && !_checkValidNamespace(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }
    if ((tagName === "noscript" || tagName === "noembed" || tagName === "noframes") && regExpTest(/<\/no(script|embed|frames)/i, currentNode.innerHTML)) {
      _forceRemove(currentNode);
      return true;
    }
    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
      content = currentNode.textContent;
      content = stringReplace(content, MUSTACHE_EXPR$1, " ");
      content = stringReplace(content, ERB_EXPR$1, " ");
      content = stringReplace(content, TMPLIT_EXPR$1, " ");
      if (currentNode.textContent !== content) {
        arrayPush(DOMPurify.removed, {
          element: currentNode.cloneNode()
        });
        currentNode.textContent = content;
      }
    }
    _executeHook("afterSanitizeElements", currentNode, null);
    return false;
  };
  var _isValidAttribute = function _isValidAttribute2(lcTag, lcName, value) {
    if (SANITIZE_DOM && (lcName === "id" || lcName === "name") && (value in document2 || value in formElement)) {
      return false;
    }
    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$1, lcName))
      ;
    else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$1, lcName))
      ;
    else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
      if (
        // First condition does a very basic check if a) it's basically a valid custom element tagname AND
        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND
        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        lcName === "is" && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))
      )
        ;
      else {
        return false;
      }
    } else if (URI_SAFE_ATTRIBUTES[lcName])
      ;
    else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE$1, "")))
      ;
    else if ((lcName === "src" || lcName === "xlink:href" || lcName === "href") && lcTag !== "script" && stringIndexOf(value, "data:") === 0 && DATA_URI_TAGS[lcTag])
      ;
    else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$1, stringReplace(value, ATTR_WHITESPACE$1, "")))
      ;
    else if (value) {
      return false;
    } else
      ;
    return true;
  };
  var _basicCustomElementTest = function _basicCustomElementTest2(tagName) {
    return tagName.indexOf("-") > 0;
  };
  var _sanitizeAttributes = function _sanitizeAttributes2(currentNode) {
    var attr;
    var value;
    var lcName;
    var l;
    _executeHook("beforeSanitizeAttributes", currentNode, null);
    var attributes = currentNode.attributes;
    if (!attributes) {
      return;
    }
    var hookEvent = {
      attrName: "",
      attrValue: "",
      keepAttr: true,
      allowedAttributes: ALLOWED_ATTR
    };
    l = attributes.length;
    while (l--) {
      attr = attributes[l];
      var _attr = attr, name = _attr.name, namespaceURI = _attr.namespaceURI;
      value = name === "value" ? attr.value : stringTrim(attr.value);
      lcName = transformCaseFunc(name);
      hookEvent.attrName = lcName;
      hookEvent.attrValue = value;
      hookEvent.keepAttr = true;
      hookEvent.forceKeepAttr = void 0;
      _executeHook("uponSanitizeAttribute", currentNode, hookEvent);
      value = hookEvent.attrValue;
      if (hookEvent.forceKeepAttr) {
        continue;
      }
      _removeAttribute(name, currentNode);
      if (!hookEvent.keepAttr) {
        continue;
      }
      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\/>/i, value)) {
        _removeAttribute(name, currentNode);
        continue;
      }
      if (SAFE_FOR_TEMPLATES) {
        value = stringReplace(value, MUSTACHE_EXPR$1, " ");
        value = stringReplace(value, ERB_EXPR$1, " ");
        value = stringReplace(value, TMPLIT_EXPR$1, " ");
      }
      var lcTag = transformCaseFunc(currentNode.nodeName);
      if (!_isValidAttribute(lcTag, lcName, value)) {
        continue;
      }
      if (SANITIZE_NAMED_PROPS && (lcName === "id" || lcName === "name")) {
        _removeAttribute(name, currentNode);
        value = SANITIZE_NAMED_PROPS_PREFIX + value;
      }
      if (trustedTypesPolicy && _typeof(trustedTypes) === "object" && typeof trustedTypes.getAttributeType === "function") {
        if (namespaceURI)
          ;
        else {
          switch (trustedTypes.getAttributeType(lcTag, lcName)) {
            case "TrustedHTML": {
              value = trustedTypesPolicy.createHTML(value);
              break;
            }
            case "TrustedScriptURL": {
              value = trustedTypesPolicy.createScriptURL(value);
              break;
            }
          }
        }
      }
      try {
        if (namespaceURI) {
          currentNode.setAttributeNS(namespaceURI, name, value);
        } else {
          currentNode.setAttribute(name, value);
        }
        arrayPop(DOMPurify.removed);
      } catch (_5) {
      }
    }
    _executeHook("afterSanitizeAttributes", currentNode, null);
  };
  var _sanitizeShadowDOM = function _sanitizeShadowDOM2(fragment) {
    var shadowNode;
    var shadowIterator = _createIterator(fragment);
    _executeHook("beforeSanitizeShadowDOM", fragment, null);
    while (shadowNode = shadowIterator.nextNode()) {
      _executeHook("uponSanitizeShadowNode", shadowNode, null);
      if (_sanitizeElements(shadowNode)) {
        continue;
      }
      if (shadowNode.content instanceof DocumentFragment2) {
        _sanitizeShadowDOM2(shadowNode.content);
      }
      _sanitizeAttributes(shadowNode);
    }
    _executeHook("afterSanitizeShadowDOM", fragment, null);
  };
  DOMPurify.sanitize = function(dirty) {
    var cfg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var body2;
    var importedNode;
    var currentNode;
    var oldNode;
    var returnNode;
    IS_EMPTY_INPUT = !dirty;
    if (IS_EMPTY_INPUT) {
      dirty = "<!-->";
    }
    if (typeof dirty !== "string" && !_isNode(dirty)) {
      if (typeof dirty.toString === "function") {
        dirty = dirty.toString();
        if (typeof dirty !== "string") {
          throw typeErrorCreate("dirty is not a string, aborting");
        }
      } else {
        throw typeErrorCreate("toString is not a function");
      }
    }
    if (!DOMPurify.isSupported) {
      if (_typeof(window2.toStaticHTML) === "object" || typeof window2.toStaticHTML === "function") {
        if (typeof dirty === "string") {
          return window2.toStaticHTML(dirty);
        }
        if (_isNode(dirty)) {
          return window2.toStaticHTML(dirty.outerHTML);
        }
      }
      return dirty;
    }
    if (!SET_CONFIG) {
      _parseConfig(cfg);
    }
    DOMPurify.removed = [];
    if (typeof dirty === "string") {
      IN_PLACE = false;
    }
    if (IN_PLACE) {
      if (dirty.nodeName) {
        var tagName = transformCaseFunc(dirty.nodeName);
        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
          throw typeErrorCreate("root node is forbidden and cannot be sanitized in-place");
        }
      }
    } else if (dirty instanceof Node2) {
      body2 = _initDocument("<!---->");
      importedNode = body2.ownerDocument.importNode(dirty, true);
      if (importedNode.nodeType === 1 && importedNode.nodeName === "BODY") {
        body2 = importedNode;
      } else if (importedNode.nodeName === "HTML") {
        body2 = importedNode;
      } else {
        body2.appendChild(importedNode);
      }
    } else {
      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes
      dirty.indexOf("<") === -1) {
        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
      }
      body2 = _initDocument(dirty);
      if (!body2) {
        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : "";
      }
    }
    if (body2 && FORCE_BODY) {
      _forceRemove(body2.firstChild);
    }
    var nodeIterator = _createIterator(IN_PLACE ? dirty : body2);
    while (currentNode = nodeIterator.nextNode()) {
      if (currentNode.nodeType === 3 && currentNode === oldNode) {
        continue;
      }
      if (_sanitizeElements(currentNode)) {
        continue;
      }
      if (currentNode.content instanceof DocumentFragment2) {
        _sanitizeShadowDOM(currentNode.content);
      }
      _sanitizeAttributes(currentNode);
      oldNode = currentNode;
    }
    oldNode = null;
    if (IN_PLACE) {
      return dirty;
    }
    if (RETURN_DOM) {
      if (RETURN_DOM_FRAGMENT) {
        returnNode = createDocumentFragment.call(body2.ownerDocument);
        while (body2.firstChild) {
          returnNode.appendChild(body2.firstChild);
        }
      } else {
        returnNode = body2;
      }
      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {
        returnNode = importNode.call(originalDocument, returnNode, true);
      }
      return returnNode;
    }
    var serializedHTML = WHOLE_DOCUMENT ? body2.outerHTML : body2.innerHTML;
    if (WHOLE_DOCUMENT && ALLOWED_TAGS["!doctype"] && body2.ownerDocument && body2.ownerDocument.doctype && body2.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body2.ownerDocument.doctype.name)) {
      serializedHTML = "<!DOCTYPE " + body2.ownerDocument.doctype.name + ">\n" + serializedHTML;
    }
    if (SAFE_FOR_TEMPLATES) {
      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$1, " ");
      serializedHTML = stringReplace(serializedHTML, ERB_EXPR$1, " ");
      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR$1, " ");
    }
    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
  };
  DOMPurify.setConfig = function(cfg) {
    _parseConfig(cfg);
    SET_CONFIG = true;
  };
  DOMPurify.clearConfig = function() {
    CONFIG = null;
    SET_CONFIG = false;
  };
  DOMPurify.isValidAttribute = function(tag, attr, value) {
    if (!CONFIG) {
      _parseConfig({});
    }
    var lcTag = transformCaseFunc(tag);
    var lcName = transformCaseFunc(attr);
    return _isValidAttribute(lcTag, lcName, value);
  };
  DOMPurify.addHook = function(entryPoint, hookFunction) {
    if (typeof hookFunction !== "function") {
      return;
    }
    hooks[entryPoint] = hooks[entryPoint] || [];
    arrayPush(hooks[entryPoint], hookFunction);
  };
  DOMPurify.removeHook = function(entryPoint) {
    if (hooks[entryPoint]) {
      return arrayPop(hooks[entryPoint]);
    }
  };
  DOMPurify.removeHooks = function(entryPoint) {
    if (hooks[entryPoint]) {
      hooks[entryPoint] = [];
    }
  };
  DOMPurify.removeAllHooks = function() {
    hooks = {};
  };
  return DOMPurify;
}
var purify = createDOMPurify();

// node_modules/ra-ui-materialui/dist/esm/field/RichTextField.js
var __assign135 = function() {
  __assign135 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign135.apply(this, arguments);
};
var __rest122 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var RichTextFieldImpl = function(props) {
  var _a13;
  var className = props.className, emptyText = props.emptyText, source = props.source, _b = props.stripTags, stripTags = _b === void 0 ? false : _b, purifyOptions = props.purifyOptions, rest = __rest122(props, ["className", "emptyText", "source", "stripTags", "purifyOptions"]);
  var record = useRecordContext(props);
  var value = (_a13 = (0, import_get19.default)(record, source)) === null || _a13 === void 0 ? void 0 : _a13.toString();
  var translate = useTranslate();
  return React466.createElement(Typography_default, __assign135({ className, variant: "body2", component: "span" }, sanitizeFieldRestProps(rest)), value == null && emptyText ? translate(emptyText, { _: emptyText }) : stripTags ? removeTags(value) : React466.createElement("span", { dangerouslySetInnerHTML: {
    __html: purify.sanitize(value, purifyOptions)
  } }));
};
RichTextFieldImpl.propTypes = __assign135(__assign135(__assign135({}, Typography_default.propTypes), fieldPropTypes), { stripTags: import_prop_types303.default.bool, purifyOptions: import_prop_types303.default.any });
RichTextFieldImpl.displayName = "RichTextFieldImpl";
var RichTextField = genericMemo(RichTextFieldImpl);
var removeTags = function(input) {
  return input ? input.replace(/<[^>]+>/gm, "") : "";
};

// node_modules/ra-ui-materialui/dist/esm/field/SelectField.js
var React467 = __toESM(require_react());
var import_prop_types304 = __toESM(require_prop_types());
var import_get20 = __toESM(require_get());
var __assign136 = function() {
  __assign136 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign136.apply(this, arguments);
};
var __rest123 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SelectFieldImpl = function(props) {
  var className = props.className, emptyText = props.emptyText, source = props.source, choices2 = props.choices, _a13 = props.optionValue, optionValue = _a13 === void 0 ? "id" : _a13, _b = props.optionText, optionText = _b === void 0 ? "name" : _b, _c = props.translateChoice, translateChoice = _c === void 0 ? true : _c, rest = __rest123(props, ["className", "emptyText", "source", "choices", "optionValue", "optionText", "translateChoice"]);
  var record = useRecordContext(props);
  var value = (0, import_get20.default)(record, source);
  var _d = useChoices({
    optionText,
    optionValue,
    translateChoice
  }), getChoiceText = _d.getChoiceText, getChoiceValue = _d.getChoiceValue;
  var translate = useTranslate();
  var choice = choices2.find(function(choice2) {
    return getChoiceValue(choice2) === value;
  });
  if (!choice) {
    return emptyText ? React467.createElement(Typography_default, __assign136({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, { _: emptyText })) : null;
  }
  var choiceText = getChoiceText(choice);
  return React467.createElement(Typography_default, __assign136({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), choiceText);
};
SelectFieldImpl.propTypes = __assign136(__assign136(__assign136({}, Typography_default.propTypes), fieldPropTypes), { choices: import_prop_types304.default.arrayOf(import_prop_types304.default.object).isRequired, optionText: import_prop_types304.default.oneOfType([
  import_prop_types304.default.string,
  import_prop_types304.default.func,
  import_prop_types304.default.element
]), optionValue: import_prop_types304.default.string, translateChoice: import_prop_types304.default.bool });
SelectFieldImpl.displayName = "SelectFieldImpl";
var SelectField = genericMemo(SelectFieldImpl);

// node_modules/ra-ui-materialui/dist/esm/field/TextField.js
var React468 = __toESM(require_react());
var import_get21 = __toESM(require_get());
var __assign137 = function() {
  __assign137 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign137.apply(this, arguments);
};
var __rest124 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TextFieldImpl = function(props) {
  var _a13;
  var className = props.className, source = props.source, emptyText = props.emptyText, rest = __rest124(props, ["className", "source", "emptyText"]);
  var record = useRecordContext(props);
  var value = (_a13 = (0, import_get21.default)(record, source)) === null || _a13 === void 0 ? void 0 : _a13.toString();
  var translate = useTranslate();
  return React468.createElement(Typography_default, __assign137({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), value != null && typeof value !== "string" ? JSON.stringify(value) : value || (emptyText ? translate(emptyText, { _: emptyText }) : null));
};
TextFieldImpl.propTypes = __assign137(__assign137({}, Typography_default.propTypes), fieldPropTypes);
TextFieldImpl.displayName = "TextFieldImpl";
var TextField3 = genericMemo(TextFieldImpl);

// node_modules/ra-ui-materialui/dist/esm/field/TranslatableFields.js
var React472 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/field/TranslatableFieldsTabs.js
var React470 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/field/TranslatableFieldsTab.js
var import_react119 = __toESM(require_react());
var import_inflection7 = __toESM(require_inflection());
var __assign138 = function() {
  __assign138 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign138.apply(this, arguments);
};
var __rest125 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TranslatableFieldsTab = function(props) {
  var locale = props.locale, _a13 = props.groupKey, groupKey = _a13 === void 0 ? "" : _a13, rest = __rest125(props, ["locale", "groupKey"]);
  var translate = useTranslate();
  return import_react119.default.createElement(Tab_default, __assign138({ id: "translatable-header-".concat(groupKey).concat(locale), label: translate("ra.locales.".concat(groupKey).concat(locale), {
    _: (0, import_inflection7.capitalize)(locale)
  }) }, rest));
};

// node_modules/ra-ui-materialui/dist/esm/field/TranslatableFieldsTabs.js
var __assign139 = function() {
  __assign139 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign139.apply(this, arguments);
};
var TranslatableFieldsTabs = function(props) {
  var groupKey = props.groupKey, tabsProps = props.TabsProps, className = props.className;
  var _a13 = useTranslatableContext(), locales = _a13.locales, selectLocale = _a13.selectLocale, selectedLocale = _a13.selectedLocale;
  var handleChange = function(event, newLocale) {
    selectLocale(newLocale);
  };
  return React470.createElement(
    StyledAppBar3,
    { color: "default", position: "static", className },
    React470.createElement(Tabs_default, __assign139({ value: selectedLocale, onChange: handleChange, indicatorColor: "primary", textColor: "primary" }, tabsProps), locales.map(function(locale) {
      return React470.createElement(TranslatableFieldsTab, { key: locale, value: locale, locale, groupKey });
    }))
  );
};
var PREFIX80 = "RaTranslatableFieldsTabs";
var StyledAppBar3 = styled_default2(AppBar_default, {
  name: PREFIX80,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    boxShadow: "none",
    borderRadius: 0,
    borderTopLeftRadius: theme.shape.borderRadius,
    borderTopRightRadius: theme.shape.borderRadius,
    border: "1px solid ".concat(theme.palette.divider)
  };
});

// node_modules/ra-ui-materialui/dist/esm/field/TranslatableFieldsTabContent.js
var React471 = __toESM(require_react());
var import_react120 = __toESM(require_react());
var __assign140 = function() {
  __assign140 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign140.apply(this, arguments);
};
var __rest126 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TranslatableFieldsTabContent = function(props) {
  var children2 = props.children, _a13 = props.groupKey, groupKey = _a13 === void 0 ? "" : _a13, locale = props.locale, record = props.record, resource = props.resource, className = props.className, other = __rest126(props, ["children", "groupKey", "locale", "record", "resource", "className"]);
  var _b = useTranslatableContext(), selectedLocale = _b.selectedLocale, getLabel = _b.getLabel, getSource = _b.getSource;
  var addLabel = import_react120.Children.count(children2) > 1;
  return React471.createElement(Root34, __assign140({ role: "tabpanel", hidden: selectedLocale !== locale, id: "translatable-content-".concat(groupKey).concat(locale), "aria-labelledby": "translatable-header-".concat(groupKey).concat(locale), className }, other), import_react120.Children.map(children2, function(field) {
    return field && (0, import_react120.isValidElement)(field) ? React471.createElement("div", { key: field.props.source }, addLabel ? React471.createElement(Labeled, { resource, label: field.props.label, source: field.props.source }, (0, import_react120.cloneElement)(field, __assign140(__assign140({}, field.props), { label: getLabel(field.props.source), record, source: getSource(field.props.source, locale) }))) : typeof field === "string" ? field : (0, import_react120.cloneElement)(field, __assign140(__assign140({}, field.props), { label: getLabel(field.props.source), record, source: getSource(field.props.source, locale) }))) : null;
  }));
};
var PREFIX81 = "RaTranslatableFieldsTabContent";
var Root34 = styled_default2("div", {
  name: PREFIX81,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    flexGrow: 1,
    padding: theme.spacing(2),
    borderRadius: 0,
    borderBottomLeftRadius: theme.shape.borderRadius,
    borderBottomRightRadius: theme.shape.borderRadius,
    border: "1px solid ".concat(theme.palette.divider),
    borderTop: 0
  };
});

// node_modules/ra-ui-materialui/dist/esm/field/TranslatableFields.js
var TranslatableFields = function(props) {
  var defaultLocale = props.defaultLocale, locales = props.locales, _a13 = props.groupKey, groupKey = _a13 === void 0 ? "" : _a13, _b = props.selector, selector = _b === void 0 ? React472.createElement(TranslatableFieldsTabs, { groupKey }) : _b, children2 = props.children, resource = props.resource, className = props.className;
  var record = useRecordContext(props);
  var context = useTranslatable({ defaultLocale, locales });
  return React472.createElement(
    Root35,
    { className },
    React472.createElement(
      TranslatableContextProvider,
      { value: context },
      selector,
      locales.map(function(locale) {
        return React472.createElement(TranslatableFieldsTabContent, { key: locale, locale, record, resource, groupKey }, children2);
      })
    )
  );
};
var PREFIX82 = "RaTranslatableFields";
var Root35 = styled_default2("div", {
  name: PREFIX82,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var theme = _a13.theme;
  return {
    flexGrow: 1,
    marginTop: theme.spacing(1),
    marginBottom: theme.spacing(0.5)
  };
});

// node_modules/ra-ui-materialui/dist/esm/field/UrlField.js
var React473 = __toESM(require_react());
var import_get22 = __toESM(require_get());
var __assign141 = function() {
  __assign141 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign141.apply(this, arguments);
};
var __rest127 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var UrlFieldImpl = function(props) {
  var className = props.className, emptyText = props.emptyText, source = props.source, rest = __rest127(props, ["className", "emptyText", "source"]);
  var record = useRecordContext(props);
  var value = (0, import_get22.default)(record, source);
  var translate = useTranslate();
  if (value == null) {
    return React473.createElement(Typography_default, __assign141({ component: "span", variant: "body2", className }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, { _: emptyText }));
  }
  return React473.createElement(Link_default, __assign141({ className, href: value, onClick: stopPropagation7, variant: "body2" }, sanitizeFieldRestProps(rest)), value);
};
UrlFieldImpl.propTypes = fieldPropTypes;
UrlFieldImpl.displayName = "UrlFieldImpl";
var UrlField = genericMemo(UrlFieldImpl);
var stopPropagation7 = function(e) {
  return e.stopPropagation();
};

// node_modules/ra-ui-materialui/dist/esm/field/WrapperField.js
var React474 = __toESM(require_react());
var WrapperField = function(_a13) {
  var children2 = _a13.children;
  return React474.createElement(React474.Fragment, null, children2);
};
WrapperField.displayName = "WrapperField";
WrapperField.propTypes = fieldPropTypes;

// node_modules/ra-ui-materialui/dist/esm/detail/SimpleShowLayout.js
var React475 = __toESM(require_react());
var import_react121 = __toESM(require_react());
var import_prop_types305 = __toESM(require_prop_types());
var __assign142 = function() {
  __assign142 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign142.apply(this, arguments);
};
var __rest128 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SimpleShowLayout = function(props) {
  var className = props.className, children2 = props.children, divider = props.divider, _a13 = props.spacing, spacing2 = _a13 === void 0 ? 1 : _a13, rest = __rest128(props, ["className", "children", "divider", "spacing"]);
  var record = useRecordContext(props);
  if (!record) {
    return null;
  }
  return React475.createElement(
    OptionalRecordContextProvider,
    { value: props.record },
    React475.createElement(
      Root36,
      __assign142({ className }, sanitizeRestProps29(rest)),
      React475.createElement(Stack_default2, { spacing: spacing2, divider, className: SimpleShowLayoutClasses.stack }, import_react121.Children.map(children2, function(field) {
        return field && (0, import_react121.isValidElement)(field) ? React475.createElement(Labeled, { key: field.props.source, className: clsx_m_default("ra-field", field.props.source && "ra-field-".concat(field.props.source), SimpleShowLayoutClasses.row, field.props.className) }, field) : null;
      }))
    )
  );
};
SimpleShowLayout.propTypes = {
  children: import_prop_types305.default.node,
  className: import_prop_types305.default.string,
  record: import_prop_types305.default.object,
  spacing: import_prop_types305.default.any,
  sx: import_prop_types305.default.any
};
var PREFIX83 = "RaSimpleShowLayout";
var SimpleShowLayoutClasses = {
  stack: "".concat(PREFIX83, "-stack"),
  row: "".concat(PREFIX83, "-row")
};
var Root36 = styled_default2("div", {
  name: PREFIX83,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    flex: 1,
    padding: "".concat(theme.spacing(1), " ").concat(theme.spacing(2))
  }, _b["& .".concat(SimpleShowLayoutClasses.stack)] = {}, _b["& .".concat(SimpleShowLayoutClasses.row)] = {
    display: "inline"
  }, _b;
});
var sanitizeRestProps29 = function(_a13) {
  var record = _a13.record, resource = _a13.resource, initialValues = _a13.initialValues, translate = _a13.translate, rest = __rest128(_a13, ["record", "resource", "initialValues", "translate"]);
  return rest;
};

// node_modules/ra-ui-materialui/dist/esm/detail/showFieldTypes.js
var __assign143 = function() {
  __assign143 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign143.apply(this, arguments);
};
var __rest129 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var showFieldTypes = {
  show: {
    component: function(props) {
      return React476.createElement(SimpleShowLayout, __assign143({}, props));
    },
    representation: function(_5, children2) {
      return "        <SimpleShowLayout>\n".concat(children2.map(function(child) {
        return "            ".concat(child.getRepresentation());
      }).join("\n"), "\n        </SimpleShowLayout>");
    }
  },
  array: {
    // eslint-disable-next-line react/display-name
    component: function(_a13) {
      var children2 = _a13.children, props = __rest129(_a13, ["children"]);
      return React476.createElement(
        ArrayField,
        __assign143({}, props),
        React476.createElement(Datagrid, null, children2)
      );
    },
    representation: function(props, children2) {
      return '<ArrayField source="'.concat(props.source, '"><Datagrid>').concat(children2.map(function(child) {
        return child.getRepresentation();
      }).join("\n"), "</Datagrid></ArrayField>");
    }
  },
  boolean: {
    component: BooleanField,
    representation: function(props) {
      return '<BooleanField source="'.concat(props.source, '" />');
    }
  },
  date: {
    component: DateField,
    representation: function(props) {
      return '<DateField source="'.concat(props.source, '" />');
    }
  },
  email: {
    component: EmailField,
    representation: function(props) {
      return '<EmailField source="'.concat(props.source, '" />');
    }
  },
  id: {
    component: TextField3,
    representation: function(props) {
      return '<TextField source="'.concat(props.source, '" />');
    }
  },
  number: {
    component: NumberField,
    representation: function(props) {
      return '<NumberField source="'.concat(props.source, '" />');
    }
  },
  reference: {
    component: ReferenceField,
    representation: function(props) {
      return '<ReferenceField source="'.concat(props.source, '" reference="').concat(props.reference, '" />');
    }
  },
  referenceChild: {
    component: function(props) {
      return React476.createElement(TextField3, __assign143({ source: "id" }, props));
    },
    representation: function() {
      return '<TextField source="id" />';
    }
  },
  referenceArray: {
    component: ReferenceArrayField,
    representation: function(props) {
      return '<ReferenceArrayField source="'.concat(props.source, '" reference="').concat(props.reference, '"><TextField source="id" /></ReferenceArrayField>');
    }
  },
  referenceArrayChild: {
    component: function(props) {
      return React476.createElement(TextField3, __assign143({ source: "id" }, props));
    },
    representation: function() {
      return '<TextField source="id" />';
    }
  },
  richText: {
    component: RichTextField,
    representation: function(props) {
      return '<RichTextField source="'.concat(props.source, '" />');
    }
  },
  string: {
    component: TextField3,
    representation: function(props) {
      return '<TextField source="'.concat(props.source, '" />');
    }
  },
  url: {
    component: UrlField,
    representation: function(props) {
      return '<UrlField source="'.concat(props.source, '" />');
    }
  }
};

// node_modules/ra-ui-materialui/dist/esm/detail/ShowGuesser.js
var React477 = __toESM(require_react());
var import_react122 = __toESM(require_react());
var import_inflection8 = __toESM(require_inflection());
var __assign144 = function() {
  __assign144 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign144.apply(this, arguments);
};
var __rest130 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ShowGuesser = function(_a13) {
  var id = _a13.id, queryOptions = _a13.queryOptions, resource = _a13.resource, rest = __rest130(_a13, ["id", "queryOptions", "resource"]);
  return React477.createElement(
    ShowBase,
    { id, resource, queryOptions },
    React477.createElement(ShowViewGuesser, __assign144({}, rest))
  );
};
var ShowViewGuesser = function(props) {
  var resource = useResourceContext(props);
  var record = useShowContext().record;
  var _a13 = (0, import_react122.useState)(null), child = _a13[0], setChild = _a13[1];
  var _b = props.enableLog, enableLog = _b === void 0 ? true : _b, rest = __rest130(props, ["enableLog"]);
  (0, import_react122.useEffect)(function() {
    setChild(null);
  }, [resource]);
  (0, import_react122.useEffect)(function() {
    if (record && !child) {
      var inferredElements = getElementsFromRecords_default([record], showFieldTypes);
      var inferredChild = new InferredElement_default(showFieldTypes.show, null, inferredElements);
      setChild(inferredChild.getElement());
      if (!enableLog)
        return;
      var representation = inferredChild.getRepresentation();
      var components = ["Show"].concat(Array.from(new Set(Array.from(representation.matchAll(/<([^/\s>]+)/g)).map(function(match2) {
        return match2[1];
      }).filter(function(component) {
        return component !== "span";
      })))).sort();
      console.log("Guessed Show:\n\nimport { ".concat(components.join(", "), " } from 'react-admin';\n\nexport const ").concat(import_inflection8.default.capitalize(import_inflection8.default.singularize(resource)), "Show = () => (\n    <Show>\n").concat(inferredChild.getRepresentation(), "\n    </Show>\n);"));
    }
  }, [record, child, resource, enableLog]);
  return React477.createElement(ShowView, __assign144({}, rest), child);
};
ShowViewGuesser.propTypes = ShowView.propTypes;

// node_modules/ra-ui-materialui/dist/esm/detail/TabbedShowLayout.js
var React480 = __toESM(require_react());
var import_react125 = __toESM(require_react());
var import_prop_types308 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/detail/TabbedShowLayoutTabs.js
var React478 = __toESM(require_react());
var import_react123 = __toESM(require_react());
var import_prop_types306 = __toESM(require_prop_types());
var __assign145 = function() {
  __assign145 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign145.apply(this, arguments);
};
var __rest131 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TabbedShowLayoutTabs = function(_a13) {
  var children2 = _a13.children, syncWithLocation = _a13.syncWithLocation, value = _a13.value, rest = __rest131(_a13, ["children", "syncWithLocation", "value"]);
  var params = useParams();
  var tabValue = params["*"];
  return React478.createElement(Tabs_default, __assign145({ indicatorColor: "primary", value: syncWithLocation ? tabValue : value }, rest), import_react123.Children.map(children2, function(tab, index2) {
    if (!tab || !(0, import_react123.isValidElement)(tab))
      return null;
    var tabPath = getShowLayoutTabFullPath(tab, index2);
    return (0, import_react123.cloneElement)(tab, {
      context: "header",
      value: syncWithLocation ? tabPath : index2,
      syncWithLocation
    });
  }));
};
var getShowLayoutTabFullPath = function(tab, index2) {
  return "".concat(tab.props.path ? "".concat(tab.props.path) : index2 > 0 ? index2 : "");
};
TabbedShowLayoutTabs.propTypes = {
  children: import_prop_types306.default.node
};

// node_modules/ra-ui-materialui/dist/esm/detail/Tab.js
var React479 = __toESM(require_react());
var import_react124 = __toESM(require_react());
var import_prop_types307 = __toESM(require_prop_types());
var __assign146 = function() {
  __assign146 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign146.apply(this, arguments);
};
var __rest132 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Tab5 = function(_a13) {
  var children2 = _a13.children, contentClassName = _a13.contentClassName, context = _a13.context, count = _a13.count, className = _a13.className, divider = _a13.divider, icon = _a13.icon, label = _a13.label, record = _a13.record, _b = _a13.spacing, spacing2 = _b === void 0 ? 1 : _b, _c = _a13.syncWithLocation, syncWithLocation = _c === void 0 ? true : _c, value = _a13.value, rest = __rest132(_a13, ["children", "contentClassName", "context", "count", "className", "divider", "icon", "label", "record", "spacing", "syncWithLocation", "value"]);
  var translate = useTranslate();
  var location = useLocation();
  var propsForLink = {
    component: Link,
    to: __assign146(__assign146({}, location), { pathname: value })
  };
  var renderHeader = function() {
    var tabLabel = typeof label === "string" ? translate(label, { _: label }) : label;
    if (count !== void 0) {
      tabLabel = React479.createElement(
        "span",
        null,
        tabLabel,
        " (",
        count,
        ")"
      );
    }
    return React479.createElement(Tab_default, __assign146({ key: "tab-header-".concat(value), label: tabLabel, value, icon, className: clsx_m_default("show-tab", className) }, syncWithLocation ? propsForLink : {}, rest));
  };
  var renderContent = function() {
    return React479.createElement(Stack_default2, { className: contentClassName, spacing: spacing2, divider }, React479.Children.map(children2, function(field) {
      return field && (0, import_react124.isValidElement)(field) ? React479.createElement(Labeled, { key: field.props.source, className: clsx_m_default("ra-field", field.props.source && "ra-field-".concat(field.props.source), field.props.className) }, field) : null;
    }));
  };
  return context === "header" ? renderHeader() : renderContent();
};
Tab5.propTypes = {
  children: import_prop_types307.default.node,
  className: import_prop_types307.default.string,
  contentClassName: import_prop_types307.default.string,
  context: import_prop_types307.default.oneOf(["header", "content"]),
  count: import_prop_types307.default.node,
  icon: import_prop_types307.default.element,
  label: import_prop_types307.default.oneOfType([import_prop_types307.default.string, import_prop_types307.default.element]).isRequired,
  path: import_prop_types307.default.string,
  spacing: import_prop_types307.default.any,
  value: import_prop_types307.default.oneOfType([import_prop_types307.default.string, import_prop_types307.default.number])
};

// node_modules/ra-ui-materialui/dist/esm/detail/TabbedShowLayout.js
var __assign147 = function() {
  __assign147 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign147.apply(this, arguments);
};
var __rest133 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TabbedShowLayout = function(props) {
  var children2 = props.children, className = props.className, spacing2 = props.spacing, divider = props.divider, _a13 = props.syncWithLocation, syncWithLocation = _a13 === void 0 ? true : _a13, _b = props.tabs, tabs = _b === void 0 ? DefaultTabs2 : _b, value = props.value, rest = __rest133(props, ["children", "className", "spacing", "divider", "syncWithLocation", "tabs", "value"]);
  var record = useRecordContext(props);
  var nonNullChildren = import_react125.Children.toArray(children2).filter(function(child) {
    return child !== null;
  });
  var _c = (0, import_react125.useState)(0), tabValue = _c[0], setTabValue = _c[1];
  var handleTabChange = function(event, value2) {
    if (!syncWithLocation) {
      setTabValue(value2);
    }
  };
  if (!record) {
    return null;
  }
  var renderTabHeaders = function() {
    return (0, import_react125.cloneElement)(tabs, {
      onChange: handleTabChange,
      syncWithLocation,
      value: tabValue
    }, nonNullChildren);
  };
  return React480.createElement(
    OptionalRecordContextProvider,
    { value: props.record },
    React480.createElement(Root37, __assign147({ className }, sanitizeRestProps30(rest)), syncWithLocation ? React480.createElement(
      Routes,
      null,
      React480.createElement(Route, { path: "/*", element: React480.createElement(
        React480.Fragment,
        null,
        renderTabHeaders(),
        React480.createElement(Divider_default, null),
        React480.createElement(
          "div",
          { className: TabbedShowLayoutClasses.content },
          React480.createElement(Outlet, null)
        )
      ) }, import_react125.Children.map(nonNullChildren, function(tab, index2) {
        return (0, import_react125.isValidElement)(tab) ? React480.createElement(Route, { path: getShowLayoutTabFullPath(tab, index2), element: (0, import_react125.cloneElement)(tab, {
          context: "content",
          spacing: spacing2,
          divider
        }) }) : null;
      }))
    ) : React480.createElement(
      React480.Fragment,
      null,
      renderTabHeaders(),
      React480.createElement(Divider_default, null),
      React480.createElement("div", { className: TabbedShowLayoutClasses.content }, import_react125.Children.map(nonNullChildren, function(tab, index2) {
        if (!(0, import_react125.isValidElement)(tab) || tabValue !== index2) {
          return null;
        }
        return (0, import_react125.cloneElement)(tab, {
          context: "content",
          spacing: spacing2,
          divider
        });
      }))
    ))
  );
};
TabbedShowLayout.Tab = Tab5;
TabbedShowLayout.propTypes = {
  children: import_prop_types308.default.node,
  className: import_prop_types308.default.string,
  record: import_prop_types308.default.object,
  spacing: import_prop_types308.default.any,
  sx: import_prop_types308.default.any,
  syncWithLocation: import_prop_types308.default.bool,
  tabs: import_prop_types308.default.element,
  value: import_prop_types308.default.number
};
var DefaultTabs2 = React480.createElement(TabbedShowLayoutTabs, null);
var PREFIX84 = "RaTabbedShowLayout";
var TabbedShowLayoutClasses = {
  content: "".concat(PREFIX84, "-content")
};
var Root37 = styled_default2("div", {
  name: PREFIX84,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    flex: 1
  }, _b["& .".concat(TabbedShowLayoutClasses.content)] = {
    padding: "".concat(theme.spacing(1), " ").concat(theme.spacing(2))
  }, _b;
});
var sanitizeRestProps30 = function(_a13) {
  var record = _a13.record, resource = _a13.resource, initialValues = _a13.initialValues, staticContext = _a13.staticContext, translate = _a13.translate, tabs = _a13.tabs, rest = __rest133(_a13, ["record", "resource", "initialValues", "staticContext", "translate", "tabs"]);
  return rest;
};

// node_modules/ra-ui-materialui/dist/esm/list/Count.js
var React481 = __toESM(require_react());
var import_Error4 = __toESM(require_Error());
var __assign148 = function() {
  __assign148 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign148.apply(this, arguments);
};
var __rest134 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Count = function(props) {
  var filter = props.filter, sort = props.sort, link = props.link, resourceFromProps = props.resource, _a13 = props.timeout, timeout2 = _a13 === void 0 ? 1e3 : _a13, rest = __rest134(props, ["filter", "sort", "link", "resource", "timeout"]);
  var resource = useResourceContext(props);
  var oneSecondHasPassed = useTimeout(timeout2);
  var createPath = useCreatePath();
  var _b = useGetList(resource, {
    filter,
    sort,
    pagination: { perPage: 1, page: 1 }
  }), total = _b.total, isLoading = _b.isLoading, error = _b.error;
  var body2 = isLoading ? oneSecondHasPassed ? React481.createElement(CircularProgress_default, { size: 14 }) : "" : error ? React481.createElement(import_Error4.default, { color: "error", fontSize: "small", titleAccess: "error" }) : total;
  return link ? (
    // @ts-ignore TypeScript complains that the props for <a> aren't the same as for <span>
    React481.createElement(Link4, __assign148({ to: {
      pathname: createPath({ resource, type: "list" }),
      search: filter ? "filter=".concat(JSON.stringify(filter)) : void 0
    }, variant: "body2", onClick: function(e) {
      return e.stopPropagation();
    } }, rest), body2)
  ) : React481.createElement(Typography_default, __assign148({ component: "span", variant: "body2" }, rest), body2);
};

// node_modules/ra-ui-materialui/dist/esm/list/Empty.js
var React482 = __toESM(require_react());
var import_Inbox = __toESM(require_Inbox());
var Empty = function(props) {
  var className = props.className;
  var hasCreate = useResourceDefinition(props).hasCreate;
  var resource = useResourceContext(props);
  var translate = useTranslate();
  var getResourceLabel = useGetResourceLabel();
  var resourceName = translate("resources.".concat(resource, ".forcedCaseName"), {
    smart_count: 0,
    _: getResourceLabel(resource, 0)
  });
  var emptyMessage = translate("ra.page.empty", { name: resourceName });
  var inviteMessage = translate("ra.page.invite");
  return React482.createElement(
    Root38,
    { className },
    React482.createElement(
      "div",
      { className: EmptyClasses.message },
      React482.createElement(import_Inbox.default, { className: EmptyClasses.icon }),
      React482.createElement(Typography_default, { variant: "h4", paragraph: true }, translate("resources.".concat(resource, ".empty"), {
        _: emptyMessage
      })),
      hasCreate && React482.createElement(Typography_default, { variant: "body1" }, translate("resources.".concat(resource, ".invite"), {
        _: inviteMessage
      }))
    ),
    hasCreate && React482.createElement(
      "div",
      { className: EmptyClasses.toolbar },
      React482.createElement(CreateButton_default, { variant: "contained" })
    )
  );
};
var PREFIX85 = "RaEmpty";
var EmptyClasses = {
  message: "".concat(PREFIX85, "-message"),
  icon: "".concat(PREFIX85, "-icon"),
  toolbar: "".concat(PREFIX85, "-toolbar")
};
var Root38 = styled_default2("span", {
  name: PREFIX85,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    flex: 1
  }, _b["& .".concat(EmptyClasses.message)] = {
    textAlign: "center",
    opacity: theme.palette.mode === "light" ? 0.5 : 0.8,
    margin: "0 1em",
    color: theme.palette.mode === "light" ? "inherit" : theme.palette.text.primary
  }, _b["& .".concat(EmptyClasses.icon)] = {
    width: "9em",
    height: "9em"
  }, _b["& .".concat(EmptyClasses.toolbar)] = {
    textAlign: "center",
    marginTop: "2em"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/list/InfiniteList.js
var React486 = __toESM(require_react());
var import_prop_types312 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/list/ListView.js
var React485 = __toESM(require_react());
var import_react128 = __toESM(require_react());
var import_prop_types311 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/list/ListToolbar.js
var React483 = __toESM(require_react());
var import_react126 = __toESM(require_react());
var import_prop_types309 = __toESM(require_prop_types());
var __assign149 = function() {
  __assign149 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign149.apply(this, arguments);
};
var __rest135 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ListToolbar = (0, import_react126.memo)(function(props) {
  var filters = props.filters, actions = props.actions, className = props.className, rest = __rest135(props, ["filters", "actions", "className"]);
  return Array.isArray(filters) ? React483.createElement(
    FilterContext.Provider,
    { value: filters },
    React483.createElement(
      Root39,
      { className },
      React483.createElement(FilterForm, null),
      React483.createElement("span", null),
      actions && React483.cloneElement(actions, __assign149(__assign149({}, rest), actions.props))
    )
  ) : React483.createElement(
    Root39,
    { className },
    filters && React483.cloneElement(filters, __assign149(__assign149({}, rest), { context: "form" })),
    React483.createElement("span", null),
    actions && React483.cloneElement(actions, __assign149(__assign149(__assign149({}, rest), { filters }), actions.props))
  );
});
ListToolbar.propTypes = {
  filters: import_prop_types309.default.oneOfType([
    import_prop_types309.default.element,
    import_prop_types309.default.arrayOf(import_prop_types309.default.element)
  ]),
  // @ts-ignore
  actions: import_prop_types309.default.oneOfType([import_prop_types309.default.bool, import_prop_types309.default.element]),
  // @ts-ignore
  exporter: import_prop_types309.default.oneOfType([import_prop_types309.default.func, import_prop_types309.default.bool])
};
var PREFIX86 = "RaListToolbar";
var Root39 = styled_default2(Toolbar_default, {
  name: PREFIX86,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {
    position: "relative",
    justifyContent: "space-between",
    alignItems: "flex-end",
    width: "100%",
    padding: "0 !important",
    minHeight: theme.spacing(8)
  }, _b[theme.breakpoints.down("md")] = {
    margin: 0,
    flexWrap: "wrap"
  }, _b[theme.breakpoints.down("sm")] = {
    backgroundColor: theme.palette.background.paper,
    flexWrap: "inherit",
    flexDirection: "column-reverse"
  }, _b;
});

// node_modules/ra-ui-materialui/dist/esm/list/ListActions.js
var React484 = __toESM(require_react());
var import_react127 = __toESM(require_react());
var import_prop_types310 = __toESM(require_prop_types());
var __assign150 = function() {
  __assign150 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign150.apply(this, arguments);
};
var __rest136 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ListActions = function(props) {
  var className = props.className, filtersProp = props.filters, _5 = props.hasCreate, _a13 = props.selectedIds, selectedIds = _a13 === void 0 ? defaultSelectedIds : _a13, _b = props.onUnselectItems, onUnselectItems = _b === void 0 ? defaultOnUnselectItems : _b, rest = __rest136(props, ["className", "filters", "hasCreate", "selectedIds", "onUnselectItems"]);
  var _c = useListContext(__assign150(__assign150({}, props), { selectedIds, onUnselectItems })), sort = _c.sort, displayedFilters = _c.displayedFilters, filterValues = _c.filterValues, exporter = _c.exporter, showFilter = _c.showFilter, total = _c.total;
  var resource = useResourceContext(props);
  var hasCreate = useResourceDefinition(props).hasCreate;
  var filters = (0, import_react127.useContext)(FilterContext) || filtersProp;
  return (0, import_react127.useMemo)(
    function() {
      return React484.createElement(
        TopToolbar_default,
        __assign150({ className }, sanitizeListRestProps(rest)),
        filtersProp ? (0, import_react127.cloneElement)(filtersProp, {
          resource,
          showFilter,
          displayedFilters,
          filterValues,
          context: "button"
        }) : filters && React484.createElement(FilterButton, null),
        hasCreate && React484.createElement(CreateButton_default, null),
        exporter !== false && React484.createElement(ExportButton, { disabled: total === 0, resource, sort, filterValues })
      );
    },
    /* eslint-disable react-hooks/exhaustive-deps */
    [
      resource,
      displayedFilters,
      filterValues,
      filtersProp,
      showFilter,
      filters,
      total,
      className,
      sort,
      exporter,
      hasCreate
    ]
  );
};
ListActions.propTypes = {
  className: import_prop_types310.default.string,
  sort: import_prop_types310.default.any,
  displayedFilters: import_prop_types310.default.object,
  exporter: import_prop_types310.default.oneOfType([import_prop_types310.default.func, import_prop_types310.default.bool]),
  filters: import_prop_types310.default.element,
  filterValues: import_prop_types310.default.object,
  hasCreate: import_prop_types310.default.bool,
  resource: import_prop_types310.default.string,
  onUnselectItems: import_prop_types310.default.func,
  selectedIds: import_prop_types310.default.arrayOf(import_prop_types310.default.any),
  showFilter: import_prop_types310.default.func,
  total: import_prop_types310.default.number
};
var defaultSelectedIds = [];
var defaultOnUnselectItems = function() {
  return null;
};

// node_modules/ra-ui-materialui/dist/esm/list/ListView.js
var __assign151 = function() {
  __assign151 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign151.apply(this, arguments);
};
var __rest137 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var defaultActions2 = React485.createElement(ListActions, null);
var defaultPagination2 = React485.createElement(Pagination3, null);
var defaultEmpty = React485.createElement(Empty, null);
var DefaultComponent3 = Card_default;
var ListView = function(props) {
  var _a13 = props.actions, actions = _a13 === void 0 ? defaultActions2 : _a13, aside = props.aside, filters = props.filters, bulkActionButtons = props.bulkActionButtons, emptyWhileLoading = props.emptyWhileLoading, hasCreate = props.hasCreate, _b = props.pagination, pagination = _b === void 0 ? defaultPagination2 : _b, children2 = props.children, className = props.className, _c = props.component, Content = _c === void 0 ? DefaultComponent3 : _c, title = props.title, _d = props.empty, empty = _d === void 0 ? defaultEmpty : _d, rest = __rest137(props, ["actions", "aside", "filters", "bulkActionButtons", "emptyWhileLoading", "hasCreate", "pagination", "children", "className", "component", "title", "empty"]);
  var _e = useListContext(props), defaultTitle = _e.defaultTitle, data = _e.data, error = _e.error, isLoading = _e.isLoading, filterValues = _e.filterValues, resource = _e.resource;
  if (!children2 || !data && isLoading && emptyWhileLoading) {
    return null;
  }
  var renderList = function() {
    return React485.createElement(
      "div",
      { className: ListClasses.main },
      (filters || actions) && React485.createElement(ListToolbar, { className: ListClasses.actions, filters, actions, hasCreate }),
      React485.createElement(Content, { className: ListClasses.content }, bulkActionButtons && children2 && React485.isValidElement(children2) ? (
        // FIXME remove in 5.0
        (0, import_react128.cloneElement)(children2, {
          bulkActionButtons
        })
      ) : children2),
      error ? React485.createElement(Error2, { error, resetErrorBoundary: null }) : pagination !== false && pagination
    );
  };
  var renderEmpty = function() {
    return empty !== false && (0, import_react128.cloneElement)(empty, { className: ListClasses.noResults, hasCreate });
  };
  var shouldRenderEmptyPage = !isLoading && (data === null || data === void 0 ? void 0 : data.length) === 0 && !Object.keys(filterValues).length && empty !== false;
  return React485.createElement(
    Root40,
    __assign151({ className: clsx_m_default("list-page", className) }, rest),
    React485.createElement(Title, { title, defaultTitle, preferenceKey: "".concat(resource, ".list.title") }),
    shouldRenderEmptyPage ? renderEmpty() : renderList(),
    aside
  );
};
ListView.propTypes = {
  actions: import_prop_types311.default.oneOfType([import_prop_types311.default.bool, import_prop_types311.default.element]),
  aside: import_prop_types311.default.element,
  children: import_prop_types311.default.node,
  className: import_prop_types311.default.string,
  component: ComponentPropType_default,
  emptyWhileLoading: import_prop_types311.default.bool,
  filters: import_prop_types311.default.oneOfType([
    import_prop_types311.default.element,
    import_prop_types311.default.arrayOf(import_prop_types311.default.element)
  ]),
  hasCreate: import_prop_types311.default.bool,
  pagination: import_prop_types311.default.oneOfType([import_prop_types311.default.element, import_prop_types311.default.bool]),
  title: TitlePropType
};
var PREFIX87 = "RaList";
var ListClasses = {
  main: "".concat(PREFIX87, "-main"),
  content: "".concat(PREFIX87, "-content"),
  actions: "".concat(PREFIX87, "-actions"),
  noResults: "".concat(PREFIX87, "-noResults")
};
var Root40 = styled_default2("div", {
  name: PREFIX87,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b, _c;
  var theme = _a13.theme;
  return _b = {
    display: "flex"
  }, _b["& .".concat(ListClasses.main)] = {
    flex: "1 1 auto",
    display: "flex",
    flexDirection: "column"
  }, _b["& .".concat(ListClasses.content)] = (_c = {
    position: "relative"
  }, _c[theme.breakpoints.down("sm")] = {
    boxShadow: "none"
  }, _c.overflow = "inherit", _c), _b["& .".concat(ListClasses.actions)] = {}, _b["& .".concat(ListClasses.noResults)] = {}, _b;
});

// node_modules/ra-ui-materialui/dist/esm/list/InfiniteList.js
var __assign152 = function() {
  __assign152 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign152.apply(this, arguments);
};
var __rest138 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var InfiniteList = function(_a13) {
  var debounce4 = _a13.debounce, disableAuthentication = _a13.disableAuthentication, disableSyncWithLocation = _a13.disableSyncWithLocation, exporter = _a13.exporter, _b = _a13.filter, filter = _b === void 0 ? defaultFilter3 : _b, filterDefaultValues = _a13.filterDefaultValues, _c = _a13.pagination, pagination = _c === void 0 ? defaultPagination3 : _c, _d = _a13.perPage, perPage = _d === void 0 ? 10 : _d, queryOptions = _a13.queryOptions, resource = _a13.resource, sort = _a13.sort, storeKey = _a13.storeKey, rest = __rest138(_a13, ["debounce", "disableAuthentication", "disableSyncWithLocation", "exporter", "filter", "filterDefaultValues", "pagination", "perPage", "queryOptions", "resource", "sort", "storeKey"]);
  return React486.createElement(
    InfiniteListBase,
    { debounce: debounce4, disableAuthentication, disableSyncWithLocation, exporter, filter, filterDefaultValues, perPage, queryOptions, resource, sort, storeKey },
    React486.createElement(ListView, __assign152({}, rest, { pagination }))
  );
};
var defaultPagination3 = React486.createElement(InfinitePagination, null);
var defaultFilter3 = {};
InfiniteList.propTypes = {
  // the props you can change
  // @ts-ignore-line
  actions: import_prop_types312.default.oneOfType([import_prop_types312.default.bool, import_prop_types312.default.element]),
  aside: import_prop_types312.default.element,
  children: import_prop_types312.default.node.isRequired,
  className: import_prop_types312.default.string,
  emptyWhileLoading: import_prop_types312.default.bool,
  filter: import_prop_types312.default.object,
  filterDefaultValues: import_prop_types312.default.object,
  filters: import_prop_types312.default.oneOfType([
    import_prop_types312.default.element,
    import_prop_types312.default.arrayOf(import_prop_types312.default.element)
  ]),
  // @ts-ignore-line
  pagination: import_prop_types312.default.oneOfType([import_prop_types312.default.element, import_prop_types312.default.bool]),
  perPage: import_prop_types312.default.number,
  //@ts-ignore-line
  sort: import_prop_types312.default.shape({
    field: import_prop_types312.default.string,
    order: import_prop_types312.default.string
  }),
  sx: import_prop_types312.default.any,
  title: TitlePropType,
  // the props managed by react-admin
  disableSyncWithLocation: import_prop_types312.default.bool,
  hasCreate: import_prop_types312.default.bool,
  hasEdit: import_prop_types312.default.bool,
  hasList: import_prop_types312.default.bool,
  hasShow: import_prop_types312.default.bool,
  resource: import_prop_types312.default.string
};

// node_modules/ra-ui-materialui/dist/esm/list/List.js
var React487 = __toESM(require_react());
var import_prop_types313 = __toESM(require_prop_types());
var __assign153 = function() {
  __assign153 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign153.apply(this, arguments);
};
var __rest139 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var List3 = function(_a13) {
  var debounce4 = _a13.debounce, disableAuthentication = _a13.disableAuthentication, disableSyncWithLocation = _a13.disableSyncWithLocation, exporter = _a13.exporter, _b = _a13.filter, filter = _b === void 0 ? defaultFilter4 : _b, filterDefaultValues = _a13.filterDefaultValues, _c = _a13.perPage, perPage = _c === void 0 ? 10 : _c, queryOptions = _a13.queryOptions, resource = _a13.resource, sort = _a13.sort, storeKey = _a13.storeKey, rest = __rest139(_a13, ["debounce", "disableAuthentication", "disableSyncWithLocation", "exporter", "filter", "filterDefaultValues", "perPage", "queryOptions", "resource", "sort", "storeKey"]);
  return React487.createElement(
    ListBase,
    { debounce: debounce4, disableAuthentication, disableSyncWithLocation, exporter, filter, filterDefaultValues, perPage, queryOptions, resource, sort, storeKey },
    React487.createElement(ListView, __assign153({}, rest))
  );
};
List3.propTypes = {
  // the props you can change
  // @ts-ignore-line
  actions: import_prop_types313.default.oneOfType([import_prop_types313.default.bool, import_prop_types313.default.element]),
  aside: import_prop_types313.default.element,
  children: import_prop_types313.default.node.isRequired,
  className: import_prop_types313.default.string,
  emptyWhileLoading: import_prop_types313.default.bool,
  filter: import_prop_types313.default.object,
  filterDefaultValues: import_prop_types313.default.object,
  filters: import_prop_types313.default.oneOfType([
    import_prop_types313.default.element,
    import_prop_types313.default.arrayOf(import_prop_types313.default.element)
  ]),
  // @ts-ignore-line
  pagination: import_prop_types313.default.oneOfType([import_prop_types313.default.element, import_prop_types313.default.bool]),
  perPage: import_prop_types313.default.number,
  //@ts-ignore-line
  sort: import_prop_types313.default.shape({
    field: import_prop_types313.default.string,
    order: import_prop_types313.default.string
  }),
  sx: import_prop_types313.default.any,
  title: TitlePropType,
  // the props managed by react-admin
  disableSyncWithLocation: import_prop_types313.default.bool,
  hasCreate: import_prop_types313.default.bool,
  resource: import_prop_types313.default.string
};
var defaultFilter4 = {};

// node_modules/ra-ui-materialui/dist/esm/list/listFieldTypes.js
var React488 = __toESM(require_react());
var __assign154 = function() {
  __assign154 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign154.apply(this, arguments);
};
var __rest140 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var listFieldTypes = {
  table: {
    component: function(props) {
      var hasEdit = props.hasEdit, hasShow = props.hasShow, rest = __rest140(props, ["hasEdit", "hasShow"]);
      return React488.createElement(Datagrid, __assign154({ rowClick: !hasEdit && hasShow ? "show" : "edit" }, rest));
    },
    representation: function(props, children2) {
      return '        <Datagrid rowClick="'.concat(!props.hasEdit && props.hasShow ? "show" : "edit", '">\n').concat(children2.map(function(child) {
        return "            ".concat(child.getRepresentation());
      }).join("\n"), "\n        </Datagrid>");
    }
  },
  array: {
    // eslint-disable-next-line react/display-name
    component: function(_a13) {
      var children2 = _a13.children, props = __rest140(_a13, ["children"]);
      return React488.createElement(
        ArrayField,
        __assign154({}, props),
        React488.createElement(
          SingleFieldList,
          null,
          React488.createElement(ChipField, { source: children2.length > 0 && children2[0].props.source })
        )
      );
    },
    representation: function(props, children2) {
      return '<ArrayField source="'.concat(props.source, '"><SingleFieldList><ChipField source="').concat(children2.length > 0 && children2[0].getProps().source, '" /></SingleFieldList></ArrayField>');
    }
  },
  boolean: {
    component: BooleanField,
    representation: function(props) {
      return '<BooleanField source="'.concat(props.source, '" />');
    }
  },
  date: {
    component: DateField,
    representation: function(props) {
      return '<DateField source="'.concat(props.source, '" />');
    }
  },
  email: {
    component: EmailField,
    representation: function(props) {
      return '<EmailField source="'.concat(props.source, '" />');
    }
  },
  id: {
    component: TextField3,
    representation: function(props) {
      return '<TextField source="'.concat(props.source, '" />');
    }
  },
  number: {
    component: NumberField,
    representation: function(props) {
      return '<NumberField source="'.concat(props.source, '" />');
    }
  },
  reference: {
    component: ReferenceField,
    representation: function(props) {
      return '<ReferenceField source="'.concat(props.source, '" reference="').concat(props.reference, '" />');
    }
  },
  referenceChild: {
    component: function() {
      return React488.createElement(TextField3, { source: "id" });
    },
    representation: function() {
      return '<TextField source="id" />';
    }
  },
  referenceArray: {
    component: ReferenceArrayField,
    representation: function(props) {
      return '<ReferenceArrayField source="'.concat(props.source, '" reference="').concat(props.reference, '" />');
    }
  },
  referenceArrayChild: {
    component: function() {
      return React488.createElement(
        SingleFieldList,
        null,
        React488.createElement(ChipField, { source: "id" })
      );
    },
    representation: function() {
      return '<SingleFieldList><ChipField source="id" /></SingleFieldList>';
    }
  },
  richText: void 0,
  string: {
    component: TextField3,
    representation: function(props) {
      return '<TextField source="'.concat(props.source, '" />');
    }
  },
  url: {
    component: UrlField,
    representation: function(props) {
      return '<UrlField source="'.concat(props.source, '" />');
    }
  }
};

// node_modules/ra-ui-materialui/dist/esm/list/ListGuesser.js
var React489 = __toESM(require_react());
var import_react129 = __toESM(require_react());
var import_inflection9 = __toESM(require_inflection());
var __assign155 = function() {
  __assign155 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign155.apply(this, arguments);
};
var __rest141 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ListGuesser = function(props) {
  var debounce4 = props.debounce, disableAuthentication = props.disableAuthentication, disableSyncWithLocation = props.disableSyncWithLocation, exporter = props.exporter, filter = props.filter, filterDefaultValues = props.filterDefaultValues, perPage = props.perPage, queryOptions = props.queryOptions, resource = props.resource, sort = props.sort, rest = __rest141(props, ["debounce", "disableAuthentication", "disableSyncWithLocation", "exporter", "filter", "filterDefaultValues", "perPage", "queryOptions", "resource", "sort"]);
  return React489.createElement(
    ListBase,
    { debounce: debounce4, disableAuthentication, disableSyncWithLocation, exporter, filter, filterDefaultValues, perPage, queryOptions: { keepPreviousData: false }, resource, sort },
    React489.createElement(ListViewGuesser, __assign155({}, rest))
  );
};
var ListViewGuesser = function(props) {
  var data = useListContext(props).data;
  var resource = useResourceContext();
  var _a13 = useResourceDefinition(props), hasEdit = _a13.hasEdit, hasShow = _a13.hasShow;
  var _b = (0, import_react129.useState)(null), child = _b[0], setChild = _b[1];
  var _c = props.enableLog, enableLog = _c === void 0 ? true : _c, rest = __rest141(props, ["enableLog"]);
  (0, import_react129.useEffect)(function() {
    setChild(null);
  }, [resource]);
  (0, import_react129.useEffect)(function() {
    if (data && data.length > 0 && !child) {
      var inferredElements = getElementsFromRecords_default(data, listFieldTypes);
      var inferredChild = new InferredElement_default(listFieldTypes.table, { hasEdit, hasShow }, inferredElements);
      setChild(inferredChild.getElement());
      if (!enableLog)
        return;
      var representation = inferredChild.getRepresentation();
      var components = ["List"].concat(Array.from(new Set(Array.from(representation.matchAll(/<([^/\s>]+)/g)).map(function(match2) {
        return match2[1];
      }).filter(function(component) {
        return component !== "span";
      })))).sort();
      console.log("Guessed List:\n\nimport { ".concat(components.join(", "), " } from 'react-admin';\n\nexport const ").concat(import_inflection9.default.capitalize(import_inflection9.default.singularize(resource)), "List = () => (\n    <List>\n").concat(inferredChild.getRepresentation(), "\n    </List>\n);"));
    }
  }, [data, child, resource, hasEdit, hasShow, enableLog]);
  return React489.createElement(ListView, __assign155({}, rest), child);
};
ListViewGuesser.propTypes = ListView.propTypes;

// node_modules/ra-ui-materialui/dist/esm/list/SimpleList/SimpleList.js
var React491 = __toESM(require_react());
var import_react_is17 = __toESM(require_react_is());
var import_react130 = __toESM(require_react());
var import_prop_types315 = __toESM(require_prop_types());

// node_modules/ra-ui-materialui/dist/esm/list/SimpleList/SimpleListLoading.js
var React490 = __toESM(require_react());
var import_prop_types314 = __toESM(require_prop_types());
var __assign156 = function() {
  __assign156 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign156.apply(this, arguments);
};
var __rest142 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SimpleListLoading = function(props) {
  var className = props.className, hasLeftAvatarOrIcon = props.hasLeftAvatarOrIcon, hasRightAvatarOrIcon = props.hasRightAvatarOrIcon, hasSecondaryText = props.hasSecondaryText, hasTertiaryText = props.hasTertiaryText, _a13 = props.nbFakeLines, nbFakeLines = _a13 === void 0 ? 5 : _a13, rest = __rest142(props, ["className", "hasLeftAvatarOrIcon", "hasRightAvatarOrIcon", "hasSecondaryText", "hasTertiaryText", "nbFakeLines"]);
  var oneSecondHasPassed = useTimeout(1e3);
  return oneSecondHasPassed ? React490.createElement(StyledList2, __assign156({ className }, rest), times2(nbFakeLines, function(key) {
    return React490.createElement(
      ListItem_default,
      { key },
      hasLeftAvatarOrIcon && React490.createElement(
        ListItemAvatar_default,
        null,
        React490.createElement(Avatar_default, null, " ")
      ),
      React490.createElement(ListItemText_default, { primary: React490.createElement(
        "div",
        null,
        React490.createElement(Placeholder, { className: SimpleListLoadingClasses.primary }),
        hasTertiaryText && React490.createElement(
          "span",
          { className: SimpleListLoadingClasses.tertiary },
          React490.createElement(Placeholder, null)
        )
      ), secondary: hasSecondaryText ? React490.createElement(Placeholder, null) : void 0 }),
      hasRightAvatarOrIcon && React490.createElement(
        ListItemSecondaryAction_default,
        null,
        React490.createElement(Avatar_default, null, " ")
      )
    );
  })) : null;
};
SimpleListLoading.propTypes = {
  className: import_prop_types314.default.string,
  hasLeftAvatarOrIcon: import_prop_types314.default.bool,
  hasRightAvatarOrIcon: import_prop_types314.default.bool,
  hasSecondaryText: import_prop_types314.default.bool,
  hasTertiaryText: import_prop_types314.default.bool,
  nbFakeLines: import_prop_types314.default.number
};
var PREFIX88 = "RaSimpleListLoading";
var SimpleListLoadingClasses = {
  primary: "".concat(PREFIX88, "-primary"),
  tertiary: "".concat(PREFIX88, "-tertiary")
};
var StyledList2 = styled_default2(List_default, {
  name: PREFIX88,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})(function(_a13) {
  var _b;
  var theme = _a13.theme;
  return _b = {}, _b["& .".concat(SimpleListLoadingClasses.primary)] = {
    width: "30vw",
    display: "inline-block",
    marginBottom: theme.spacing()
  }, _b["& .".concat(SimpleListLoadingClasses.tertiary)] = {
    float: "right",
    opacity: 0.541176,
    minWidth: "10vw"
  }, _b;
});
var times2 = function(nbChildren, fn2) {
  return Array.from({ length: nbChildren }, function(_5, key) {
    return fn2(key);
  });
};

// node_modules/ra-ui-materialui/dist/esm/list/SimpleList/SimpleList.js
var __assign157 = function() {
  __assign157 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign157.apply(this, arguments);
};
var __rest143 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var _a12;
var SimpleList = function(props) {
  var className = props.className, _a13 = props.empty, empty = _a13 === void 0 ? DefaultEmpty2 : _a13, hasBulkActions = props.hasBulkActions, leftAvatar = props.leftAvatar, leftIcon = props.leftIcon, _b = props.linkType, linkType = _b === void 0 ? "edit" : _b, primaryText = props.primaryText, rightAvatar = props.rightAvatar, rightIcon = props.rightIcon, secondaryText = props.secondaryText, tertiaryText = props.tertiaryText, rowSx = props.rowSx, rowStyle = props.rowStyle, rest = __rest143(props, ["className", "empty", "hasBulkActions", "leftAvatar", "leftIcon", "linkType", "primaryText", "rightAvatar", "rightIcon", "secondaryText", "tertiaryText", "rowSx", "rowStyle"]);
  var _c = useListContext(props), data = _c.data, isLoading = _c.isLoading, total = _c.total;
  var resource = useResourceContext(props);
  var getRecordRepresentation = useGetRecordRepresentation(resource);
  var translate = useTranslate();
  if (isLoading === true) {
    return React491.createElement(SimpleListLoading, { className, hasLeftAvatarOrIcon: !!leftIcon || !!leftAvatar, hasRightAvatarOrIcon: !!rightIcon || !!rightAvatar, hasSecondaryText: !!secondaryText, hasTertiaryText: !!tertiaryText });
  }
  if (data == null || data.length === 0 || total === 0) {
    if (empty) {
      return empty;
    }
    return null;
  }
  var renderAvatar = function(record, avatarCallback) {
    var avatarValue = avatarCallback(record, record.id);
    if (typeof avatarValue === "string" && (avatarValue.startsWith("http") || avatarValue.startsWith("data:"))) {
      return React491.createElement(Avatar_default, { src: avatarValue });
    } else {
      return React491.createElement(Avatar_default, null, avatarValue);
    }
  };
  return total == null && (data === null || data === void 0 ? void 0 : data.length) > 0 || total > 0 ? React491.createElement(Root41, __assign157({ className }, sanitizeListRestProps(rest)), data.map(function(record, rowIndex) {
    return React491.createElement(
      RecordContextProvider,
      { key: record.id, value: record },
      React491.createElement(
        ListItem_default,
        { disablePadding: true },
        React491.createElement(
          LinkOrNot,
          { linkType, resource, id: record.id, record, style: rowStyle ? rowStyle(record, rowIndex) : void 0, sx: rowSx === null || rowSx === void 0 ? void 0 : rowSx(record, rowIndex) },
          leftIcon && React491.createElement(ListItemIcon_default, null, leftIcon(record, record.id)),
          leftAvatar && React491.createElement(ListItemAvatar_default, null, renderAvatar(record, leftAvatar)),
          React491.createElement(ListItemText_default, { primary: React491.createElement(
            "div",
            null,
            primaryText ? typeof primaryText === "string" ? translate(primaryText, __assign157(__assign157({}, record), { _: primaryText })) : (0, import_react_is17.isElement)(primaryText) ? primaryText : primaryText(record, record.id) : getRecordRepresentation(record),
            !!tertiaryText && ((0, import_react130.isValidElement)(tertiaryText) ? tertiaryText : React491.createElement("span", { className: SimpleListClasses.tertiary }, typeof tertiaryText === "string" ? translate(tertiaryText, __assign157(__assign157({}, record), { _: tertiaryText })) : (0, import_react_is17.isElement)(tertiaryText) ? tertiaryText : tertiaryText(record, record.id)))
          ), secondary: !!secondaryText && (typeof secondaryText === "string" ? translate(secondaryText, __assign157(__assign157({}, record), { _: secondaryText })) : (0, import_react_is17.isElement)(secondaryText) ? secondaryText : secondaryText(record, record.id)) }),
          (rightAvatar || rightIcon) && React491.createElement(
            ListItemSecondaryAction_default,
            null,
            rightAvatar && React491.createElement(Avatar_default, null, renderAvatar(record, rightAvatar)),
            rightIcon && React491.createElement(ListItemIcon_default, null, rightIcon(record, record.id))
          )
        )
      )
    );
  })) : null;
};
SimpleList.propTypes = {
  className: import_prop_types315.default.string,
  leftAvatar: import_prop_types315.default.func,
  leftIcon: import_prop_types315.default.func,
  linkType: import_prop_types315.default.oneOfType([
    import_prop_types315.default.string,
    import_prop_types315.default.bool,
    import_prop_types315.default.func
  ]),
  primaryText: import_prop_types315.default.oneOfType([
    import_prop_types315.default.func,
    import_prop_types315.default.element,
    import_prop_types315.default.string
  ]),
  rightAvatar: import_prop_types315.default.func,
  rightIcon: import_prop_types315.default.func,
  secondaryText: import_prop_types315.default.oneOfType([
    import_prop_types315.default.func,
    import_prop_types315.default.element,
    import_prop_types315.default.string
  ]),
  tertiaryText: import_prop_types315.default.oneOfType([
    import_prop_types315.default.func,
    import_prop_types315.default.element,
    import_prop_types315.default.string
  ]),
  rowStyle: import_prop_types315.default.func,
  rowSx: import_prop_types315.default.func
};
var LinkOrNot = function(props) {
  var classesOverride = props.classes, linkType = props.linkType, resource = props.resource, id = props.id, children2 = props.children, record = props.record, rest = __rest143(props, ["classes", "linkType", "resource", "id", "children", "record"]);
  var createPath = useCreatePath();
  var type = typeof linkType === "function" ? linkType(record, id) : linkType;
  return type === false ? React491.createElement(
    ListItemText_default,
    __assign157({
      // @ts-ignore
      component: "div"
    }, rest),
    children2
  ) : (
    // @ts-ignore
    React491.createElement(ListItemButton_default, __assign157({ component: Link, to: createPath({ resource, id, type }) }, rest), children2)
  );
};
var PREFIX89 = "RaSimpleList";
var SimpleListClasses = {
  tertiary: "".concat(PREFIX89, "-tertiary")
};
var Root41 = styled_default2(List_default, {
  name: PREFIX89,
  overridesResolver: function(props, styles7) {
    return styles7.root;
  }
})((_a12 = {}, _a12["& .".concat(SimpleListClasses.tertiary)] = { float: "right", opacity: 0.541176 }, _a12));
var DefaultEmpty2 = React491.createElement(ListNoResults, null);

// node_modules/ra-ui-materialui/dist/esm/list/SimpleList/SimpleListConfigurable.js
var React493 = __toESM(require_react());

// node_modules/ra-ui-materialui/dist/esm/list/SimpleList/SimpleListEditor.js
var React492 = __toESM(require_react());
var __assign158 = function() {
  __assign158 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign158.apply(this, arguments);
};
var SimpleListEditor = function(props) {
  var _a13 = props.defaultPrimaryText, defaultPrimaryText = _a13 === void 0 ? "" : _a13, _b = props.defaultSecondaryText, defaultSecondaryText = _b === void 0 ? "" : _b, _c = props.defaultTertiatyText, defaultTertiatyText = _c === void 0 ? "" : _c;
  useSetInspectorTitle("ra.inspector.SimpleList.title", { _: "List" });
  var translate = useTranslate();
  var primaryTextField = usePreferenceInput("primaryText", defaultPrimaryText);
  var secondaryTextField = usePreferenceInput("secondaryText", defaultSecondaryText);
  var tertiaryTextField = usePreferenceInput("tertiaryText", defaultTertiatyText);
  return React492.createElement(
    "form",
    null,
    React492.createElement(TextField_default, __assign158({ label: translate("ra.configurable.SimpleList.primaryText", {
      _: "Primary Text"
    }) }, primaryTextField, { variant: "filled", size: "small", fullWidth: true, sx: { mb: 1 } })),
    React492.createElement(TextField_default, __assign158({ label: translate("ra.configurable.SimpleList.secondaryText", {
      _: "Secondary Text"
    }) }, secondaryTextField, { variant: "filled", size: "small", fullWidth: true, sx: { mb: 1 } })),
    React492.createElement(TextField_default, __assign158({ label: translate("ra.configurable.SimpleList.tertiaryText", {
      _: "Tertiary Text"
    }) }, tertiaryTextField, { variant: "filled", size: "small", fullWidth: true, sx: { mb: 1 } }))
  );
};

// node_modules/ra-ui-materialui/dist/esm/list/SimpleList/SimpleListConfigurable.js
var __assign159 = function() {
  __assign159 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign159.apply(this, arguments);
};
var __rest144 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SimpleListConfigurable = function(_a13) {
  var preferenceKey = _a13.preferenceKey, props = __rest144(_a13, ["preferenceKey"]);
  var resource = useResourceContext(props);
  return React493.createElement(
    Configurable,
    { editor: React493.createElement(SimpleListEditor, null), preferenceKey: preferenceKey || "".concat(resource, ".SimpleList"), sx: { display: "block" } },
    React493.createElement(SimpleListWithPreferences, __assign159({}, props))
  );
};
var SimpleListWithPreferences = function(props) {
  var primaryTextFromStore = usePreference("primaryText")[0];
  var secondaryTextFromStore = usePreference("secondaryText")[0];
  var tertiaryTextFromStore = usePreference("tertiaryText")[0];
  return React493.createElement(SimpleList, __assign159({}, props, { primaryText: primaryTextFromStore || props.primaryText, secondaryText: secondaryTextFromStore || props.secondaryText, tertiaryText: tertiaryTextFromStore || props.tertiaryText }));
};
SimpleListConfigurable.propTypes = SimpleList.propTypes;

// node_modules/ra-ui-materialui/dist/esm/AdminUI.js
var React494 = __toESM(require_react());
var import_react131 = __toESM(require_react());
var __assign160 = function() {
  __assign160 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign160.apply(this, arguments);
};
var __rest145 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var AdminUI = function(_a13) {
  var _b = _a13.layout, layout = _b === void 0 ? Layout : _b, _c = _a13.catchAll, catchAll = _c === void 0 ? NotFound : _c, _d = _a13.loading, loading = _d === void 0 ? LoadingPage : _d, _e = _a13.loginPage, loginPage = _e === void 0 ? Login : _e, _f = _a13.authCallbackPage, authCallbackPage = _f === void 0 ? AuthCallback : _f, _g = _a13.notification, notification = _g === void 0 ? Notification : _g, props = __rest145(_a13, ["layout", "catchAll", "loading", "loginPage", "authCallbackPage", "notification"]);
  return React494.createElement(
    ScopedCssBaseline_default,
    { enableColorScheme: true },
    React494.createElement(CoreAdminUI, __assign160({ layout, catchAll, loading, loginPage, authCallbackPage }, props)),
    (0, import_react131.createElement)(notification)
  );
};

// node_modules/ra-ui-materialui/dist/esm/AdminContext.js
var React495 = __toESM(require_react());
var __assign161 = function() {
  __assign161 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign161.apply(this, arguments);
};
var __rest146 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var AdminContext = function(props) {
  var theme = props.theme, _a13 = props.lightTheme, lightTheme = _a13 === void 0 ? defaultLightTheme : _a13, darkTheme = props.darkTheme, defaultTheme8 = props.defaultTheme, children2 = props.children, rest = __rest146(props, ["theme", "lightTheme", "darkTheme", "defaultTheme", "children"]);
  return React495.createElement(
    CoreAdminContext,
    __assign161({}, rest),
    React495.createElement(
      ThemesContext.Provider,
      { value: {
        lightTheme: theme || lightTheme,
        darkTheme,
        defaultTheme: defaultTheme8
      } },
      React495.createElement(ThemeProvider5, null, children2)
    )
  );
};
AdminContext.displayName = "AdminContext";

// node_modules/ra-language-english/dist/esm/index.js
var englishMessages = {
  ra: {
    action: {
      add_filter: "Add filter",
      add: "Add",
      back: "Go Back",
      bulk_actions: "1 item selected |||| %{smart_count} items selected",
      cancel: "Cancel",
      clear_array_input: "Clear the list",
      clear_input_value: "Clear value",
      clone: "Clone",
      confirm: "Confirm",
      create: "Create",
      create_item: "Create %{item}",
      delete: "Delete",
      edit: "Edit",
      export: "Export",
      list: "List",
      refresh: "Refresh",
      remove_filter: "Remove this filter",
      remove_all_filters: "Remove all filters",
      remove: "Remove",
      save: "Save",
      search: "Search",
      select_all: "Select all",
      select_row: "Select this row",
      show: "Show",
      sort: "Sort",
      undo: "Undo",
      unselect: "Unselect",
      expand: "Expand",
      close: "Close",
      open_menu: "Open menu",
      close_menu: "Close menu",
      update: "Update",
      move_up: "Move up",
      move_down: "Move down",
      open: "Open",
      toggle_theme: "Toggle Theme",
      select_columns: "Columns",
      update_application: "Reload Application"
    },
    boolean: {
      true: "Yes",
      false: "No",
      null: " "
    },
    page: {
      create: "Create %{name}",
      dashboard: "Dashboard",
      edit: "%{name} %{recordRepresentation}",
      error: "Something went wrong",
      list: "%{name}",
      loading: "Loading",
      not_found: "Not Found",
      show: "%{name} %{recordRepresentation}",
      empty: "No %{name} yet.",
      invite: "Do you want to add one?"
    },
    input: {
      file: {
        upload_several: "Drop some files to upload, or click to select one.",
        upload_single: "Drop a file to upload, or click to select it."
      },
      image: {
        upload_several: "Drop some pictures to upload, or click to select one.",
        upload_single: "Drop a picture to upload, or click to select it."
      },
      references: {
        all_missing: "Unable to find references data.",
        many_missing: "At least one of the associated references no longer appears to be available.",
        single_missing: "Associated reference no longer appears to be available."
      },
      password: {
        toggle_visible: "Hide password",
        toggle_hidden: "Show password"
      }
    },
    message: {
      about: "About",
      are_you_sure: "Are you sure?",
      auth_error: "An error occurred while validating the authentication token.",
      bulk_delete_content: "Are you sure you want to delete this %{name}? |||| Are you sure you want to delete these %{smart_count} items?",
      bulk_delete_title: "Delete %{name} |||| Delete %{smart_count} %{name}",
      bulk_update_content: "Are you sure you want to update this %{name}? |||| Are you sure you want to update these %{smart_count} items?",
      bulk_update_title: "Update %{name} |||| Update %{smart_count} %{name}",
      clear_array_input: "Are you sure you want to clear the whole list?",
      delete_content: "Are you sure you want to delete this item?",
      delete_title: "Delete %{name} #%{id}",
      details: "Details",
      error: "A client error occurred and your request couldn't be completed.",
      invalid_form: "The form is not valid. Please check for errors",
      loading: "The page is loading, just a moment please",
      no: "No",
      not_found: "Either you typed a wrong URL, or you followed a bad link.",
      yes: "Yes",
      unsaved_changes: "Some of your changes weren't saved. Are you sure you want to ignore them?"
    },
    navigation: {
      no_results: "No results found",
      no_more_results: "The page number %{page} is out of boundaries. Try the previous page.",
      page_out_of_boundaries: "Page number %{page} out of boundaries",
      page_out_from_end: "Cannot go after last page",
      page_out_from_begin: "Cannot go before page 1",
      page_range_info: "%{offsetBegin}-%{offsetEnd} of %{total}",
      partial_page_range_info: "%{offsetBegin}-%{offsetEnd} of more than %{offsetEnd}",
      current_page: "Page %{page}",
      page: "Go to page %{page}",
      first: "Go to first page",
      last: "Go to last page",
      next: "Go to next page",
      previous: "Go to previous page",
      page_rows_per_page: "Rows per page:",
      skip_nav: "Skip to content"
    },
    sort: {
      sort_by: "Sort by %{field} %{order}",
      ASC: "ascending",
      DESC: "descending"
    },
    auth: {
      auth_check_error: "Please login to continue",
      user_menu: "Profile",
      username: "Username",
      password: "Password",
      sign_in: "Sign in",
      sign_in_error: "Authentication failed, please retry",
      logout: "Logout"
    },
    notification: {
      updated: "Element updated |||| %{smart_count} elements updated",
      created: "Element created",
      deleted: "Element deleted |||| %{smart_count} elements deleted",
      bad_item: "Incorrect element",
      item_doesnt_exist: "Element does not exist",
      http_error: "Server communication error",
      data_provider_error: "dataProvider error. Check the console for details.",
      i18n_error: "Cannot load the translations for the specified language",
      canceled: "Action cancelled",
      logged_out: "Your session has ended, please reconnect.",
      not_authorized: "You're not authorized to access this resource.",
      application_update_available: "A new version is available."
    },
    validation: {
      required: "Required",
      minLength: "Must be %{min} characters at least",
      maxLength: "Must be %{max} characters or less",
      minValue: "Must be at least %{min}",
      maxValue: "Must be %{max} or less",
      number: "Must be a number",
      email: "Must be a valid email",
      oneOf: "Must be one of: %{options}",
      regex: "Must match a specific format (regexp): %{pattern}",
      unique: "Must be unique"
    },
    saved_queries: {
      label: "Saved queries",
      query_name: "Query name",
      new_label: "Save current query...",
      new_dialog_title: "Save current query as",
      remove_label: "Remove saved query",
      remove_label_with_name: 'Remove query "%{name}"',
      remove_dialog_title: "Remove saved query?",
      remove_message: "Are you sure you want to remove that item from your list of saved queries?",
      help: "Filter the list and save this query for later"
    },
    configurable: {
      customize: "Customize",
      configureMode: "Configure this page",
      inspector: {
        title: "Inspector",
        content: "Hover the application UI elements to configure them",
        reset: "Reset Settings",
        hideAll: "Hide All",
        showAll: "Show All"
      },
      Datagrid: {
        title: "Datagrid",
        unlabeled: "Unlabeled column #%{column}"
      },
      SimpleForm: {
        title: "Form",
        unlabeled: "Unlabeled input #%{input}"
      },
      SimpleList: {
        title: "List",
        primaryText: "Primary text",
        secondaryText: "Secondary text",
        tertiaryText: "Tertiary text"
      }
    }
  }
};
var esm_default = englishMessages;

// node_modules/ra-i18n-polyglot/dist/esm/index.js
var import_node_polyglot = __toESM(require_node_polyglot());
var __assign162 = function() {
  __assign162 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign162.apply(this, arguments);
};
var esm_default2 = function(getMessages, initialLocale, availableLocales, polyglotOptions) {
  if (initialLocale === void 0) {
    initialLocale = "en";
  }
  if (availableLocales === void 0) {
    availableLocales = [{ locale: "en", name: "English" }];
  }
  if (polyglotOptions === void 0) {
    polyglotOptions = {};
  }
  var locale = initialLocale;
  var messages = getMessages(initialLocale);
  if (messages instanceof Promise) {
    throw new Error("The i18nProvider returned a Promise for the messages of the default locale (".concat(initialLocale, "). Please update your i18nProvider to return the messages of the default locale in a synchronous way."));
  }
  var availableLocalesFinal, polyglotOptionsFinal;
  if (Array.isArray(availableLocales)) {
    availableLocalesFinal = availableLocales;
    polyglotOptionsFinal = polyglotOptions;
  } else {
    availableLocalesFinal = [{ locale: "en", name: "English" }];
    polyglotOptionsFinal = availableLocales;
  }
  var polyglot = new import_node_polyglot.default(__assign162({ locale, phrases: __assign162({ "": "" }, messages) }, polyglotOptionsFinal));
  var translate = polyglot.t.bind(polyglot);
  return {
    translate: function(key, options) {
      if (options === void 0) {
        options = {};
      }
      return translate(key, options);
    },
    changeLocale: function(newLocale) {
      return Promise.resolve(getMessages(newLocale)).then(function(messages2) {
        locale = newLocale;
        var newPolyglot = new import_node_polyglot.default(__assign162({ locale: newLocale, phrases: __assign162({ "": "" }, messages2) }, polyglotOptions));
        translate = newPolyglot.t.bind(newPolyglot);
      });
    },
    getLocale: function() {
      return locale;
    },
    getLocales: function() {
      return availableLocalesFinal;
    }
  };
};

// node_modules/react-admin/dist/esm/defaultI18nProvider.js
var defaultI18nProvider = esm_default2(function() {
  return esm_default;
}, "en", [{ name: "en", value: "English" }], { allowMissing: true });

// node_modules/react-admin/dist/esm/Admin.js
var defaultStore = localStorageStore();
var Admin = function(props) {
  var authProvider = props.authProvider, basename = props.basename, catchAll = props.catchAll, children2 = props.children, dashboard = props.dashboard, dataProvider = props.dataProvider, disableTelemetry = props.disableTelemetry, history = props.history, _a13 = props.i18nProvider, i18nProvider = _a13 === void 0 ? defaultI18nProvider : _a13, layout = props.layout, loading = props.loading, loginPage = props.loginPage, authCallbackPage = props.authCallbackPage, menu = props.menu, notification = props.notification, queryClient = props.queryClient, requireAuth = props.requireAuth, _b = props.store, store = _b === void 0 ? defaultStore : _b, ready = props.ready, theme = props.theme, lightTheme = props.lightTheme, darkTheme = props.darkTheme, defaultTheme8 = props.defaultTheme, _c = props.title, title = _c === void 0 ? "React Admin" : _c;
  if (loginPage === true && true) {
    console.warn("You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it");
  }
  return React496.createElement(
    AdminContext,
    { authProvider, basename, dataProvider, i18nProvider, store, history, queryClient, theme, lightTheme, darkTheme, defaultTheme: defaultTheme8 },
    React496.createElement(AdminUI, { layout, dashboard, disableTelemetry, menu, catchAll, title, loading, loginPage, authCallbackPage, notification, requireAuth, ready }, children2)
  );
};
export {
  AUTH_CHECK,
  AUTH_ERROR,
  AUTH_GET_PERMISSIONS,
  AUTH_LOGIN,
  AUTH_LOGOUT,
  AddItemButton,
  AddNotificationContext,
  AddSavedQueryDialog,
  AddSavedQueryIconButton,
  Admin,
  AdminContext,
  AdminRouter,
  AdminUI,
  AppBar3 as AppBar,
  AppBarClasses,
  ApplicationUpdatedNotification,
  ArrayField,
  ArrayInput,
  ArrayInputClasses,
  ArrayInputContext,
  AuthCallback,
  AuthContext_default as AuthContext,
  AuthError,
  AuthErrorClasses,
  Authenticated,
  AutocompleteArrayInput,
  AutocompleteInput,
  AutocompleteInputClasses,
  BasenameContextProvider,
  BooleanField,
  BooleanInput,
  BulkActionsToolbar,
  BulkActionsToolbarClasses,
  BulkDeleteButton,
  BulkDeleteWithConfirmButton,
  BulkDeleteWithUndoButton,
  BulkExportButton,
  BulkUpdateButton,
  BulkUpdateWithConfirmButton,
  BulkUpdateWithUndoButton,
  Button5 as Button,
  CLOSED_DRAWER_WIDTH,
  CREATE,
  CardContentInner,
  CardContentInnerClasses,
  CheckForApplicationUpdate,
  CheckboxGroupInput,
  CheckboxGroupInputClasses,
  ChipField,
  ChoicesContext,
  ChoicesContextProvider,
  CloneButton_default as CloneButton,
  ComponentPropType_default as ComponentPropType,
  Configurable,
  ConfigurableClasses,
  Confirm,
  ConfirmClasses,
  CoreAdmin,
  CoreAdminContext,
  CoreAdminRoutes,
  CoreAdminUI,
  Count,
  Create,
  CreateActions,
  CreateBase,
  CreateButton_default as CreateButton,
  CreateButtonClasses,
  CreateClasses,
  CreateContext,
  CreateContextProvider,
  CreateController,
  CreateView,
  CustomRoutes,
  DEFAULT_LOCALE,
  DELETE,
  DELETE_MANY,
  DRAWER_WIDTH,
  DashboardMenuItem,
  DataProviderContext_default as DataProviderContext,
  Datagrid,
  DatagridBody_default as DatagridBody,
  DatagridCell_default as DatagridCell,
  DatagridClasses,
  DatagridConfigurable,
  DatagridHeader,
  DatagridHeaderCell_default as DatagridHeaderCell,
  DatagridHeaderCellClasses,
  DatagridInput,
  DatagridLoading_default as DatagridLoading,
  DatagridRoot,
  DatagridRow_default as DatagridRow,
  DateField,
  DateInput,
  DateTimeInput,
  DeleteButton,
  DeleteWithConfirmButton,
  DeleteWithUndoButton,
  DeviceTestWrapper,
  Edit,
  EditActions,
  EditBase,
  EditButton,
  EditButtonClasses,
  EditClasses,
  EditContext,
  EditContextProvider,
  EditController,
  EditGuesser,
  EditView,
  EmailField,
  Empty,
  EmptyClasses,
  Error2 as Error,
  ErrorClasses,
  ExpandRowButton_default as ExpandRowButton,
  ExportButton,
  ExporterContext_default as ExporterContext,
  FieldTitle_default as FieldTitle,
  FieldToggle,
  FieldsSelector,
  FileField,
  FileInput,
  FileInputClasses,
  Filter,
  FilterButton,
  FilterButtonMenuItem,
  FilterClasses,
  FilterContext,
  FilterForm,
  FilterFormBase,
  FilterFormClasses,
  FilterFormInput,
  FilterFormInputClasses,
  FilterList,
  FilterListItem,
  FilterListItemClasses,
  FilterLiveSearch,
  Form,
  FormDataConsumer_default as FormDataConsumer,
  FormGroupContext,
  FormGroupContextProvider,
  FormGroupsContext,
  FormGroupsProvider,
  FormTab,
  FormTabHeader,
  FunctionField,
  GET_LIST,
  GET_MANY,
  GET_MANY_REFERENCE,
  GET_ONE,
  HIDE_FILTER,
  HideOnScroll,
  HttpError_default as HttpError,
  I18N_CHANGE_LOCALE,
  I18N_TRANSLATE,
  I18nContext,
  I18nContextProvider,
  IconButtonWithTooltip,
  ImageField,
  ImageFieldClasses,
  ImageInput,
  InferenceTypes,
  InferredElement_default as InferredElement,
  InfiniteList,
  InfiniteListBase,
  InfinitePagination,
  InfinitePaginationContext,
  InputHelperText,
  InputPropTypes,
  Inspector,
  InspectorButton,
  InspectorClasses,
  InspectorRoot,
  LabelPrefixContext,
  LabelPrefixContextProvider,
  Labeled,
  LabeledClasses,
  Layout,
  LayoutClasses,
  LinearProgress3 as LinearProgress,
  Link4 as Link,
  LinkClasses,
  List3 as List,
  ListActions,
  ListBase,
  ListButton,
  ListClasses,
  ListContext,
  ListContextProvider,
  ListController,
  ListFilterContext,
  ListGuesser,
  ListNoResults,
  ListPaginationContext,
  ListSortContext,
  ListToolbar,
  ListView,
  Loading,
  LoadingClasses,
  LoadingIndicator,
  LoadingIndicatorClasses,
  LoadingInput,
  LoadingPage,
  LocalesMenuButton,
  LocalesMenuButtonClasses,
  Login,
  LoginClasses,
  LoginForm,
  LoginFormClasses,
  Logout,
  LogoutClasses,
  Menu5 as Menu,
  MenuClasses,
  MenuItemLink,
  MenuItemLinkClasses,
  NonEmptyReferenceField,
  NotFound,
  NotFoundClasses,
  Notification,
  NotificationClasses,
  NotificationContext,
  NotificationContextProvider,
  NullableBooleanInput,
  NullableBooleanInputClasses,
  NumberField,
  NumberInput3 as NumberInput,
  OptionalRecordContextProvider,
  PageTitleConfigurable,
  PageTitleEditor,
  Pagination3 as Pagination,
  PaginationActions,
  PaginationLimit,
  PasswordInput,
  Placeholder,
  PreferenceKeyContext,
  PreferenceKeyContextProvider,
  PreferencesEditorContext,
  PreferencesEditorContextProvider,
  PreviousLocationStorageKey,
  PureDatagridBody,
  PureDatagridRow,
  RadioButtonGroupInput,
  RadioButtonGroupInputClasses,
  ReOrderButtons,
  Ready_default as Ready,
  RecordContext,
  RecordContextProvider,
  RecordRepresentation,
  ReferenceArrayField,
  ReferenceArrayFieldClasses,
  ReferenceArrayFieldView,
  ReferenceArrayInput,
  ReferenceError2 as ReferenceError,
  ReferenceField,
  ReferenceFieldClasses,
  ReferenceFieldView,
  ReferenceInput,
  ReferenceManyCount,
  ReferenceManyField,
  ReferenceManyFieldView,
  ReferenceOneField,
  RefreshButton,
  RefreshIconButton,
  RemoveItemButton,
  RemoveSavedQueryDialog,
  RemoveSavedQueryIconButton,
  ResettableTextField,
  ResettableTextFieldClasses,
  ResettableTextFieldStyles,
  Resource,
  ResourceContext,
  ResourceContextProvider,
  ResourceDefinitionContext,
  ResourceDefinitionContextProvider,
  ResourceMenuItem,
  RichTextField,
  SET_FILTER,
  SET_PAGE,
  SET_PER_PAGE,
  SET_SORT,
  SHOW_FILTER,
  SORT_ASC,
  SORT_DESC,
  SaveButton,
  SaveContext,
  SaveContextProvider,
  SavedQueriesList,
  SavedQueriesListClasses,
  SavedQueryFilterListItem,
  SavedQueryFilterListItemClasses,
  SearchInput,
  SelectArrayInput,
  SelectArrayInputClasses,
  SelectColumnsButton,
  SelectField,
  SelectInput3 as SelectInput,
  Show,
  ShowActions,
  ShowBase,
  ShowButton_default as ShowButton,
  ShowClasses,
  ShowContext,
  ShowContextProvider,
  ShowController,
  ShowGuesser,
  ShowView,
  Sidebar,
  SidebarClasses,
  SidebarToggleButton,
  SidebarToggleButtonClasses,
  SimpleForm,
  SimpleFormConfigurable,
  SimpleFormIterator,
  SimpleFormIteratorClasses,
  SimpleFormIteratorContext,
  SimpleFormIteratorItem,
  SimpleFormIteratorItemContext,
  SimpleFormIteratorPrefix,
  SimpleList,
  SimpleListClasses,
  SimpleListConfigurable,
  SimpleListLoading,
  SimpleListLoadingClasses,
  SimpleShowLayout,
  SimpleShowLayoutClasses,
  SingleFieldList,
  SingleFieldListClasses,
  SkipNavigationButton,
  SortButton_default as SortButton,
  StoreContext,
  StoreContextProvider,
  StoreSetter,
  Tab5 as Tab,
  TabbedForm,
  TabbedFormClasses,
  TabbedFormTabs,
  TabbedFormView,
  TabbedShowLayout,
  TabbedShowLayoutClasses,
  TabbedShowLayoutTabs,
  TestTranslationProvider,
  TextField3 as TextField,
  TextInput,
  ThemeProvider5 as ThemeProvider,
  ThemesContext,
  TimeInput,
  Title,
  TitlePortal,
  TitlePropType,
  ToggleThemeButton,
  Toolbar3 as Toolbar,
  ToolbarClasses,
  TopToolbar,
  TranslatableContext,
  TranslatableContextProvider,
  TranslatableFields,
  TranslatableFieldsTab,
  TranslatableFieldsTabContent,
  TranslatableInputs,
  TranslatableInputsClasses,
  TranslatableInputsTab,
  TranslatableInputsTabClasses,
  TranslatableInputsTabContent,
  TranslatableInputsTabContentClasses,
  TranslatableInputsTabs,
  TranslatableInputsTabsClasses,
  UPDATE,
  UPDATE_MANY,
  UpdateButton,
  UpdateWithConfirmButton,
  UpdateWithUndoButton,
  UrlField,
  UserMenu,
  UserMenuClasses,
  UserMenuContext,
  ValidationError_default as ValidationError,
  WithListContext,
  WithPermissions_default as WithPermissions,
  WithRecord,
  WrapperField,
  addRefreshAuthToAuthProvider,
  addRefreshAuthToDataProvider,
  areValidSavedQueries,
  asyncDebounce,
  choices,
  combine2Validators,
  combineDataProviders,
  composeSyncValidators,
  composeValidators,
  convertLegacyAuthProvider_default as convertLegacyAuthProvider,
  convertLegacyDataProvider_default as convertLegacyDataProvider,
  defaultDarkTheme,
  defaultDataProvider,
  defaultExporter_default as defaultExporter,
  defaultI18nProvider,
  defaultLightTheme,
  defaultTheme7 as defaultTheme,
  downloadCSV_default as downloadCSV,
  editFieldTypes,
  email,
  escapePath_default as escapePath,
  extractValidSavedQueries,
  fetchActionsWithArrayOfIdentifiedRecordsResponse,
  fetchActionsWithArrayOfRecordsResponse,
  fetchActionsWithRecordResponse,
  fetchActionsWithTotalResponse,
  fetchRelatedRecords_default as fetchRelatedRecords,
  fetch_exports as fetchUtils,
  findTabsWithErrors,
  getArrayInputError,
  getElementsFromRecords_default as getElementsFromRecords,
  getFieldLabelTranslationArgs_default as getFieldLabelTranslationArgs,
  getFilterFormValues,
  getFormGroupState,
  getListControllerProps,
  getMutationMode,
  getNumberOrDefault,
  getQuery,
  getRecordFromLocation,
  getSelectedReferencesStatus,
  getShowLayoutTabFullPath,
  getSimpleValidationResolver,
  getStatusForArrayInput,
  getStatusForInput,
  getStorage,
  getSuggestionsFactory,
  getTabbedFormTabFullPath,
  getValuesFromRecords_default as getValuesFromRecords,
  hasCustomParams,
  inferTypeFromValues,
  injectedProps,
  isRequired,
  isValidSavedQuery,
  linkToRecord,
  listFieldTypes,
  localStorageStore,
  maxLength,
  maxValue,
  memoryStore,
  mergeInitialValuesWithDefaultValues,
  mergeRefs,
  mergeTranslations,
  minLength,
  minValue,
  number,
  parseQueryFromLocation,
  queryReducer,
  reactAdminFetchActions,
  regex,
  removeDoubleSlashes,
  removeEmpty_default as removeEmpty,
  removeKey_default as removeKey,
  removeTags,
  required,
  resolveBrowserLocale,
  resolveRedirectTo,
  sanitizeFetchType,
  sanitizeFieldRestProps,
  sanitizeInputRestProps,
  sanitizeListRestProps,
  setSubmissionErrors,
  shallowEqual,
  showFieldTypes,
  substituteTokens,
  testDataProvider,
  undoableEventEmitter_default as undoableEventEmitter,
  useAddNotificationContext,
  useApplyInputDefaultValues,
  useArrayInput,
  useAugmentedForm,
  useAuthProvider_default as useAuthProvider,
  useAuthState_default as useAuthState,
  useAuthenticated,
  useBasename,
  useCheckAuth,
  useCheckForApplicationUpdate,
  useCheckMinimumRequiredProps,
  useChoices,
  useChoicesContext,
  useCreate,
  useCreateContext,
  useCreateController,
  useCreatePath,
  useCreateSuggestionContext,
  useDataProvider,
  useDatagridContext,
  useDeepCompareEffect,
  useDelete,
  useDeleteMany,
  useDeleteWithConfirmController_default as useDeleteWithConfirmController,
  useDeleteWithUndoController_default as useDeleteWithUndoController,
  useEditContext,
  useEditController,
  useEvent,
  useExpandAll,
  useExpanded,
  useFilterState_default as useFilterState,
  useFormGroup,
  useFormGroupContext,
  useFormGroups,
  useGetIdentity,
  useGetList,
  useGetMany,
  useGetManyAggregate,
  useGetManyReference,
  useGetOne,
  useGetPermissions_default as useGetPermissions,
  useGetRecordId,
  useGetRecordRepresentation,
  useGetResourceLabel,
  useGetValidationErrorMessage,
  useHandleAuthCallback,
  useI18nProvider,
  useInfiniteGetList,
  useInfiniteListController,
  useInfinitePaginationContext,
  useInput,
  useIsDataLoaded,
  useIsMounted,
  useLabelPrefix,
  useList,
  useListContext,
  useListController,
  useListFilterContext,
  useListPaginationContext,
  useListParams,
  useListSortContext,
  useLoading,
  useLocale,
  useLocaleState,
  useLocales,
  useLogin_default as useLogin,
  useLogout_default as useLogout,
  useLogoutIfAccessDenied_default as useLogoutIfAccessDenied,
  useMutationMiddlewares,
  useNotificationContext,
  useNotify,
  useNotifyIsFormInvalid,
  usePaginationState_default as usePaginationState,
  usePermissions_default as usePermissions,
  usePermissionsOptimized_default as usePermissionsOptimized,
  usePickFilterContext,
  usePickPaginationContext,
  usePickSaveContext,
  usePickSortContext,
  usePreference,
  usePreferenceInput,
  usePreferenceKey,
  usePreferencesEditor,
  usePrevious,
  useRecordContext,
  useRecordSelection,
  useRedirect,
  useReference,
  useReferenceArrayFieldController,
  useReferenceArrayInputController,
  useReferenceInputController,
  useReferenceManyFieldController,
  useReferenceOneFieldController,
  useRefresh,
  useRegisterMutationMiddleware,
  useRemoveFromStore,
  useRemoveItemsFromStore,
  useResetErrorBoundaryOnLocationChange,
  useResetStore,
  useResourceContext,
  useResourceDefinition,
  useResourceDefinitionContext,
  useResourceDefinitions,
  useSafeSetState,
  useSaveContext,
  useSavedQueries,
  useScrollToTop,
  useSetInspectorTitle,
  useSetLocale,
  useShowContext,
  useShowController,
  useSidebarState,
  useSimpleFormIterator,
  useSimpleFormIteratorItem,
  useSortState_default as useSortState,
  useStore,
  useStoreContext,
  useSuggestions,
  useSupportCreateSuggestion,
  useTheme6 as useTheme,
  useThemesContext,
  useTimeout,
  useTranslatable,
  useTranslatableContext,
  useTranslate,
  useTranslateLabel,
  useUnique,
  useUnselect,
  useUnselectAll,
  useUpdate,
  useUpdateMany,
  useUserMenu,
  useWarnWhenUnsavedChanges,
  useWhyDidYouUpdate,
  validQueryParams,
  warning_default as warning,
  withLifecycleCallbacks
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

react-is/cjs/react-is.development.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react/cjs/react-jsx-runtime.development.js:
  (**
   * @license React
   * react-jsx-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@mui/styled-engine/index.js:
  (**
   * @mui/styled-engine v5.14.7
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@mui/private-theming/index.js:
  (**
   * @mui/private-theming v5.14.7
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-is/cjs/react-is.development.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@mui/base/index.js:
  (**
   * @mui/base v5.0.0-beta.13
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@mui/material/index.js:
  (**
   * @mui/material v5.14.7
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

dompurify/dist/purify.es.js:
  (*! @license DOMPurify 2.4.7 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.4.7/LICENSE *)
*/
//# sourceMappingURL=react-admin.js.map
